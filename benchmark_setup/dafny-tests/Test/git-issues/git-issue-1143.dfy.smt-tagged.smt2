(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U) Int)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 () T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@629 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (= (type $generated@@143) $generated@@68)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@140) (= (type $generated@@145) $generated@@141)) (or ($generated@@142 $generated@@145) (and (not (= 0 $generated@@138)) ($generated@@136 $generated@@145 $generated@@143)))) true)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@141)) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 16) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@141) (= (type $generated@@160) $generated@@141)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@141)))
(assert (= ($generated@@161 $generated@@162) $generated@@63))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@136 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@81)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@141)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@156)) (= (type $generated@@244) $generated@@156)) (= ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242)))
)))
(assert ($generated@@136 $generated@@162 $generated@@143))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@245 $generated@@246)) ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
 :pattern ( ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
)))
(assert  (and (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@140)
 :pattern ( ($generated@@247 $generated@@250))
)) (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@141)
 :pattern ( ($generated@@249 $generated@@251))
))))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@140) (= (type $generated@@253) $generated@@141)) (or ($generated@@142 $generated@@253) (and (not (= 0 $generated@@138)) ($generated@@136 $generated@@253 $generated@@143)))) (and (=> (not ($generated@@248 $generated@@253)) (let (($generated@@254 ($generated@@249 $generated@@253)))
($generated@@142 $generated@@254))) (= ($generated@@139 ($generated@@247 $generated@@252) $generated@@253) (ite ($generated@@248 $generated@@253) 0 (let (($generated@@255 ($generated@@249 $generated@@253)))
(+ 1 ($generated@@139 $generated@@252 $generated@@255)))))))
 :pattern ( ($generated@@139 ($generated@@247 $generated@@252) $generated@@253))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@141) (= (type $generated@@257) $generated@@141)) (= ($generated@@153 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@153 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@141) (= (type $generated@@260) $generated@@141)) (= ($generated@@258 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@136 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@156) ($generated@@0 ($generated@@85 $generated@@263 $generated@@265))) ($generated@@238 $generated@@265 $generated@@264))
 :pattern ( ($generated@@85 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@136 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@269) $generated@@68)) (= ($generated@@136 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@156) ($generated@@0 ($generated@@85 $generated@@268 $generated@@270))) ($generated@@238 $generated@@270 $generated@@269))
 :pattern ( ($generated@@85 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@136 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@141) (= (type $generated@@278) $generated@@141)) (and ($generated@@248 $generated@@277) ($generated@@248 $generated@@278))) (= ($generated@@258 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@258 $generated@@277 $generated@@278) ($generated@@248 $generated@@277))
 :pattern ( ($generated@@258 $generated@@277 $generated@@278) ($generated@@248 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@156)) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@284)) (= ($generated@@78 ($generated@@237 $generated@@282 $generated@@283) ($generated@@147 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@282 $generated@@283) ($generated@@147 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@141) (= ($generated@@146 $generated@@285) (= ($generated@@161 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@141) (= ($generated@@248 $generated@@286) (= ($generated@@161 $generated@@286) $generated@@63)))
 :pattern ( ($generated@@248 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@141) (= ($generated@@287 $generated@@288) (= ($generated@@161 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@141) ($generated@@146 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@156) (= (type $generated@@291) $generated@@156)) (= $generated@@289 ($generated@@237 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@146 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 18)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@141) ($generated@@248 $generated@@300)) (= $generated@@300 $generated@@162))
 :pattern ( ($generated@@248 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@141)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@141) ($generated@@287 $generated@@303)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@141) (= $generated@@303 ($generated@@301 $generated@@304)))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@287 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@156)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@68) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@279 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@78 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@279 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@80 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@83 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@80 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@85 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@80 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 20)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@83 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@80 $generated@@353 $generated@@2)) (= ($generated@@165 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@85 $generated@@352 $generated@@354))) (<= ($generated ($generated@@85 $generated@@352 $generated@@354)) ($generated@@310 $generated@@352))))
 :pattern ( ($generated@@85 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@165 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@156) ($generated@@238 $generated@@358 $generated@@143)) (and (= ($generated@@305 ($generated@@355 $generated@@141 $generated@@358)) $generated@@358) ($generated@@136 ($generated@@355 $generated@@141 $generated@@358) $generated@@143)))
 :pattern ( ($generated@@238 $generated@@358 $generated@@143))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@141) (= ($generated@@136 ($generated@@301 $generated@@359) $generated@@143) ($generated@@136 $generated@@359 $generated@@143)))
 :pattern ( ($generated@@136 ($generated@@301 $generated@@359) $generated@@143))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@360) $generated@@141) (= (type $generated@@361) $generated@@141)) (and ($generated@@287 $generated@@360) ($generated@@287 $generated@@361))) (= ($generated@@258 $generated@@360 $generated@@361) ($generated@@258 ($generated@@249 $generated@@360) ($generated@@249 $generated@@361))))
 :pattern ( ($generated@@258 $generated@@360 $generated@@361) ($generated@@287 $generated@@360))
 :pattern ( ($generated@@258 $generated@@360 $generated@@361) ($generated@@287 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(let (($generated@@364 ($generated@@319 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@318 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@317 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@316 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@320 (type $generated@@369))))
(let (($generated@@371 ($generated@@319 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@318 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@317 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@338 (type $generated@@373))))
(let (($generated@@375 ($generated@@337 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@336 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@335 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@334 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@80 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@338 (type $generated@@380))))
(let (($generated@@382 ($generated@@337 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@336 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@335 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@85 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@385) $generated@@68)) (= ($generated@@136 $generated@@384 ($generated@@164 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@384 $generated@@386)))) ($generated@@238 $generated@@386 $generated@@385))
 :pattern ( ($generated@@85 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@136 $generated@@384 ($generated@@164 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@388) $generated@@68)) (= (type $generated@@389) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@387 ($generated@@261 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@156) ($generated@@0 ($generated@@85 $generated@@387 $generated@@390))) ($generated@@279 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@85 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@78 $generated@@387 ($generated@@261 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@266 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@156) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@279 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@266 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@85 ($generated@@311 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@85 ($generated@@311 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@320 (type $generated@@400))))
(let (($generated@@402 ($generated@@319 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@403) ($generated@@154 ($generated@@355 $generated@@141 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@154 ($generated@@355 $generated@@141 $generated@@404))) ($generated@@155 ($generated@@355 $generated@@141 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@338 (type $generated@@408))))
(let (($generated@@410 ($generated@@337 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@80 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@411) ($generated@@154 ($generated@@355 $generated@@141 $generated@@412)))) (= ($generated@@85 ($generated@@406 $generated@@411) ($generated@@154 ($generated@@355 $generated@@141 $generated@@412))) ($generated@@155 ($generated@@355 $generated@@141 $generated@@412))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@319 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@318 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@85 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@413) $generated@@417))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@337 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@336 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@85 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@85 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@68)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@426) $generated@@430))) (and ($generated@@279 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@279 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@434) $generated@@438))) (and ($generated@@279 ($generated@@85 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@279 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@439) $generated@@141) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@440)) (= ($generated@@78 ($generated@@301 $generated@@439) $generated@@143 $generated@@440) ($generated@@78 $generated@@439 $generated@@143 $generated@@440)))
 :pattern ( ($generated@@78 ($generated@@301 $generated@@439) $generated@@143 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@141) ($generated@@136 $generated@@441 $generated@@143)) (or ($generated@@248 $generated@@441) ($generated@@287 $generated@@441)))
 :pattern ( ($generated@@287 $generated@@441) ($generated@@136 $generated@@441 $generated@@143))
 :pattern ( ($generated@@248 $generated@@441) ($generated@@136 $generated@@441 $generated@@143))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@338 (type $generated@@444))))
(let (($generated@@446 ($generated@@337 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@336 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@335 $generated@@446 $generated@@445)) (= ($generated@@334 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@334 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@338 (type $generated@@447))))
(let (($generated@@449 ($generated@@337 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@336 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@335 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@338 (type $generated@@450))))
(let (($generated@@452 ($generated@@337 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@336 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@335 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@156))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@320 (type $generated@@453))))
(let (($generated@@455 ($generated@@319 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@318 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@317 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@156) (= (type $generated@@457) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@453) ($generated@@305 ($generated@@237 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@338 (type $generated@@458))))
(let (($generated@@460 ($generated@@337 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@336 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@335 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@156) (= (type $generated@@462) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@458) ($generated@@305 ($generated@@237 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@156) ($generated@@238 $generated@@463 $generated@@46)) (and (= ($generated@@305 ($generated@@355 $generated@@2 $generated@@463)) $generated@@463) ($generated@@136 ($generated@@355 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@238 $generated@@464 $generated@@47)) (and (= ($generated@@305 ($generated@@355 $generated@@3 $generated@@464)) $generated@@464) ($generated@@136 ($generated@@355 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@156) ($generated@@238 $generated@@465 $generated@@44)) (and (= ($generated@@305 ($generated@@355 $generated@@4 $generated@@465)) $generated@@465) ($generated@@136 ($generated@@355 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 21))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@156) ($generated@@238 $generated@@467 $generated@@45)) (and (= ($generated@@305 ($generated@@355 $generated@@466 $generated@@467)) $generated@@467) ($generated@@136 ($generated@@355 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@68) (= ($generated@@238 ($generated@@305 $generated@@468) $generated@@469) ($generated@@136 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@238 ($generated@@305 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@83 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@80 $generated@@471 $generated@@2)) (<= 0 ($generated@@310 $generated@@470))))
 :pattern ( ($generated@@310 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@295 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@294 $generated@@473)) (<= 0 ($generated@@293 $generated@@472))))
 :pattern ( ($generated@@293 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@423 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@423 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@423 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@431 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@431 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@431 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@156) (= (type $generated@@495) $generated@@156)) (= ($generated@@161 ($generated@@237 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@147 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@147 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@147 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@147 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@156) (= (type $generated@@505) $generated@@156)) (= ($generated@@154 ($generated@@237 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@237 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@156) (= (type $generated@@507) $generated@@156)) (= ($generated@@155 ($generated@@237 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@237 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@140)
 :pattern ( ($generated@@508 $generated@@510))
)) (= (type $generated@@509) $generated@@140)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@140) (= (type $generated@@512) $generated@@141)) (= ($generated@@139 $generated@@511 $generated@@512) ($generated@@139 $generated@@509 $generated@@512)))
 :pattern ( ($generated@@139 ($generated@@508 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@295 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@294 $generated@@156)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@293 $generated@@519))) ($generated@@279 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@79 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@79 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@261 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@261 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@261 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@266 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@266 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@266 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@164 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@164 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@141) (= ($generated@@161 ($generated@@301 $generated@@541)) $generated@@65))
 :pattern ( ($generated@@301 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@141) (= ($generated@@249 ($generated@@301 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@301 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@355 $generated@@544 ($generated@@305 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@305 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) (= ($generated@@136 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@545) $generated@@548))) (and ($generated@@238 ($generated@@85 ($generated@@398 $generated@@545) $generated@@548) $generated@@547) ($generated@@238 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@545) $generated@@548))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@136 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) (= ($generated@@136 $generated@@549 ($generated@@431 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@549) $generated@@552))) (and ($generated@@238 ($generated@@85 ($generated@@406 $generated@@549) $generated@@552) $generated@@551) ($generated@@238 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@136 $generated@@549 ($generated@@431 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@156)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@237 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@156) (= (type $generated@@558) $generated@@156)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@237 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@140) (= (type $generated@@560) $generated@@141)) (= ($generated@@139 ($generated@@247 $generated@@559) $generated@@560) ($generated@@139 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@139 ($generated@@247 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@156) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@238 $generated@@561 ($generated@@423 $generated@@562 $generated@@563))) (and (= ($generated@@305 ($generated@@355 ($generated@@318 $generated@@156 $generated@@156) $generated@@561)) $generated@@561) ($generated@@136 ($generated@@355 ($generated@@318 $generated@@156 $generated@@156) $generated@@561) ($generated@@423 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@238 $generated@@561 ($generated@@423 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@156) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) ($generated@@238 $generated@@564 ($generated@@431 $generated@@565 $generated@@566))) (and (= ($generated@@305 ($generated@@355 ($generated@@336 $generated@@156 $generated@@156) $generated@@564)) $generated@@564) ($generated@@136 ($generated@@355 ($generated@@336 $generated@@156 $generated@@156) $generated@@564) ($generated@@431 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@238 $generated@@564 ($generated@@431 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) $generated@@156)) ($generated@@238 $generated@@569 ($generated@@147 $generated@@567 $generated@@568))) (and (= ($generated@@305 ($generated@@355 $generated@@141 $generated@@569)) $generated@@569) ($generated@@136 ($generated@@355 $generated@@141 $generated@@569) ($generated@@147 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@238 $generated@@569 ($generated@@147 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@141) (< ($generated@@554 $generated@@570) ($generated@@554 ($generated@@301 $generated@@570))))
 :pattern ( ($generated@@301 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@572) $generated@@571))))
 :pattern ( (let (($generated@@572 (type $generated@@571)))
($generated@@85 ($generated@@442 $generated@@572) $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@73)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@68) (= (type $generated@@576) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@575 $generated@@576)) $generated@@62) (= ($generated@@573 ($generated@@147 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@141) (= ($generated@@553 ($generated@@305 $generated@@577)) ($generated@@554 $generated@@577)))
 :pattern ( ($generated@@553 ($generated@@305 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@156) ($generated@@238 $generated@@578 ($generated@@79 0))) (and (= ($generated@@305 ($generated@@355 $generated@@2 $generated@@578)) $generated@@578) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@238 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@156) (= (type $generated@@580) $generated@@68)) ($generated@@238 $generated@@579 ($generated@@261 $generated@@580))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@579)) $generated@@579) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@579) ($generated@@261 $generated@@580))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@261 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@156) (= (type $generated@@582) $generated@@68)) ($generated@@238 $generated@@581 ($generated@@266 $generated@@582))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@581)) $generated@@581) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@581) ($generated@@266 $generated@@582))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@266 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@156) (= (type $generated@@584) $generated@@68)) ($generated@@238 $generated@@583 ($generated@@164 $generated@@584))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@156 $generated@@2) $generated@@583)) $generated@@583) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@2) $generated@@583) ($generated@@164 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@583 ($generated@@164 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@156) (= (type $generated@@586) $generated@@68)) ($generated@@238 $generated@@585 ($generated@@513 $generated@@586))) (and (= ($generated@@305 ($generated@@355 ($generated@@294 $generated@@156) $generated@@585)) $generated@@585) ($generated@@136 ($generated@@355 ($generated@@294 $generated@@156) $generated@@585) ($generated@@513 $generated@@586))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@513 $generated@@586)))
)))
(assert (= ($generated@@76 $generated@@143) $generated@@64))
(assert (= ($generated@@573 $generated@@143) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@164 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@279 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@164 $generated@@588) $generated@@589))
)))
(assert (= $generated@@162 ($generated@@273 $generated@@162)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@140) (= (type $generated@@592) $generated@@141)) (or ($generated@@142 ($generated@@273 $generated@@592)) (and (not (= 0 $generated@@138)) ($generated@@136 $generated@@592 $generated@@143)))) (and (=> (not ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@248 ($generated@@273 $generated@@592)))))) (let (($generated@@593 ($generated@@273 ($generated@@249 ($generated@@273 $generated@@592)))))
($generated@@142 $generated@@593))) (= ($generated@@139 ($generated@@247 $generated@@591) ($generated@@273 $generated@@592)) (ite ($generated@@248 ($generated@@273 $generated@@592)) 0 (let (($generated@@594 ($generated@@273 ($generated@@249 ($generated@@273 $generated@@592)))))
($generated@@271 (+ 1 ($generated@@139 ($generated@@247 $generated@@591) $generated@@594))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@247 $generated@@591) ($generated@@273 $generated@@592)))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@141) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@597) (and ($generated@@146 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@68) ($generated@@78 $generated@@595 ($generated@@147 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@147 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@279 ($generated@@154 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@279 ($generated@@154 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@141) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@601) (and ($generated@@146 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@78 $generated@@599 ($generated@@147 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@147 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@279 ($generated@@155 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@279 ($generated@@155 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@141) (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@604) (and ($generated@@287 $generated@@603) ($generated@@78 $generated@@603 $generated@@143 $generated@@604)))) ($generated@@78 ($generated@@249 $generated@@603) $generated@@143 $generated@@604))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@603) $generated@@143 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@156) (= (type $generated@@606) $generated@@156)) (= ($generated@@237 ($generated@@273 $generated@@605) ($generated@@273 $generated@@606)) ($generated@@273 ($generated@@237 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@237 ($generated@@273 $generated@@605) ($generated@@273 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@271 $generated@@607))) ($generated@@273 ($generated@@305 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@271 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@141) (= ($generated@@301 ($generated@@273 $generated@@608)) ($generated@@273 ($generated@@301 $generated@@608))))
 :pattern ( ($generated@@301 ($generated@@273 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (= ($generated@@305 ($generated@@273 $generated@@609)) ($generated@@273 ($generated@@305 $generated@@609)))
 :pattern ( ($generated@@305 ($generated@@273 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@295 (type $generated@@610))))
 (=> (and (= (type $generated@@610) ($generated@@294 $generated@@611)) (= ($generated@@293 $generated@@610) 0)) (= $generated@@610 ($generated@@292 $generated@@611))))
 :pattern ( ($generated@@293 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@613)))
 (=> (and (and (= (type $generated@@612) ($generated@@80 $generated@@615 $generated@@2)) (= (type $generated@@614) $generated@@2)) (<= 0 ($generated $generated@@614))) (= ($generated@@310 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)) (+ (- ($generated@@310 $generated@@612) ($generated ($generated@@85 $generated@@612 $generated@@613))) ($generated $generated@@614)))))
 :pattern ( ($generated@@310 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@2)) ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@3)) ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@4)) ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@466)) ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@156)) ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@294 $generated@@156)) (= (type $generated@@627) $generated@@68)) (= ($generated@@136 $generated@@626 ($generated@@513 $generated@@627)) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@293 $generated@@626))) ($generated@@238 ($generated@@514 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@514 $generated@@626 $generated@@628))
))))
 :pattern ( ($generated@@136 $generated@@626 ($generated@@513 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@294 $generated@@156)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@293 $generated@@630))) (< ($generated@@554 ($generated@@355 $generated@@141 ($generated@@514 $generated@@630 $generated@@631))) ($generated@@629 $generated@@630))))
 :pattern ( ($generated@@554 ($generated@@355 $generated@@141 ($generated@@514 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@136 $generated@@632 ($generated@@423 $generated@@633 $generated@@634))) (and (and ($generated@@136 ($generated@@316 $generated@@632) ($generated@@261 $generated@@633)) ($generated@@136 ($generated@@366 $generated@@632) ($generated@@261 $generated@@634))) ($generated@@136 ($generated@@397 $generated@@632) ($generated@@261 ($generated@@147 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@136 $generated@@632 ($generated@@423 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@136 $generated@@635 ($generated@@431 $generated@@636 $generated@@637))) (and (and ($generated@@136 ($generated@@334 $generated@@635) ($generated@@266 $generated@@636)) ($generated@@136 ($generated@@377 $generated@@635) ($generated@@266 $generated@@637))) ($generated@@136 ($generated@@405 $generated@@635) ($generated@@266 ($generated@@147 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@136 $generated@@635 ($generated@@431 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@136 $generated@@638 $generated@@46))
 :pattern ( ($generated@@136 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@136 $generated@@639 $generated@@47))
 :pattern ( ($generated@@136 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@136 $generated@@640 $generated@@44))
 :pattern ( ($generated@@136 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@466) ($generated@@136 $generated@@641 $generated@@45))
 :pattern ( ($generated@@136 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@156) ($generated@@136 $generated@@642 $generated@@48))
 :pattern ( ($generated@@136 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@643) $generated@@141) (= (type $generated@@644) $generated@@141)) (= (type $generated@@645) $generated@@141)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@141)) (= (type $generated@@648) ($generated@@171 $generated@@81 $generated@@4))) (= (type $generated@@649) $generated@@81)) (= (type $generated@@650) ($generated@@171 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@652 true))
(let (($generated@@653  (=> (and (= $generated@@643 ($generated@@301 $generated@@644)) ($generated@@136 $generated@@644 $generated@@143)) (=> (and (and (and ($generated@@136 $generated@@645 $generated@@143) ($generated@@78 $generated@@645 $generated@@143 $generated@@646)) (= $generated@@647 $generated@@644)) (and (and ($generated@@136 $generated@@647 $generated@@143) (= $generated@@645 $generated@@647)) (and ($generated@@78 $generated@@645 $generated@@143 $generated@@646) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@554 $generated@@645) ($generated@@554 $generated@@643))))))
(let (($generated@@654  (=> (not (= $generated@@643 $generated@@162)) (and (=> (= (ControlFlow 0 6) 4) $generated@@653) (=> (= (ControlFlow 0 6) 5) $generated@@652)))))
(let (($generated@@655 true))
(let (($generated@@656  (=> (= $generated@@648 ($generated@@225 $generated@@649 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@655) (=> (= (ControlFlow 0 7) 6) $generated@@654)))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@650 ($generated@@170 $generated@@649 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@657) (=> (= (ControlFlow 0 8) 7) $generated@@656)))))
(let (($generated@@659  (=> (and ($generated@@245 $generated@@646) ($generated@@651 $generated@@646)) (=> (and (and ($generated@@136 $generated@@643 $generated@@143) ($generated@@78 $generated@@643 $generated@@143 $generated@@646)) (and (= 0 $generated@@138) (= (ControlFlow 0 9) 8))) $generated@@658))))
$generated@@659)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U) Int)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 () T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@629 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (= (type $generated@@143) $generated@@68)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@140) (= (type $generated@@145) $generated@@141)) (or ($generated@@142 $generated@@145) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@145 $generated@@143)))) true)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@141)) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 16) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@141) (= (type $generated@@160) $generated@@141)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@141)))
(assert (= ($generated@@161 $generated@@162) $generated@@63))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@136 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@81)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@141)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@156)) (= (type $generated@@244) $generated@@156)) (= ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242)))
)))
(assert ($generated@@136 $generated@@162 $generated@@143))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@245 $generated@@246)) ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
 :pattern ( ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
)))
(assert  (and (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@140)
 :pattern ( ($generated@@247 $generated@@250))
)) (forall (($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@251)) $generated@@141)
 :pattern ( ($generated@@249 $generated@@251))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@140) (= (type $generated@@253) $generated@@141)) (or ($generated@@142 $generated@@253) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@253 $generated@@143)))) (and (=> (not ($generated@@248 $generated@@253)) (let (($generated@@254 ($generated@@249 $generated@@253)))
($generated@@142 $generated@@254))) (= ($generated@@139 ($generated@@247 $generated@@252) $generated@@253) (ite ($generated@@248 $generated@@253) 0 (let (($generated@@255 ($generated@@249 $generated@@253)))
(+ 1 ($generated@@139 $generated@@252 $generated@@255)))))))
 :pattern ( ($generated@@139 ($generated@@247 $generated@@252) $generated@@253))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@141) (= (type $generated@@257) $generated@@141)) (= ($generated@@153 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@153 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@141) (= (type $generated@@260) $generated@@141)) (= ($generated@@258 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@136 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@156) ($generated@@0 ($generated@@85 $generated@@263 $generated@@265))) ($generated@@238 $generated@@265 $generated@@264))
 :pattern ( ($generated@@85 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@136 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@269) $generated@@68)) (= ($generated@@136 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@156) ($generated@@0 ($generated@@85 $generated@@268 $generated@@270))) ($generated@@238 $generated@@270 $generated@@269))
 :pattern ( ($generated@@85 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@136 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@141) (= (type $generated@@278) $generated@@141)) (and ($generated@@248 $generated@@277) ($generated@@248 $generated@@278))) (= ($generated@@258 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@258 $generated@@277 $generated@@278) ($generated@@248 $generated@@277))
 :pattern ( ($generated@@258 $generated@@277 $generated@@278) ($generated@@248 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@156)) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@284)) (= ($generated@@78 ($generated@@237 $generated@@282 $generated@@283) ($generated@@147 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@282 $generated@@283) ($generated@@147 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@141) (= ($generated@@146 $generated@@285) (= ($generated@@161 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@141) (= ($generated@@248 $generated@@286) (= ($generated@@161 $generated@@286) $generated@@63)))
 :pattern ( ($generated@@248 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@141) (= ($generated@@287 $generated@@288) (= ($generated@@161 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@141) ($generated@@146 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@156) (= (type $generated@@291) $generated@@156)) (= $generated@@289 ($generated@@237 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@146 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 18)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@141) ($generated@@248 $generated@@300)) (= $generated@@300 $generated@@162))
 :pattern ( ($generated@@248 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@141)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@141) ($generated@@287 $generated@@303)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@141) (= $generated@@303 ($generated@@301 $generated@@304)))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@287 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@156)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@68) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@279 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@78 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@279 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@80 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@83 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@80 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@85 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@80 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 20)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@83 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@80 $generated@@353 $generated@@2)) (= ($generated@@165 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@85 $generated@@352 $generated@@354))) (<= ($generated ($generated@@85 $generated@@352 $generated@@354)) ($generated@@310 $generated@@352))))
 :pattern ( ($generated@@85 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@165 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@156) ($generated@@238 $generated@@358 $generated@@143)) (and (= ($generated@@305 ($generated@@355 $generated@@141 $generated@@358)) $generated@@358) ($generated@@136 ($generated@@355 $generated@@141 $generated@@358) $generated@@143)))
 :pattern ( ($generated@@238 $generated@@358 $generated@@143))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@141) (= ($generated@@136 ($generated@@301 $generated@@359) $generated@@143) ($generated@@136 $generated@@359 $generated@@143)))
 :pattern ( ($generated@@136 ($generated@@301 $generated@@359) $generated@@143))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@360) $generated@@141) (= (type $generated@@361) $generated@@141)) (and ($generated@@287 $generated@@360) ($generated@@287 $generated@@361))) (= ($generated@@258 $generated@@360 $generated@@361) ($generated@@258 ($generated@@249 $generated@@360) ($generated@@249 $generated@@361))))
 :pattern ( ($generated@@258 $generated@@360 $generated@@361) ($generated@@287 $generated@@360))
 :pattern ( ($generated@@258 $generated@@360 $generated@@361) ($generated@@287 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(let (($generated@@364 ($generated@@319 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@318 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@317 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@316 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@320 (type $generated@@369))))
(let (($generated@@371 ($generated@@319 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@318 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@317 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@338 (type $generated@@373))))
(let (($generated@@375 ($generated@@337 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@336 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@335 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@334 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@80 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@338 (type $generated@@380))))
(let (($generated@@382 ($generated@@337 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@336 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@335 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@85 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@385) $generated@@68)) (= ($generated@@136 $generated@@384 ($generated@@164 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@384 $generated@@386)))) ($generated@@238 $generated@@386 $generated@@385))
 :pattern ( ($generated@@85 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@136 $generated@@384 ($generated@@164 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@388) $generated@@68)) (= (type $generated@@389) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@387 ($generated@@261 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@156) ($generated@@0 ($generated@@85 $generated@@387 $generated@@390))) ($generated@@279 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@85 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@78 $generated@@387 ($generated@@261 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@266 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@156) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@279 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@266 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@85 ($generated@@311 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@85 ($generated@@311 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@320 (type $generated@@400))))
(let (($generated@@402 ($generated@@319 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@403) ($generated@@154 ($generated@@355 $generated@@141 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@154 ($generated@@355 $generated@@141 $generated@@404))) ($generated@@155 ($generated@@355 $generated@@141 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@338 (type $generated@@408))))
(let (($generated@@410 ($generated@@337 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@80 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@411) ($generated@@154 ($generated@@355 $generated@@141 $generated@@412)))) (= ($generated@@85 ($generated@@406 $generated@@411) ($generated@@154 ($generated@@355 $generated@@141 $generated@@412))) ($generated@@155 ($generated@@355 $generated@@141 $generated@@412))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@319 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@318 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@85 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@413) $generated@@417))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@337 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@336 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@85 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@85 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@68)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@426) $generated@@430))) (and ($generated@@279 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@279 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@434) $generated@@438))) (and ($generated@@279 ($generated@@85 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@279 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@439) $generated@@141) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@440)) (= ($generated@@78 ($generated@@301 $generated@@439) $generated@@143 $generated@@440) ($generated@@78 $generated@@439 $generated@@143 $generated@@440)))
 :pattern ( ($generated@@78 ($generated@@301 $generated@@439) $generated@@143 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@141) ($generated@@136 $generated@@441 $generated@@143)) (or ($generated@@248 $generated@@441) ($generated@@287 $generated@@441)))
 :pattern ( ($generated@@287 $generated@@441) ($generated@@136 $generated@@441 $generated@@143))
 :pattern ( ($generated@@248 $generated@@441) ($generated@@136 $generated@@441 $generated@@143))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@338 (type $generated@@444))))
(let (($generated@@446 ($generated@@337 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@336 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@335 $generated@@446 $generated@@445)) (= ($generated@@334 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@334 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@338 (type $generated@@447))))
(let (($generated@@449 ($generated@@337 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@336 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@335 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@338 (type $generated@@450))))
(let (($generated@@452 ($generated@@337 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@336 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@335 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@156))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@320 (type $generated@@453))))
(let (($generated@@455 ($generated@@319 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@318 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@317 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@156) (= (type $generated@@457) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@453) ($generated@@305 ($generated@@237 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@338 (type $generated@@458))))
(let (($generated@@460 ($generated@@337 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@336 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@335 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@156) (= (type $generated@@462) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@458) ($generated@@305 ($generated@@237 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@156) ($generated@@238 $generated@@463 $generated@@46)) (and (= ($generated@@305 ($generated@@355 $generated@@2 $generated@@463)) $generated@@463) ($generated@@136 ($generated@@355 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@238 $generated@@464 $generated@@47)) (and (= ($generated@@305 ($generated@@355 $generated@@3 $generated@@464)) $generated@@464) ($generated@@136 ($generated@@355 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@156) ($generated@@238 $generated@@465 $generated@@44)) (and (= ($generated@@305 ($generated@@355 $generated@@4 $generated@@465)) $generated@@465) ($generated@@136 ($generated@@355 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 21))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@156) ($generated@@238 $generated@@467 $generated@@45)) (and (= ($generated@@305 ($generated@@355 $generated@@466 $generated@@467)) $generated@@467) ($generated@@136 ($generated@@355 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@68) (= ($generated@@238 ($generated@@305 $generated@@468) $generated@@469) ($generated@@136 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@238 ($generated@@305 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@83 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@80 $generated@@471 $generated@@2)) (<= 0 ($generated@@310 $generated@@470))))
 :pattern ( ($generated@@310 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@295 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@294 $generated@@473)) (<= 0 ($generated@@293 $generated@@472))))
 :pattern ( ($generated@@293 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@423 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@423 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@423 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@431 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@431 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@431 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@156) (= (type $generated@@495) $generated@@156)) (= ($generated@@161 ($generated@@237 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@147 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@147 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@147 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@147 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@156) (= (type $generated@@505) $generated@@156)) (= ($generated@@154 ($generated@@237 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@237 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@156) (= (type $generated@@507) $generated@@156)) (= ($generated@@155 ($generated@@237 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@237 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@140)
 :pattern ( ($generated@@508 $generated@@510))
)) (= (type $generated@@509) $generated@@140)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@140) (= (type $generated@@512) $generated@@141)) (= ($generated@@139 $generated@@511 $generated@@512) ($generated@@139 $generated@@509 $generated@@512)))
 :pattern ( ($generated@@139 ($generated@@508 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@295 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@294 $generated@@156)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@293 $generated@@519))) ($generated@@279 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@79 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@79 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@261 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@261 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@261 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@266 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@266 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@266 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@164 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@164 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@141) (= ($generated@@161 ($generated@@301 $generated@@541)) $generated@@65))
 :pattern ( ($generated@@301 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@141) (= ($generated@@249 ($generated@@301 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@301 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@355 $generated@@544 ($generated@@305 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@305 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) (= ($generated@@136 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@545) $generated@@548))) (and ($generated@@238 ($generated@@85 ($generated@@398 $generated@@545) $generated@@548) $generated@@547) ($generated@@238 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@545) $generated@@548))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@136 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) (= ($generated@@136 $generated@@549 ($generated@@431 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@549) $generated@@552))) (and ($generated@@238 ($generated@@85 ($generated@@406 $generated@@549) $generated@@552) $generated@@551) ($generated@@238 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@136 $generated@@549 ($generated@@431 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@156)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@237 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@156) (= (type $generated@@558) $generated@@156)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@237 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@140) (= (type $generated@@560) $generated@@141)) (= ($generated@@139 ($generated@@247 $generated@@559) $generated@@560) ($generated@@139 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@139 ($generated@@247 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@156) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@238 $generated@@561 ($generated@@423 $generated@@562 $generated@@563))) (and (= ($generated@@305 ($generated@@355 ($generated@@318 $generated@@156 $generated@@156) $generated@@561)) $generated@@561) ($generated@@136 ($generated@@355 ($generated@@318 $generated@@156 $generated@@156) $generated@@561) ($generated@@423 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@238 $generated@@561 ($generated@@423 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@156) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) ($generated@@238 $generated@@564 ($generated@@431 $generated@@565 $generated@@566))) (and (= ($generated@@305 ($generated@@355 ($generated@@336 $generated@@156 $generated@@156) $generated@@564)) $generated@@564) ($generated@@136 ($generated@@355 ($generated@@336 $generated@@156 $generated@@156) $generated@@564) ($generated@@431 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@238 $generated@@564 ($generated@@431 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) $generated@@156)) ($generated@@238 $generated@@569 ($generated@@147 $generated@@567 $generated@@568))) (and (= ($generated@@305 ($generated@@355 $generated@@141 $generated@@569)) $generated@@569) ($generated@@136 ($generated@@355 $generated@@141 $generated@@569) ($generated@@147 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@238 $generated@@569 ($generated@@147 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@141) (< ($generated@@554 $generated@@570) ($generated@@554 ($generated@@301 $generated@@570))))
 :pattern ( ($generated@@301 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@572) $generated@@571))))
 :pattern ( (let (($generated@@572 (type $generated@@571)))
($generated@@85 ($generated@@442 $generated@@572) $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@73)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@68) (= (type $generated@@576) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@575 $generated@@576)) $generated@@62) (= ($generated@@573 ($generated@@147 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@141) (= ($generated@@553 ($generated@@305 $generated@@577)) ($generated@@554 $generated@@577)))
 :pattern ( ($generated@@553 ($generated@@305 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@156) ($generated@@238 $generated@@578 ($generated@@79 0))) (and (= ($generated@@305 ($generated@@355 $generated@@2 $generated@@578)) $generated@@578) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@238 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@156) (= (type $generated@@580) $generated@@68)) ($generated@@238 $generated@@579 ($generated@@261 $generated@@580))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@579)) $generated@@579) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@579) ($generated@@261 $generated@@580))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@261 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@156) (= (type $generated@@582) $generated@@68)) ($generated@@238 $generated@@581 ($generated@@266 $generated@@582))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@581)) $generated@@581) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@4) $generated@@581) ($generated@@266 $generated@@582))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@266 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@156) (= (type $generated@@584) $generated@@68)) ($generated@@238 $generated@@583 ($generated@@164 $generated@@584))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@156 $generated@@2) $generated@@583)) $generated@@583) ($generated@@136 ($generated@@355 ($generated@@80 $generated@@156 $generated@@2) $generated@@583) ($generated@@164 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@583 ($generated@@164 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@156) (= (type $generated@@586) $generated@@68)) ($generated@@238 $generated@@585 ($generated@@513 $generated@@586))) (and (= ($generated@@305 ($generated@@355 ($generated@@294 $generated@@156) $generated@@585)) $generated@@585) ($generated@@136 ($generated@@355 ($generated@@294 $generated@@156) $generated@@585) ($generated@@513 $generated@@586))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@513 $generated@@586)))
)))
(assert (= ($generated@@76 $generated@@143) $generated@@64))
(assert (= ($generated@@573 $generated@@143) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@164 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@279 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@164 $generated@@588) $generated@@589))
)))
(assert (= $generated@@162 ($generated@@273 $generated@@162)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@140) (= (type $generated@@592) $generated@@141)) (or ($generated@@142 ($generated@@273 $generated@@592)) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@592 $generated@@143)))) (and (=> (not ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@248 ($generated@@273 $generated@@592)))))) (let (($generated@@593 ($generated@@273 ($generated@@249 ($generated@@273 $generated@@592)))))
($generated@@142 $generated@@593))) (= ($generated@@139 ($generated@@247 $generated@@591) ($generated@@273 $generated@@592)) (ite ($generated@@248 ($generated@@273 $generated@@592)) 0 (let (($generated@@594 ($generated@@273 ($generated@@249 ($generated@@273 $generated@@592)))))
($generated@@271 (+ 1 ($generated@@139 ($generated@@247 $generated@@591) $generated@@594))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@247 $generated@@591) ($generated@@273 $generated@@592)))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@141) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@597) (and ($generated@@146 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@68) ($generated@@78 $generated@@595 ($generated@@147 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@147 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@279 ($generated@@154 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@279 ($generated@@154 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@141) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@601) (and ($generated@@146 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@78 $generated@@599 ($generated@@147 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@147 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@279 ($generated@@155 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@279 ($generated@@155 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@141) (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@604) (and ($generated@@287 $generated@@603) ($generated@@78 $generated@@603 $generated@@143 $generated@@604)))) ($generated@@78 ($generated@@249 $generated@@603) $generated@@143 $generated@@604))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@603) $generated@@143 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@156) (= (type $generated@@606) $generated@@156)) (= ($generated@@237 ($generated@@273 $generated@@605) ($generated@@273 $generated@@606)) ($generated@@273 ($generated@@237 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@237 ($generated@@273 $generated@@605) ($generated@@273 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@271 $generated@@607))) ($generated@@273 ($generated@@305 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@271 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@141) (= ($generated@@301 ($generated@@273 $generated@@608)) ($generated@@273 ($generated@@301 $generated@@608))))
 :pattern ( ($generated@@301 ($generated@@273 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (= ($generated@@305 ($generated@@273 $generated@@609)) ($generated@@273 ($generated@@305 $generated@@609)))
 :pattern ( ($generated@@305 ($generated@@273 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@295 (type $generated@@610))))
 (=> (and (= (type $generated@@610) ($generated@@294 $generated@@611)) (= ($generated@@293 $generated@@610) 0)) (= $generated@@610 ($generated@@292 $generated@@611))))
 :pattern ( ($generated@@293 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@613)))
 (=> (and (and (= (type $generated@@612) ($generated@@80 $generated@@615 $generated@@2)) (= (type $generated@@614) $generated@@2)) (<= 0 ($generated $generated@@614))) (= ($generated@@310 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)) (+ (- ($generated@@310 $generated@@612) ($generated ($generated@@85 $generated@@612 $generated@@613))) ($generated $generated@@614)))))
 :pattern ( ($generated@@310 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@2)) ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@3)) ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@4)) ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@466)) ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@156)) ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@294 $generated@@156)) (= (type $generated@@627) $generated@@68)) (= ($generated@@136 $generated@@626 ($generated@@513 $generated@@627)) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@293 $generated@@626))) ($generated@@238 ($generated@@514 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@514 $generated@@626 $generated@@628))
))))
 :pattern ( ($generated@@136 $generated@@626 ($generated@@513 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@294 $generated@@156)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@293 $generated@@630))) (< ($generated@@554 ($generated@@355 $generated@@141 ($generated@@514 $generated@@630 $generated@@631))) ($generated@@629 $generated@@630))))
 :pattern ( ($generated@@554 ($generated@@355 $generated@@141 ($generated@@514 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@318 $generated@@156 $generated@@156)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@136 $generated@@632 ($generated@@423 $generated@@633 $generated@@634))) (and (and ($generated@@136 ($generated@@316 $generated@@632) ($generated@@261 $generated@@633)) ($generated@@136 ($generated@@366 $generated@@632) ($generated@@261 $generated@@634))) ($generated@@136 ($generated@@397 $generated@@632) ($generated@@261 ($generated@@147 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@136 $generated@@632 ($generated@@423 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@336 $generated@@156 $generated@@156)) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@136 $generated@@635 ($generated@@431 $generated@@636 $generated@@637))) (and (and ($generated@@136 ($generated@@334 $generated@@635) ($generated@@266 $generated@@636)) ($generated@@136 ($generated@@377 $generated@@635) ($generated@@266 $generated@@637))) ($generated@@136 ($generated@@405 $generated@@635) ($generated@@266 ($generated@@147 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@136 $generated@@635 ($generated@@431 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@136 $generated@@638 $generated@@46))
 :pattern ( ($generated@@136 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@136 $generated@@639 $generated@@47))
 :pattern ( ($generated@@136 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@136 $generated@@640 $generated@@44))
 :pattern ( ($generated@@136 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@466) ($generated@@136 $generated@@641 $generated@@45))
 :pattern ( ($generated@@136 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@156) ($generated@@136 $generated@@642 $generated@@48))
 :pattern ( ($generated@@136 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@643) $generated@@141) (= (type $generated@@644) $generated@@141)) (= (type $generated@@645) $generated@@141)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@141)) (= (type $generated@@648) ($generated@@171 $generated@@81 $generated@@4))) (= (type $generated@@649) $generated@@81)) (= (type $generated@@650) ($generated@@171 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@652 true))
(let (($generated@@653  (=> (and (= $generated@@643 ($generated@@301 $generated@@644)) ($generated@@136 $generated@@644 $generated@@143)) (=> (and (and (and ($generated@@136 $generated@@645 $generated@@143) ($generated@@78 $generated@@645 $generated@@143 $generated@@646)) (= $generated@@647 $generated@@644)) (and (and ($generated@@136 $generated@@647 $generated@@143) (= $generated@@645 $generated@@647)) (and ($generated@@78 $generated@@645 $generated@@143 $generated@@646) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@554 $generated@@645) ($generated@@554 $generated@@643))))))
(let (($generated@@654  (=> (not (= $generated@@643 $generated@@162)) (and (=> (= (ControlFlow 0 6) 4) $generated@@653) (=> (= (ControlFlow 0 6) 5) $generated@@652)))))
(let (($generated@@655 true))
(let (($generated@@656  (=> (= $generated@@648 ($generated@@225 $generated@@649 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@655) (=> (= (ControlFlow 0 7) 6) $generated@@654)))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@650 ($generated@@170 $generated@@649 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@657) (=> (= (ControlFlow 0 8) 7) $generated@@656)))))
(let (($generated@@659  (=> (and (and (and ($generated@@245 $generated@@646) ($generated@@651 $generated@@646)) ($generated@@136 $generated@@643 $generated@@143)) (and (= 1 $generated@@138) (= (ControlFlow 0 9) 8))) $generated@@658)))
$generated@@659)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U Int) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (T@U T@U) Int)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U T@U) Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (Int) Int)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Bool)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@T) T@U)
(declare-fun $generated@@364 (T@T T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@T) T@U)
(declare-fun $generated@@498 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (! (= (type ($generated@@138 $generated@@143 $generated@@144 $generated@@145)) $generated@@141)
 :pattern ( ($generated@@138 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@139 $generated@@146)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@146))
))) (= (type $generated@@142) $generated@@140)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ) (!  (=> (and (= (type $generated@@147) $generated@@140) (= (type $generated@@148) $generated@@141)) (= ($generated@@138 $generated@@147 $generated@@148 $generated@@149) ($generated@@138 $generated@@142 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (= (type $generated@@150) $generated@@70))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@80 $generated@@151 $generated@@150 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@153 $generated@@154 ($generated@@81 0)))
 :pattern ( ($generated@@153 $generated@@154 ($generated@@81 0)))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@140) (= (type $generated@@160) $generated@@141)) (or ($generated@@157 $generated@@160) (and (not (= 0 $generated@@155)) ($generated@@153 $generated@@160 $generated@@158)))) true)
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
))))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@140) (= (type $generated@@164) $generated@@141)) (or ($generated@@162 $generated@@164) (and (not (= 1 $generated@@155)) ($generated@@153 $generated@@164 $generated@@158)))) true)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@167 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@70) (= (type $generated@@170) $generated@@70)) (= (type $generated@@171) $generated@@141)) ($generated@@153 $generated@@171 ($generated@@166 $generated@@169 $generated@@170))) ($generated@@165 $generated@@171))
 :pattern ( ($generated@@165 $generated@@171) ($generated@@153 $generated@@171 ($generated@@166 $generated@@169 $generated@@170)))
)))
(assert  (and (and (= ($generated@@1 $generated@@175) 16) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@141) (= (type $generated@@179) $generated@@141)) true) (= ($generated@@172 $generated@@178 $generated@@179)  (and (= ($generated@@173 $generated@@178) ($generated@@173 $generated@@179)) (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)))))
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@74)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@141)))
(assert (= ($generated@@180 $generated@@181) $generated@@64))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@70)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@82 $generated@@175 $generated@@2)) (= (type $generated@@187) $generated@@70)) ($generated@@153 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@153 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@83 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@73 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@239) ($generated@@72 $generated@@4))) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) ($generated@@72 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@190 $generated@@83 $generated@@4))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@73 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@83) (= (type $generated@@250) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@251) ($generated@@72 $generated@@4))) (= (type $generated@@253) $generated@@83)) (= (type $generated@@254) ($generated@@72 $generated@@255))) (= ($generated@@0 ($generated@@188 ($generated@@244 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@188 ($generated@@244 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@141)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@70) (= (type $generated@@261) $generated@@70)) (= (type $generated@@262) $generated@@175)) (= (type $generated@@263) $generated@@175)) (= ($generated@@153 ($generated@@256 $generated@@262 $generated@@263) ($generated@@166 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@153 ($generated@@256 $generated@@262 $generated@@263) ($generated@@166 $generated@@260 $generated@@261)))
)))
(assert ($generated@@153 $generated@@181 $generated@@158))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@264 $generated@@265)) ($generated@@80 $generated@@181 $generated@@158 $generated@@265))
 :pattern ( ($generated@@80 $generated@@181 $generated@@158 $generated@@265))
)))
(assert  (and (forall (($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@269)) $generated@@140)
 :pattern ( ($generated@@266 $generated@@269))
)) (forall (($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@270)) $generated@@141)
 :pattern ( ($generated@@268 $generated@@270))
))))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@140) (= (type $generated@@272) $generated@@141)) (or ($generated@@157 $generated@@272) (and (not (= 0 $generated@@155)) ($generated@@153 $generated@@272 $generated@@158)))) (and (=> (not ($generated@@267 $generated@@272)) (let (($generated@@273 ($generated@@268 $generated@@272)))
($generated@@157 $generated@@273))) (= ($generated@@156 ($generated@@266 $generated@@271) $generated@@272) (ite ($generated@@267 $generated@@272) 0 (let (($generated@@274 ($generated@@268 $generated@@272)))
(+ 1 ($generated@@156 $generated@@271 $generated@@274)))))))
 :pattern ( ($generated@@156 ($generated@@266 $generated@@271) $generated@@272))
))))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@275) $generated@@140) (= (type $generated@@276) $generated@@141)) (or ($generated@@162 $generated@@276) (and (not (= 1 $generated@@155)) ($generated@@153 $generated@@276 $generated@@158)))) (and (=> (not ($generated@@267 $generated@@276)) (let (($generated@@277 ($generated@@268 $generated@@276)))
($generated@@162 $generated@@277))) (= ($generated@@161 ($generated@@266 $generated@@275) $generated@@276) (ite ($generated@@267 $generated@@276) 0 (let (($generated@@278 ($generated@@268 $generated@@276)))
(+ 1 ($generated@@161 $generated@@275 $generated@@278)))))))
 :pattern ( ($generated@@161 ($generated@@266 $generated@@275) $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@141) (= (type $generated@@280) $generated@@141)) (= ($generated@@172 $generated@@279 $generated@@280) (= $generated@@279 $generated@@280)))
 :pattern ( ($generated@@172 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@141) (= (type $generated@@283) $generated@@141)) (= ($generated@@281 $generated@@282 $generated@@283) (= $generated@@282 $generated@@283)))
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@70)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@82 $generated@@175 $generated@@4)) (= (type $generated@@287) $generated@@70)) (= ($generated@@153 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@175) ($generated@@0 ($generated@@87 $generated@@286 $generated@@288))) ($generated@@257 $generated@@288 $generated@@287))
 :pattern ( ($generated@@87 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@153 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@82 $generated@@175 $generated@@4)) (= (type $generated@@292) $generated@@70)) (= ($generated@@153 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@175) ($generated@@0 ($generated@@87 $generated@@291 $generated@@293))) ($generated@@257 $generated@@293 $generated@@292))
 :pattern ( ($generated@@87 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@153 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 Int) ) (! (= ($generated@@294 $generated@@295) $generated@@295)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
(= (type ($generated@@296 $generated@@297)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@296 $generated@@299) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@141) (= (type $generated@@301) $generated@@141)) (and ($generated@@267 $generated@@300) ($generated@@267 $generated@@301))) (= ($generated@@281 $generated@@300 $generated@@301) true))
 :pattern ( ($generated@@281 $generated@@300 $generated@@301) ($generated@@267 $generated@@300))
 :pattern ( ($generated@@281 $generated@@300 $generated@@301) ($generated@@267 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@70) (= (type $generated@@304) $generated@@70)) (= (type $generated@@305) $generated@@175)) (= (type $generated@@306) $generated@@175)) (= (type $generated@@307) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@264 $generated@@307)) (= ($generated@@80 ($generated@@256 $generated@@305 $generated@@306) ($generated@@166 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@80 ($generated@@256 $generated@@305 $generated@@306) ($generated@@166 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@141)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 Int) ) (!  (=> (and (and (= (type $generated@@311) $generated@@140) (= (type $generated@@312) $generated@@141)) (or ($generated@@308 $generated@@312 $generated@@313) (and (not (= 2 $generated@@155)) (and (and ($generated@@153 $generated@@312 $generated@@158) (<= ($generated@@294 0) $generated@@313)) (and (<= $generated@@313 ($generated@@156 ($generated@@266 $generated@@142) $generated@@312)) (<= $generated@@313 ($generated@@161 ($generated@@266 $generated@@142) $generated@@312))))))) (and (=> (not (= $generated@@313 ($generated@@294 0))) ($generated@@308 ($generated@@268 $generated@@312) (- $generated@@313 1))) (= ($generated@@138 ($generated@@266 $generated@@311) $generated@@312 $generated@@313) (ite (= $generated@@313 ($generated@@294 0)) $generated@@181 ($generated@@309 ($generated@@138 $generated@@311 ($generated@@268 $generated@@312) (- $generated@@313 1)))))))
 :pattern ( ($generated@@138 ($generated@@266 $generated@@311) $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@141) (= ($generated@@165 $generated@@314) (= ($generated@@180 $generated@@314) $generated@@62)))
 :pattern ( ($generated@@165 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@141) (= ($generated@@267 $generated@@315) (= ($generated@@180 $generated@@315) $generated@@64)))
 :pattern ( ($generated@@267 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@141) (= ($generated@@316 $generated@@317) (= ($generated@@180 $generated@@317) $generated@@66)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@141) ($generated@@165 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@175) (= (type $generated@@320) $generated@@175)) (= $generated@@318 ($generated@@256 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@165 $generated@@318))
)))
(assert  (and (and (forall (($generated@@325 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@325)) 18)) (forall (($generated@@326 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@323 $generated@@326))
))) (forall (($generated@@327 T@T) ) (! (= (type ($generated@@321 $generated@@327)) ($generated@@323 $generated@@327))
 :pattern ( ($generated@@321 $generated@@327))
))))
(assert (forall (($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@328)) 0)
 :pattern ( ($generated@@321 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@141) ($generated@@267 $generated@@329)) (= $generated@@329 $generated@@181))
 :pattern ( ($generated@@267 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@141) ($generated@@316 $generated@@330)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@141) (= $generated@@330 ($generated@@309 $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
)))
 :pattern ( ($generated@@316 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@2) (= ($generated@@153 $generated@@332 $generated@@150) (<= ($generated@@294 0) ($generated $generated@@332))))
 :pattern ( ($generated@@153 $generated@@332 $generated@@150))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@175)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@70) (= (type $generated@@337) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@302 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@80 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@302 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@82 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@87 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@82 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@87 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@87 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert  (and (and (and (and (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (= ($generated@@1 ($generated@@364 $generated@@367 $generated@@368)) 20)) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@365 ($generated@@364 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@364 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@364 $generated@@371 $generated@@372)) $generated@@372)
 :pattern ( ($generated@@364 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@365 (type $generated@@373))))
(= (type ($generated@@362 $generated@@373)) ($generated@@82 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@373))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@363 $generated@@375 $generated@@376)) ($generated@@364 $generated@@375 $generated@@376))
 :pattern ( ($generated@@363 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@87 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@87 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@85 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@82 $generated@@381 $generated@@2)) (= ($generated@@184 $generated@@380) (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@381) (and (<= 0 ($generated ($generated@@87 $generated@@380 $generated@@382))) (<= ($generated ($generated@@87 $generated@@380 $generated@@382)) ($generated@@338 $generated@@380))))
 :pattern ( ($generated@@87 $generated@@380 $generated@@382))
)))))
 :pattern ( ($generated@@184 $generated@@380))
)))
(assert (forall (($generated@@384 T@T) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@384)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@175) ($generated@@257 $generated@@386 $generated@@150)) (and (= ($generated@@333 ($generated@@383 $generated@@2 $generated@@386)) $generated@@386) ($generated@@153 ($generated@@383 $generated@@2 $generated@@386) $generated@@150)))
 :pattern ( ($generated@@257 $generated@@386 $generated@@150))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@175) ($generated@@257 $generated@@387 $generated@@158)) (and (= ($generated@@333 ($generated@@383 $generated@@141 $generated@@387)) $generated@@387) ($generated@@153 ($generated@@383 $generated@@141 $generated@@387) $generated@@158)))
 :pattern ( ($generated@@257 $generated@@387 $generated@@158))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@141) (= ($generated@@153 ($generated@@309 $generated@@388) $generated@@158) ($generated@@153 $generated@@388 $generated@@158)))
 :pattern ( ($generated@@153 ($generated@@309 $generated@@388) $generated@@158))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@141) (= (type $generated@@390) $generated@@141)) (and ($generated@@316 $generated@@389) ($generated@@316 $generated@@390))) (= ($generated@@281 $generated@@389 $generated@@390) ($generated@@281 ($generated@@268 $generated@@389) ($generated@@268 $generated@@390))))
 :pattern ( ($generated@@281 $generated@@389 $generated@@390) ($generated@@316 $generated@@389))
 :pattern ( ($generated@@281 $generated@@389 $generated@@390) ($generated@@316 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@348 (type $generated@@391))))
(let (($generated@@393 ($generated@@347 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@346 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@345 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@87 ($generated@@344 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@344 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@348 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@82 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@348 (type $generated@@398))))
(let (($generated@@400 ($generated@@347 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@346 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@345 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@87 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@366 (type $generated@@402))))
(let (($generated@@404 ($generated@@365 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@364 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@363 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@362 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@366 (type $generated@@407))))
(= (type ($generated@@406 $generated@@407)) ($generated@@82 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@366 (type $generated@@409))))
(let (($generated@@411 ($generated@@365 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@364 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@363 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@410) ($generated@@0 ($generated@@87 ($generated@@406 $generated@@409) $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@406 $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 Int) ) (!  (=> (and (= (type $generated@@413) $generated@@140) (= (type $generated@@414) $generated@@141)) (= ($generated@@138 ($generated@@266 $generated@@413) $generated@@414 $generated@@415) ($generated@@138 $generated@@413 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@138 ($generated@@266 $generated@@413) $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@82 $generated@@175 $generated@@2)) (= (type $generated@@417) $generated@@70)) (= ($generated@@153 $generated@@416 ($generated@@183 $generated@@417)) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@175) (< 0 ($generated ($generated@@87 $generated@@416 $generated@@418)))) ($generated@@257 $generated@@418 $generated@@417))
 :pattern ( ($generated@@87 $generated@@416 $generated@@418))
))))
 :pattern ( ($generated@@153 $generated@@416 ($generated@@183 $generated@@417)))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@82 $generated@@175 $generated@@4)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@419 ($generated@@284 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@175) ($generated@@0 ($generated@@87 $generated@@419 $generated@@422))) ($generated@@302 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@87 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@419 ($generated@@284 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@82 $generated@@175 $generated@@4)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@289 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@175) ($generated@@0 ($generated@@87 $generated@@423 $generated@@426))) ($generated@@302 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@87 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@289 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= ($generated ($generated@@87 ($generated@@339 $generated@@428) $generated@@427)) 0))
 :pattern ( (let (($generated@@428 (type $generated@@427)))
($generated@@87 ($generated@@339 $generated@@428) $generated@@427)))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@82 $generated@@175 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@348 (type $generated@@432))))
(let (($generated@@434 ($generated@@347 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@82 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@346 $generated@@175 $generated@@175)) (= (type $generated@@436) $generated@@175)) (= ($generated@@0 ($generated@@87 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@87 ($generated@@344 $generated@@435) ($generated@@173 ($generated@@383 $generated@@141 $generated@@436)))) (= ($generated@@87 ($generated@@430 $generated@@435) ($generated@@173 ($generated@@383 $generated@@141 $generated@@436))) ($generated@@174 ($generated@@383 $generated@@141 $generated@@436))))))
 :pattern ( ($generated@@87 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@82 $generated@@175 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@366 (type $generated@@440))))
(let (($generated@@442 ($generated@@365 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@82 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@364 $generated@@175 $generated@@175)) (= (type $generated@@444) $generated@@175)) (= ($generated@@0 ($generated@@87 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@87 ($generated@@362 $generated@@443) ($generated@@173 ($generated@@383 $generated@@141 $generated@@444)))) (= ($generated@@87 ($generated@@438 $generated@@443) ($generated@@173 ($generated@@383 $generated@@141 $generated@@444))) ($generated@@174 ($generated@@383 $generated@@141 $generated@@444))))))
 :pattern ( ($generated@@87 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@347 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@346 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@87 ($generated@@395 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@87 ($generated@@344 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@87 ($generated@@430 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@87 ($generated@@344 $generated@@445) $generated@@449))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@365 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@364 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@87 ($generated@@406 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@87 ($generated@@362 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@87 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@450) $generated@@454))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@346 $generated@@175 $generated@@175)) (= (type $generated@@459) $generated@@70)) (= (type $generated@@460) $generated@@70)) (= (type $generated@@461) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@175) ($generated@@0 ($generated@@87 ($generated@@344 $generated@@458) $generated@@462))) (and ($generated@@302 ($generated@@87 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@302 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@87 ($generated@@344 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@80 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@364 $generated@@175 $generated@@175)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) $generated@@70)) (= (type $generated@@469) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@175) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@466) $generated@@470))) (and ($generated@@302 ($generated@@87 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@302 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@80 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@471) $generated@@141) (= (type $generated@@472) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@264 $generated@@472)) (= ($generated@@80 ($generated@@309 $generated@@471) $generated@@158 $generated@@472) ($generated@@80 $generated@@471 $generated@@158 $generated@@472)))
 :pattern ( ($generated@@80 ($generated@@309 $generated@@471) $generated@@158 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@141) ($generated@@153 $generated@@473 $generated@@158)) (or ($generated@@267 $generated@@473) ($generated@@316 $generated@@473)))
 :pattern ( ($generated@@316 $generated@@473) ($generated@@153 $generated@@473 $generated@@158))
 :pattern ( ($generated@@267 $generated@@473) ($generated@@153 $generated@@473 $generated@@158))
)))
(assert (forall (($generated@@475 T@T) ) (! (= (type ($generated@@474 $generated@@475)) ($generated@@82 $generated@@475 $generated@@4))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@366 (type $generated@@476))))
(let (($generated@@478 ($generated@@365 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@364 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@363 $generated@@478 $generated@@477)) (= ($generated@@362 $generated@@476) ($generated@@474 $generated@@478))))))
 :pattern ( ($generated@@362 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@366 (type $generated@@479))))
(let (($generated@@481 ($generated@@365 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@364 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@363 $generated@@481 $generated@@480)) (= ($generated@@406 $generated@@479) ($generated@@474 $generated@@480))))))
 :pattern ( ($generated@@406 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@366 (type $generated@@482))))
(let (($generated@@484 ($generated@@365 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@364 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@363 $generated@@484 $generated@@483)) (= ($generated@@437 $generated@@482) ($generated@@474 $generated@@175))))))
 :pattern ( ($generated@@437 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@348 (type $generated@@485))))
(let (($generated@@487 ($generated@@347 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@346 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@345 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@175) (= (type $generated@@489) $generated@@175)) ($generated@@0 ($generated@@87 ($generated@@429 $generated@@485) ($generated@@333 ($generated@@256 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@429 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@366 (type $generated@@490))))
(let (($generated@@492 ($generated@@365 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@364 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@363 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (and (and (= (type $generated@@493) $generated@@175) (= (type $generated@@494) $generated@@175)) ($generated@@0 ($generated@@87 ($generated@@437 $generated@@490) ($generated@@333 ($generated@@256 $generated@@493 $generated@@494)))))
 :no-pattern (type $generated@@493)
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@437 $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@175) ($generated@@257 $generated@@495 $generated@@46)) (and (= ($generated@@333 ($generated@@383 $generated@@2 $generated@@495)) $generated@@495) ($generated@@153 ($generated@@383 $generated@@2 $generated@@495) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@495 $generated@@46))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@175) ($generated@@257 $generated@@496 $generated@@47)) (and (= ($generated@@333 ($generated@@383 $generated@@3 $generated@@496)) $generated@@496) ($generated@@153 ($generated@@383 $generated@@3 $generated@@496) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@496 $generated@@47))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@175) ($generated@@257 $generated@@497 $generated@@44)) (and (= ($generated@@333 ($generated@@383 $generated@@4 $generated@@497)) $generated@@497) ($generated@@153 ($generated@@383 $generated@@4 $generated@@497) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@497 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@498) 21))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@175) ($generated@@257 $generated@@499 $generated@@45)) (and (= ($generated@@333 ($generated@@383 $generated@@498 $generated@@499)) $generated@@499) ($generated@@153 ($generated@@383 $generated@@498 $generated@@499) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@499 $generated@@45))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@70) (= ($generated@@257 ($generated@@333 $generated@@500) $generated@@501) ($generated@@153 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@257 ($generated@@333 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@85 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@82 $generated@@503 $generated@@2)) (<= 0 ($generated@@338 $generated@@502))))
 :pattern ( ($generated@@338 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@324 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@323 $generated@@505)) (<= 0 ($generated@@322 $generated@@504))))
 :pattern ( ($generated@@322 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@455 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@455 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@455 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@455 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@78 ($generated@@455 $generated@@514 $generated@@515)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@70) (= (type $generated@@519) $generated@@70)) (= ($generated@@516 ($generated@@463 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@463 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@70) (= (type $generated@@523) $generated@@70)) (= ($generated@@520 ($generated@@463 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@463 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@70) (= (type $generated@@525) $generated@@70)) (= ($generated@@78 ($generated@@463 $generated@@524 $generated@@525)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@175) (= (type $generated@@527) $generated@@175)) (= ($generated@@180 ($generated@@256 $generated@@526 $generated@@527)) $generated@@62))
 :pattern ( ($generated@@256 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@70) (= (type $generated@@531) $generated@@70)) (= ($generated@@528 ($generated@@166 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@166 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= ($generated@@532 ($generated@@166 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@166 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@175) (= (type $generated@@537) $generated@@175)) (= ($generated@@173 ($generated@@256 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@256 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@175) (= (type $generated@@539) $generated@@175)) (= ($generated@@174 ($generated@@256 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@256 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@140) (= (type $generated@@541) $generated@@141)) (= ($generated@@156 $generated@@540 $generated@@541) ($generated@@156 $generated@@142 $generated@@541)))
 :pattern ( ($generated@@156 ($generated@@139 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@141)) (= ($generated@@161 $generated@@542 $generated@@543) ($generated@@161 $generated@@142 $generated@@543)))
 :pattern ( ($generated@@161 ($generated@@139 $generated@@542) $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@324 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@323 $generated@@175)) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@322 $generated@@550))) ($generated@@302 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@80 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@81 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@81 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@70)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@70) (= ($generated@@556 ($generated@@284 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@284 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@70) (= ($generated@@78 ($generated@@284 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@289 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@289 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@78 ($generated@@289 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@183 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@183 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@78 ($generated@@183 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@78 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@141) (= ($generated@@180 ($generated@@309 $generated@@572)) $generated@@66))
 :pattern ( ($generated@@309 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@141) (= ($generated@@268 ($generated@@309 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@309 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@383 $generated@@575 ($generated@@333 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@333 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@346 $generated@@175 $generated@@175)) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) $generated@@70)) (= ($generated@@153 $generated@@576 ($generated@@455 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@175) ($generated@@0 ($generated@@87 ($generated@@344 $generated@@576) $generated@@579))) (and ($generated@@257 ($generated@@87 ($generated@@430 $generated@@576) $generated@@579) $generated@@578) ($generated@@257 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@576) $generated@@579))
 :pattern ( ($generated@@87 ($generated@@344 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@153 $generated@@576 ($generated@@455 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@364 $generated@@175 $generated@@175)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) (= ($generated@@153 $generated@@580 ($generated@@463 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@175) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@580) $generated@@583))) (and ($generated@@257 ($generated@@87 ($generated@@438 $generated@@580) $generated@@583) $generated@@582) ($generated@@257 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@580) $generated@@583))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@153 $generated@@580 ($generated@@463 $generated@@581 $generated@@582)))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (and (and (= (type $generated@@584) $generated@@140) (= (type $generated@@585) $generated@@141)) (or ($generated@@308 $generated@@585 $generated@@586) (and (not (= 2 $generated@@155)) (and (and ($generated@@153 $generated@@585 $generated@@158) (<= ($generated@@294 0) $generated@@586)) (and (<= $generated@@586 ($generated@@156 ($generated@@266 $generated@@142) $generated@@585)) (<= $generated@@586 ($generated@@161 ($generated@@266 $generated@@142) $generated@@585))))))) (and (and (= ($generated@@161 ($generated@@266 $generated@@142) ($generated@@138 $generated@@584 $generated@@585 $generated@@586)) $generated@@586) (= ($generated@@156 ($generated@@266 $generated@@142) ($generated@@138 $generated@@584 $generated@@585 $generated@@586)) $generated@@586)) ($generated@@153 ($generated@@138 $generated@@584 $generated@@585 $generated@@586) $generated@@158)))
 :pattern ( ($generated@@138 $generated@@584 $generated@@585 $generated@@586))
))))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@175) (= (type $generated@@590) $generated@@175)) (< ($generated@@587 $generated@@589) ($generated@@588 ($generated@@256 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@256 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@175) (= (type $generated@@592) $generated@@175)) (< ($generated@@587 $generated@@592) ($generated@@588 ($generated@@256 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@256 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@140) (= (type $generated@@594) $generated@@141)) (= ($generated@@156 ($generated@@266 $generated@@593) $generated@@594) ($generated@@156 $generated@@593 $generated@@594)))
 :pattern ( ($generated@@156 ($generated@@266 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@140) (= (type $generated@@596) $generated@@141)) (= ($generated@@161 ($generated@@266 $generated@@595) $generated@@596) ($generated@@161 $generated@@595 $generated@@596)))
 :pattern ( ($generated@@161 ($generated@@266 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@175) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) $generated@@70)) ($generated@@257 $generated@@597 ($generated@@455 $generated@@598 $generated@@599))) (and (= ($generated@@333 ($generated@@383 ($generated@@346 $generated@@175 $generated@@175) $generated@@597)) $generated@@597) ($generated@@153 ($generated@@383 ($generated@@346 $generated@@175 $generated@@175) $generated@@597) ($generated@@455 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@257 $generated@@597 ($generated@@455 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@175) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@257 $generated@@600 ($generated@@463 $generated@@601 $generated@@602))) (and (= ($generated@@333 ($generated@@383 ($generated@@364 $generated@@175 $generated@@175) $generated@@600)) $generated@@600) ($generated@@153 ($generated@@383 ($generated@@364 $generated@@175 $generated@@175) $generated@@600) ($generated@@463 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@257 $generated@@600 ($generated@@463 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@70) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@175)) ($generated@@257 $generated@@605 ($generated@@166 $generated@@603 $generated@@604))) (and (= ($generated@@333 ($generated@@383 $generated@@141 $generated@@605)) $generated@@605) ($generated@@153 ($generated@@383 $generated@@141 $generated@@605) ($generated@@166 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@257 $generated@@605 ($generated@@166 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@141) (< ($generated@@588 $generated@@606) ($generated@@588 ($generated@@309 $generated@@606))))
 :pattern ( ($generated@@309 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@87 ($generated@@474 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@87 ($generated@@474 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@75)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@70) (= (type $generated@@612) $generated@@70)) (and (= ($generated@@78 ($generated@@166 $generated@@611 $generated@@612)) $generated@@63) (= ($generated@@609 ($generated@@166 $generated@@611 $generated@@612)) $generated@@68)))
 :pattern ( ($generated@@166 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@141) (= ($generated@@587 ($generated@@333 $generated@@613)) ($generated@@588 $generated@@613)))
 :pattern ( ($generated@@587 ($generated@@333 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@175) ($generated@@257 $generated@@614 ($generated@@81 0))) (and (= ($generated@@333 ($generated@@383 $generated@@2 $generated@@614)) $generated@@614) ($generated@@153 ($generated@@383 ($generated@@82 $generated@@175 $generated@@4) $generated@@614) ($generated@@81 0))))
 :pattern ( ($generated@@257 $generated@@614 ($generated@@81 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@175) (= (type $generated@@616) $generated@@70)) ($generated@@257 $generated@@615 ($generated@@284 $generated@@616))) (and (= ($generated@@333 ($generated@@383 ($generated@@82 $generated@@175 $generated@@4) $generated@@615)) $generated@@615) ($generated@@153 ($generated@@383 ($generated@@82 $generated@@175 $generated@@4) $generated@@615) ($generated@@284 $generated@@616))))
 :pattern ( ($generated@@257 $generated@@615 ($generated@@284 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@175) (= (type $generated@@618) $generated@@70)) ($generated@@257 $generated@@617 ($generated@@289 $generated@@618))) (and (= ($generated@@333 ($generated@@383 ($generated@@82 $generated@@175 $generated@@4) $generated@@617)) $generated@@617) ($generated@@153 ($generated@@383 ($generated@@82 $generated@@175 $generated@@4) $generated@@617) ($generated@@289 $generated@@618))))
 :pattern ( ($generated@@257 $generated@@617 ($generated@@289 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@175) (= (type $generated@@620) $generated@@70)) ($generated@@257 $generated@@619 ($generated@@183 $generated@@620))) (and (= ($generated@@333 ($generated@@383 ($generated@@82 $generated@@175 $generated@@2) $generated@@619)) $generated@@619) ($generated@@153 ($generated@@383 ($generated@@82 $generated@@175 $generated@@2) $generated@@619) ($generated@@183 $generated@@620))))
 :pattern ( ($generated@@257 $generated@@619 ($generated@@183 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@175) (= (type $generated@@622) $generated@@70)) ($generated@@257 $generated@@621 ($generated@@544 $generated@@622))) (and (= ($generated@@333 ($generated@@383 ($generated@@323 $generated@@175) $generated@@621)) $generated@@621) ($generated@@153 ($generated@@383 ($generated@@323 $generated@@175) $generated@@621) ($generated@@544 $generated@@622))))
 :pattern ( ($generated@@257 $generated@@621 ($generated@@544 $generated@@622)))
)))
(assert (= ($generated@@78 $generated@@150) $generated@@61))
(assert (= ($generated@@609 $generated@@150) $generated@@67))
(assert (= ($generated@@78 $generated@@158) $generated@@65))
(assert (= ($generated@@609 $generated@@158) $generated@@69))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@82 $generated@@175 $generated@@2)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@623 ($generated@@183 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@175) (< 0 ($generated ($generated@@87 $generated@@623 $generated@@626)))) ($generated@@302 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@87 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@80 $generated@@623 ($generated@@183 $generated@@624) $generated@@625))
)))
(assert (= $generated@@181 ($generated@@296 $generated@@181)))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@140) (= (type $generated@@628) $generated@@141)) (or ($generated@@157 ($generated@@296 $generated@@628)) (and (not (= 0 $generated@@155)) ($generated@@153 $generated@@628 $generated@@158)))) (and (=> (not ($generated@@0 ($generated@@296 ($generated@@11 ($generated@@267 ($generated@@296 $generated@@628)))))) (let (($generated@@629 ($generated@@296 ($generated@@268 ($generated@@296 $generated@@628)))))
($generated@@157 $generated@@629))) (= ($generated@@156 ($generated@@266 $generated@@627) ($generated@@296 $generated@@628)) (ite ($generated@@267 ($generated@@296 $generated@@628)) 0 (let (($generated@@630 ($generated@@296 ($generated@@268 ($generated@@296 $generated@@628)))))
($generated@@294 (+ 1 ($generated@@156 ($generated@@266 $generated@@627) $generated@@630))))))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@266 $generated@@627) ($generated@@296 $generated@@628)))
))))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@140) (= (type $generated@@632) $generated@@141)) (or ($generated@@162 ($generated@@296 $generated@@632)) (and (not (= 1 $generated@@155)) ($generated@@153 $generated@@632 $generated@@158)))) (and (=> (not ($generated@@0 ($generated@@296 ($generated@@11 ($generated@@267 ($generated@@296 $generated@@632)))))) (let (($generated@@633 ($generated@@296 ($generated@@268 ($generated@@296 $generated@@632)))))
($generated@@162 $generated@@633))) (= ($generated@@161 ($generated@@266 $generated@@631) ($generated@@296 $generated@@632)) (ite ($generated@@267 ($generated@@296 $generated@@632)) 0 (let (($generated@@634 ($generated@@296 ($generated@@268 ($generated@@296 $generated@@632)))))
($generated@@294 (+ 1 ($generated@@161 ($generated@@266 $generated@@631) $generated@@634))))))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@266 $generated@@631) ($generated@@296 $generated@@632)))
))))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@141) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@637) (and ($generated@@165 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@70) ($generated@@80 $generated@@635 ($generated@@166 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@80 $generated@@635 ($generated@@166 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@302 ($generated@@173 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@302 ($generated@@173 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@141) (= (type $generated@@640) $generated@@70)) (= (type $generated@@641) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@641) (and ($generated@@165 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@70) ($generated@@80 $generated@@639 ($generated@@166 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@80 $generated@@639 ($generated@@166 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@302 ($generated@@174 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@302 ($generated@@174 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@141) (= (type $generated@@644) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@644) (and ($generated@@316 $generated@@643) ($generated@@80 $generated@@643 $generated@@158 $generated@@644)))) ($generated@@80 ($generated@@268 $generated@@643) $generated@@158 $generated@@644))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@643) $generated@@158 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@175) (= (type $generated@@646) $generated@@175)) (= ($generated@@256 ($generated@@296 $generated@@645) ($generated@@296 $generated@@646)) ($generated@@296 ($generated@@256 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@256 ($generated@@296 $generated@@645) ($generated@@296 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@294 $generated@@647))) ($generated@@296 ($generated@@333 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@294 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@141) (= ($generated@@309 ($generated@@296 $generated@@648)) ($generated@@296 ($generated@@309 $generated@@648))))
 :pattern ( ($generated@@309 ($generated@@296 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@333 ($generated@@296 $generated@@649)) ($generated@@296 ($generated@@333 $generated@@649)))
 :pattern ( ($generated@@333 ($generated@@296 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@324 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@323 $generated@@651)) (= ($generated@@322 $generated@@650) 0)) (= $generated@@650 ($generated@@321 $generated@@651))))
 :pattern ( ($generated@@322 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@653)))
 (=> (and (and (= (type $generated@@652) ($generated@@82 $generated@@655 $generated@@2)) (= (type $generated@@654) $generated@@2)) (<= 0 ($generated $generated@@654))) (= ($generated@@338 ($generated@@88 $generated@@652 $generated@@653 $generated@@654)) (+ (- ($generated@@338 $generated@@652) ($generated ($generated@@87 $generated@@652 $generated@@653))) ($generated $generated@@654)))))
 :pattern ( ($generated@@338 ($generated@@88 $generated@@652 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@657) $generated@@2)) ($generated@@80 $generated@@657 $generated@@46 $generated@@656))
 :pattern ( ($generated@@80 $generated@@657 $generated@@46 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@659) $generated@@3)) ($generated@@80 $generated@@659 $generated@@47 $generated@@658))
 :pattern ( ($generated@@80 $generated@@659 $generated@@47 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@661) $generated@@4)) ($generated@@80 $generated@@661 $generated@@44 $generated@@660))
 :pattern ( ($generated@@80 $generated@@661 $generated@@44 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@663) $generated@@498)) ($generated@@80 $generated@@663 $generated@@45 $generated@@662))
 :pattern ( ($generated@@80 $generated@@663 $generated@@45 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@665) $generated@@175)) ($generated@@80 $generated@@665 $generated@@48 $generated@@664))
 :pattern ( ($generated@@80 $generated@@665 $generated@@48 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@323 $generated@@175)) (= (type $generated@@667) $generated@@70)) (= ($generated@@153 $generated@@666 ($generated@@544 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@322 $generated@@666))) ($generated@@257 ($generated@@545 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@545 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@153 $generated@@666 ($generated@@544 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@323 $generated@@175)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@322 $generated@@670))) (< ($generated@@588 ($generated@@383 $generated@@141 ($generated@@545 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@588 ($generated@@383 $generated@@141 ($generated@@545 $generated@@670 $generated@@671))))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 Int) ) (!  (=> (and (and (= (type $generated@@672) $generated@@140) (= (type $generated@@673) $generated@@141)) (or ($generated@@308 ($generated@@296 $generated@@673) ($generated@@294 $generated@@674)) (and (not (= 2 $generated@@155)) (and (and ($generated@@153 $generated@@673 $generated@@158) (<= ($generated@@294 0) $generated@@674)) (and (<= ($generated@@294 $generated@@674) ($generated@@294 ($generated@@156 ($generated@@266 $generated@@142) ($generated@@296 $generated@@673)))) (<= ($generated@@294 $generated@@674) ($generated@@294 ($generated@@161 ($generated@@266 $generated@@142) ($generated@@296 $generated@@673))))))))) (and (=> (not (= ($generated@@294 $generated@@674) ($generated@@294 0))) ($generated@@308 ($generated@@296 ($generated@@268 ($generated@@296 $generated@@673))) ($generated@@294 (- $generated@@674 1)))) (= ($generated@@138 ($generated@@266 $generated@@672) ($generated@@296 $generated@@673) ($generated@@294 $generated@@674)) (ite (= ($generated@@294 $generated@@674) ($generated@@294 0)) $generated@@181 ($generated@@309 ($generated@@296 ($generated@@138 ($generated@@266 $generated@@672) ($generated@@296 ($generated@@268 ($generated@@296 $generated@@673))) ($generated@@294 (- $generated@@674 1)))))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@266 $generated@@672) ($generated@@296 $generated@@673) ($generated@@294 $generated@@674)))
))))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@346 $generated@@175 $generated@@175)) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) $generated@@70)) ($generated@@153 $generated@@675 ($generated@@455 $generated@@676 $generated@@677))) (and (and ($generated@@153 ($generated@@344 $generated@@675) ($generated@@284 $generated@@676)) ($generated@@153 ($generated@@395 $generated@@675) ($generated@@284 $generated@@677))) ($generated@@153 ($generated@@429 $generated@@675) ($generated@@284 ($generated@@166 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@153 $generated@@675 ($generated@@455 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) ($generated@@364 $generated@@175 $generated@@175)) (= (type $generated@@679) $generated@@70)) (= (type $generated@@680) $generated@@70)) ($generated@@153 $generated@@678 ($generated@@463 $generated@@679 $generated@@680))) (and (and ($generated@@153 ($generated@@362 $generated@@678) ($generated@@289 $generated@@679)) ($generated@@153 ($generated@@406 $generated@@678) ($generated@@289 $generated@@680))) ($generated@@153 ($generated@@437 $generated@@678) ($generated@@289 ($generated@@166 $generated@@679 $generated@@680)))))
 :pattern ( ($generated@@153 $generated@@678 ($generated@@463 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@2) ($generated@@153 $generated@@681 $generated@@46))
 :pattern ( ($generated@@153 $generated@@681 $generated@@46))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@3) ($generated@@153 $generated@@682 $generated@@47))
 :pattern ( ($generated@@153 $generated@@682 $generated@@47))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@4) ($generated@@153 $generated@@683 $generated@@44))
 :pattern ( ($generated@@153 $generated@@683 $generated@@44))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@498) ($generated@@153 $generated@@684 $generated@@45))
 :pattern ( ($generated@@153 $generated@@684 $generated@@45))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@175) ($generated@@153 $generated@@685 $generated@@48))
 :pattern ( ($generated@@153 $generated@@685 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@686) $generated@@141) (= (type $generated@@689) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@693) $generated@@141)) (= (type $generated@@688) $generated@@141)) (= (type $generated@@691) ($generated@@190 $generated@@83 $generated@@4))) (= (type $generated@@692) $generated@@83)) (= (type $generated@@694) ($generated@@190 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@696  (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@161 ($generated@@266 ($generated@@266 $generated@@142)) ($generated@@138 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686 $generated@@687)) $generated@@687)) (=> (= ($generated@@161 ($generated@@266 ($generated@@266 $generated@@142)) ($generated@@138 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686 $generated@@687)) $generated@@687) (=> (= (ControlFlow 0 11) (- 0 10)) (= ($generated@@156 ($generated@@266 ($generated@@266 $generated@@142)) ($generated@@138 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686 $generated@@687)) $generated@@687))))))
(let (($generated@@697  (=> (not (= $generated@@687 ($generated@@294 0))) (and (=> (= (ControlFlow 0 14) (- 0 20)) ($generated@@316 $generated@@686)) (=> ($generated@@316 $generated@@686) (=> (and (= $generated@@688 ($generated@@268 $generated@@686)) ($generated@@80 $generated@@688 $generated@@158 $generated@@689)) (and (=> (= (ControlFlow 0 14) (- 0 19)) ($generated@@153 ($generated@@8 (- $generated@@687 1)) $generated@@150)) (=> ($generated@@153 ($generated@@8 (- $generated@@687 1)) $generated@@150) (=> (and (= $generated@@690 (- $generated@@687 1)) ($generated@@80 ($generated@@8 $generated@@690) $generated@@150 $generated@@689)) (and (=> (= (ControlFlow 0 14) (- 0 18)) (<= $generated@@690 ($generated@@156 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@688))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (<= $generated@@690 ($generated@@161 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@688))) (=> (and (<= $generated@@690 ($generated@@156 ($generated@@266 $generated@@142) $generated@@688)) (<= $generated@@690 ($generated@@161 ($generated@@266 $generated@@142) $generated@@688))) (and (=> (= (ControlFlow 0 14) (- 0 16)) (or (or (<= 0 $generated@@687) (< ($generated@@588 $generated@@688) ($generated@@588 $generated@@686))) (= $generated@@690 $generated@@687))) (=> (or (or (<= 0 $generated@@687) (< ($generated@@588 $generated@@688) ($generated@@588 $generated@@686))) (= $generated@@690 $generated@@687)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (or (< ($generated@@588 $generated@@688) ($generated@@588 $generated@@686)) (and (= ($generated@@588 $generated@@688) ($generated@@588 $generated@@686)) (< $generated@@690 $generated@@687)))) (=> (or (< ($generated@@588 $generated@@688) ($generated@@588 $generated@@686)) (and (= ($generated@@588 $generated@@688) ($generated@@588 $generated@@686)) (< $generated@@690 $generated@@687))) (=> ($generated@@308 ($generated@@268 $generated@@686) (- $generated@@687 1)) (=> (and (and (= ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687) ($generated@@309 ($generated@@138 ($generated@@266 $generated@@142) ($generated@@268 $generated@@686) (- $generated@@687 1)))) ($generated@@308 ($generated@@268 $generated@@686) (- $generated@@687 1))) (and ($generated@@153 ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687) $generated@@158) (= (ControlFlow 0 14) 11))) $generated@@696))))))))))))))))))
(let (($generated@@698  (=> (and (and (= $generated@@687 ($generated@@294 0)) (= ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687) ($generated@@296 $generated@@181))) (and ($generated@@153 ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687) $generated@@158) (= (ControlFlow 0 13) 11))) $generated@@696)))
(let (($generated@@699  (=> (= $generated@@691 ($generated@@244 $generated@@692 $generated@@689 $generated@@60 false)) (and (=> (= (ControlFlow 0 21) 13) $generated@@698) (=> (= (ControlFlow 0 21) 14) $generated@@697)))))
(let (($generated@@700  (=> ($generated@@153 ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687) $generated@@158) (=> (and ($generated@@80 $generated@@686 $generated@@158 $generated@@689) ($generated@@80 ($generated@@8 $generated@@687) $generated@@150 $generated@@689)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (<= $generated@@687 ($generated@@156 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= $generated@@687 ($generated@@161 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686))) (=> (and (<= $generated@@687 ($generated@@156 ($generated@@266 $generated@@142) $generated@@686)) (<= $generated@@687 ($generated@@161 ($generated@@266 $generated@@142) $generated@@686))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (or (<= 0 $generated@@687) (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686))) (= $generated@@687 $generated@@687))) (=> (or (or (<= 0 $generated@@687) (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686))) (= $generated@@687 $generated@@687)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (and (= $generated@@686 $generated@@686) (= $generated@@687 $generated@@687)) (or (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686)) (and (= ($generated@@588 $generated@@686) ($generated@@588 $generated@@686)) (< $generated@@687 $generated@@687))))) (=> (or (and (= $generated@@686 $generated@@686) (= $generated@@687 $generated@@687)) (or (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686)) (and (= ($generated@@588 $generated@@686) ($generated@@588 $generated@@686)) (< $generated@@687 $generated@@687)))) (=> (or (and (= $generated@@686 $generated@@686) (= $generated@@687 $generated@@687)) ($generated@@308 $generated@@686 $generated@@687)) (=> (and (= $generated@@693 ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687)) ($generated@@80 $generated@@693 $generated@@158 $generated@@689)) (=> (and (and ($generated@@162 ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687)) (= ($generated@@161 ($generated@@266 $generated@@142) ($generated@@138 ($generated@@266 $generated@@142) $generated@@686 $generated@@687)) $generated@@687)) (and ($generated@@80 $generated@@686 $generated@@158 $generated@@689) ($generated@@80 ($generated@@8 $generated@@687) $generated@@150 $generated@@689))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= $generated@@687 ($generated@@156 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@687 ($generated@@161 ($generated@@266 ($generated@@266 $generated@@142)) $generated@@686))) (=> (and (<= $generated@@687 ($generated@@156 ($generated@@266 $generated@@142) $generated@@686)) (<= $generated@@687 ($generated@@161 ($generated@@266 $generated@@142) $generated@@686))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@687) (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686))) (= $generated@@687 $generated@@687))) (=> (or (or (<= 0 $generated@@687) (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686))) (= $generated@@687 $generated@@687)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@686 $generated@@686) (= $generated@@687 $generated@@687)) (or (< ($generated@@588 $generated@@686) ($generated@@588 $generated@@686)) (and (= ($generated@@588 $generated@@686) ($generated@@588 $generated@@686)) (< $generated@@687 $generated@@687))))))))))))))))))))))))
(let (($generated@@701  (=> (= $generated@@694 ($generated@@189 $generated@@692 $generated@@689 $generated@@60 false)) (=> (and ($generated@@80 $generated@@686 $generated@@158 $generated@@689) ($generated@@157 $generated@@686)) (=> (and (and (<= $generated@@687 ($generated@@156 ($generated@@266 $generated@@142) $generated@@686)) ($generated@@80 $generated@@686 $generated@@158 $generated@@689)) (and ($generated@@162 $generated@@686) (<= $generated@@687 ($generated@@161 ($generated@@266 $generated@@142) $generated@@686)))) (and (=> (= (ControlFlow 0 22) 2) $generated@@700) (=> (= (ControlFlow 0 22) 21) $generated@@699)))))))
(let (($generated@@702  (=> (and ($generated@@264 $generated@@689) ($generated@@695 $generated@@689)) (=> (and (and ($generated@@153 $generated@@686 $generated@@158) (<= ($generated@@294 0) $generated@@687)) (and (= 2 $generated@@155) (= (ControlFlow 0 23) 22))) $generated@@701))))
$generated@@702))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
