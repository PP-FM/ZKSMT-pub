(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (Int) Bool)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@261 (T@T T@U) T@U)
(declare-fun $generated@@262 (Int) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@285 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@629 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@138) (or ($generated@@139 $generated@@143) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@143 ($generated@@141 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@143))
))))
(assert  (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@138) (= (type $generated@@150) $generated@@138)) (and ($generated@@145 $generated@@149) ($generated@@145 $generated@@150))) (= ($generated@@144 $generated@@149 $generated@@150) (= ($generated@@146 $generated@@149) ($generated@@146 $generated@@150))))
 :pattern ( ($generated@@144 $generated@@149 $generated@@150) ($generated@@145 $generated@@149))
 :pattern ( ($generated@@144 $generated@@149 $generated@@150) ($generated@@145 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@140 $generated@@151 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@151 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@68) (= (type $generated@@157) $generated@@68)) (= (type $generated@@158) $generated@@138)) ($generated@@140 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@140 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@147)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@147)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@138) (= (type $generated@@165) $generated@@138)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@138)))
(assert (= ($generated@@166 $generated@@167) $generated@@65))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@68)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@173) $generated@@68)) ($generated@@140 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@140 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@81 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@71 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@225) ($generated@@70 $generated@@4))) (= (type $generated@@227) $generated@@81)) (= (type $generated@@228) ($generated@@70 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@176 $generated@@81 $generated@@4))
 :pattern ( ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@71 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@81) (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@237) ($generated@@70 $generated@@4))) (= (type $generated@@239) $generated@@81)) (= (type $generated@@240) ($generated@@70 $generated@@241))) (= ($generated@@0 ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@244)) ($generated@@78 $generated@@167 ($generated@@141 $generated@@243) $generated@@244))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@141 $generated@@243) $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@138)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@147)) (= (type $generated@@252) $generated@@147)) (= ($generated@@140 ($generated@@245 $generated@@251 $generated@@252) ($generated@@153 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@140 ($generated@@245 $generated@@251 $generated@@252) ($generated@@153 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@68) ($generated@@140 $generated@@167 ($generated@@141 $generated@@253)))
 :pattern ( ($generated@@140 $generated@@167 ($generated@@141 $generated@@253)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@138) (= (type $generated@@255) $generated@@138)) (= ($generated@@159 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@159 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@138) (= (type $generated@@257) $generated@@138)) (= ($generated@@144 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@144 $generated@@256 $generated@@257))
)))
(assert  (and (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@258 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@258 $generated@@264))
)) (forall (($generated@@266 T@T) ($generated@@267 T@U) ) (! (= (type ($generated@@261 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@138) (or ($generated@@139 ($generated@@258 $generated@@268)) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@268 ($generated@@141 $generated@@46))))) (and (=> ($generated@@0 ($generated@@258 ($generated@@11 ($generated@@145 ($generated@@258 $generated@@268))))) ($generated@@259 ($generated@@260 ($generated ($generated@@261 $generated@@2 ($generated@@146 ($generated@@258 $generated@@268))))))) (= ($generated@@137 ($generated@@258 $generated@@268)) ($generated@@0 ($generated@@258 ($generated@@11  (and (=> ($generated@@145 ($generated@@258 $generated@@268)) ($generated@@262 ($generated@@260 ($generated ($generated@@261 $generated@@2 ($generated@@146 ($generated@@258 $generated@@268))))))) (=> ($generated@@263 ($generated@@258 $generated@@268)) true))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@258 $generated@@268)))
))))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@140 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@147) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@246 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@140 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@277) $generated@@68)) (= ($generated@@140 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@147) ($generated@@0 ($generated@@85 $generated@@276 $generated@@278))) ($generated@@246 $generated@@278 $generated@@277))
 :pattern ( ($generated@@85 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@140 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@260 $generated@@279) $generated@@279)
 :pattern ( ($generated@@260 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@258 $generated@@280) $generated@@280)
 :pattern ( ($generated@@258 $generated@@280))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@281 Int) ) (!  (=> (or ($generated@@259 $generated@@281) (not (= 0 $generated@@136))) (= ($generated@@262 $generated@@281)  (and (<= ($generated@@260 0) $generated@@281) (not (= $generated@@281 5)))))
 :pattern ( ($generated@@262 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@138) (= (type $generated@@283) $generated@@138)) (and ($generated@@263 $generated@@282) ($generated@@263 $generated@@283))) (= ($generated@@144 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@144 $generated@@282 $generated@@283) ($generated@@263 $generated@@282))
 :pattern ( ($generated@@144 $generated@@282 $generated@@283) ($generated@@263 $generated@@283))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@284 Int) ) (!  (=> (or ($generated@@259 $generated@@284) (not (= 0 $generated@@136))) true)
 :pattern ( ($generated@@262 $generated@@284))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) $generated@@68)) (= (type $generated@@288) $generated@@147)) (= (type $generated@@289) $generated@@147)) (= (type $generated@@290) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@290)) (= ($generated@@78 ($generated@@245 $generated@@288 $generated@@289) ($generated@@153 $generated@@286 $generated@@287) $generated@@290)  (and ($generated@@285 $generated@@288 $generated@@286 $generated@@290) ($generated@@285 $generated@@289 $generated@@287 $generated@@290))))
 :pattern ( ($generated@@78 ($generated@@245 $generated@@288 $generated@@289) ($generated@@153 $generated@@286 $generated@@287) $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@138) (= ($generated@@152 $generated@@291) (= ($generated@@166 $generated@@291) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@138) (= ($generated@@145 $generated@@292) (= ($generated@@166 $generated@@292) $generated@@63)))
 :pattern ( ($generated@@145 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@138) (= ($generated@@263 $generated@@293) (= ($generated@@166 $generated@@293) $generated@@65)))
 :pattern ( ($generated@@263 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@138) ($generated@@152 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@147) (= (type $generated@@296) $generated@@147)) (= $generated@@294 ($generated@@245 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@152 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@138) ($generated@@263 $generated@@305)) (= $generated@@305 $generated@@167))
 :pattern ( ($generated@@263 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@138)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@138) ($generated@@145 $generated@@308)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@147) (= $generated@@308 ($generated@@306 $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@145 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@147)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@285 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@285 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@315 Int) ) (!  (=> (or ($generated@@259 ($generated@@260 $generated@@315)) (not (= 0 $generated@@136))) (= ($generated@@262 ($generated@@260 $generated@@315))  (and (<= ($generated@@260 0) ($generated@@260 $generated@@315)) (not (= $generated@@315 5)))))
 :weight 3
 :pattern ( ($generated@@262 ($generated@@260 $generated@@315)))
))))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@73)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@68) (and (= ($generated@@76 ($generated@@141 $generated@@324)) $generated@@64) (= ($generated@@322 ($generated@@141 $generated@@324)) $generated@@67)))
 :pattern ( ($generated@@141 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 18)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@83 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@80 $generated@@362 $generated@@2)) (= ($generated@@170 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@85 $generated@@361 $generated@@363))) (<= ($generated ($generated@@85 $generated@@361 $generated@@363)) ($generated@@316 $generated@@361))))
 :pattern ( ($generated@@85 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@170 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@325 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@329 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@329 (type $generated@@371))))
(let (($generated@@373 ($generated@@328 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@327 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@326 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@347 (type $generated@@375))))
(let (($generated@@377 ($generated@@346 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@345 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@344 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@343 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@347 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@80 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(let (($generated@@384 ($generated@@346 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@345 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@344 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@387) $generated@@68)) (= ($generated@@140 $generated@@386 ($generated@@169 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@147) (< 0 ($generated ($generated@@85 $generated@@386 $generated@@388)))) ($generated@@246 $generated@@388 $generated@@387))
 :pattern ( ($generated@@85 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@140 $generated@@386 ($generated@@169 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) $generated@@68) (= (type $generated@@390) $generated@@147)) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@391)) (= ($generated@@78 ($generated@@306 $generated@@390) ($generated@@141 $generated@@389) $generated@@391) ($generated@@285 $generated@@390 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@78 ($generated@@306 $generated@@390) ($generated@@141 $generated@@389) $generated@@391))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@138) (or ($generated@@139 $generated@@392) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@392 ($generated@@141 $generated@@46))))) (and (=> ($generated@@145 $generated@@392) ($generated@@259 ($generated ($generated@@261 $generated@@2 ($generated@@146 $generated@@392))))) (= ($generated@@137 $generated@@392)  (and (=> ($generated@@145 $generated@@392) ($generated@@262 ($generated ($generated@@261 $generated@@2 ($generated@@146 $generated@@392))))) (=> ($generated@@263 $generated@@392) true)))))
 :pattern ( ($generated@@137 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@269 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@147) ($generated@@0 ($generated@@85 $generated@@393 $generated@@396))) ($generated@@285 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@85 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@269 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@274 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@85 $generated@@397 $generated@@400))) ($generated@@285 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@85 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@274 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@85 ($generated@@317 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@80 $generated@@147 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@329 (type $generated@@406))))
(let (($generated@@408 ($generated@@328 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@327 $generated@@147 $generated@@147)) (= (type $generated@@410) $generated@@147)) (= ($generated@@0 ($generated@@85 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@409) ($generated@@160 ($generated@@261 $generated@@138 $generated@@410)))) (= ($generated@@85 ($generated@@404 $generated@@409) ($generated@@160 ($generated@@261 $generated@@138 $generated@@410))) ($generated@@161 ($generated@@261 $generated@@138 $generated@@410))))))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@80 $generated@@147 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@347 (type $generated@@414))))
(let (($generated@@416 ($generated@@346 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@345 $generated@@147 $generated@@147)) (= (type $generated@@418) $generated@@147)) (= ($generated@@0 ($generated@@85 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@417) ($generated@@160 ($generated@@261 $generated@@138 $generated@@418)))) (= ($generated@@85 ($generated@@412 $generated@@417) ($generated@@160 ($generated@@261 $generated@@138 $generated@@418))) ($generated@@161 ($generated@@261 $generated@@138 $generated@@418))))))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@328 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@327 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@85 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@419) $generated@@423))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@346 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@345 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@68)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@327 $generated@@147 $generated@@147)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@432) $generated@@436))) (and ($generated@@285 ($generated@@85 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@285 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@68)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@345 $generated@@147 $generated@@147)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@440) $generated@@444))) (and ($generated@@285 ($generated@@85 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@285 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@445) $generated@@68) (= (type $generated@@446) $generated@@138)) ($generated@@140 $generated@@446 ($generated@@141 $generated@@445))) (or ($generated@@145 $generated@@446) ($generated@@263 $generated@@446)))
 :pattern ( ($generated@@263 $generated@@446) ($generated@@140 $generated@@446 ($generated@@141 $generated@@445)))
 :pattern ( ($generated@@145 $generated@@446) ($generated@@140 $generated@@446 ($generated@@141 $generated@@445)))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@80 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@347 (type $generated@@449))))
(let (($generated@@451 ($generated@@346 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@345 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@344 $generated@@451 $generated@@450)) (= ($generated@@343 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@343 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@347 (type $generated@@452))))
(let (($generated@@454 ($generated@@346 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@345 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@344 $generated@@454 $generated@@453)) (= ($generated@@379 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@379 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@347 (type $generated@@455))))
(let (($generated@@457 ($generated@@346 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@345 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@344 $generated@@457 $generated@@456)) (= ($generated@@411 $generated@@455) ($generated@@447 $generated@@147))))))
 :pattern ( ($generated@@411 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@329 (type $generated@@458))))
(let (($generated@@460 ($generated@@328 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@327 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@326 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@147) (= (type $generated@@462) $generated@@147)) ($generated@@0 ($generated@@85 ($generated@@403 $generated@@458) ($generated@@310 ($generated@@245 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@403 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@347 (type $generated@@463))))
(let (($generated@@465 ($generated@@346 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@345 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@344 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@147) (= (type $generated@@467) $generated@@147)) ($generated@@0 ($generated@@85 ($generated@@411 $generated@@463) ($generated@@310 ($generated@@245 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@411 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@147) ($generated@@246 $generated@@468 $generated@@46)) (and (= ($generated@@310 ($generated@@261 $generated@@2 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@261 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@147) ($generated@@246 $generated@@469 $generated@@47)) (and (= ($generated@@310 ($generated@@261 $generated@@3 $generated@@469)) $generated@@469) ($generated@@140 ($generated@@261 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@147) ($generated@@246 $generated@@470 $generated@@44)) (and (= ($generated@@310 ($generated@@261 $generated@@4 $generated@@470)) $generated@@470) ($generated@@140 ($generated@@261 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 20))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@147) ($generated@@246 $generated@@472 $generated@@45)) (and (= ($generated@@310 ($generated@@261 $generated@@471 $generated@@472)) $generated@@472) ($generated@@140 ($generated@@261 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@68) (= ($generated@@246 ($generated@@310 $generated@@473) $generated@@474) ($generated@@140 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@246 ($generated@@310 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@83 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@80 $generated@@476 $generated@@2)) (<= 0 ($generated@@316 $generated@@475))))
 :pattern ( ($generated@@316 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@300 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@299 $generated@@478)) (<= 0 ($generated@@298 $generated@@477))))
 :pattern ( ($generated@@298 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@429 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@429 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@76 ($generated@@429 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@437 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@437 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@437 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@76 ($generated@@437 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@147) (= (type $generated@@500) $generated@@147)) (= ($generated@@166 ($generated@@245 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@153 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@153 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@153 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@153 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@147) (= (type $generated@@510) $generated@@147)) (= ($generated@@160 ($generated@@245 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@245 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@147) (= (type $generated@@512) $generated@@147)) (= ($generated@@161 ($generated@@245 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@245 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@300 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@299 $generated@@147)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@298 $generated@@519))) ($generated@@285 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@79 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@79 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@269 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@269 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@274 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@274 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@274 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@169 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@169 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@169 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@147) (= ($generated@@166 ($generated@@306 $generated@@541)) $generated@@63))
 :pattern ( ($generated@@306 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@141 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@141 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@147) (= ($generated@@146 ($generated@@306 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@306 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@261 $generated@@547 ($generated@@310 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@310 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@327 $generated@@147 $generated@@147)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) (= ($generated@@140 $generated@@548 ($generated@@429 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@548) $generated@@551))) (and ($generated@@246 ($generated@@85 ($generated@@404 $generated@@548) $generated@@551) $generated@@550) ($generated@@246 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@429 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@345 $generated@@147 $generated@@147)) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) (= ($generated@@140 $generated@@552 ($generated@@437 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@552) $generated@@555))) (and ($generated@@246 ($generated@@85 ($generated@@412 $generated@@552) $generated@@555) $generated@@554) ($generated@@246 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@437 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@147)) (= ($generated@@140 ($generated@@306 $generated@@557) ($generated@@141 $generated@@556)) ($generated@@246 $generated@@557 $generated@@556)))
 :pattern ( ($generated@@140 ($generated@@306 $generated@@557) ($generated@@141 $generated@@556)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@147) (= (type $generated@@561) $generated@@147)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@245 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@245 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@147) (= (type $generated@@563) $generated@@147)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@245 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@147) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) ($generated@@246 $generated@@564 ($generated@@429 $generated@@565 $generated@@566))) (and (= ($generated@@310 ($generated@@261 ($generated@@327 $generated@@147 $generated@@147) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@261 ($generated@@327 $generated@@147 $generated@@147) $generated@@564) ($generated@@429 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@246 $generated@@564 ($generated@@429 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@147) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) $generated@@68)) ($generated@@246 $generated@@567 ($generated@@437 $generated@@568 $generated@@569))) (and (= ($generated@@310 ($generated@@261 ($generated@@345 $generated@@147 $generated@@147) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@261 ($generated@@345 $generated@@147 $generated@@147) $generated@@567) ($generated@@437 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@246 $generated@@567 ($generated@@437 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (= (type $generated@@572) $generated@@147)) ($generated@@246 $generated@@572 ($generated@@153 $generated@@570 $generated@@571))) (and (= ($generated@@310 ($generated@@261 $generated@@138 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@261 $generated@@138 $generated@@572) ($generated@@153 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@246 $generated@@572 ($generated@@153 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@147) (< ($generated@@558 $generated@@573) ($generated@@559 ($generated@@306 $generated@@573))))
 :pattern ( ($generated@@306 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@138) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@576) (and ($generated@@145 $generated@@574) ($generated@@78 $generated@@574 ($generated@@141 $generated@@575) $generated@@576)))) ($generated@@285 ($generated@@146 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@285 ($generated@@146 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (not ($generated@@0 ($generated@@85 ($generated@@447 $generated@@578) $generated@@577))))
 :pattern ( (let (($generated@@578 (type $generated@@577)))
($generated@@85 ($generated@@447 $generated@@578) $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@68) (= (type $generated@@580) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@579 $generated@@580)) $generated@@62) (= ($generated@@322 ($generated@@153 $generated@@579 $generated@@580)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@138) (= ($generated@@558 ($generated@@310 $generated@@581)) ($generated@@559 $generated@@581)))
 :pattern ( ($generated@@558 ($generated@@310 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@147) ($generated@@246 $generated@@582 ($generated@@79 0))) (and (= ($generated@@310 ($generated@@261 $generated@@2 $generated@@582)) $generated@@582) ($generated@@140 ($generated@@261 ($generated@@80 $generated@@147 $generated@@4) $generated@@582) ($generated@@79 0))))
 :pattern ( ($generated@@246 $generated@@582 ($generated@@79 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@147) (= (type $generated@@584) $generated@@68)) ($generated@@246 $generated@@583 ($generated@@269 $generated@@584))) (and (= ($generated@@310 ($generated@@261 ($generated@@80 $generated@@147 $generated@@4) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@261 ($generated@@80 $generated@@147 $generated@@4) $generated@@583) ($generated@@269 $generated@@584))))
 :pattern ( ($generated@@246 $generated@@583 ($generated@@269 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@147) (= (type $generated@@586) $generated@@68)) ($generated@@246 $generated@@585 ($generated@@274 $generated@@586))) (and (= ($generated@@310 ($generated@@261 ($generated@@80 $generated@@147 $generated@@4) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@261 ($generated@@80 $generated@@147 $generated@@4) $generated@@585) ($generated@@274 $generated@@586))))
 :pattern ( ($generated@@246 $generated@@585 ($generated@@274 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@147) (= (type $generated@@588) $generated@@68)) ($generated@@246 $generated@@587 ($generated@@169 $generated@@588))) (and (= ($generated@@310 ($generated@@261 ($generated@@80 $generated@@147 $generated@@2) $generated@@587)) $generated@@587) ($generated@@140 ($generated@@261 ($generated@@80 $generated@@147 $generated@@2) $generated@@587) ($generated@@169 $generated@@588))))
 :pattern ( ($generated@@246 $generated@@587 ($generated@@169 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@147) (= (type $generated@@590) $generated@@68)) ($generated@@246 $generated@@589 ($generated@@513 $generated@@590))) (and (= ($generated@@310 ($generated@@261 ($generated@@299 $generated@@147) $generated@@589)) $generated@@589) ($generated@@140 ($generated@@261 ($generated@@299 $generated@@147) $generated@@589) ($generated@@513 $generated@@590))))
 :pattern ( ($generated@@246 $generated@@589 ($generated@@513 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@147)) ($generated@@246 $generated@@592 ($generated@@141 $generated@@591))) (and (= ($generated@@310 ($generated@@261 $generated@@138 $generated@@592)) $generated@@592) ($generated@@140 ($generated@@261 $generated@@138 $generated@@592) ($generated@@141 $generated@@591))))
 :pattern ( ($generated@@246 $generated@@592 ($generated@@141 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@593 ($generated@@169 $generated@@594) $generated@@595) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@147) (< 0 ($generated ($generated@@85 $generated@@593 $generated@@596)))) ($generated@@285 $generated@@596 $generated@@594 $generated@@595))
 :pattern ( ($generated@@85 $generated@@593 $generated@@596))
))))
 :pattern ( ($generated@@78 $generated@@593 ($generated@@169 $generated@@594) $generated@@595))
)))
(assert (= $generated@@167 ($generated@@258 $generated@@167)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@138) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@599) (and ($generated@@152 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@68) ($generated@@78 $generated@@597 ($generated@@153 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@78 $generated@@597 ($generated@@153 $generated@@598 $generated@@600) $generated@@599))
))))) ($generated@@285 ($generated@@160 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@285 ($generated@@160 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@138) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@603) (and ($generated@@152 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@68) ($generated@@78 $generated@@601 ($generated@@153 $generated@@604 $generated@@602) $generated@@603))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@153 $generated@@604 $generated@@602) $generated@@603))
))))) ($generated@@285 ($generated@@161 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@285 ($generated@@161 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@147) (= (type $generated@@606) $generated@@147)) (= ($generated@@245 ($generated@@258 $generated@@605) ($generated@@258 $generated@@606)) ($generated@@258 ($generated@@245 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@245 ($generated@@258 $generated@@605) ($generated@@258 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@260 $generated@@607))) ($generated@@258 ($generated@@310 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@260 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@147) (= ($generated@@306 ($generated@@258 $generated@@608)) ($generated@@258 ($generated@@306 $generated@@608))))
 :pattern ( ($generated@@306 ($generated@@258 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (= ($generated@@310 ($generated@@258 $generated@@609)) ($generated@@258 ($generated@@310 $generated@@609)))
 :pattern ( ($generated@@310 ($generated@@258 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@300 (type $generated@@610))))
 (=> (and (= (type $generated@@610) ($generated@@299 $generated@@611)) (= ($generated@@298 $generated@@610) 0)) (= $generated@@610 ($generated@@297 $generated@@611))))
 :pattern ( ($generated@@298 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@613)))
 (=> (and (and (= (type $generated@@612) ($generated@@80 $generated@@615 $generated@@2)) (= (type $generated@@614) $generated@@2)) (<= 0 ($generated $generated@@614))) (= ($generated@@316 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)) (+ (- ($generated@@316 $generated@@612) ($generated ($generated@@85 $generated@@612 $generated@@613))) ($generated $generated@@614)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@612 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@2)) ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@3)) ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@4)) ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@471)) ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@147)) ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@48 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@299 $generated@@147)) (= (type $generated@@627) $generated@@68)) (= ($generated@@140 $generated@@626 ($generated@@513 $generated@@627)) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@298 $generated@@626))) ($generated@@246 ($generated@@514 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@514 $generated@@626 $generated@@628))
))))
 :pattern ( ($generated@@140 $generated@@626 ($generated@@513 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@299 $generated@@147)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@298 $generated@@630))) (< ($generated@@559 ($generated@@261 $generated@@138 ($generated@@514 $generated@@630 $generated@@631))) ($generated@@629 $generated@@630))))
 :pattern ( ($generated@@559 ($generated@@261 $generated@@138 ($generated@@514 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@327 $generated@@147 $generated@@147)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@140 $generated@@632 ($generated@@429 $generated@@633 $generated@@634))) (and (and ($generated@@140 ($generated@@325 $generated@@632) ($generated@@269 $generated@@633)) ($generated@@140 ($generated@@368 $generated@@632) ($generated@@269 $generated@@634))) ($generated@@140 ($generated@@403 $generated@@632) ($generated@@269 ($generated@@153 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@429 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@345 $generated@@147 $generated@@147)) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@140 $generated@@635 ($generated@@437 $generated@@636 $generated@@637))) (and (and ($generated@@140 ($generated@@343 $generated@@635) ($generated@@274 $generated@@636)) ($generated@@140 ($generated@@379 $generated@@635) ($generated@@274 $generated@@637))) ($generated@@140 ($generated@@411 $generated@@635) ($generated@@274 ($generated@@153 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@140 $generated@@635 ($generated@@437 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@140 $generated@@638 $generated@@46))
 :pattern ( ($generated@@140 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@140 $generated@@639 $generated@@47))
 :pattern ( ($generated@@140 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@140 $generated@@640 $generated@@44))
 :pattern ( ($generated@@140 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@471) ($generated@@140 $generated@@641 $generated@@45))
 :pattern ( ($generated@@140 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@147) ($generated@@140 $generated@@642 $generated@@48))
 :pattern ( ($generated@@140 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@643) $generated@@138) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) ($generated@@176 $generated@@81 $generated@@4))) (= (type $generated@@647) $generated@@81)) (= (type $generated@@648) ($generated@@176 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@650 true))
(let (($generated@@651  (=> (and (not ($generated@@263 $generated@@643)) (= (ControlFlow 0 5) 2)) $generated@@650)))
(let (($generated@@652  (=> (and ($generated@@263 $generated@@643) (= (ControlFlow 0 4) 2)) $generated@@650)))
(let (($generated@@653  (=> (=> ($generated@@145 $generated@@643) ($generated@@262 ($generated ($generated@@261 $generated@@2 ($generated@@146 $generated@@643))))) (and (=> (= (ControlFlow 0 6) 4) $generated@@652) (=> (= (ControlFlow 0 6) 5) $generated@@651)))))
(let (($generated@@654  (=> (and (not (=> ($generated@@145 $generated@@643) ($generated@@262 ($generated ($generated@@261 $generated@@2 ($generated@@146 $generated@@643)))))) (= (ControlFlow 0 3) 2)) $generated@@650)))
(let (($generated@@655  (=> (not ($generated@@145 $generated@@643)) (and (=> (= (ControlFlow 0 9) 6) $generated@@653) (=> (= (ControlFlow 0 9) 3) $generated@@654)))))
(let (($generated@@656  (=> ($generated@@145 $generated@@643) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@145 $generated@@643)) (=> ($generated@@145 $generated@@643) (=> (= $generated@@644 ($generated ($generated@@261 $generated@@2 ($generated@@146 $generated@@643)))) (=> (and ($generated@@78 ($generated@@8 $generated@@644) $generated@@46 $generated@@645) ($generated@@259 ($generated ($generated@@261 $generated@@2 ($generated@@146 $generated@@643))))) (and (=> (= (ControlFlow 0 7) 6) $generated@@653) (=> (= (ControlFlow 0 7) 3) $generated@@654)))))))))
(let (($generated@@657  (=> (= $generated@@646 ($generated@@230 $generated@@647 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 7) $generated@@656) (=> (= (ControlFlow 0 10) 9) $generated@@655)))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@648 ($generated@@175 $generated@@647 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@658) (=> (= (ControlFlow 0 11) 10) $generated@@657)))))
(let (($generated@@660  (=> (and (and (and ($generated@@242 $generated@@645) ($generated@@649 $generated@@645)) ($generated@@140 $generated@@643 ($generated@@141 $generated@@46))) (and (= 1 $generated@@136) (= (ControlFlow 0 12) 11))) $generated@@659)))
$generated@@660))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U Int) Bool)
(declare-fun $generated@@141 (T@U Int) Bool)
(declare-fun $generated@@142 (Int) Int)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@144 (Int) Bool)
(declare-fun $generated@@145 (Int) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U Int) Bool)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (Int) T@U)
(declare-fun $generated@@329 (T@U) Bool)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@605 (T@U Int) Bool)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= ($generated@@1 $generated@@135) 14))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (and (= (type $generated@@136) $generated@@135) (= (type $generated@@137) $generated@@135)) (= (type $generated@@138) $generated@@135)) (and ($generated@@134 $generated@@136 $generated@@137) ($generated@@134 $generated@@137 $generated@@138))) ($generated@@134 $generated@@136 $generated@@138))
 :pattern ( ($generated@@134 $generated@@136 $generated@@137) ($generated@@134 $generated@@137 $generated@@138))
 :pattern ( ($generated@@134 $generated@@136 $generated@@137) ($generated@@134 $generated@@136 $generated@@138))
)))
(assert  (=> (<= 3 $generated@@139) (forall (($generated@@146 T@U) ($generated@@147 Int) ) (!  (=> (and (= (type $generated@@146) $generated@@135) (or ($generated@@141 $generated@@146 $generated@@147) (and (not (= 3 $generated@@139)) (<= ($generated@@142 0) $generated@@147)))) (and (and (=> (< 0 ($generated@@143 $generated@@146)) ($generated@@144 $generated@@147)) (=> (=> (< 0 ($generated@@143 $generated@@146)) ($generated@@145 $generated@@147)) (=> (= ($generated@@142 0) ($generated@@143 $generated@@146)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@135) ($generated@@134 $generated@@148 $generated@@146)) ($generated@@141 $generated@@148 $generated@@147))
 :pattern ( ($generated@@140 $generated@@148 $generated@@147))
))))) (= ($generated@@140 $generated@@146 $generated@@147)  (and (=> (< 0 ($generated@@143 $generated@@146)) ($generated@@145 $generated@@147)) (=> (= ($generated@@142 0) ($generated@@143 $generated@@146)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@135) ($generated@@134 $generated@@149 $generated@@146)) ($generated@@140 $generated@@149 $generated@@147))
 :pattern ( ($generated@@140 $generated@@149 $generated@@147))
)))))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147))
))))
(assert (= (type $generated@@150) $generated@@66))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@154 Int) ) (!  (=> (and (<= ($generated@@142 0) $generated@@154) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@135) ($generated@@153 $generated@@155 $generated@@154))
 :pattern ( ($generated@@153 $generated@@155 $generated@@154))
))) ($generated@@145 $generated@@154))
 :pattern ( ($generated@@145 $generated@@154))
))))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@77 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@66) (= (type $generated@@164) $generated@@66)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@135)
 :pattern ( ($generated@@167 $generated@@169))
)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@135)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@160) (= (type $generated@@172) $generated@@160)) true) (= ($generated@@166 $generated@@171 $generated@@172)  (and (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)) (= ($generated@@168 $generated@@171) ($generated@@168 $generated@@172)))))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@66)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@78 $generated@@135 $generated@@2)) (= (type $generated@@177) $generated@@66)) ($generated@@156 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@156 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@79 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@69 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@79) (= (type $generated@@228) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@229) ($generated@@68 $generated@@4))) (= (type $generated@@231) $generated@@79)) (= (type $generated@@232) ($generated@@68 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@160)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@66) (= (type $generated@@239) $generated@@66)) (= (type $generated@@240) $generated@@135)) (= (type $generated@@241) $generated@@135)) (= ($generated@@156 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@156 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@160) (= (type $generated@@243) $generated@@160)) (= ($generated@@166 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@166 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@156 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@135) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@235 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@156 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@252) $generated@@66)) (= ($generated@@156 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@135) ($generated@@0 ($generated@@83 $generated@@251 $generated@@253))) ($generated@@235 $generated@@253 $generated@@252))
 :pattern ( ($generated@@83 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@156 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@142 $generated@@254) $generated@@254)
 :pattern ( ($generated@@142 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@135)) (= (type $generated@@264) $generated@@135)) (= (type $generated@@265) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@259 $generated@@265)) (= ($generated@@76 ($generated@@234 $generated@@263 $generated@@264) ($generated@@159 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@76 ($generated@@234 $generated@@263 $generated@@264) ($generated@@159 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@160) (= ($generated@@158 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@62)))
 :pattern ( ($generated@@158 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@160) ($generated@@158 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@135) (= (type $generated@@271) $generated@@135)) (= $generated@@269 ($generated@@234 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@158 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@2) (= ($generated@@156 $generated@@280 $generated@@150) (<= ($generated@@142 0) ($generated $generated@@280))))
 :pattern ( ($generated@@156 $generated@@280 $generated@@150))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@135)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@66) (= (type $generated@@285) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@260 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@76 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@260 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@78 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@81 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@78 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@83 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@78 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@78 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@330 Int) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@135)
 :pattern ( ($generated@@328 $generated@@330))
)))
(assert (forall (($generated@@331 Int) ) (!  (=> (<= 0 $generated@@331) (and ($generated@@329 ($generated@@328 $generated@@331)) (= ($generated@@143 ($generated@@328 $generated@@331)) $generated@@331)))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@81 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@78 $generated@@333 $generated@@2)) (= ($generated@@174 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@83 $generated@@332 $generated@@334))) (<= ($generated ($generated@@83 $generated@@332 $generated@@334)) ($generated@@286 $generated@@332))))
 :pattern ( ($generated@@83 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@174 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@135) ($generated@@235 $generated@@338 $generated@@150)) (and (= ($generated@@281 ($generated@@335 $generated@@2 $generated@@338)) $generated@@338) ($generated@@156 ($generated@@335 $generated@@2 $generated@@338) $generated@@150)))
 :pattern ( ($generated@@235 $generated@@338 $generated@@150))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@296 (type $generated@@339))))
(let (($generated@@341 ($generated@@295 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@294 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@293 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@292 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@296 (type $generated@@346))))
(let (($generated@@348 ($generated@@295 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@294 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@293 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@314 (type $generated@@350))))
(let (($generated@@352 ($generated@@313 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@312 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@311 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@310 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@78 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@314 (type $generated@@357))))
(let (($generated@@359 ($generated@@313 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@312 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@311 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@78 $generated@@135 $generated@@2)) (= (type $generated@@362) $generated@@66)) (= ($generated@@156 $generated@@361 ($generated@@173 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@135) (< 0 ($generated ($generated@@83 $generated@@361 $generated@@363)))) ($generated@@235 $generated@@363 $generated@@362))
 :pattern ( ($generated@@83 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@156 $generated@@361 ($generated@@173 $generated@@362)))
)))
(assert  (=> (<= 3 $generated@@139) (forall (($generated@@364 T@U) ($generated@@365 Int) ) (!  (=> (and (= (type $generated@@364) $generated@@135) (or ($generated@@141 ($generated@@255 $generated@@364) $generated@@365) (and (not (= 3 $generated@@139)) (<= ($generated@@142 0) $generated@@365)))) (and (and (=> (< 0 ($generated@@143 $generated@@364)) ($generated@@144 $generated@@365)) (=> (=> (< 0 ($generated@@143 $generated@@364)) ($generated@@145 $generated@@365)) (=> (= ($generated@@142 0) ($generated@@143 $generated@@364)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@135) ($generated@@134 $generated@@366 $generated@@364)) ($generated@@141 $generated@@366 $generated@@365))
 :pattern ( ($generated@@140 $generated@@366 $generated@@365))
))))) (= ($generated@@140 ($generated@@255 $generated@@364) $generated@@365)  (and (=> (< 0 ($generated@@143 $generated@@364)) ($generated@@145 $generated@@365)) (=> (= ($generated@@142 0) ($generated@@143 $generated@@364)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@135) ($generated@@134 $generated@@367 $generated@@364)) ($generated@@140 $generated@@367 $generated@@365))
 :pattern ( ($generated@@140 $generated@@367 $generated@@365))
)))))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@255 $generated@@364) $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@135) (= (type $generated@@369) $generated@@135)) (or (or ($generated@@134 $generated@@368 $generated@@369) (= $generated@@368 $generated@@369)) ($generated@@134 $generated@@369 $generated@@368)))
 :pattern ( ($generated@@134 $generated@@368 $generated@@369) ($generated@@134 $generated@@369 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@371) $generated@@66)) (= (type $generated@@372) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@370 ($generated@@244 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@135) ($generated@@0 ($generated@@83 $generated@@370 $generated@@373))) ($generated@@260 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@83 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@76 $generated@@370 ($generated@@244 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@375) $generated@@66)) (= (type $generated@@376) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@374 ($generated@@249 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@135) ($generated@@0 ($generated@@83 $generated@@374 $generated@@377))) ($generated@@260 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@83 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@76 $generated@@374 ($generated@@249 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@83 ($generated@@287 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@83 ($generated@@287 $generated@@379) $generated@@378)))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@380 Int) ) (!  (=> (or ($generated@@144 $generated@@380) (and (not (= 1 $generated@@139)) (<= ($generated@@142 0) $generated@@380))) true)
 :pattern ( ($generated@@145 $generated@@380))
))))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@135 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@296 (type $generated@@384))))
(let (($generated@@386 ($generated@@295 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@78 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@294 $generated@@135 $generated@@135)) (= (type $generated@@388) $generated@@135)) (= ($generated@@0 ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@387) ($generated@@167 ($generated@@335 $generated@@160 $generated@@388)))) (= ($generated@@83 ($generated@@382 $generated@@387) ($generated@@167 ($generated@@335 $generated@@160 $generated@@388))) ($generated@@168 ($generated@@335 $generated@@160 $generated@@388))))))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@135 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@135 $generated@@135)) (= (type $generated@@396) $generated@@135)) (= ($generated@@0 ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@395) ($generated@@167 ($generated@@335 $generated@@160 $generated@@396)))) (= ($generated@@83 ($generated@@390 $generated@@395) ($generated@@167 ($generated@@335 $generated@@160 $generated@@396))) ($generated@@168 ($generated@@335 $generated@@160 $generated@@396))))))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@295 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@294 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@83 ($generated@@343 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@313 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@312 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@83 ($generated@@354 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@66)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@294 $generated@@135 $generated@@135)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@410) $generated@@414))) (and ($generated@@260 ($generated@@83 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@260 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@66)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@135 $generated@@135)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@260 ($generated@@83 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@260 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert  (=> (<= 3 $generated@@139) (forall (($generated@@423 T@U) ($generated@@424 Int) ) (!  (=> (and (= (type $generated@@423) $generated@@135) (or ($generated@@141 ($generated@@255 $generated@@423) ($generated@@142 $generated@@424)) (and (not (= 3 $generated@@139)) (<= ($generated@@142 0) $generated@@424)))) (and (and (=> (< 0 ($generated@@143 $generated@@423)) ($generated@@144 $generated@@424)) (=> (=> (< 0 ($generated@@143 $generated@@423)) ($generated@@145 $generated@@424)) (=> (= ($generated@@142 0) ($generated@@143 $generated@@423)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@135) ($generated@@134 $generated@@425 $generated@@423)) ($generated@@141 $generated@@425 $generated@@424))
 :pattern ( ($generated@@140 $generated@@425 $generated@@424))
))))) (= ($generated@@140 ($generated@@255 $generated@@423) ($generated@@142 $generated@@424))  (and (=> (< 0 ($generated@@143 $generated@@423)) ($generated@@145 $generated@@424)) (=> (= ($generated@@142 0) ($generated@@143 $generated@@423)) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@135) ($generated@@134 $generated@@426 $generated@@423)) ($generated@@140 $generated@@426 $generated@@424))
 :pattern ( ($generated@@140 $generated@@426 $generated@@424))
)))))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@255 $generated@@423) ($generated@@142 $generated@@424)))
))))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@78 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@314 (type $generated@@429))))
(let (($generated@@431 ($generated@@313 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@312 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@311 $generated@@431 $generated@@430)) (= ($generated@@310 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@310 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@314 (type $generated@@432))))
(let (($generated@@434 ($generated@@313 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@312 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@311 $generated@@434 $generated@@433)) (= ($generated@@354 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@354 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@314 (type $generated@@435))))
(let (($generated@@437 ($generated@@313 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@312 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@311 $generated@@437 $generated@@436)) (= ($generated@@389 $generated@@435) ($generated@@427 $generated@@135))))))
 :pattern ( ($generated@@389 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@296 (type $generated@@438))))
(let (($generated@@440 ($generated@@295 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@294 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@293 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@135) (= (type $generated@@442) $generated@@135)) ($generated@@0 ($generated@@83 ($generated@@381 $generated@@438) ($generated@@281 ($generated@@234 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@381 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@314 (type $generated@@443))))
(let (($generated@@445 ($generated@@313 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@312 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@311 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@135) (= (type $generated@@447) $generated@@135)) ($generated@@0 ($generated@@83 ($generated@@389 $generated@@443) ($generated@@281 ($generated@@234 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@389 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@135) ($generated@@235 $generated@@448 $generated@@46)) (and (= ($generated@@281 ($generated@@335 $generated@@2 $generated@@448)) $generated@@448) ($generated@@156 ($generated@@335 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@135) ($generated@@235 $generated@@449 $generated@@47)) (and (= ($generated@@281 ($generated@@335 $generated@@3 $generated@@449)) $generated@@449) ($generated@@156 ($generated@@335 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@135) ($generated@@235 $generated@@450 $generated@@44)) (and (= ($generated@@281 ($generated@@335 $generated@@4 $generated@@450)) $generated@@450) ($generated@@156 ($generated@@335 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@135) ($generated@@235 $generated@@452 $generated@@45)) (and (= ($generated@@281 ($generated@@335 $generated@@451 $generated@@452)) $generated@@452) ($generated@@156 ($generated@@335 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@66) (= ($generated@@235 ($generated@@281 $generated@@453) $generated@@454) ($generated@@156 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@235 ($generated@@281 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@135) (<= 0 ($generated@@143 $generated@@455)))
 :pattern ( ($generated@@143 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@81 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@78 $generated@@457 $generated@@2)) (<= 0 ($generated@@286 $generated@@456))))
 :pattern ( ($generated@@286 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@275 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@274 $generated@@459)) (<= 0 ($generated@@273 $generated@@458))))
 :pattern ( ($generated@@273 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@407 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@407 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@74 ($generated@@407 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@415 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@74 ($generated@@415 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@135) (= (type $generated@@481) $generated@@135)) (= ($generated@@266 ($generated@@234 $generated@@480 $generated@@481)) $generated@@62))
 :pattern ( ($generated@@234 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@159 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@159 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@159 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@159 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@135) (= (type $generated@@491) $generated@@135)) (= ($generated@@167 ($generated@@234 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@234 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@135) (= (type $generated@@493) $generated@@135)) (= ($generated@@168 ($generated@@234 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@234 $generated@@492 $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@275 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@274 $generated@@135)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@273 $generated@@500))) ($generated@@260 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@77 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@77 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@244 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@249 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@249 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@249 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@173 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@173 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@173 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@74 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@335 $generated@@523 ($generated@@281 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@281 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@294 $generated@@135 $generated@@135)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@156 $generated@@524 ($generated@@407 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@524) $generated@@527))) (and ($generated@@235 ($generated@@83 ($generated@@382 $generated@@524) $generated@@527) $generated@@526) ($generated@@235 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@156 $generated@@524 ($generated@@407 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@312 $generated@@135 $generated@@135)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@156 $generated@@528 ($generated@@415 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@528) $generated@@531))) (and ($generated@@235 ($generated@@83 ($generated@@390 $generated@@528) $generated@@531) $generated@@530) ($generated@@235 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@156 $generated@@528 ($generated@@415 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@135) (= (type $generated@@533) $generated@@135)) (and (and (and (=> ($generated@@134 $generated@@532 $generated@@533) (not (= $generated@@532 $generated@@533))) (=> (and ($generated@@329 $generated@@532) (not ($generated@@329 $generated@@533))) ($generated@@134 $generated@@532 $generated@@533))) (=> (and ($generated@@329 $generated@@532) ($generated@@329 $generated@@533)) (= ($generated@@134 $generated@@532 $generated@@533) (< ($generated@@143 $generated@@532) ($generated@@143 $generated@@533))))) (=> (and ($generated@@134 $generated@@532 $generated@@533) ($generated@@329 $generated@@533)) ($generated@@329 $generated@@532))))
 :pattern ( ($generated@@134 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@135) (= (type $generated@@537) $generated@@135)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@234 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@234 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@135) (= (type $generated@@539) $generated@@135)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@234 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@135) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@66)) ($generated@@235 $generated@@540 ($generated@@407 $generated@@541 $generated@@542))) (and (= ($generated@@281 ($generated@@335 ($generated@@294 $generated@@135 $generated@@135) $generated@@540)) $generated@@540) ($generated@@156 ($generated@@335 ($generated@@294 $generated@@135 $generated@@135) $generated@@540) ($generated@@407 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@235 $generated@@540 ($generated@@407 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@135) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) $generated@@66)) ($generated@@235 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@281 ($generated@@335 ($generated@@312 $generated@@135 $generated@@135) $generated@@543)) $generated@@543) ($generated@@156 ($generated@@335 ($generated@@312 $generated@@135 $generated@@135) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@235 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) $generated@@135)) ($generated@@235 $generated@@548 ($generated@@159 $generated@@546 $generated@@547))) (and (= ($generated@@281 ($generated@@335 $generated@@160 $generated@@548)) $generated@@548) ($generated@@156 ($generated@@335 $generated@@160 $generated@@548) ($generated@@159 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@235 $generated@@548 ($generated@@159 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@83 ($generated@@427 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@83 ($generated@@427 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@71)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (and (= ($generated@@74 ($generated@@159 $generated@@553 $generated@@554)) $generated@@63) (= ($generated@@551 ($generated@@159 $generated@@553 $generated@@554)) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@160) (= ($generated@@534 ($generated@@281 $generated@@555)) ($generated@@535 $generated@@555)))
 :pattern ( ($generated@@534 ($generated@@281 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@135) ($generated@@235 $generated@@556 ($generated@@77 0))) (and (= ($generated@@281 ($generated@@335 $generated@@2 $generated@@556)) $generated@@556) ($generated@@156 ($generated@@335 ($generated@@78 $generated@@135 $generated@@4) $generated@@556) ($generated@@77 0))))
 :pattern ( ($generated@@235 $generated@@556 ($generated@@77 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@135) (= (type $generated@@558) $generated@@66)) ($generated@@235 $generated@@557 ($generated@@244 $generated@@558))) (and (= ($generated@@281 ($generated@@335 ($generated@@78 $generated@@135 $generated@@4) $generated@@557)) $generated@@557) ($generated@@156 ($generated@@335 ($generated@@78 $generated@@135 $generated@@4) $generated@@557) ($generated@@244 $generated@@558))))
 :pattern ( ($generated@@235 $generated@@557 ($generated@@244 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@135) (= (type $generated@@560) $generated@@66)) ($generated@@235 $generated@@559 ($generated@@249 $generated@@560))) (and (= ($generated@@281 ($generated@@335 ($generated@@78 $generated@@135 $generated@@4) $generated@@559)) $generated@@559) ($generated@@156 ($generated@@335 ($generated@@78 $generated@@135 $generated@@4) $generated@@559) ($generated@@249 $generated@@560))))
 :pattern ( ($generated@@235 $generated@@559 ($generated@@249 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@135) (= (type $generated@@562) $generated@@66)) ($generated@@235 $generated@@561 ($generated@@173 $generated@@562))) (and (= ($generated@@281 ($generated@@335 ($generated@@78 $generated@@135 $generated@@2) $generated@@561)) $generated@@561) ($generated@@156 ($generated@@335 ($generated@@78 $generated@@135 $generated@@2) $generated@@561) ($generated@@173 $generated@@562))))
 :pattern ( ($generated@@235 $generated@@561 ($generated@@173 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@135) (= (type $generated@@564) $generated@@66)) ($generated@@235 $generated@@563 ($generated@@494 $generated@@564))) (and (= ($generated@@281 ($generated@@335 ($generated@@274 $generated@@135) $generated@@563)) $generated@@563) ($generated@@156 ($generated@@335 ($generated@@274 $generated@@135) $generated@@563) ($generated@@494 $generated@@564))))
 :pattern ( ($generated@@235 $generated@@563 ($generated@@494 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@135) ($generated@@329 $generated@@565)) (= $generated@@565 ($generated@@328 ($generated@@143 $generated@@565))))
 :pattern ( ($generated@@143 $generated@@565))
 :pattern ( ($generated@@329 $generated@@565))
)))
(assert (= ($generated@@74 $generated@@150) $generated@@61))
(assert (= ($generated@@551 $generated@@150) $generated@@64))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@135 $generated@@2)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@566 ($generated@@173 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@135) (< 0 ($generated ($generated@@83 $generated@@566 $generated@@569)))) ($generated@@260 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@83 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@76 $generated@@566 ($generated@@173 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@160) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@572) (and ($generated@@158 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@66) ($generated@@76 $generated@@570 ($generated@@159 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@76 $generated@@570 ($generated@@159 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@260 ($generated@@167 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@260 ($generated@@167 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@160) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@576) (and ($generated@@158 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@66) ($generated@@76 $generated@@574 ($generated@@159 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@76 $generated@@574 ($generated@@159 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@260 ($generated@@168 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@260 ($generated@@168 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@135) (= (type $generated@@579) $generated@@135)) (= ($generated@@234 ($generated@@255 $generated@@578) ($generated@@255 $generated@@579)) ($generated@@255 ($generated@@234 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@234 ($generated@@255 $generated@@578) ($generated@@255 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@281 ($generated@@8 ($generated@@142 $generated@@580))) ($generated@@255 ($generated@@281 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@281 ($generated@@8 ($generated@@142 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@281 ($generated@@255 $generated@@581)) ($generated@@255 ($generated@@281 $generated@@581)))
 :pattern ( ($generated@@281 ($generated@@255 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@275 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@274 $generated@@583)) (= ($generated@@273 $generated@@582) 0)) (= $generated@@582 ($generated@@272 $generated@@583))))
 :pattern ( ($generated@@273 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@286 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@286 $generated@@584) ($generated ($generated@@83 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@286 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@588 Int) ($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@135) (=> (and (<= ($generated@@142 0) $generated@@588) (= $generated@@589 ($generated@@328 0))) ($generated@@153 $generated@@589 $generated@@588)))
 :pattern ( ($generated@@153 $generated@@589 $generated@@588))
))))
(assert  (=> (<= 3 $generated@@139) (forall (($generated@@590 Int) ($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@135) (=> (and (<= ($generated@@142 0) $generated@@590) (= $generated@@591 ($generated@@328 0))) ($generated@@140 $generated@@591 $generated@@590)))
 :pattern ( ($generated@@140 $generated@@591 $generated@@590))
))))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@2)) ($generated@@76 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@3)) ($generated@@76 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@4)) ($generated@@76 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@76 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@599) $generated@@451)) ($generated@@76 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@76 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@601) $generated@@135)) ($generated@@76 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@76 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@274 $generated@@135)) (= (type $generated@@603) $generated@@66)) (= ($generated@@156 $generated@@602 ($generated@@494 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@273 $generated@@602))) ($generated@@235 ($generated@@495 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@495 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@156 $generated@@602 ($generated@@494 $generated@@603)))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (and (= (type $generated@@606) $generated@@135) (or ($generated@@605 $generated@@606 $generated@@607) (and (not (= 2 $generated@@139)) (<= ($generated@@142 0) $generated@@607)))) true)
 :pattern ( ($generated@@153 $generated@@606 $generated@@607))
))))
(assert  (=> (<= 3 $generated@@139) (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (and (= (type $generated@@608) $generated@@135) (or ($generated@@141 $generated@@608 $generated@@609) (and (not (= 3 $generated@@139)) (<= ($generated@@142 0) $generated@@609)))) true)
 :pattern ( ($generated@@140 $generated@@608 $generated@@609))
))))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@610 Int) ) (!  (=> (and (<= ($generated@@142 0) $generated@@610) ($generated@@145 $generated@@610)) (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@135) ($generated@@153 $generated@@611 $generated@@610))
 :pattern ( ($generated@@153 $generated@@611 $generated@@610))
)))
 :pattern ( ($generated@@145 $generated@@610))
))))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@274 $generated@@135)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@273 $generated@@613))) (< ($generated@@535 ($generated@@335 $generated@@160 ($generated@@495 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@535 ($generated@@335 $generated@@160 ($generated@@495 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@294 $generated@@135 $generated@@135)) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) $generated@@66)) ($generated@@156 $generated@@615 ($generated@@407 $generated@@616 $generated@@617))) (and (and ($generated@@156 ($generated@@292 $generated@@615) ($generated@@244 $generated@@616)) ($generated@@156 ($generated@@343 $generated@@615) ($generated@@244 $generated@@617))) ($generated@@156 ($generated@@381 $generated@@615) ($generated@@244 ($generated@@159 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@156 $generated@@615 ($generated@@407 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@312 $generated@@135 $generated@@135)) (= (type $generated@@619) $generated@@66)) (= (type $generated@@620) $generated@@66)) ($generated@@156 $generated@@618 ($generated@@415 $generated@@619 $generated@@620))) (and (and ($generated@@156 ($generated@@310 $generated@@618) ($generated@@249 $generated@@619)) ($generated@@156 ($generated@@354 $generated@@618) ($generated@@249 $generated@@620))) ($generated@@156 ($generated@@389 $generated@@618) ($generated@@249 ($generated@@159 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@156 $generated@@618 ($generated@@415 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@156 $generated@@621 $generated@@46))
 :pattern ( ($generated@@156 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@156 $generated@@622 $generated@@47))
 :pattern ( ($generated@@156 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@156 $generated@@623 $generated@@44))
 :pattern ( ($generated@@156 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@451) ($generated@@156 $generated@@624 $generated@@45))
 :pattern ( ($generated@@156 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@135) ($generated@@156 $generated@@625 $generated@@48))
 :pattern ( ($generated@@156 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@626) $generated@@135) (= (type $generated@@627) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@630) ($generated@@180 $generated@@79 $generated@@4))) (= (type $generated@@631) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@633  (=> ($generated@@76 $generated@@626 $generated@@48 $generated@@627) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@156 ($generated@@8 (ite (< $generated@@628 0) 0 $generated@@628)) $generated@@150)) (=> ($generated@@156 ($generated@@8 (ite (< $generated@@628 0) 0 $generated@@628)) $generated@@150) (=> (= $generated@@629 (ite (< $generated@@628 0) 0 $generated@@628)) (=> (and ($generated@@76 ($generated@@8 $generated@@629) $generated@@150 $generated@@627) ($generated@@141 $generated@@626 (ite (< $generated@@628 0) 0 $generated@@628))) (=> (and (and ($generated@@141 $generated@@626 (ite (< $generated@@628 0) 0 $generated@@628)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 $generated@@626 (ite (< $generated@@628 0) 0 $generated@@628))) ($generated@@140 $generated@@626 (ite (< $generated@@628 0) 0 $generated@@628))))))))))
(let (($generated@@634  (=> (and (<= 0 $generated@@628) (= (ControlFlow 0 5) 2)) $generated@@633)))
(let (($generated@@635  (=> (and (< $generated@@628 0) (= (ControlFlow 0 4) 2)) $generated@@633)))
(let (($generated@@636  (=> (= $generated@@630 ($generated@@179 $generated@@631 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@635) (=> (= (ControlFlow 0 6) 5) $generated@@634)))))
(let (($generated@@637  (=> (and (and (and ($generated@@259 $generated@@627) ($generated@@632 $generated@@627)) (= 4 $generated@@139)) (and (forall (($generated@@638 Int) ) (!  (=> (<= ($generated@@142 0) $generated@@638) ($generated@@140 $generated@@626 $generated@@638))
 :pattern ( ($generated@@140 $generated@@626 $generated@@638))
)) (= (ControlFlow 0 7) 6))) $generated@@636)))
$generated@@637))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (Int) Bool)
(declare-fun $generated@@275 (Int) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@T T@U) T@U)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 (T@U Int) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@633 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@138) (or ($generated@@139 $generated@@143) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@143 ($generated@@141 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@143))
))))
(assert  (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@138) (= (type $generated@@150) $generated@@138)) (and ($generated@@145 $generated@@149) ($generated@@145 $generated@@150))) (= ($generated@@144 $generated@@149 $generated@@150) (= ($generated@@146 $generated@@149) ($generated@@146 $generated@@150))))
 :pattern ( ($generated@@144 $generated@@149 $generated@@150) ($generated@@145 $generated@@149))
 :pattern ( ($generated@@144 $generated@@149 $generated@@150) ($generated@@145 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@140 $generated@@151 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@151 ($generated@@79 0)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@68) (= (type $generated@@157) $generated@@68)) (= (type $generated@@158) $generated@@138)) ($generated@@140 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@140 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@147)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@147)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@138) (= (type $generated@@165) $generated@@138)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@138)))
(assert (= ($generated@@166 $generated@@167) $generated@@65))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@68)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@173) $generated@@68)) ($generated@@140 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@140 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@81 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@71 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@225) ($generated@@70 $generated@@4))) (= (type $generated@@227) $generated@@81)) (= (type $generated@@228) ($generated@@70 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@176 $generated@@81 $generated@@4))
 :pattern ( ($generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@71 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@81) (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@237) ($generated@@70 $generated@@4))) (= (type $generated@@239) $generated@@81)) (= (type $generated@@240) ($generated@@70 $generated@@241))) (= ($generated@@0 ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@174 ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@244)) ($generated@@78 $generated@@167 ($generated@@141 $generated@@243) $generated@@244))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@141 $generated@@243) $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@138)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@147)) (= (type $generated@@252) $generated@@147)) (= ($generated@@140 ($generated@@245 $generated@@251 $generated@@252) ($generated@@153 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@140 ($generated@@245 $generated@@251 $generated@@252) ($generated@@153 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@68) ($generated@@140 $generated@@167 ($generated@@141 $generated@@253)))
 :pattern ( ($generated@@140 $generated@@167 ($generated@@141 $generated@@253)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@138) (= (type $generated@@255) $generated@@138)) (= ($generated@@159 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@159 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@138) (= (type $generated@@257) $generated@@138)) (= ($generated@@144 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@144 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@68)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@261) $generated@@68)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@0 ($generated@@85 $generated@@260 $generated@@262))) ($generated@@246 $generated@@262 $generated@@261))
 :pattern ( ($generated@@85 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@266) $generated@@68)) (= ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@147) ($generated@@0 ($generated@@85 $generated@@265 $generated@@267))) ($generated@@246 $generated@@267 $generated@@266))
 :pattern ( ($generated@@85 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@276 Int) ) (!  (=> (or ($generated@@275 $generated@@276) (not (= 0 $generated@@136))) (= ($generated@@274 $generated@@276)  (and (<= ($generated@@268 0) $generated@@276) (not (= $generated@@276 5)))))
 :pattern ( ($generated@@274 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@138) (= (type $generated@@279) $generated@@138)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@144 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@144 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@144 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@280 Int) ) (!  (=> (or ($generated@@275 $generated@@280) (not (= 0 $generated@@136))) true)
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) $generated@@68)) (= (type $generated@@284) $generated@@147)) (= (type $generated@@285) $generated@@147)) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@286)) (= ($generated@@78 ($generated@@245 $generated@@284 $generated@@285) ($generated@@153 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@78 ($generated@@245 $generated@@284 $generated@@285) ($generated@@153 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@138) (= ($generated@@152 $generated@@287) (= ($generated@@166 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@138) (= ($generated@@145 $generated@@288) (= ($generated@@166 $generated@@288) $generated@@63)))
 :pattern ( ($generated@@145 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@138) (= ($generated@@277 $generated@@289) (= ($generated@@166 $generated@@289) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@289))
)))
(assert (forall (($generated@@291 T@T) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@138) (or ($generated@@139 ($generated@@270 $generated@@293)) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@293 ($generated@@141 $generated@@46))))) (and (=> ($generated@@0 ($generated@@270 ($generated@@11 ($generated@@145 ($generated@@270 $generated@@293))))) (let (($generated@@294 ($generated@@268 ($generated ($generated@@290 $generated@@2 ($generated@@146 ($generated@@270 $generated@@293)))))))
($generated@@275 $generated@@294))) (= ($generated@@137 ($generated@@270 $generated@@293)) (ite ($generated@@145 ($generated@@270 $generated@@293)) ($generated@@0 (let (($generated@@295 ($generated@@268 ($generated ($generated@@290 $generated@@2 ($generated@@146 ($generated@@270 $generated@@293)))))))
($generated@@270 ($generated@@11 ($generated@@274 $generated@@295))))) true))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@270 $generated@@293)))
))))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@138) ($generated@@152 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@147) (= (type $generated@@298) $generated@@147)) (= $generated@@296 ($generated@@245 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@152 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 17)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@138) ($generated@@277 $generated@@307)) (= $generated@@307 $generated@@167))
 :pattern ( ($generated@@277 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@138)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@138) ($generated@@145 $generated@@310)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@147) (= $generated@@310 ($generated@@308 $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@145 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@147)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@281 ($generated@@312 $generated@@314) $generated@@315 $generated@@316) ($generated@@78 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@281 ($generated@@312 $generated@@314) $generated@@315 $generated@@316))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@317 Int) ) (!  (=> (or ($generated@@275 ($generated@@268 $generated@@317)) (not (= 0 $generated@@136))) (= ($generated@@274 ($generated@@268 $generated@@317))  (and (<= ($generated@@268 0) ($generated@@268 $generated@@317)) (not (= $generated@@317 5)))))
 :weight 3
 :pattern ( ($generated@@274 ($generated@@268 $generated@@317)))
))))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@80 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@83 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@80 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@85 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@73)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@68) (and (= ($generated@@76 ($generated@@141 $generated@@326)) $generated@@64) (= ($generated@@324 ($generated@@141 $generated@@326)) $generated@@67)))
 :pattern ( ($generated@@141 $generated@@326))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 18)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@80 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@83 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@80 $generated@@364 $generated@@2)) (= ($generated@@170 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@85 $generated@@363 $generated@@365))) (<= ($generated ($generated@@85 $generated@@363 $generated@@365)) ($generated@@318 $generated@@363))))
 :pattern ( ($generated@@85 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@170 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@140 $generated@@388 ($generated@@169 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@147) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@246 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@140 $generated@@388 ($generated@@169 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) $generated@@68) (= (type $generated@@392) $generated@@147)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@393)) (= ($generated@@78 ($generated@@308 $generated@@392) ($generated@@141 $generated@@391) $generated@@393) ($generated@@281 $generated@@392 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@78 ($generated@@308 $generated@@392) ($generated@@141 $generated@@391) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@394 ($generated@@258 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@147) ($generated@@0 ($generated@@85 $generated@@394 $generated@@397))) ($generated@@281 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@85 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@258 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@80 $generated@@147 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@398 ($generated@@263 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@147) ($generated@@0 ($generated@@85 $generated@@398 $generated@@401))) ($generated@@281 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@85 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@263 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@85 ($generated@@319 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@85 ($generated@@319 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@147 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@331 (type $generated@@407))))
(let (($generated@@409 ($generated@@330 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@80 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@329 $generated@@147 $generated@@147)) (= (type $generated@@411) $generated@@147)) (= ($generated@@0 ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@410) ($generated@@160 ($generated@@290 $generated@@138 $generated@@411)))) (= ($generated@@85 ($generated@@405 $generated@@410) ($generated@@160 ($generated@@290 $generated@@138 $generated@@411))) ($generated@@161 ($generated@@290 $generated@@138 $generated@@411))))))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@147 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@349 (type $generated@@415))))
(let (($generated@@417 ($generated@@348 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@347 $generated@@147 $generated@@147)) (= (type $generated@@419) $generated@@147)) (= ($generated@@0 ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@418) ($generated@@160 ($generated@@290 $generated@@138 $generated@@419)))) (= ($generated@@85 ($generated@@413 $generated@@418) ($generated@@160 ($generated@@290 $generated@@138 $generated@@419))) ($generated@@161 ($generated@@290 $generated@@138 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@330 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@329 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@85 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@348 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@347 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@85 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@329 $generated@@147 $generated@@147)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@433) $generated@@437))) (and ($generated@@281 ($generated@@85 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@281 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@347 $generated@@147 $generated@@147)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@441) $generated@@445))) (and ($generated@@281 ($generated@@85 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@281 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) $generated@@68) (= (type $generated@@447) $generated@@138)) ($generated@@140 $generated@@447 ($generated@@141 $generated@@446))) (or ($generated@@145 $generated@@447) ($generated@@277 $generated@@447)))
 :pattern ( ($generated@@277 $generated@@447) ($generated@@140 $generated@@447 ($generated@@141 $generated@@446)))
 :pattern ( ($generated@@145 $generated@@447) ($generated@@140 $generated@@447 ($generated@@141 $generated@@446)))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@80 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@349 (type $generated@@450))))
(let (($generated@@452 ($generated@@348 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@347 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@346 $generated@@452 $generated@@451)) (= ($generated@@345 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@345 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@349 (type $generated@@453))))
(let (($generated@@455 ($generated@@348 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@347 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@346 $generated@@455 $generated@@454)) (= ($generated@@381 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@381 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@349 (type $generated@@456))))
(let (($generated@@458 ($generated@@348 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@347 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@346 $generated@@458 $generated@@457)) (= ($generated@@412 $generated@@456) ($generated@@448 $generated@@147))))))
 :pattern ( ($generated@@412 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@331 (type $generated@@459))))
(let (($generated@@461 ($generated@@330 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@329 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@328 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@147) (= (type $generated@@463) $generated@@147)) ($generated@@0 ($generated@@85 ($generated@@404 $generated@@459) ($generated@@312 ($generated@@245 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@404 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@349 (type $generated@@464))))
(let (($generated@@466 ($generated@@348 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@347 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@346 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@147) (= (type $generated@@468) $generated@@147)) ($generated@@0 ($generated@@85 ($generated@@412 $generated@@464) ($generated@@312 ($generated@@245 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@412 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@147) ($generated@@246 $generated@@469 $generated@@46)) (and (= ($generated@@312 ($generated@@290 $generated@@2 $generated@@469)) $generated@@469) ($generated@@140 ($generated@@290 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@147) ($generated@@246 $generated@@470 $generated@@47)) (and (= ($generated@@312 ($generated@@290 $generated@@3 $generated@@470)) $generated@@470) ($generated@@140 ($generated@@290 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@147) ($generated@@246 $generated@@471 $generated@@44)) (and (= ($generated@@312 ($generated@@290 $generated@@4 $generated@@471)) $generated@@471) ($generated@@140 ($generated@@290 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 20))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) ($generated@@246 $generated@@473 $generated@@45)) (and (= ($generated@@312 ($generated@@290 $generated@@472 $generated@@473)) $generated@@473) ($generated@@140 ($generated@@290 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@68) (= ($generated@@246 ($generated@@312 $generated@@474) $generated@@475) ($generated@@140 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@246 ($generated@@312 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@83 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@80 $generated@@477 $generated@@2)) (<= 0 ($generated@@318 $generated@@476))))
 :pattern ( ($generated@@318 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@302 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@301 $generated@@479)) (<= 0 ($generated@@300 $generated@@478))))
 :pattern ( ($generated@@300 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@430 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@430 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@430 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@76 ($generated@@430 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@438 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@438 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@438 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@76 ($generated@@438 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@147) (= (type $generated@@501) $generated@@147)) (= ($generated@@166 ($generated@@245 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@153 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@153 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@153 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@153 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@147) (= (type $generated@@511) $generated@@147)) (= ($generated@@160 ($generated@@245 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@245 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@147) (= (type $generated@@513) $generated@@147)) (= ($generated@@161 ($generated@@245 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@245 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@516))
)) (forall (($generated@@517 T@U) ($generated@@518 Int) ) (! (let (($generated@@519 ($generated@@302 (type $generated@@517))))
(= (type ($generated@@515 $generated@@517 $generated@@518)) $generated@@519))
 :pattern ( ($generated@@515 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@301 $generated@@147)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@514 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@300 $generated@@520))) ($generated@@281 ($generated@@515 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@515 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@258 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@258 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@258 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@263 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@263 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@263 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@169 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@169 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@169 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@514 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@514 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@514 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@514 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@166 ($generated@@308 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@308 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@141 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@141 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@147) (= ($generated@@146 ($generated@@308 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@308 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@290 $generated@@548 ($generated@@312 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@312 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@329 $generated@@147 $generated@@147)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) (= ($generated@@140 $generated@@549 ($generated@@430 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@549) $generated@@552))) (and ($generated@@246 ($generated@@85 ($generated@@405 $generated@@549) $generated@@552) $generated@@551) ($generated@@246 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@140 $generated@@549 ($generated@@430 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@347 $generated@@147 $generated@@147)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) (= ($generated@@140 $generated@@553 ($generated@@438 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@553) $generated@@556))) (and ($generated@@246 ($generated@@85 ($generated@@413 $generated@@553) $generated@@556) $generated@@555) ($generated@@246 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@553) $generated@@556))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@140 $generated@@553 ($generated@@438 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@147)) (= ($generated@@140 ($generated@@308 $generated@@558) ($generated@@141 $generated@@557)) ($generated@@246 $generated@@558 $generated@@557)))
 :pattern ( ($generated@@140 ($generated@@308 $generated@@558) ($generated@@141 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@147)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@245 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@245 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@147) (= (type $generated@@564) $generated@@147)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@245 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@245 $generated@@563 $generated@@564))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@138) (or ($generated@@139 $generated@@565) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@565 ($generated@@141 $generated@@46))))) (and (=> ($generated@@145 $generated@@565) (let (($generated@@566 ($generated ($generated@@290 $generated@@2 ($generated@@146 $generated@@565)))))
($generated@@275 $generated@@566))) (= ($generated@@137 $generated@@565) (ite ($generated@@145 $generated@@565) (let (($generated@@567 ($generated ($generated@@290 $generated@@2 ($generated@@146 $generated@@565)))))
($generated@@274 $generated@@567)) true))))
 :pattern ( ($generated@@137 $generated@@565))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@147) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) ($generated@@246 $generated@@568 ($generated@@430 $generated@@569 $generated@@570))) (and (= ($generated@@312 ($generated@@290 ($generated@@329 $generated@@147 $generated@@147) $generated@@568)) $generated@@568) ($generated@@140 ($generated@@290 ($generated@@329 $generated@@147 $generated@@147) $generated@@568) ($generated@@430 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@246 $generated@@568 ($generated@@430 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@147) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@246 $generated@@571 ($generated@@438 $generated@@572 $generated@@573))) (and (= ($generated@@312 ($generated@@290 ($generated@@347 $generated@@147 $generated@@147) $generated@@571)) $generated@@571) ($generated@@140 ($generated@@290 ($generated@@347 $generated@@147 $generated@@147) $generated@@571) ($generated@@438 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@246 $generated@@571 ($generated@@438 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@147)) ($generated@@246 $generated@@576 ($generated@@153 $generated@@574 $generated@@575))) (and (= ($generated@@312 ($generated@@290 $generated@@138 $generated@@576)) $generated@@576) ($generated@@140 ($generated@@290 $generated@@138 $generated@@576) ($generated@@153 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@246 $generated@@576 ($generated@@153 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@147) (< ($generated@@559 $generated@@577) ($generated@@560 ($generated@@308 $generated@@577))))
 :pattern ( ($generated@@308 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@138) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@580) (and ($generated@@145 $generated@@578) ($generated@@78 $generated@@578 ($generated@@141 $generated@@579) $generated@@580)))) ($generated@@281 ($generated@@146 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@281 ($generated@@146 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@85 ($generated@@448 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@85 ($generated@@448 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@68) (= (type $generated@@584) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@583 $generated@@584)) $generated@@62) (= ($generated@@324 ($generated@@153 $generated@@583 $generated@@584)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@138) (= ($generated@@559 ($generated@@312 $generated@@585)) ($generated@@560 $generated@@585)))
 :pattern ( ($generated@@559 ($generated@@312 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) ($generated@@246 $generated@@586 ($generated@@79 0))) (and (= ($generated@@312 ($generated@@290 $generated@@2 $generated@@586)) $generated@@586) ($generated@@140 ($generated@@290 ($generated@@80 $generated@@147 $generated@@4) $generated@@586) ($generated@@79 0))))
 :pattern ( ($generated@@246 $generated@@586 ($generated@@79 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@147) (= (type $generated@@588) $generated@@68)) ($generated@@246 $generated@@587 ($generated@@258 $generated@@588))) (and (= ($generated@@312 ($generated@@290 ($generated@@80 $generated@@147 $generated@@4) $generated@@587)) $generated@@587) ($generated@@140 ($generated@@290 ($generated@@80 $generated@@147 $generated@@4) $generated@@587) ($generated@@258 $generated@@588))))
 :pattern ( ($generated@@246 $generated@@587 ($generated@@258 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@147) (= (type $generated@@590) $generated@@68)) ($generated@@246 $generated@@589 ($generated@@263 $generated@@590))) (and (= ($generated@@312 ($generated@@290 ($generated@@80 $generated@@147 $generated@@4) $generated@@589)) $generated@@589) ($generated@@140 ($generated@@290 ($generated@@80 $generated@@147 $generated@@4) $generated@@589) ($generated@@263 $generated@@590))))
 :pattern ( ($generated@@246 $generated@@589 ($generated@@263 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@147) (= (type $generated@@592) $generated@@68)) ($generated@@246 $generated@@591 ($generated@@169 $generated@@592))) (and (= ($generated@@312 ($generated@@290 ($generated@@80 $generated@@147 $generated@@2) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@290 ($generated@@80 $generated@@147 $generated@@2) $generated@@591) ($generated@@169 $generated@@592))))
 :pattern ( ($generated@@246 $generated@@591 ($generated@@169 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@147) (= (type $generated@@594) $generated@@68)) ($generated@@246 $generated@@593 ($generated@@514 $generated@@594))) (and (= ($generated@@312 ($generated@@290 ($generated@@301 $generated@@147) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@290 ($generated@@301 $generated@@147) $generated@@593) ($generated@@514 $generated@@594))))
 :pattern ( ($generated@@246 $generated@@593 ($generated@@514 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@68) (= (type $generated@@596) $generated@@147)) ($generated@@246 $generated@@596 ($generated@@141 $generated@@595))) (and (= ($generated@@312 ($generated@@290 $generated@@138 $generated@@596)) $generated@@596) ($generated@@140 ($generated@@290 $generated@@138 $generated@@596) ($generated@@141 $generated@@595))))
 :pattern ( ($generated@@246 $generated@@596 ($generated@@141 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@80 $generated@@147 $generated@@2)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@597 ($generated@@169 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@147) (< 0 ($generated ($generated@@85 $generated@@597 $generated@@600)))) ($generated@@281 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@85 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@78 $generated@@597 ($generated@@169 $generated@@598) $generated@@599))
)))
(assert (= $generated@@167 ($generated@@270 $generated@@167)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@138) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@603) (and ($generated@@152 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@68) ($generated@@78 $generated@@601 ($generated@@153 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@153 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@281 ($generated@@160 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@281 ($generated@@160 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@138) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@607) (and ($generated@@152 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@153 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@153 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@281 ($generated@@161 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@281 ($generated@@161 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@147) (= (type $generated@@610) $generated@@147)) (= ($generated@@245 ($generated@@270 $generated@@609) ($generated@@270 $generated@@610)) ($generated@@270 ($generated@@245 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@245 ($generated@@270 $generated@@609) ($generated@@270 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@268 $generated@@611))) ($generated@@270 ($generated@@312 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@268 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@147) (= ($generated@@308 ($generated@@270 $generated@@612)) ($generated@@270 ($generated@@308 $generated@@612))))
 :pattern ( ($generated@@308 ($generated@@270 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@312 ($generated@@270 $generated@@613)) ($generated@@270 ($generated@@312 $generated@@613)))
 :pattern ( ($generated@@312 ($generated@@270 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@302 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@301 $generated@@615)) (= ($generated@@300 $generated@@614) 0)) (= $generated@@614 ($generated@@299 $generated@@615))))
 :pattern ( ($generated@@300 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@80 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@318 ($generated@@86 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@318 $generated@@616) ($generated ($generated@@85 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@318 ($generated@@86 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@2)) ($generated@@78 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@3)) ($generated@@78 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@4)) ($generated@@78 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@472)) ($generated@@78 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@147)) ($generated@@78 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@78 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@301 $generated@@147)) (= (type $generated@@631) $generated@@68)) (= ($generated@@140 $generated@@630 ($generated@@514 $generated@@631)) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@300 $generated@@630))) ($generated@@246 ($generated@@515 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@515 $generated@@630 $generated@@632))
))))
 :pattern ( ($generated@@140 $generated@@630 ($generated@@514 $generated@@631)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (= (type $generated@@634) ($generated@@301 $generated@@147)) (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@300 $generated@@634))) (< ($generated@@560 ($generated@@290 $generated@@138 ($generated@@515 $generated@@634 $generated@@635))) ($generated@@633 $generated@@634))))
 :pattern ( ($generated@@560 ($generated@@290 $generated@@138 ($generated@@515 $generated@@634 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@329 $generated@@147 $generated@@147)) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) $generated@@68)) ($generated@@140 $generated@@636 ($generated@@430 $generated@@637 $generated@@638))) (and (and ($generated@@140 ($generated@@327 $generated@@636) ($generated@@258 $generated@@637)) ($generated@@140 ($generated@@370 $generated@@636) ($generated@@258 $generated@@638))) ($generated@@140 ($generated@@404 $generated@@636) ($generated@@258 ($generated@@153 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@140 $generated@@636 ($generated@@430 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@347 $generated@@147 $generated@@147)) (= (type $generated@@640) $generated@@68)) (= (type $generated@@641) $generated@@68)) ($generated@@140 $generated@@639 ($generated@@438 $generated@@640 $generated@@641))) (and (and ($generated@@140 ($generated@@345 $generated@@639) ($generated@@263 $generated@@640)) ($generated@@140 ($generated@@381 $generated@@639) ($generated@@263 $generated@@641))) ($generated@@140 ($generated@@412 $generated@@639) ($generated@@263 ($generated@@153 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@140 $generated@@639 ($generated@@438 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@2) ($generated@@140 $generated@@642 $generated@@46))
 :pattern ( ($generated@@140 $generated@@642 $generated@@46))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@3) ($generated@@140 $generated@@643 $generated@@47))
 :pattern ( ($generated@@140 $generated@@643 $generated@@47))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@4) ($generated@@140 $generated@@644 $generated@@44))
 :pattern ( ($generated@@140 $generated@@644 $generated@@44))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@472) ($generated@@140 $generated@@645 $generated@@45))
 :pattern ( ($generated@@140 $generated@@645 $generated@@45))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@147) ($generated@@140 $generated@@646 $generated@@48))
 :pattern ( ($generated@@140 $generated@@646 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@647) $generated@@138) (= (type $generated@@648) ($generated@@176 $generated@@81 $generated@@4))) (= (type $generated@@649) $generated@@81)) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) ($generated@@176 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@653 true))
(let (($generated@@654  (=> (and ($generated@@145 $generated@@647) (= (ControlFlow 0 3) (- 0 2))) ($generated@@145 $generated@@647))))
(let (($generated@@655  (=> (= $generated@@648 ($generated@@230 $generated@@649 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@654) (=> (= (ControlFlow 0 5) 4) $generated@@653)))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@175 $generated@@649 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@656) (=> (= (ControlFlow 0 6) 5) $generated@@655)))))
(let (($generated@@658  (=> (and (and (and ($generated@@242 $generated@@650) ($generated@@652 $generated@@650)) ($generated@@140 $generated@@647 ($generated@@141 $generated@@46))) (and (= 1 $generated@@136) (= (ControlFlow 0 7) 6))) $generated@@657)))
$generated@@658)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 (T@U Int) T@U)
(declare-fun $generated@@160 (Int) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@381 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) Bool)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@418 (T@U) Int)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@480 (T@T) T@U)
(declare-fun $generated@@504 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 () T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@695 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@91 $generated@@92)) 12))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@81 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@81 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@81 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@70 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@83) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@70 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= (type ($generated@@78 $generated@@135 $generated@@136)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@135 $generated@@136))
))) (= (type $generated@@79) $generated@@67)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@80) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@139)) (= ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139)  (and ($generated@@77 ($generated@@8 $generated@@137) $generated@@46 $generated@@139) ($generated@@77 $generated@@138 $generated@@79 $generated@@139))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@141 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@80)) (= (type $generated@@146) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 Int) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
)))
(assert (= ($generated@@1 $generated@@152) 16))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@152) (= (type $generated@@154) $generated@@152)) (= (type $generated@@155) $generated@@152)) (and ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))) ($generated@@151 $generated@@153 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@147 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@147 0)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@80)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (and (= (type $generated@@163) $generated@@142) (or ($generated@@160 $generated@@164) (not (= 1 $generated@@158)))) ($generated@@156 ($generated@@159 $generated@@163 $generated@@164) $generated@@79))
 :pattern ( ($generated@@159 $generated@@163 $generated@@164))
))))
(assert  (and (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@168 $generated@@169)) $generated@@152)
 :pattern ( ($generated@@165 $generated@@168 $generated@@169))
)) (forall (($generated@@170 Int) ) (! (= (type ($generated@@166 $generated@@170)) $generated@@152)
 :pattern ( ($generated@@166 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 Int) ) (!  (=> (= (type $generated@@171) $generated@@152) (=> (and (and (<= 0 $generated@@172) (<= 0 $generated@@173)) (<= (+ $generated@@172 $generated@@173) ($generated@@167 $generated@@171))) (= ($generated@@165 ($generated@@165 $generated@@171 ($generated@@166 $generated@@172)) ($generated@@166 $generated@@173)) ($generated@@165 $generated@@171 ($generated@@166 (+ $generated@@172 $generated@@173))))))
 :pattern ( ($generated@@165 ($generated@@165 $generated@@171 ($generated@@166 $generated@@172)) ($generated@@166 $generated@@173)))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@142) (or ($generated@@160 $generated@@175) (not (= 1 $generated@@158)))) (and ($generated@@160 (+ $generated@@175 1)) (= ($generated@@159 ($generated@@141 $generated@@174) $generated@@175) ($generated@@78 $generated@@175 ($generated@@159 $generated@@174 (+ $generated@@175 1))))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@174) $generated@@175))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@80)) ($generated@@156 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@156 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@152)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@152)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@80) (= (type $generated@@189) $generated@@80)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@156 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@156 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@82 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@82) (= (type $generated@@245) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@246) ($generated@@69 $generated@@4))) (= (type $generated@@248) $generated@@82)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@80)) (= (type $generated@@254) $generated@@80)) (forall (($generated@@255 Int) ) (!  (=> (<= 0 $generated@@255) ($generated@@251 ($generated@@166 $generated@@255) ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
 :pattern ( ($generated@@251 ($generated@@166 $generated@@255) ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
))) ($generated@@140 ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@80) ($generated@@156 $generated@@257 $generated@@79)) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@256 $generated@@257) ($generated@@156 $generated@@257 $generated@@79))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@80)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@67) (= (type $generated@@263) $generated@@67)) (= (type $generated@@264) $generated@@152)) (= (type $generated@@265) $generated@@152)) (= ($generated@@156 ($generated@@258 $generated@@264 $generated@@265) ($generated@@177 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@156 ($generated@@258 $generated@@264 $generated@@265) ($generated@@177 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@80) (= (type $generated@@267) $generated@@80)) (= ($generated@@183 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@183 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@152) (= (type $generated@@269) $generated@@142)) (= (type $generated@@270) $generated@@80)) (= (type $generated@@271) $generated@@80)) (= (type $generated@@272) $generated@@152)) (and ($generated@@151 $generated@@268 $generated@@272) ($generated@@251 $generated@@272 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))) ($generated@@251 $generated@@268 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))
 :pattern ( ($generated@@251 $generated@@268 ($generated@@141 $generated@@269) $generated@@270 $generated@@271) ($generated@@251 $generated@@272 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@67)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@276) $generated@@67)) (= ($generated@@156 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@152) ($generated@@0 ($generated@@87 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@156 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@67)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@281) $generated@@67)) (= ($generated@@156 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@152) ($generated@@0 ($generated@@87 $generated@@280 $generated@@282))) ($generated@@259 $generated@@282 $generated@@281))
 :pattern ( ($generated@@87 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@156 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@67)) (= (type $generated@@292) $generated@@152)) (= (type $generated@@293) $generated@@152)) (= (type $generated@@294) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@294)) (= ($generated@@77 ($generated@@258 $generated@@292 $generated@@293) ($generated@@177 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@77 ($generated@@258 $generated@@292 $generated@@293) ($generated@@177 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@71)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@80) (= ($generated@@176 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@80) (= ($generated@@256 $generated@@298) (= ($generated@@295 $generated@@298) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@298))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@300) $generated@@142) (= (type $generated@@301) $generated@@80)) (= (type $generated@@302) $generated@@152)) (and ($generated@@156 $generated@@301 $generated@@79) (= $generated@@302 ($generated@@166 0)))) ($generated@@299 $generated@@300 $generated@@302 $generated@@301))
 :pattern ( ($generated@@299 $generated@@300 $generated@@302 $generated@@301))
))))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@80) ($generated@@176 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@152) (= (type $generated@@305) $generated@@152)) (= $generated@@303 ($generated@@258 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@176 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@80) ($generated@@256 $generated@@306)) (exists (($generated@@307 Int) ($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@80) (= $generated@@306 ($generated@@78 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@256 $generated@@306))
)))
(assert  (and (and (forall (($generated@@313 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@313)) 18)) (forall (($generated@@314 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@311 $generated@@314))
))) (forall (($generated@@315 T@T) ) (! (= (type ($generated@@309 $generated@@315)) ($generated@@311 $generated@@315))
 :pattern ( ($generated@@309 $generated@@315))
))))
(assert (forall (($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@316)) 0)
 :pattern ( ($generated@@309 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) $generated@@152) (= (type $generated@@318) $generated@@142)) (= (type $generated@@319) $generated@@80)) (= (type $generated@@320) $generated@@80)) (not (= $generated@@317 ($generated@@166 0)))) (= ($generated@@251 $generated@@317 ($generated@@141 $generated@@318) $generated@@319 $generated@@320) ($generated@@251 $generated@@317 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@251 $generated@@317 ($generated@@141 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@142) (= (type $generated@@322) $generated@@80)) (= (type $generated@@323) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@321) $generated@@322 $generated@@323) ($generated@@140 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) $generated@@142) (= (type $generated@@325) $generated@@152)) (= (type $generated@@326) $generated@@80)) (= ($generated@@299 ($generated@@141 $generated@@324) $generated@@325 $generated@@326) ($generated@@299 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@152)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@67) (= (type $generated@@331) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@289 ($generated@@327 $generated@@329) $generated@@330 $generated@@331) ($generated@@77 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@289 ($generated@@327 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= (type ($generated@@333 $generated@@334)) ($generated@@81 $generated@@334 $generated@@2))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@85 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@81 $generated@@336 $generated@@2)) (and (= (= ($generated@@332 $generated@@335) 0) (= $generated@@335 ($generated@@333 $generated@@336))) (=> (not (= ($generated@@332 $generated@@335) 0)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) (< 0 ($generated ($generated@@87 $generated@@335 $generated@@337))))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@81 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 20)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@152) (= (type $generated@@376) $generated@@152)) (and ($generated@@374 $generated@@376) (<= ($generated@@167 $generated@@376) ($generated@@167 $generated@@375)))) (and (= ($generated@@374 ($generated@@165 $generated@@375 $generated@@376)) ($generated@@374 $generated@@375)) (= ($generated@@167 ($generated@@165 $generated@@375 $generated@@376)) (- ($generated@@167 $generated@@375) ($generated@@167 $generated@@376)))))
 :pattern ( ($generated@@165 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 Int) ) (!  (=> (<= 0 $generated@@377) (and ($generated@@374 ($generated@@166 $generated@@377)) (= ($generated@@167 ($generated@@166 $generated@@377)) $generated@@377)))
 :pattern ( ($generated@@166 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@85 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@81 $generated@@379 $generated@@2)) (= ($generated@@191 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@87 $generated@@378 $generated@@380))) (<= ($generated ($generated@@87 $generated@@378 $generated@@380)) ($generated@@332 $generated@@378))))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@191 $generated@@378))
)))
(assert (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@152) ($generated@@259 $generated@@384 $generated@@79)) (and (= ($generated@@327 ($generated@@381 $generated@@80 $generated@@384)) $generated@@384) ($generated@@156 ($generated@@381 $generated@@80 $generated@@384) $generated@@79)))
 :pattern ( ($generated@@259 $generated@@384 $generated@@79))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) $generated@@142) (= (type $generated@@387) $generated@@152)) (= (type $generated@@388) $generated@@80)) (or ($generated@@385 $generated@@387 $generated@@388) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@388 $generated@@79)))) true)
 :pattern ( ($generated@@299 $generated@@386 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@142) (= (type $generated@@390) $generated@@80)) (= (type $generated@@391) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@389) $generated@@390 $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@152) ($generated@@251 $generated@@392 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
 :pattern ( ($generated@@251 $generated@@392 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@342 (type $generated@@393))))
(let (($generated@@395 ($generated@@341 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@340 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@339 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@338 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@342 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@81 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@342 (type $generated@@400))))
(let (($generated@@402 ($generated@@341 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@340 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@339 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@360 (type $generated@@404))))
(let (($generated@@406 ($generated@@359 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@358 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@357 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@356 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@360 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@81 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@360 (type $generated@@411))))
(let (($generated@@413 ($generated@@359 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@358 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@357 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@87 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@416) $generated@@67)) (= ($generated@@156 $generated@@415 ($generated@@190 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@415 $generated@@417)))) ($generated@@259 $generated@@417 $generated@@416))
 :pattern ( ($generated@@87 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@156 $generated@@415 ($generated@@190 $generated@@416)))
)))
(assert (forall (($generated@@420 T@U) ) (! (= (type ($generated@@419 $generated@@420)) $generated@@80)
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@142) (= (type $generated@@422) $generated@@152)) (= (type $generated@@423) $generated@@80)) (or ($generated@@385 $generated@@422 $generated@@423) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@423 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@422)) (and ($generated@@256 $generated@@423) (=> (> ($generated@@418 $generated@@423) 0) (and ($generated@@256 $generated@@423) ($generated@@385 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))))) (=> (=> (< 0 ($generated@@167 $generated@@422)) (and (> ($generated@@418 $generated@@423) 0) ($generated@@299 $generated@@421 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@422)) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@151 $generated@@424 $generated@@422)) ($generated@@385 $generated@@424 $generated@@423))
 :pattern ( ($generated@@299 $generated@@421 $generated@@424 $generated@@423))
))))) (= ($generated@@299 ($generated@@141 $generated@@421) $generated@@422 $generated@@423)  (and (=> (< 0 ($generated@@167 $generated@@422)) (and (> ($generated@@418 $generated@@423) 0) ($generated@@299 $generated@@421 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@422)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@151 $generated@@425 $generated@@422)) ($generated@@299 $generated@@421 $generated@@425 $generated@@423))
 :pattern ( ($generated@@299 $generated@@421 $generated@@425 $generated@@423))
)))))))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@421) $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) (= (type $generated@@427) $generated@@152)) (or (or ($generated@@151 $generated@@426 $generated@@427) (= $generated@@426 $generated@@427)) ($generated@@151 $generated@@427 $generated@@426)))
 :pattern ( ($generated@@151 $generated@@426 $generated@@427) ($generated@@151 $generated@@427 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@428 ($generated@@273 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@0 ($generated@@87 $generated@@428 $generated@@431))) ($generated@@289 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@87 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@77 $generated@@428 ($generated@@273 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@432 ($generated@@278 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@0 ($generated@@87 $generated@@432 $generated@@435))) ($generated@@289 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@87 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@278 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@87 ($generated@@333 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@87 ($generated@@333 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@342 (type $generated@@441))))
(let (($generated@@443 ($generated@@341 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@81 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@445) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@444) ($generated@@184 ($generated@@381 $generated@@80 $generated@@445)))) (= ($generated@@87 ($generated@@439 $generated@@444) ($generated@@184 ($generated@@381 $generated@@80 $generated@@445))) ($generated@@185 ($generated@@381 $generated@@80 $generated@@445))))))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@360 (type $generated@@449))))
(let (($generated@@451 ($generated@@359 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@81 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@453) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@452) ($generated@@184 ($generated@@381 $generated@@80 $generated@@453)))) (= ($generated@@87 ($generated@@447 $generated@@452) ($generated@@184 ($generated@@381 $generated@@80 $generated@@453))) ($generated@@185 ($generated@@381 $generated@@80 $generated@@453))))))
 :pattern ( ($generated@@87 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@341 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@87 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@454) $generated@@458))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@359 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@358 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@87 ($generated@@408 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@87 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@459) $generated@@463))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@468) $generated@@67)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@467) $generated@@471))) (and ($generated@@289 ($generated@@87 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@289 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@77 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@476) $generated@@67)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@475) $generated@@479))) (and ($generated@@289 ($generated@@87 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@289 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 T@T) ) (! (= (type ($generated@@480 $generated@@481)) ($generated@@81 $generated@@481 $generated@@4))
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@360 (type $generated@@482))))
(let (($generated@@484 ($generated@@359 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@358 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@357 $generated@@484 $generated@@483)) (= ($generated@@356 $generated@@482) ($generated@@480 $generated@@484))))))
 :pattern ( ($generated@@356 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@360 (type $generated@@485))))
(let (($generated@@487 ($generated@@359 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@358 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@357 $generated@@487 $generated@@486)) (= ($generated@@408 $generated@@485) ($generated@@480 $generated@@486))))))
 :pattern ( ($generated@@408 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@360 (type $generated@@488))))
(let (($generated@@490 ($generated@@359 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@358 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@357 $generated@@490 $generated@@489)) (= ($generated@@446 $generated@@488) ($generated@@480 $generated@@152))))))
 :pattern ( ($generated@@446 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@342 (type $generated@@491))))
(let (($generated@@493 ($generated@@341 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@340 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@339 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@152) (= (type $generated@@495) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@438 $generated@@491) ($generated@@327 ($generated@@258 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@438 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@360 (type $generated@@496))))
(let (($generated@@498 ($generated@@359 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@358 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@357 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@152) (= (type $generated@@500) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@446 $generated@@496) ($generated@@327 ($generated@@258 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@446 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@152) ($generated@@259 $generated@@501 $generated@@46)) (and (= ($generated@@327 ($generated@@381 $generated@@2 $generated@@501)) $generated@@501) ($generated@@156 ($generated@@381 $generated@@2 $generated@@501) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@501 $generated@@46))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@259 $generated@@502 $generated@@47)) (and (= ($generated@@327 ($generated@@381 $generated@@3 $generated@@502)) $generated@@502) ($generated@@156 ($generated@@381 $generated@@3 $generated@@502) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@502 $generated@@47))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@259 $generated@@503 $generated@@44)) (and (= ($generated@@327 ($generated@@381 $generated@@4 $generated@@503)) $generated@@503) ($generated@@156 ($generated@@381 $generated@@4 $generated@@503) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@503 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@504) 21))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@259 $generated@@505 $generated@@45)) (and (= ($generated@@327 ($generated@@381 $generated@@504 $generated@@505)) $generated@@505) ($generated@@156 ($generated@@381 $generated@@504 $generated@@505) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@505 $generated@@45))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@259 ($generated@@327 $generated@@506) $generated@@507) ($generated@@156 $generated@@506 $generated@@507)))
 :pattern ( ($generated@@259 ($generated@@327 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@152) (<= 0 ($generated@@167 $generated@@508)))
 :pattern ( ($generated@@167 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@85 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@81 $generated@@510 $generated@@2)) (<= 0 ($generated@@332 $generated@@509))))
 :pattern ( ($generated@@332 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@312 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@311 $generated@@512)) (<= 0 ($generated@@310 $generated@@511))))
 :pattern ( ($generated@@310 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@464 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@464 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@67) (= (type $generated@@520) $generated@@67)) (= ($generated@@517 ($generated@@464 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@464 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@75 ($generated@@464 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@472 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@472 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (= ($generated@@527 ($generated@@472 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@472 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= ($generated@@75 ($generated@@472 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@152)) (= ($generated@@295 ($generated@@258 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@177 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@177 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@67) (= (type $generated@@542) $generated@@67)) (= ($generated@@539 ($generated@@177 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@177 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@152)) (= ($generated@@184 ($generated@@258 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@258 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@152) (= (type $generated@@546) $generated@@152)) (= ($generated@@185 ($generated@@258 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@258 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@80) (= ($generated@@295 ($generated@@78 $generated@@547 $generated@@548)) $generated@@63))
 :pattern ( ($generated@@78 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 Int) ($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@80) (= ($generated@@418 ($generated@@78 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@78 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 Int) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@80) (= ($generated@@419 ($generated@@78 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@78 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@142)
 :pattern ( ($generated@@553 $generated@@555))
)) (= (type $generated@@554) $generated@@142)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) $generated@@142) (= ($generated@@159 $generated@@556 $generated@@557) ($generated@@159 $generated@@554 $generated@@557)))
 :pattern ( ($generated@@159 ($generated@@553 $generated@@556) $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@312 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@561 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@311 $generated@@152)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@564 ($generated@@558 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@310 $generated@@564))) ($generated@@289 ($generated@@559 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@559 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@77 $generated@@564 ($generated@@558 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@147 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@147 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@67)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@67) (= ($generated@@570 ($generated@@273 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@273 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@75 ($generated@@273 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@67)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@67) (= ($generated@@574 ($generated@@278 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@278 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@75 ($generated@@278 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@67)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@67) (= ($generated@@578 ($generated@@190 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@190 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@67) (= ($generated@@75 ($generated@@190 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@67)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@67) (= ($generated@@582 ($generated@@558 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@558 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@67) (= ($generated@@75 ($generated@@558 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@558 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@381 $generated@@587 ($generated@@327 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@327 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) (= ($generated@@156 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@588) $generated@@591))) (and ($generated@@259 ($generated@@87 ($generated@@439 $generated@@588) $generated@@591) $generated@@590) ($generated@@259 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@588) $generated@@591))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@156 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) (= ($generated@@156 $generated@@592 ($generated@@472 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@592) $generated@@595))) (and ($generated@@259 ($generated@@87 ($generated@@447 $generated@@592) $generated@@595) $generated@@594) ($generated@@259 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@592) $generated@@595))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@156 $generated@@592 ($generated@@472 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@152) (= (type $generated@@597) $generated@@152)) (and (and (and (=> ($generated@@151 $generated@@596 $generated@@597) (not (= $generated@@596 $generated@@597))) (=> (and ($generated@@374 $generated@@596) (not ($generated@@374 $generated@@597))) ($generated@@151 $generated@@596 $generated@@597))) (=> (and ($generated@@374 $generated@@596) ($generated@@374 $generated@@597)) (= ($generated@@151 $generated@@596 $generated@@597) (< ($generated@@167 $generated@@596) ($generated@@167 $generated@@597))))) (=> (and ($generated@@151 $generated@@596 $generated@@597) ($generated@@374 $generated@@597)) ($generated@@374 $generated@@596))))
 :pattern ( ($generated@@151 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@152) (= (type $generated@@601) $generated@@152)) (< ($generated@@598 $generated@@600) ($generated@@599 ($generated@@258 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@258 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@152) (= (type $generated@@603) $generated@@152)) (< ($generated@@598 $generated@@603) ($generated@@599 ($generated@@258 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@258 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@604) $generated@@152) (= (type $generated@@605) $generated@@142)) (= (type $generated@@606) $generated@@80)) (= (type $generated@@607) $generated@@80)) (and ($generated@@156 $generated@@606 $generated@@79) ($generated@@156 $generated@@607 $generated@@79))) (= ($generated@@251 $generated@@604 ($generated@@141 $generated@@605) $generated@@606 $generated@@607)  (and (=> (< 0 ($generated@@167 $generated@@604)) (and (and ($generated@@256 $generated@@606) ($generated@@256 $generated@@607)) (=> (and ($generated@@256 $generated@@606) ($generated@@256 $generated@@607)) (and (= ($generated@@418 $generated@@606) ($generated@@418 $generated@@607)) ($generated@@251 ($generated@@165 $generated@@604 ($generated@@166 1)) $generated@@605 ($generated@@419 $generated@@606) ($generated@@419 $generated@@607)))))) (=> (and (not (= $generated@@604 ($generated@@166 0))) (= ($generated@@167 $generated@@604) 0)) ($generated@@140 $generated@@605 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@251 $generated@@604 ($generated@@141 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) $generated@@142) (= ($generated@@159 ($generated@@141 $generated@@608) $generated@@609) ($generated@@159 $generated@@608 $generated@@609)))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@152) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) $generated@@67)) ($generated@@259 $generated@@610 ($generated@@464 $generated@@611 $generated@@612))) (and (= ($generated@@327 ($generated@@381 ($generated@@340 $generated@@152 $generated@@152) $generated@@610)) $generated@@610) ($generated@@156 ($generated@@381 ($generated@@340 $generated@@152 $generated@@152) $generated@@610) ($generated@@464 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@259 $generated@@610 ($generated@@464 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@152) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) $generated@@67)) ($generated@@259 $generated@@613 ($generated@@472 $generated@@614 $generated@@615))) (and (= ($generated@@327 ($generated@@381 ($generated@@358 $generated@@152 $generated@@152) $generated@@613)) $generated@@613) ($generated@@156 ($generated@@381 ($generated@@358 $generated@@152 $generated@@152) $generated@@613) ($generated@@472 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@259 $generated@@613 ($generated@@472 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@67) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) $generated@@152)) ($generated@@259 $generated@@618 ($generated@@177 $generated@@616 $generated@@617))) (and (= ($generated@@327 ($generated@@381 $generated@@80 $generated@@618)) $generated@@618) ($generated@@156 ($generated@@381 $generated@@80 $generated@@618) ($generated@@177 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@259 $generated@@618 ($generated@@177 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
 (not ($generated@@0 ($generated@@87 ($generated@@480 $generated@@620) $generated@@619))))
 :pattern ( (let (($generated@@620 (type $generated@@619)))
($generated@@87 ($generated@@480 $generated@@620) $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@72)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (and (= ($generated@@75 ($generated@@177 $generated@@623 $generated@@624)) $generated@@62) (= ($generated@@621 ($generated@@177 $generated@@623 $generated@@624)) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@80) (= (type $generated@@626) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@626) (and ($generated@@256 $generated@@625) ($generated@@77 $generated@@625 $generated@@79 $generated@@626)))) ($generated@@77 ($generated@@8 ($generated@@418 $generated@@625)) $generated@@46 $generated@@626))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@418 $generated@@625)) $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@80) (= ($generated@@598 ($generated@@327 $generated@@627)) ($generated@@599 $generated@@627)))
 :pattern ( ($generated@@598 ($generated@@327 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@152) ($generated@@259 $generated@@628 ($generated@@147 0))) (and (= ($generated@@327 ($generated@@381 $generated@@2 $generated@@628)) $generated@@628) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@628) ($generated@@147 0))))
 :pattern ( ($generated@@259 $generated@@628 ($generated@@147 0)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@152) (= (type $generated@@630) $generated@@67)) ($generated@@259 $generated@@629 ($generated@@273 $generated@@630))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@629)) $generated@@629) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@629) ($generated@@273 $generated@@630))))
 :pattern ( ($generated@@259 $generated@@629 ($generated@@273 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@152) (= (type $generated@@632) $generated@@67)) ($generated@@259 $generated@@631 ($generated@@278 $generated@@632))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@631)) $generated@@631) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@631) ($generated@@278 $generated@@632))))
 :pattern ( ($generated@@259 $generated@@631 ($generated@@278 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@152) (= (type $generated@@634) $generated@@67)) ($generated@@259 $generated@@633 ($generated@@190 $generated@@634))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@2) $generated@@633)) $generated@@633) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@2) $generated@@633) ($generated@@190 $generated@@634))))
 :pattern ( ($generated@@259 $generated@@633 ($generated@@190 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@152) (= (type $generated@@636) $generated@@67)) ($generated@@259 $generated@@635 ($generated@@558 $generated@@636))) (and (= ($generated@@327 ($generated@@381 ($generated@@311 $generated@@152) $generated@@635)) $generated@@635) ($generated@@156 ($generated@@381 ($generated@@311 $generated@@152) $generated@@635) ($generated@@558 $generated@@636))))
 :pattern ( ($generated@@259 $generated@@635 ($generated@@558 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@152) ($generated@@374 $generated@@637)) (= $generated@@637 ($generated@@166 ($generated@@167 $generated@@637))))
 :pattern ( ($generated@@167 $generated@@637))
 :pattern ( ($generated@@374 $generated@@637))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@142) (= (type $generated@@639) $generated@@152)) (= (type $generated@@640) $generated@@80)) (or ($generated@@385 ($generated@@285 $generated@@639) $generated@@640) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@640 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@639)) (and ($generated@@256 $generated@@640) (=> (> ($generated@@418 $generated@@640) 0) (and ($generated@@256 $generated@@640) ($generated@@385 ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))))) (=> (=> (< 0 ($generated@@167 $generated@@639)) (and (> ($generated@@418 $generated@@640) 0) ($generated@@299 ($generated@@141 $generated@@638) ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@639)) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@152) ($generated@@151 $generated@@641 $generated@@639)) ($generated@@385 $generated@@641 $generated@@640))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) $generated@@641 $generated@@640))
))))) (= ($generated@@299 ($generated@@141 $generated@@638) ($generated@@285 $generated@@639) $generated@@640)  (and (=> (< 0 ($generated@@167 $generated@@639)) (and (> ($generated@@418 $generated@@640) 0) ($generated@@299 ($generated@@141 $generated@@638) ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@639)) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@152) ($generated@@151 $generated@@642 $generated@@639)) ($generated@@299 ($generated@@141 $generated@@638) $generated@@642 $generated@@640))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) $generated@@642 $generated@@640))
)))))))
 :weight 3
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) ($generated@@285 $generated@@639) $generated@@640))
))))
(assert (= ($generated@@75 $generated@@79) $generated@@64))
(assert (= ($generated@@621 $generated@@79) $generated@@66))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@643 ($generated@@190 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@643 $generated@@646)))) ($generated@@289 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@87 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@77 $generated@@643 ($generated@@190 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@152) (= (type $generated@@648) $generated@@152)) (and ($generated@@374 $generated@@648) (<= ($generated@@167 $generated@@648) ($generated@@167 $generated@@647)))) (or (and (= $generated@@648 ($generated@@166 0)) (= ($generated@@165 $generated@@647 $generated@@648) $generated@@647)) (and (not (= $generated@@648 ($generated@@166 0))) ($generated@@151 ($generated@@165 $generated@@647 $generated@@648) $generated@@647))))
 :pattern ( ($generated@@165 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@80) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@651) (and ($generated@@176 $generated@@649) (exists (($generated@@652 T@U) ) (!  (and (= (type $generated@@652) $generated@@67) ($generated@@77 $generated@@649 ($generated@@177 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@177 $generated@@650 $generated@@652) $generated@@651))
))))) ($generated@@289 ($generated@@184 $generated@@649) $generated@@650 $generated@@651))
 :pattern ( ($generated@@289 ($generated@@184 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@80) (= (type $generated@@654) $generated@@67)) (= (type $generated@@655) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@655) (and ($generated@@176 $generated@@653) (exists (($generated@@656 T@U) ) (!  (and (= (type $generated@@656) $generated@@67) ($generated@@77 $generated@@653 ($generated@@177 $generated@@656 $generated@@654) $generated@@655))
 :pattern ( ($generated@@77 $generated@@653 ($generated@@177 $generated@@656 $generated@@654) $generated@@655))
))))) ($generated@@289 ($generated@@185 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@289 ($generated@@185 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@80) (= (type $generated@@658) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@658) (and ($generated@@256 $generated@@657) ($generated@@77 $generated@@657 $generated@@79 $generated@@658)))) ($generated@@77 ($generated@@419 $generated@@657) $generated@@79 $generated@@658))
 :pattern ( ($generated@@77 ($generated@@419 $generated@@657) $generated@@79 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@152) (= (type $generated@@660) $generated@@152)) (= ($generated@@258 ($generated@@285 $generated@@659) ($generated@@285 $generated@@660)) ($generated@@285 ($generated@@258 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@258 ($generated@@285 $generated@@659) ($generated@@285 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@327 ($generated@@8 ($generated@@283 $generated@@661))) ($generated@@285 ($generated@@327 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@327 ($generated@@8 ($generated@@283 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (! (= ($generated@@327 ($generated@@285 $generated@@662)) ($generated@@285 ($generated@@327 $generated@@662)))
 :pattern ( ($generated@@327 ($generated@@285 $generated@@662)))
)))
(assert (forall (($generated@@663 Int) ($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@80) (= ($generated@@156 ($generated@@78 $generated@@663 $generated@@664) $generated@@79)  (and ($generated@@156 ($generated@@8 $generated@@663) $generated@@46) ($generated@@156 $generated@@664 $generated@@79))))
 :pattern ( ($generated@@156 ($generated@@78 $generated@@663 $generated@@664) $generated@@79))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@312 (type $generated@@665))))
 (=> (and (= (type $generated@@665) ($generated@@311 $generated@@666)) (= ($generated@@310 $generated@@665) 0)) (= $generated@@665 ($generated@@309 $generated@@666))))
 :pattern ( ($generated@@310 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@668)))
 (=> (and (and (= (type $generated@@667) ($generated@@81 $generated@@670 $generated@@2)) (= (type $generated@@669) $generated@@2)) (<= 0 ($generated $generated@@669))) (= ($generated@@332 ($generated@@88 $generated@@667 $generated@@668 $generated@@669)) (+ (- ($generated@@332 $generated@@667) ($generated ($generated@@87 $generated@@667 $generated@@668))) ($generated $generated@@669)))))
 :pattern ( ($generated@@332 ($generated@@88 $generated@@667 $generated@@668 $generated@@669)))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@142) (= (type $generated@@672) $generated@@152)) (= (type $generated@@673) $generated@@80)) (or ($generated@@385 ($generated@@285 $generated@@672) ($generated@@285 $generated@@673)) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@673 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@672)) (and ($generated@@256 $generated@@673) (=> (> ($generated@@418 $generated@@673) 0) (and ($generated@@256 $generated@@673) ($generated@@385 ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))))) (=> (=> (< 0 ($generated@@167 $generated@@672)) (and (> ($generated@@418 $generated@@673) 0) ($generated@@299 ($generated@@141 $generated@@671) ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@672)) (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@152) ($generated@@151 $generated@@674 $generated@@672)) ($generated@@385 $generated@@674 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) $generated@@674 $generated@@673))
))))) (= ($generated@@299 ($generated@@141 $generated@@671) ($generated@@285 $generated@@672) ($generated@@285 $generated@@673))  (and (=> (< 0 ($generated@@167 $generated@@672)) (and (> ($generated@@418 $generated@@673) 0) ($generated@@299 ($generated@@141 $generated@@671) ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@672)) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@152) ($generated@@151 $generated@@675 $generated@@672)) ($generated@@299 ($generated@@141 $generated@@671) $generated@@675 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) $generated@@675 $generated@@673))
)))))))
 :weight 3
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) ($generated@@285 $generated@@672) ($generated@@285 $generated@@673)))
))))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@677) $generated@@2)) ($generated@@77 $generated@@677 $generated@@46 $generated@@676))
 :pattern ( ($generated@@77 $generated@@677 $generated@@46 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@679) $generated@@3)) ($generated@@77 $generated@@679 $generated@@47 $generated@@678))
 :pattern ( ($generated@@77 $generated@@679 $generated@@47 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@681) $generated@@4)) ($generated@@77 $generated@@681 $generated@@44 $generated@@680))
 :pattern ( ($generated@@77 $generated@@681 $generated@@44 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@683) $generated@@504)) ($generated@@77 $generated@@683 $generated@@45 $generated@@682))
 :pattern ( ($generated@@77 $generated@@683 $generated@@45 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@685) $generated@@152)) ($generated@@77 $generated@@685 $generated@@48 $generated@@684))
 :pattern ( ($generated@@77 $generated@@685 $generated@@48 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@311 $generated@@152)) (= (type $generated@@687) $generated@@67)) (= ($generated@@156 $generated@@686 ($generated@@558 $generated@@687)) (forall (($generated@@688 Int) ) (!  (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@310 $generated@@686))) ($generated@@259 ($generated@@559 $generated@@686 $generated@@688) $generated@@687))
 :pattern ( ($generated@@559 $generated@@686 $generated@@688))
))))
 :pattern ( ($generated@@156 $generated@@686 ($generated@@558 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@142) (= (type $generated@@690) $generated@@152)) (= (type $generated@@691) $generated@@80)) (= ($generated@@299 $generated@@689 $generated@@690 $generated@@691) ($generated@@299 $generated@@554 $generated@@690 $generated@@691)))
 :pattern ( ($generated@@299 ($generated@@553 $generated@@689) $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@142) (= (type $generated@@693) $generated@@80)) (= (type $generated@@694) $generated@@80)) (and ($generated@@156 $generated@@693 $generated@@79) ($generated@@156 $generated@@694 $generated@@79))) (= ($generated@@140 ($generated@@141 $generated@@692) $generated@@693 $generated@@694)  (and (and ($generated@@256 $generated@@693) ($generated@@256 $generated@@694)) (=> (and ($generated@@256 $generated@@693) ($generated@@256 $generated@@694)) (and (= ($generated@@418 $generated@@693) ($generated@@418 $generated@@694)) ($generated@@140 $generated@@692 ($generated@@419 $generated@@693) ($generated@@419 $generated@@694)))))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@692) $generated@@693 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 Int) ) (!  (=> (= (type $generated@@696) ($generated@@311 $generated@@152)) (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@310 $generated@@696))) (< ($generated@@599 ($generated@@381 $generated@@80 ($generated@@559 $generated@@696 $generated@@697))) ($generated@@695 $generated@@696))))
 :pattern ( ($generated@@599 ($generated@@381 $generated@@80 ($generated@@559 $generated@@696 $generated@@697))))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@698) $generated@@152) (= (type $generated@@699) $generated@@142)) (= (type $generated@@700) $generated@@80)) (= (type $generated@@701) $generated@@80)) (= $generated@@700 $generated@@701)) ($generated@@251 $generated@@698 ($generated@@141 $generated@@699) $generated@@700 $generated@@701))
 :pattern ( ($generated@@251 $generated@@698 ($generated@@141 $generated@@699) $generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@703) $generated@@67)) (= (type $generated@@704) $generated@@67)) ($generated@@156 $generated@@702 ($generated@@464 $generated@@703 $generated@@704))) (and (and ($generated@@156 ($generated@@338 $generated@@702) ($generated@@273 $generated@@703)) ($generated@@156 ($generated@@397 $generated@@702) ($generated@@273 $generated@@704))) ($generated@@156 ($generated@@438 $generated@@702) ($generated@@273 ($generated@@177 $generated@@703 $generated@@704)))))
 :pattern ( ($generated@@156 $generated@@702 ($generated@@464 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@706) $generated@@67)) (= (type $generated@@707) $generated@@67)) ($generated@@156 $generated@@705 ($generated@@472 $generated@@706 $generated@@707))) (and (and ($generated@@156 ($generated@@356 $generated@@705) ($generated@@278 $generated@@706)) ($generated@@156 ($generated@@408 $generated@@705) ($generated@@278 $generated@@707))) ($generated@@156 ($generated@@446 $generated@@705) ($generated@@278 ($generated@@177 $generated@@706 $generated@@707)))))
 :pattern ( ($generated@@156 $generated@@705 ($generated@@472 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@2) ($generated@@156 $generated@@708 $generated@@46))
 :pattern ( ($generated@@156 $generated@@708 $generated@@46))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@3) ($generated@@156 $generated@@709 $generated@@47))
 :pattern ( ($generated@@156 $generated@@709 $generated@@47))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@4) ($generated@@156 $generated@@710 $generated@@44))
 :pattern ( ($generated@@156 $generated@@710 $generated@@44))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@504) ($generated@@156 $generated@@711 $generated@@45))
 :pattern ( ($generated@@156 $generated@@711 $generated@@45))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@152) ($generated@@156 $generated@@712 $generated@@48))
 :pattern ( ($generated@@156 $generated@@712 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 (T@U) Bool)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@713) $generated@@152) (= (type $generated@@718) $generated@@152)) (= (type $generated@@720) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@717) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@715) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@721) ($generated@@197 $generated@@82 $generated@@4))) (= (type $generated@@722) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@723  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) (> ($generated@@418 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)) 0))))) (=> (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) (> ($generated@@418 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)) 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) ($generated@@165 $generated@@713 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714))))))) (=> (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) ($generated@@165 $generated@@713 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (= ($generated@@283 0) ($generated@@167 $generated@@713)) (forall (($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@152) ($generated@@151 $generated@@724 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@724 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))
 :pattern ( ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@724 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))
))))))))))))
(let (($generated@@725  (=> (<= ($generated@@167 $generated@@713) 0) (=> (and (and (and ($generated@@84 $generated@@715) ($generated@@716 $generated@@715)) (= $generated@@717 $generated@@715)) (and (forall (($generated@@726 T@U) ($generated@@727 Int) ) (!  (=> (= (type $generated@@726) $generated@@152) (=> (and ($generated@@151 $generated@@726 $generated@@713) (<= ($generated@@283 1) $generated@@727)) ($generated@@299 ($generated@@141 $generated@@554) $generated@@726 ($generated@@159 ($generated@@141 $generated@@554) $generated@@727))))
 :no-pattern (type $generated@@726)
 :no-pattern ($generated $generated@@726)
 :no-pattern ($generated@@0 $generated@@726)
)) (= (ControlFlow 0 9) 2))) $generated@@723))))
(let (($generated@@728  (=> (< 0 ($generated@@167 $generated@@713)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@374 ($generated@@285 ($generated@@166 1)))) (=> ($generated@@374 ($generated@@285 ($generated@@166 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@167 ($generated@@285 ($generated@@166 1))) ($generated@@167 $generated@@713))) (=> (<= ($generated@@167 ($generated@@285 ($generated@@166 1))) ($generated@@167 $generated@@713)) (=> (and (= $generated@@718 ($generated@@165 $generated@@713 ($generated@@166 1))) (= $generated@@719 (+ $generated@@714 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@283 1) $generated@@719)) (=> (<= ($generated@@283 1) $generated@@719) (=> (and (and (and ($generated@@84 $generated@@720) ($generated@@716 $generated@@720)) (and ($generated@@160 $generated@@719) ($generated@@385 $generated@@718 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)))) (and (and ($generated@@385 $generated@@718 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)) (and ($generated@@299 ($generated@@141 $generated@@554) $generated@@718 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)) (and (=> (< 0 ($generated@@167 $generated@@718)) (and (> ($generated@@418 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)) 0) ($generated@@299 ($generated@@141 $generated@@554) ($generated@@165 $generated@@718 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719))))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@718)) (forall (($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@729) $generated@@152) ($generated@@151 $generated@@729 $generated@@718)) ($generated@@299 ($generated@@141 $generated@@554) $generated@@729 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@554) $generated@@729 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)))
)))))) (and (= $generated@@717 $generated@@720) (= (ControlFlow 0 5) 2)))) $generated@@723)))))))))))
(let (($generated@@730  (=> (= $generated@@721 ($generated@@196 $generated@@722 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 5) $generated@@728) (=> (= (ControlFlow 0 10) 9) $generated@@725)))))
(let (($generated@@731  (=> (and (and (and ($generated@@84 $generated@@717) ($generated@@716 $generated@@717)) (= 3 $generated@@158)) (and (<= ($generated@@283 1) $generated@@714) (= (ControlFlow 0 11) 10))) $generated@@730)))
$generated@@731))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 (Int) Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (T@T T@U) T@U)
(declare-fun $generated@@256 (Int) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@138) (or ($generated@@139 $generated@@143) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@143 ($generated@@141 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@138) (or ($generated@@145 $generated@@146) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@146 ($generated@@141 $generated@@46))))) true)
 :pattern ( ($generated@@144 $generated@@146))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@138) (or ($generated@@148 $generated@@149) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@149 ($generated@@141 $generated@@46))))) true)
 :pattern ( ($generated@@147 $generated@@149))
))))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@138) (= (type $generated@@156) $generated@@138)) (and ($generated@@151 $generated@@155) ($generated@@151 $generated@@156))) (= ($generated@@150 $generated@@155 $generated@@156) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@155))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@140 $generated@@157 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@157 ($generated@@79 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@138)) ($generated@@140 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@140 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@153)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@153)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@138) (= (type $generated@@171) $generated@@138)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@174))
)) (= (type $generated@@173) $generated@@138)))
(assert (= ($generated@@172 $generated@@173) $generated@@65))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@179) $generated@@68)) ($generated@@140 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@140 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 16)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@71 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@81) (= (type $generated@@230) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@231) ($generated@@70 $generated@@4))) (= (type $generated@@233) $generated@@81)) (= (type $generated@@234) ($generated@@70 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@238)) ($generated@@78 $generated@@173 ($generated@@141 $generated@@237) $generated@@238))
 :pattern ( ($generated@@78 $generated@@173 ($generated@@141 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@138)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@153)) (= (type $generated@@246) $generated@@153)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@159 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@159 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@68) ($generated@@140 $generated@@173 ($generated@@141 $generated@@247)))
 :pattern ( ($generated@@140 $generated@@173 ($generated@@141 $generated@@247)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@138) (= (type $generated@@249) $generated@@138)) (= ($generated@@165 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@165 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@138) (= (type $generated@@251) $generated@@138)) (= ($generated@@150 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@150 $generated@@250 $generated@@251))
)))
(assert  (and (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@252 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@252 $generated@@258))
)) (forall (($generated@@260 T@T) ($generated@@261 T@U) ) (! (= (type ($generated@@255 $generated@@260 $generated@@261)) $generated@@260)
 :pattern ( ($generated@@255 $generated@@260 $generated@@261))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@138) (or ($generated@@139 ($generated@@252 $generated@@262)) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@262 ($generated@@141 $generated@@46))))) (and (=> ($generated@@0 ($generated@@252 ($generated@@11 ($generated@@151 ($generated@@252 $generated@@262))))) ($generated@@253 ($generated@@254 ($generated ($generated@@255 $generated@@2 ($generated@@152 ($generated@@252 $generated@@262))))))) (= ($generated@@137 ($generated@@252 $generated@@262)) ($generated@@0 ($generated@@252 ($generated@@11  (and (=> ($generated@@151 ($generated@@252 $generated@@262)) ($generated@@256 ($generated@@254 ($generated ($generated@@255 $generated@@2 ($generated@@152 ($generated@@252 $generated@@262))))))) (=> ($generated@@257 ($generated@@252 $generated@@262)) true))))))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@252 $generated@@262)))
))))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@266) $generated@@68)) (= ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@153) ($generated@@0 ($generated@@85 $generated@@265 $generated@@267))) ($generated@@240 $generated@@267 $generated@@266))
 :pattern ( ($generated@@85 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@140 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@140 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@153) ($generated@@0 ($generated@@85 $generated@@270 $generated@@272))) ($generated@@240 $generated@@272 $generated@@271))
 :pattern ( ($generated@@85 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@140 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@273 Int) ) (! (= ($generated@@254 $generated@@273) $generated@@273)
 :pattern ( ($generated@@254 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@252 $generated@@274) $generated@@274)
 :pattern ( ($generated@@252 $generated@@274))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@275 Int) ) (!  (=> (or ($generated@@253 $generated@@275) (not (= 0 $generated@@136))) (= ($generated@@256 $generated@@275)  (and (<= ($generated@@254 0) $generated@@275) (not (= $generated@@275 5)))))
 :pattern ( ($generated@@256 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@138) (= (type $generated@@277) $generated@@138)) (and ($generated@@257 $generated@@276) ($generated@@257 $generated@@277))) (= ($generated@@150 $generated@@276 $generated@@277) true))
 :pattern ( ($generated@@150 $generated@@276 $generated@@277) ($generated@@257 $generated@@276))
 :pattern ( ($generated@@150 $generated@@276 $generated@@277) ($generated@@257 $generated@@277))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@278 Int) ) (!  (=> (or ($generated@@253 $generated@@278) (not (= 0 $generated@@136))) true)
 :pattern ( ($generated@@256 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@153)) (= (type $generated@@283) $generated@@153)) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@284)) (= ($generated@@78 ($generated@@239 $generated@@282 $generated@@283) ($generated@@159 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@282 $generated@@283) ($generated@@159 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@138) (= ($generated@@158 $generated@@285) (= ($generated@@172 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@138) (= ($generated@@151 $generated@@286) (= ($generated@@172 $generated@@286) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@138) (= ($generated@@257 $generated@@287) (= ($generated@@172 $generated@@287) $generated@@65)))
 :pattern ( ($generated@@257 $generated@@287))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@138) (or ($generated@@145 ($generated@@252 $generated@@288)) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@288 ($generated@@141 $generated@@46))))) (and (=> ($generated@@0 ($generated@@252 ($generated@@11 ($generated@@151 ($generated@@252 $generated@@288))))) (let (($generated@@289 ($generated@@254 ($generated ($generated@@255 $generated@@2 ($generated@@152 ($generated@@252 $generated@@288)))))))
($generated@@253 $generated@@289))) (= ($generated@@144 ($generated@@252 $generated@@288)) (ite ($generated@@151 ($generated@@252 $generated@@288)) ($generated@@0 (let (($generated@@290 ($generated@@254 ($generated ($generated@@255 $generated@@2 ($generated@@152 ($generated@@252 $generated@@288)))))))
($generated@@252 ($generated@@11 ($generated@@256 $generated@@290))))) true))))
 :weight 3
 :pattern ( ($generated@@144 ($generated@@252 $generated@@288)))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@138) (or ($generated@@148 ($generated@@252 $generated@@291)) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@291 ($generated@@141 $generated@@46))))) (and (=> ($generated@@0 ($generated@@252 ($generated@@11 ($generated@@151 ($generated@@252 $generated@@291))))) (let (($generated@@292 ($generated@@254 ($generated ($generated@@255 $generated@@2 ($generated@@152 ($generated@@252 $generated@@291)))))))
($generated@@253 $generated@@292))) (= ($generated@@147 ($generated@@252 $generated@@291)) (ite ($generated@@151 ($generated@@252 $generated@@291)) ($generated@@0 (let (($generated@@293 ($generated@@254 ($generated ($generated@@255 $generated@@2 ($generated@@152 ($generated@@252 $generated@@291)))))))
($generated@@252 ($generated@@11 ($generated@@256 $generated@@293))))) true))))
 :weight 3
 :pattern ( ($generated@@147 ($generated@@252 $generated@@291)))
))))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@138) ($generated@@158 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@153) (= (type $generated@@296) $generated@@153)) (= $generated@@294 ($generated@@239 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@158 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@138) ($generated@@257 $generated@@305)) (= $generated@@305 $generated@@173))
 :pattern ( ($generated@@257 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@138)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@138) ($generated@@151 $generated@@308)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@153) (= $generated@@308 ($generated@@306 $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@151 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@153)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@279 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@78 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@279 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert  (=> (<= 0 $generated@@136) (forall (($generated@@315 Int) ) (!  (=> (or ($generated@@253 ($generated@@254 $generated@@315)) (not (= 0 $generated@@136))) (= ($generated@@256 ($generated@@254 $generated@@315))  (and (<= ($generated@@254 0) ($generated@@254 $generated@@315)) (not (= $generated@@315 5)))))
 :weight 3
 :pattern ( ($generated@@256 ($generated@@254 $generated@@315)))
))))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@73)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@68) (and (= ($generated@@76 ($generated@@141 $generated@@324)) $generated@@64) (= ($generated@@322 ($generated@@141 $generated@@324)) $generated@@67)))
 :pattern ( ($generated@@141 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 18)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@83 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@80 $generated@@362 $generated@@2)) (= ($generated@@176 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@85 $generated@@361 $generated@@363))) (<= ($generated ($generated@@85 $generated@@361 $generated@@363)) ($generated@@316 $generated@@361))))
 :pattern ( ($generated@@85 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@176 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@325 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@329 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@329 (type $generated@@371))))
(let (($generated@@373 ($generated@@328 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@327 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@326 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@347 (type $generated@@375))))
(let (($generated@@377 ($generated@@346 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@345 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@344 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@343 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@347 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@80 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(let (($generated@@384 ($generated@@346 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@345 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@344 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@387) $generated@@68)) (= ($generated@@140 $generated@@386 ($generated@@175 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@386 $generated@@388)))) ($generated@@240 $generated@@388 $generated@@387))
 :pattern ( ($generated@@85 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@140 $generated@@386 ($generated@@175 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) $generated@@68) (= (type $generated@@390) $generated@@153)) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@236 $generated@@391)) (= ($generated@@78 ($generated@@306 $generated@@390) ($generated@@141 $generated@@389) $generated@@391) ($generated@@279 $generated@@390 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@78 ($generated@@306 $generated@@390) ($generated@@141 $generated@@389) $generated@@391))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@138) (or ($generated@@139 $generated@@392) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@392 ($generated@@141 $generated@@46))))) (and (=> ($generated@@151 $generated@@392) ($generated@@253 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@392))))) (= ($generated@@137 $generated@@392)  (and (=> ($generated@@151 $generated@@392) ($generated@@256 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@392))))) (=> ($generated@@257 $generated@@392) true)))))
 :pattern ( ($generated@@137 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@263 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@153) ($generated@@0 ($generated@@85 $generated@@393 $generated@@396))) ($generated@@279 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@85 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@263 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@268 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@153) ($generated@@0 ($generated@@85 $generated@@397 $generated@@400))) ($generated@@279 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@85 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@268 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@85 ($generated@@317 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@329 (type $generated@@406))))
(let (($generated@@408 ($generated@@328 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@327 $generated@@153 $generated@@153)) (= (type $generated@@410) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@409) ($generated@@166 ($generated@@255 $generated@@138 $generated@@410)))) (= ($generated@@85 ($generated@@404 $generated@@409) ($generated@@166 ($generated@@255 $generated@@138 $generated@@410))) ($generated@@167 ($generated@@255 $generated@@138 $generated@@410))))))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@347 (type $generated@@414))))
(let (($generated@@416 ($generated@@346 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@345 $generated@@153 $generated@@153)) (= (type $generated@@418) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@417) ($generated@@166 ($generated@@255 $generated@@138 $generated@@418)))) (= ($generated@@85 ($generated@@412 $generated@@417) ($generated@@166 ($generated@@255 $generated@@138 $generated@@418))) ($generated@@167 ($generated@@255 $generated@@138 $generated@@418))))))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@328 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@327 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@85 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@419) $generated@@423))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@346 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@345 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@68)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@327 $generated@@153 $generated@@153)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@432) $generated@@436))) (and ($generated@@279 ($generated@@85 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@279 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@68)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@345 $generated@@153 $generated@@153)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@440) $generated@@444))) (and ($generated@@279 ($generated@@85 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@279 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@445) $generated@@68) (= (type $generated@@446) $generated@@138)) ($generated@@140 $generated@@446 ($generated@@141 $generated@@445))) (or ($generated@@151 $generated@@446) ($generated@@257 $generated@@446)))
 :pattern ( ($generated@@257 $generated@@446) ($generated@@140 $generated@@446 ($generated@@141 $generated@@445)))
 :pattern ( ($generated@@151 $generated@@446) ($generated@@140 $generated@@446 ($generated@@141 $generated@@445)))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@80 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@347 (type $generated@@449))))
(let (($generated@@451 ($generated@@346 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@345 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@344 $generated@@451 $generated@@450)) (= ($generated@@343 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@343 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@347 (type $generated@@452))))
(let (($generated@@454 ($generated@@346 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@345 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@344 $generated@@454 $generated@@453)) (= ($generated@@379 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@379 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@347 (type $generated@@455))))
(let (($generated@@457 ($generated@@346 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@345 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@344 $generated@@457 $generated@@456)) (= ($generated@@411 $generated@@455) ($generated@@447 $generated@@153))))))
 :pattern ( ($generated@@411 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@329 (type $generated@@458))))
(let (($generated@@460 ($generated@@328 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@327 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@326 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@153) (= (type $generated@@462) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@403 $generated@@458) ($generated@@310 ($generated@@239 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@403 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@347 (type $generated@@463))))
(let (($generated@@465 ($generated@@346 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@345 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@344 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@153) (= (type $generated@@467) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@411 $generated@@463) ($generated@@310 ($generated@@239 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@411 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@153) ($generated@@240 $generated@@468 $generated@@46)) (and (= ($generated@@310 ($generated@@255 $generated@@2 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@255 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@153) ($generated@@240 $generated@@469 $generated@@47)) (and (= ($generated@@310 ($generated@@255 $generated@@3 $generated@@469)) $generated@@469) ($generated@@140 ($generated@@255 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@153) ($generated@@240 $generated@@470 $generated@@44)) (and (= ($generated@@310 ($generated@@255 $generated@@4 $generated@@470)) $generated@@470) ($generated@@140 ($generated@@255 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 20))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@153) ($generated@@240 $generated@@472 $generated@@45)) (and (= ($generated@@310 ($generated@@255 $generated@@471 $generated@@472)) $generated@@472) ($generated@@140 ($generated@@255 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@68) (= ($generated@@240 ($generated@@310 $generated@@473) $generated@@474) ($generated@@140 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@240 ($generated@@310 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@83 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@80 $generated@@476 $generated@@2)) (<= 0 ($generated@@316 $generated@@475))))
 :pattern ( ($generated@@316 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@300 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@299 $generated@@478)) (<= 0 ($generated@@298 $generated@@477))))
 :pattern ( ($generated@@298 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@429 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@429 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@76 ($generated@@429 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@437 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@437 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@437 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@76 ($generated@@437 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@153) (= (type $generated@@500) $generated@@153)) (= ($generated@@172 ($generated@@239 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@159 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@159 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@159 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@159 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@153) (= (type $generated@@510) $generated@@153)) (= ($generated@@166 ($generated@@239 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@239 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@153) (= (type $generated@@512) $generated@@153)) (= ($generated@@167 ($generated@@239 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@239 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@300 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@299 $generated@@153)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@298 $generated@@519))) ($generated@@279 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@79 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@79 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@263 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@263 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@263 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@268 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@268 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@175 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@175 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@175 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@153) (= ($generated@@172 ($generated@@306 $generated@@541)) $generated@@63))
 :pattern ( ($generated@@306 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@141 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@141 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@153) (= ($generated@@152 ($generated@@306 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@306 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@255 $generated@@547 ($generated@@310 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@310 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@327 $generated@@153 $generated@@153)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) (= ($generated@@140 $generated@@548 ($generated@@429 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@548) $generated@@551))) (and ($generated@@240 ($generated@@85 ($generated@@404 $generated@@548) $generated@@551) $generated@@550) ($generated@@240 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@429 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@345 $generated@@153 $generated@@153)) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) (= ($generated@@140 $generated@@552 ($generated@@437 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@552) $generated@@555))) (and ($generated@@240 ($generated@@85 ($generated@@412 $generated@@552) $generated@@555) $generated@@554) ($generated@@240 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@437 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@153)) (= ($generated@@140 ($generated@@306 $generated@@557) ($generated@@141 $generated@@556)) ($generated@@240 $generated@@557 $generated@@556)))
 :pattern ( ($generated@@140 ($generated@@306 $generated@@557) ($generated@@141 $generated@@556)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@153) (= (type $generated@@561) $generated@@153)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (= (type $generated@@563) $generated@@153)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@138) (or ($generated@@145 $generated@@564) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@564 ($generated@@141 $generated@@46))))) (and (=> ($generated@@151 $generated@@564) (let (($generated@@565 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@564)))))
($generated@@253 $generated@@565))) (= ($generated@@144 $generated@@564) (ite ($generated@@151 $generated@@564) (let (($generated@@566 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@564)))))
($generated@@256 $generated@@566)) true))))
 :pattern ( ($generated@@144 $generated@@564))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@138) (or ($generated@@148 $generated@@567) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@567 ($generated@@141 $generated@@46))))) (and (=> ($generated@@151 $generated@@567) (let (($generated@@568 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@567)))))
($generated@@253 $generated@@568))) (= ($generated@@147 $generated@@567) (ite ($generated@@151 $generated@@567) (let (($generated@@569 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@567)))))
($generated@@256 $generated@@569)) true))))
 :pattern ( ($generated@@147 $generated@@567))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@153) (= (type $generated@@571) $generated@@68)) (= (type $generated@@572) $generated@@68)) ($generated@@240 $generated@@570 ($generated@@429 $generated@@571 $generated@@572))) (and (= ($generated@@310 ($generated@@255 ($generated@@327 $generated@@153 $generated@@153) $generated@@570)) $generated@@570) ($generated@@140 ($generated@@255 ($generated@@327 $generated@@153 $generated@@153) $generated@@570) ($generated@@429 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@240 $generated@@570 ($generated@@429 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@153) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) $generated@@68)) ($generated@@240 $generated@@573 ($generated@@437 $generated@@574 $generated@@575))) (and (= ($generated@@310 ($generated@@255 ($generated@@345 $generated@@153 $generated@@153) $generated@@573)) $generated@@573) ($generated@@140 ($generated@@255 ($generated@@345 $generated@@153 $generated@@153) $generated@@573) ($generated@@437 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@240 $generated@@573 ($generated@@437 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) $generated@@153)) ($generated@@240 $generated@@578 ($generated@@159 $generated@@576 $generated@@577))) (and (= ($generated@@310 ($generated@@255 $generated@@138 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@255 $generated@@138 $generated@@578) ($generated@@159 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@159 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@153) (< ($generated@@558 $generated@@579) ($generated@@559 ($generated@@306 $generated@@579))))
 :pattern ( ($generated@@306 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@138) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@582) (and ($generated@@151 $generated@@580) ($generated@@78 $generated@@580 ($generated@@141 $generated@@581) $generated@@582)))) ($generated@@279 ($generated@@152 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@279 ($generated@@152 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@85 ($generated@@447 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@85 ($generated@@447 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@585 $generated@@586)) $generated@@62) (= ($generated@@322 ($generated@@159 $generated@@585 $generated@@586)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@138) (= ($generated@@558 ($generated@@310 $generated@@587)) ($generated@@559 $generated@@587)))
 :pattern ( ($generated@@558 ($generated@@310 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@153) ($generated@@240 $generated@@588 ($generated@@79 0))) (and (= ($generated@@310 ($generated@@255 $generated@@2 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@255 ($generated@@80 $generated@@153 $generated@@4) $generated@@588) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@79 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@153) (= (type $generated@@590) $generated@@68)) ($generated@@240 $generated@@589 ($generated@@263 $generated@@590))) (and (= ($generated@@310 ($generated@@255 ($generated@@80 $generated@@153 $generated@@4) $generated@@589)) $generated@@589) ($generated@@140 ($generated@@255 ($generated@@80 $generated@@153 $generated@@4) $generated@@589) ($generated@@263 $generated@@590))))
 :pattern ( ($generated@@240 $generated@@589 ($generated@@263 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@153) (= (type $generated@@592) $generated@@68)) ($generated@@240 $generated@@591 ($generated@@268 $generated@@592))) (and (= ($generated@@310 ($generated@@255 ($generated@@80 $generated@@153 $generated@@4) $generated@@591)) $generated@@591) ($generated@@140 ($generated@@255 ($generated@@80 $generated@@153 $generated@@4) $generated@@591) ($generated@@268 $generated@@592))))
 :pattern ( ($generated@@240 $generated@@591 ($generated@@268 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@153) (= (type $generated@@594) $generated@@68)) ($generated@@240 $generated@@593 ($generated@@175 $generated@@594))) (and (= ($generated@@310 ($generated@@255 ($generated@@80 $generated@@153 $generated@@2) $generated@@593)) $generated@@593) ($generated@@140 ($generated@@255 ($generated@@80 $generated@@153 $generated@@2) $generated@@593) ($generated@@175 $generated@@594))))
 :pattern ( ($generated@@240 $generated@@593 ($generated@@175 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@153) (= (type $generated@@596) $generated@@68)) ($generated@@240 $generated@@595 ($generated@@513 $generated@@596))) (and (= ($generated@@310 ($generated@@255 ($generated@@299 $generated@@153) $generated@@595)) $generated@@595) ($generated@@140 ($generated@@255 ($generated@@299 $generated@@153) $generated@@595) ($generated@@513 $generated@@596))))
 :pattern ( ($generated@@240 $generated@@595 ($generated@@513 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@68) (= (type $generated@@598) $generated@@153)) ($generated@@240 $generated@@598 ($generated@@141 $generated@@597))) (and (= ($generated@@310 ($generated@@255 $generated@@138 $generated@@598)) $generated@@598) ($generated@@140 ($generated@@255 $generated@@138 $generated@@598) ($generated@@141 $generated@@597))))
 :pattern ( ($generated@@240 $generated@@598 ($generated@@141 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@599 ($generated@@175 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@599 $generated@@602)))) ($generated@@279 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@175 $generated@@600) $generated@@601))
)))
(assert (= $generated@@173 ($generated@@252 $generated@@173)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@138) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@605) (and ($generated@@158 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@78 $generated@@603 ($generated@@159 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@159 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@279 ($generated@@166 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@138) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@236 $generated@@609) (and ($generated@@158 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@68) ($generated@@78 $generated@@607 ($generated@@159 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@78 $generated@@607 ($generated@@159 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@279 ($generated@@167 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@153) (= (type $generated@@612) $generated@@153)) (= ($generated@@239 ($generated@@252 $generated@@611) ($generated@@252 $generated@@612)) ($generated@@252 ($generated@@239 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@239 ($generated@@252 $generated@@611) ($generated@@252 $generated@@612)))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@254 $generated@@613))) ($generated@@252 ($generated@@310 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@254 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@153) (= ($generated@@306 ($generated@@252 $generated@@614)) ($generated@@252 ($generated@@306 $generated@@614))))
 :pattern ( ($generated@@306 ($generated@@252 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@310 ($generated@@252 $generated@@615)) ($generated@@252 ($generated@@310 $generated@@615)))
 :pattern ( ($generated@@310 ($generated@@252 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@300 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@299 $generated@@617)) (= ($generated@@298 $generated@@616) 0)) (= $generated@@616 ($generated@@297 $generated@@617))))
 :pattern ( ($generated@@298 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@80 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@316 ($generated@@86 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@316 $generated@@618) ($generated ($generated@@85 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@2)) ($generated@@78 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@3)) ($generated@@78 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@4)) ($generated@@78 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@471)) ($generated@@78 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@78 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@153)) ($generated@@78 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@299 $generated@@153)) (= (type $generated@@633) $generated@@68)) (= ($generated@@140 $generated@@632 ($generated@@513 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@298 $generated@@632))) ($generated@@240 ($generated@@514 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@514 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@513 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@299 $generated@@153)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@298 $generated@@636))) (< ($generated@@559 ($generated@@255 $generated@@138 ($generated@@514 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@559 ($generated@@255 $generated@@138 ($generated@@514 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@327 $generated@@153 $generated@@153)) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) $generated@@68)) ($generated@@140 $generated@@638 ($generated@@429 $generated@@639 $generated@@640))) (and (and ($generated@@140 ($generated@@325 $generated@@638) ($generated@@263 $generated@@639)) ($generated@@140 ($generated@@368 $generated@@638) ($generated@@263 $generated@@640))) ($generated@@140 ($generated@@403 $generated@@638) ($generated@@263 ($generated@@159 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@140 $generated@@638 ($generated@@429 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@345 $generated@@153 $generated@@153)) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@140 $generated@@641 ($generated@@437 $generated@@642 $generated@@643))) (and (and ($generated@@140 ($generated@@343 $generated@@641) ($generated@@268 $generated@@642)) ($generated@@140 ($generated@@379 $generated@@641) ($generated@@268 $generated@@643))) ($generated@@140 ($generated@@411 $generated@@641) ($generated@@268 ($generated@@159 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@140 $generated@@641 ($generated@@437 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@140 $generated@@644 $generated@@46))
 :pattern ( ($generated@@140 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@140 $generated@@645 $generated@@47))
 :pattern ( ($generated@@140 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@140 $generated@@646 $generated@@44))
 :pattern ( ($generated@@140 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@471) ($generated@@140 $generated@@647 $generated@@45))
 :pattern ( ($generated@@140 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@153) ($generated@@140 $generated@@648 $generated@@48))
 :pattern ( ($generated@@140 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () T@U)
(assert  (and (and (and (and (= (type $generated@@649) $generated@@138) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) ($generated@@182 $generated@@81 $generated@@4))) (= (type $generated@@652) $generated@@81)) (= (type $generated@@654) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@655  (=> (and (and (and (not ($generated@@0 ($generated@@252 ($generated@@11 true)))) (not ($generated@@0 ($generated@@252 ($generated@@11 true))))) (not ($generated@@0 ($generated@@252 ($generated@@11 true))))) (= (ControlFlow 0 14) (- 0 13))) false)))
(let (($generated@@656  (=> (and (and ($generated@@0 ($generated@@252 ($generated@@11 true))) ($generated@@78 $generated@@649 ($generated@@141 $generated@@46) $generated@@650)) (and ($generated@@148 $generated@@649) ($generated@@148 $generated@@649))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (=> ($generated@@148 $generated@@649) (or ($generated@@147 $generated@@649) (=> ($generated@@151 $generated@@649) (let (($generated@@657 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))))
 (=> ($generated@@253 $generated@@657) (or ($generated@@256 $generated@@657) (<= ($generated@@254 0) $generated@@657)))))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> ($generated@@148 $generated@@649) (or ($generated@@147 $generated@@649) (=> ($generated@@151 $generated@@649) (let (($generated@@658 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))))
 (=> ($generated@@253 $generated@@658) (or ($generated@@256 $generated@@658) (not (= $generated@@658 5))))))))) (=> (= (ControlFlow 0 10) (- 0 9)) (=> ($generated@@148 $generated@@649) (or ($generated@@147 $generated@@649) (=> (not ($generated@@151 $generated@@649)) ($generated@@0 ($generated@@252 ($generated@@11 true))))))))))))
(let (($generated@@659  (=> (and (and ($generated@@0 ($generated@@252 ($generated@@11 true))) ($generated@@78 $generated@@649 ($generated@@141 $generated@@46) $generated@@650)) (and ($generated@@145 $generated@@649) ($generated@@145 $generated@@649))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@145 $generated@@649) (or ($generated@@144 $generated@@649) (=> ($generated@@151 $generated@@649) (let (($generated@@660 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))))
 (=> ($generated@@253 $generated@@660) (or ($generated@@256 $generated@@660) (<= ($generated@@254 0) $generated@@660)))))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@145 $generated@@649) (or ($generated@@144 $generated@@649) (=> ($generated@@151 $generated@@649) (let (($generated@@661 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))))
 (=> ($generated@@253 $generated@@661) (or ($generated@@256 $generated@@661) (not (= $generated@@661 5))))))))) (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@145 $generated@@649) (or ($generated@@144 $generated@@649) (=> (not ($generated@@151 $generated@@649)) ($generated@@0 ($generated@@252 ($generated@@11 true))))))))))))
(let (($generated@@662  (=> (and (and ($generated@@0 ($generated@@252 ($generated@@11 true))) ($generated@@78 $generated@@649 ($generated@@141 $generated@@46) $generated@@650)) (and ($generated@@139 $generated@@649) ($generated@@139 $generated@@649))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@139 $generated@@649) (or ($generated@@137 $generated@@649) (=> ($generated@@151 $generated@@649) (=> ($generated@@253 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))) (or ($generated@@256 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))) (<= ($generated@@254 0) ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@139 $generated@@649) (or ($generated@@137 $generated@@649) (=> ($generated@@151 $generated@@649) (=> ($generated@@253 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))) (or ($generated@@256 ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649)))) (not (= ($generated ($generated@@255 $generated@@2 ($generated@@152 $generated@@649))) 5)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@139 $generated@@649) (or ($generated@@137 $generated@@649) (=> ($generated@@257 $generated@@649) ($generated@@0 ($generated@@252 ($generated@@11 true))))))))))))
(let (($generated@@663  (=> (and (= $generated@@651 ($generated@@181 $generated@@652 $generated@@650 $generated@@60 false)) (= $generated@@649 ($generated@@252 ($generated@@306 ($generated@@310 ($generated@@8 ($generated@@254 5))))))) (and (and (and (=> (= (ControlFlow 0 15) 2) $generated@@662) (=> (= (ControlFlow 0 15) 6) $generated@@659)) (=> (= (ControlFlow 0 15) 10) $generated@@656)) (=> (= (ControlFlow 0 15) 14) $generated@@655)))))
(let (($generated@@664  (=> (and ($generated@@236 $generated@@650) ($generated@@653 $generated@@650)) (=> (and (and (and ($generated@@140 $generated@@654 ($generated@@141 $generated@@46)) ($generated@@78 $generated@@654 ($generated@@141 $generated@@46) $generated@@650)) true) (and (= 2 $generated@@136) (= (ControlFlow 0 16) 15))) $generated@@663))))
$generated@@664)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 11))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 () T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@70))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@154 $generated@@153 $generated@@155))
 :pattern ( ($generated@@95 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@96 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@96 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@70) (= (type $generated@@163) $generated@@70)) (= (type $generated@@164) $generated@@86)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@86) (= (type $generated@@172) $generated@@86)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@173 $generated@@174)) $generated@@74)
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert (= ($generated@@173 $generated@@84) $generated@@66))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@97 $generated@@168 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@156 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@156 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@98 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@73 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@98) (= (type $generated@@230) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@231) ($generated@@72 $generated@@4))) (= (type $generated@@233) $generated@@98)) (= (type $generated@@234) ($generated@@72 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@182 $generated@@98 $generated@@4))
 :pattern ( ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@73 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@98) (= (type $generated@@242) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@243) ($generated@@72 $generated@@4))) (= (type $generated@@245) $generated@@98)) (= (type $generated@@246) ($generated@@72 $generated@@247))) (= ($generated@@0 ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@86)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@70) (= (type $generated@@253) $generated@@70)) (= (type $generated@@254) $generated@@168)) (= (type $generated@@255) $generated@@168)) (= ($generated@@156 ($generated@@248 $generated@@254 $generated@@255) ($generated@@159 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@156 ($generated@@248 $generated@@254 $generated@@255) ($generated@@159 $generated@@252 $generated@@253)))
)))
(assert (= (type $generated@@256) $generated@@70))
(assert ($generated@@156 $generated@@84 $generated@@256))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@257 $generated@@258)) ($generated@@95 $generated@@84 $generated@@256 $generated@@258))
 :pattern ( ($generated@@95 $generated@@84 $generated@@256 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@86) (= (type $generated@@260) $generated@@86)) (= ($generated@@165 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@165 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@86) (= (type $generated@@263) $generated@@86)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@97 $generated@@168 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@156 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@168) ($generated@@0 ($generated@@102 $generated@@266 $generated@@268))) ($generated@@249 $generated@@268 $generated@@267))
 :pattern ( ($generated@@102 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@156 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@97 $generated@@168 $generated@@4)) (= (type $generated@@272) $generated@@70)) (= ($generated@@156 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@168) ($generated@@0 ($generated@@102 $generated@@271 $generated@@273))) ($generated@@249 $generated@@273 $generated@@272))
 :pattern ( ($generated@@102 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@156 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@83 $generated@@274) $generated@@274)
 :pattern ( ($generated@@83 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@261 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@261 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@261 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) $generated@@70)) (= (type $generated@@285) $generated@@168)) (= (type $generated@@286) $generated@@168)) (= (type $generated@@287) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@257 $generated@@287)) (= ($generated@@95 ($generated@@248 $generated@@285 $generated@@286) ($generated@@159 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@95 ($generated@@248 $generated@@285 $generated@@286) ($generated@@159 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@86) (= ($generated@@158 $generated@@288) (= ($generated@@173 $generated@@288) $generated@@62)))
 :pattern ( ($generated@@158 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@86) (= ($generated@@289 $generated@@290) (= ($generated@@173 $generated@@290) $generated@@64)))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@86) (= ($generated@@279 $generated@@291) (= ($generated@@173 $generated@@291) $generated@@66)))
 :pattern ( ($generated@@279 $generated@@291))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@292 T@U) ($generated@@293 Int) ) (!  (=> (and (= (type $generated@@292) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@293)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@293)))) (and (=> (not (= ($generated@@83 $generated@@293) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@293 1)))) (= ($generated@@79 ($generated@@80 $generated@@292) ($generated@@83 $generated@@293)) (ite (= ($generated@@83 $generated@@293) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@275 ($generated@@79 ($generated@@80 $generated@@292) ($generated@@83 (- $generated@@293 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@292) ($generated@@83 $generated@@293)))
))))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@86) ($generated@@158 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@168) (= (type $generated@@296) $generated@@168)) (= $generated@@294 ($generated@@248 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@158 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 18)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@86) ($generated@@279 $generated@@305)) (= $generated@@305 $generated@@84))
 :pattern ( ($generated@@279 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@86) ($generated@@289 $generated@@306)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@86) (= $generated@@306 ($generated@@85 $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@289 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@2) (= ($generated@@156 $generated@@308 $generated@@153) (<= ($generated@@83 0) ($generated $generated@@308))))
 :pattern ( ($generated@@156 $generated@@308 $generated@@153))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@168)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@70) (= (type $generated@@313) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@282 ($generated@@309 $generated@@311) $generated@@312 $generated@@313) ($generated@@95 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@282 ($generated@@309 $generated@@311) $generated@@312 $generated@@313))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@314 T@U) ($generated@@315 Int) ) (!  (=> (and (= (type $generated@@314) $generated@@81) (or ($generated@@82 $generated@@315) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@315)))) ($generated@@156 ($generated@@79 $generated@@314 $generated@@315) $generated@@256))
 :pattern ( ($generated@@79 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@97 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@100 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@97 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@102 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@97 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@102 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@102 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@97 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@102 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@102 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@100 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@97 $generated@@359 $generated@@2)) (= ($generated@@176 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@102 $generated@@358 $generated@@360))) (<= ($generated ($generated@@102 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@102 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@176 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@168) ($generated@@249 $generated@@364 $generated@@153)) (and (= ($generated@@309 ($generated@@361 $generated@@2 $generated@@364)) $generated@@364) ($generated@@156 ($generated@@361 $generated@@2 $generated@@364) $generated@@153)))
 :pattern ( ($generated@@249 $generated@@364 $generated@@153))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@168) ($generated@@249 $generated@@365 $generated@@256)) (and (= ($generated@@309 ($generated@@361 $generated@@86 $generated@@365)) $generated@@365) ($generated@@156 ($generated@@361 $generated@@86 $generated@@365) $generated@@256)))
 :pattern ( ($generated@@249 $generated@@365 $generated@@256))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@86) (= ($generated@@156 ($generated@@85 $generated@@366) $generated@@256) ($generated@@156 $generated@@366 $generated@@256)))
 :pattern ( ($generated@@156 ($generated@@85 $generated@@366) $generated@@256))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@86)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@369) $generated@@86) (= (type $generated@@370) $generated@@86)) (and ($generated@@289 $generated@@369) ($generated@@289 $generated@@370))) (= ($generated@@261 $generated@@369 $generated@@370) ($generated@@261 ($generated@@367 $generated@@369) ($generated@@367 $generated@@370))))
 :pattern ( ($generated@@261 $generated@@369 $generated@@370) ($generated@@289 $generated@@369))
 :pattern ( ($generated@@261 $generated@@369 $generated@@370) ($generated@@289 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(let (($generated@@373 ($generated@@325 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@324 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@323 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@102 ($generated@@322 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@322 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@326 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@97 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@326 (type $generated@@378))))
(let (($generated@@380 ($generated@@325 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@324 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@323 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@102 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(let (($generated@@384 ($generated@@343 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@342 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@341 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@102 ($generated@@340 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@340 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@97 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@344 (type $generated@@389))))
(let (($generated@@391 ($generated@@343 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@342 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@341 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@102 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@97 $generated@@168 $generated@@2)) (= (type $generated@@394) $generated@@70)) (= ($generated@@156 $generated@@393 ($generated@@175 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@168) (< 0 ($generated ($generated@@102 $generated@@393 $generated@@395)))) ($generated@@249 $generated@@395 $generated@@394))
 :pattern ( ($generated@@102 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@156 $generated@@393 ($generated@@175 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@97 $generated@@168 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@396 ($generated@@264 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@168) ($generated@@0 ($generated@@102 $generated@@396 $generated@@399))) ($generated@@282 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@102 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@95 $generated@@396 ($generated@@264 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@97 $generated@@168 $generated@@4)) (= (type $generated@@401) $generated@@70)) (= (type $generated@@402) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@400 ($generated@@269 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@168) ($generated@@0 ($generated@@102 $generated@@400 $generated@@403))) ($generated@@282 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@102 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@95 $generated@@400 ($generated@@269 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@102 ($generated@@317 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@102 ($generated@@317 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@97 $generated@@168 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@326 (type $generated@@409))))
(let (($generated@@411 ($generated@@325 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@97 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@324 $generated@@168 $generated@@168)) (= (type $generated@@413) $generated@@168)) (= ($generated@@0 ($generated@@102 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@102 ($generated@@322 $generated@@412) ($generated@@166 ($generated@@361 $generated@@86 $generated@@413)))) (= ($generated@@102 ($generated@@407 $generated@@412) ($generated@@166 ($generated@@361 $generated@@86 $generated@@413))) ($generated@@167 ($generated@@361 $generated@@86 $generated@@413))))))
 :pattern ( ($generated@@102 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@97 $generated@@168 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@344 (type $generated@@417))))
(let (($generated@@419 ($generated@@343 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@97 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@342 $generated@@168 $generated@@168)) (= (type $generated@@421) $generated@@168)) (= ($generated@@0 ($generated@@102 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@102 ($generated@@340 $generated@@420) ($generated@@166 ($generated@@361 $generated@@86 $generated@@421)))) (= ($generated@@102 ($generated@@415 $generated@@420) ($generated@@166 ($generated@@361 $generated@@86 $generated@@421))) ($generated@@167 ($generated@@361 $generated@@86 $generated@@421))))))
 :pattern ( ($generated@@102 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@325 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@324 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@102 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@102 ($generated@@322 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@102 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@102 ($generated@@322 $generated@@422) $generated@@426))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@102 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@343 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@342 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@102 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@102 ($generated@@340 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@102 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@102 ($generated@@340 $generated@@427) $generated@@431))
 :pattern ( ($generated@@102 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@102 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@324 $generated@@168 $generated@@168)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@168) ($generated@@0 ($generated@@102 ($generated@@322 $generated@@435) $generated@@439))) (and ($generated@@282 ($generated@@102 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@282 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@102 ($generated@@322 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@95 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@342 $generated@@168 $generated@@168)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@168) ($generated@@0 ($generated@@102 ($generated@@340 $generated@@443) $generated@@447))) (and ($generated@@282 ($generated@@102 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@282 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@102 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@102 ($generated@@340 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@95 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@448) $generated@@86) (= (type $generated@@449) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@257 $generated@@449)) (= ($generated@@95 ($generated@@85 $generated@@448) $generated@@256 $generated@@449) ($generated@@95 $generated@@448 $generated@@256 $generated@@449)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@448) $generated@@256 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@86) ($generated@@156 $generated@@450 $generated@@256)) (or ($generated@@289 $generated@@450) ($generated@@279 $generated@@450)))
 :pattern ( ($generated@@279 $generated@@450) ($generated@@156 $generated@@450 $generated@@256))
 :pattern ( ($generated@@289 $generated@@450) ($generated@@156 $generated@@450 $generated@@256))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@97 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@344 (type $generated@@453))))
(let (($generated@@455 ($generated@@343 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@342 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@341 $generated@@455 $generated@@454)) (= ($generated@@340 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@340 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@386 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@386 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@168))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@326 (type $generated@@462))))
(let (($generated@@464 ($generated@@325 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@324 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@323 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@168) (= (type $generated@@466) $generated@@168)) ($generated@@0 ($generated@@102 ($generated@@406 $generated@@462) ($generated@@309 ($generated@@248 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@406 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@344 (type $generated@@467))))
(let (($generated@@469 ($generated@@343 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@342 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@341 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@168) (= (type $generated@@471) $generated@@168)) ($generated@@0 ($generated@@102 ($generated@@414 $generated@@467) ($generated@@309 ($generated@@248 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@168) ($generated@@249 $generated@@472 $generated@@46)) (and (= ($generated@@309 ($generated@@361 $generated@@2 $generated@@472)) $generated@@472) ($generated@@156 ($generated@@361 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@168) ($generated@@249 $generated@@473 $generated@@47)) (and (= ($generated@@309 ($generated@@361 $generated@@3 $generated@@473)) $generated@@473) ($generated@@156 ($generated@@361 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@168) ($generated@@249 $generated@@474 $generated@@44)) (and (= ($generated@@309 ($generated@@361 $generated@@4 $generated@@474)) $generated@@474) ($generated@@156 ($generated@@361 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 21))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@168) ($generated@@249 $generated@@476 $generated@@45)) (and (= ($generated@@309 ($generated@@361 $generated@@475 $generated@@476)) $generated@@476) ($generated@@156 ($generated@@361 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@249 ($generated@@309 $generated@@477) $generated@@478) ($generated@@156 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@249 ($generated@@309 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@100 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@97 $generated@@480 $generated@@2)) (<= 0 ($generated@@316 $generated@@479))))
 :pattern ( ($generated@@316 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@300 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@299 $generated@@482)) (<= 0 ($generated@@298 $generated@@481))))
 :pattern ( ($generated@@298 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@432 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@432 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@93 ($generated@@432 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@440 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@440 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@440 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@440 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@93 ($generated@@440 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@168) (= (type $generated@@504) $generated@@168)) (= ($generated@@173 ($generated@@248 $generated@@503 $generated@@504)) $generated@@62))
 :pattern ( ($generated@@248 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@505 ($generated@@159 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@159 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@159 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@159 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@168) (= (type $generated@@514) $generated@@168)) (= ($generated@@166 ($generated@@248 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@248 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@168) (= (type $generated@@516) $generated@@168)) (= ($generated@@167 ($generated@@248 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@248 $generated@@515 $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@81)
 :pattern ( ($generated@@517 $generated@@519))
)) (= (type $generated@@518) $generated@@81)))
(assert (forall (($generated@@520 T@U) ($generated@@521 Int) ) (!  (=> (= (type $generated@@520) $generated@@81) (= ($generated@@79 $generated@@520 $generated@@521) ($generated@@79 $generated@@518 $generated@@521)))
 :pattern ( ($generated@@79 ($generated@@517 $generated@@520) $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@300 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@299 $generated@@168)) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@298 $generated@@528))) ($generated@@282 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@95 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@96 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@96 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@264 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@264 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@93 ($generated@@264 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@269 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@269 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@93 ($generated@@269 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@542 ($generated@@175 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@175 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@93 ($generated@@175 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@70)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@93 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@86) (= ($generated@@173 ($generated@@85 $generated@@550)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@86) (= ($generated@@367 ($generated@@85 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@85 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@361 $generated@@553 ($generated@@309 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@309 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@324 $generated@@168 $generated@@168)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@70)) (= ($generated@@156 $generated@@554 ($generated@@432 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@168) ($generated@@0 ($generated@@102 ($generated@@322 $generated@@554) $generated@@557))) (and ($generated@@249 ($generated@@102 ($generated@@407 $generated@@554) $generated@@557) $generated@@556) ($generated@@249 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@554) $generated@@557))
 :pattern ( ($generated@@102 ($generated@@322 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@156 $generated@@554 ($generated@@432 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@342 $generated@@168 $generated@@168)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) (= ($generated@@156 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@168) ($generated@@0 ($generated@@102 ($generated@@340 $generated@@558) $generated@@561))) (and ($generated@@249 ($generated@@102 ($generated@@415 $generated@@558) $generated@@561) $generated@@560) ($generated@@249 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@102 ($generated@@415 $generated@@558) $generated@@561))
 :pattern ( ($generated@@102 ($generated@@340 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@156 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@168) (= (type $generated@@565) $generated@@168)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@248 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@248 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@168) (= (type $generated@@567) $generated@@168)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@248 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@248 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (= (type $generated@@568) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@568) $generated@@569) ($generated@@79 $generated@@568 $generated@@569)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@168) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) $generated@@70)) ($generated@@249 $generated@@570 ($generated@@432 $generated@@571 $generated@@572))) (and (= ($generated@@309 ($generated@@361 ($generated@@324 $generated@@168 $generated@@168) $generated@@570)) $generated@@570) ($generated@@156 ($generated@@361 ($generated@@324 $generated@@168 $generated@@168) $generated@@570) ($generated@@432 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@249 $generated@@570 ($generated@@432 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@168) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) $generated@@70)) ($generated@@249 $generated@@573 ($generated@@440 $generated@@574 $generated@@575))) (and (= ($generated@@309 ($generated@@361 ($generated@@342 $generated@@168 $generated@@168) $generated@@573)) $generated@@573) ($generated@@156 ($generated@@361 ($generated@@342 $generated@@168 $generated@@168) $generated@@573) ($generated@@440 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@249 $generated@@573 ($generated@@440 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@70) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) $generated@@168)) ($generated@@249 $generated@@578 ($generated@@159 $generated@@576 $generated@@577))) (and (= ($generated@@309 ($generated@@361 $generated@@86 $generated@@578)) $generated@@578) ($generated@@156 ($generated@@361 $generated@@86 $generated@@578) ($generated@@159 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@249 $generated@@578 ($generated@@159 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@86) (< ($generated@@563 $generated@@579) ($generated@@563 ($generated@@85 $generated@@579))))
 :pattern ( ($generated@@85 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@102 ($generated@@451 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@102 ($generated@@451 $generated@@581) $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@75)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@70) (= (type $generated@@585) $generated@@70)) (and (= ($generated@@93 ($generated@@159 $generated@@584 $generated@@585)) $generated@@63) (= ($generated@@582 ($generated@@159 $generated@@584 $generated@@585)) $generated@@68)))
 :pattern ( ($generated@@159 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@86) (= ($generated@@562 ($generated@@309 $generated@@586)) ($generated@@563 $generated@@586)))
 :pattern ( ($generated@@562 ($generated@@309 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@168) ($generated@@249 $generated@@587 ($generated@@96 0))) (and (= ($generated@@309 ($generated@@361 $generated@@2 $generated@@587)) $generated@@587) ($generated@@156 ($generated@@361 ($generated@@97 $generated@@168 $generated@@4) $generated@@587) ($generated@@96 0))))
 :pattern ( ($generated@@249 $generated@@587 ($generated@@96 0)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@168) (= (type $generated@@589) $generated@@70)) ($generated@@249 $generated@@588 ($generated@@264 $generated@@589))) (and (= ($generated@@309 ($generated@@361 ($generated@@97 $generated@@168 $generated@@4) $generated@@588)) $generated@@588) ($generated@@156 ($generated@@361 ($generated@@97 $generated@@168 $generated@@4) $generated@@588) ($generated@@264 $generated@@589))))
 :pattern ( ($generated@@249 $generated@@588 ($generated@@264 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@168) (= (type $generated@@591) $generated@@70)) ($generated@@249 $generated@@590 ($generated@@269 $generated@@591))) (and (= ($generated@@309 ($generated@@361 ($generated@@97 $generated@@168 $generated@@4) $generated@@590)) $generated@@590) ($generated@@156 ($generated@@361 ($generated@@97 $generated@@168 $generated@@4) $generated@@590) ($generated@@269 $generated@@591))))
 :pattern ( ($generated@@249 $generated@@590 ($generated@@269 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@168) (= (type $generated@@593) $generated@@70)) ($generated@@249 $generated@@592 ($generated@@175 $generated@@593))) (and (= ($generated@@309 ($generated@@361 ($generated@@97 $generated@@168 $generated@@2) $generated@@592)) $generated@@592) ($generated@@156 ($generated@@361 ($generated@@97 $generated@@168 $generated@@2) $generated@@592) ($generated@@175 $generated@@593))))
 :pattern ( ($generated@@249 $generated@@592 ($generated@@175 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@168) (= (type $generated@@595) $generated@@70)) ($generated@@249 $generated@@594 ($generated@@522 $generated@@595))) (and (= ($generated@@309 ($generated@@361 ($generated@@299 $generated@@168) $generated@@594)) $generated@@594) ($generated@@156 ($generated@@361 ($generated@@299 $generated@@168) $generated@@594) ($generated@@522 $generated@@595))))
 :pattern ( ($generated@@249 $generated@@594 ($generated@@522 $generated@@595)))
)))
(assert (= ($generated@@93 $generated@@153) $generated@@61))
(assert (= ($generated@@582 $generated@@153) $generated@@67))
(assert (= ($generated@@93 $generated@@256) $generated@@65))
(assert (= ($generated@@582 $generated@@256) $generated@@69))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@97 $generated@@168 $generated@@2)) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@596 ($generated@@175 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@168) (< 0 ($generated ($generated@@102 $generated@@596 $generated@@599)))) ($generated@@282 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@102 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@95 $generated@@596 ($generated@@175 $generated@@597) $generated@@598))
)))
(assert (= $generated@@84 ($generated@@275 $generated@@84)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@86) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@257 $generated@@602) (and ($generated@@158 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@70) ($generated@@95 $generated@@600 ($generated@@159 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@95 $generated@@600 ($generated@@159 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@282 ($generated@@166 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@282 ($generated@@166 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@86) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@257 $generated@@606) (and ($generated@@158 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@70) ($generated@@95 $generated@@604 ($generated@@159 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@95 $generated@@604 ($generated@@159 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@282 ($generated@@167 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@282 ($generated@@167 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@86) (= (type $generated@@609) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@257 $generated@@609) (and ($generated@@289 $generated@@608) ($generated@@95 $generated@@608 $generated@@256 $generated@@609)))) ($generated@@95 ($generated@@367 $generated@@608) $generated@@256 $generated@@609))
 :pattern ( ($generated@@95 ($generated@@367 $generated@@608) $generated@@256 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@168) (= (type $generated@@611) $generated@@168)) (= ($generated@@248 ($generated@@275 $generated@@610) ($generated@@275 $generated@@611)) ($generated@@275 ($generated@@248 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@248 ($generated@@275 $generated@@610) ($generated@@275 $generated@@611)))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@309 ($generated@@8 ($generated@@83 $generated@@612))) ($generated@@275 ($generated@@309 ($generated@@8 $generated@@612))))
 :pattern ( ($generated@@309 ($generated@@8 ($generated@@83 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@86) (= ($generated@@85 ($generated@@275 $generated@@613)) ($generated@@275 ($generated@@85 $generated@@613))))
 :pattern ( ($generated@@85 ($generated@@275 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@309 ($generated@@275 $generated@@614)) ($generated@@275 ($generated@@309 $generated@@614)))
 :pattern ( ($generated@@309 ($generated@@275 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@300 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@299 $generated@@616)) (= ($generated@@298 $generated@@615) 0)) (= $generated@@615 ($generated@@297 $generated@@616))))
 :pattern ( ($generated@@298 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@97 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@316 ($generated@@103 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@316 $generated@@617) ($generated ($generated@@102 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@316 ($generated@@103 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@622) $generated@@2)) ($generated@@95 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@95 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@624) $generated@@3)) ($generated@@95 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@95 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@626) $generated@@4)) ($generated@@95 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@95 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@628) $generated@@475)) ($generated@@95 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@95 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@630) $generated@@168)) ($generated@@95 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@95 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@299 $generated@@168)) (= (type $generated@@632) $generated@@70)) (= ($generated@@156 $generated@@631 ($generated@@522 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@298 $generated@@631))) ($generated@@249 ($generated@@523 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@523 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@156 $generated@@631 ($generated@@522 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@299 $generated@@168)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@298 $generated@@635))) (< ($generated@@563 ($generated@@361 $generated@@86 ($generated@@523 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@563 ($generated@@361 $generated@@86 ($generated@@523 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@324 $generated@@168 $generated@@168)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) ($generated@@156 $generated@@637 ($generated@@432 $generated@@638 $generated@@639))) (and (and ($generated@@156 ($generated@@322 $generated@@637) ($generated@@264 $generated@@638)) ($generated@@156 ($generated@@375 $generated@@637) ($generated@@264 $generated@@639))) ($generated@@156 ($generated@@406 $generated@@637) ($generated@@264 ($generated@@159 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@156 $generated@@637 ($generated@@432 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@342 $generated@@168 $generated@@168)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) $generated@@70)) ($generated@@156 $generated@@640 ($generated@@440 $generated@@641 $generated@@642))) (and (and ($generated@@156 ($generated@@340 $generated@@640) ($generated@@269 $generated@@641)) ($generated@@156 ($generated@@386 $generated@@640) ($generated@@269 $generated@@642))) ($generated@@156 ($generated@@414 $generated@@640) ($generated@@269 ($generated@@159 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@156 $generated@@640 ($generated@@440 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@156 $generated@@643 $generated@@46))
 :pattern ( ($generated@@156 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@156 $generated@@644 $generated@@47))
 :pattern ( ($generated@@156 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@156 $generated@@645 $generated@@44))
 :pattern ( ($generated@@156 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@475) ($generated@@156 $generated@@646 $generated@@45))
 :pattern ( ($generated@@156 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@168) ($generated@@156 $generated@@647 $generated@@48))
 :pattern ( ($generated@@156 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@650) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@651) ($generated@@182 $generated@@98 $generated@@4))) (= (type $generated@@652) $generated@@98)) (= (type $generated@@653) ($generated@@182 $generated@@98 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@655  (=> (not (= $generated@@648 ($generated@@83 0))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@156 ($generated@@8 (- $generated@@648 1)) $generated@@153)) (=> ($generated@@156 ($generated@@8 (- $generated@@648 1)) $generated@@153) (=> (and (= $generated@@649 (- $generated@@648 1)) ($generated@@95 ($generated@@8 $generated@@649) $generated@@153 $generated@@650)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@648) (= $generated@@649 $generated@@648))) (=> (or (<= 0 $generated@@648) (= $generated@@649 $generated@@648)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@649 $generated@@648))))))))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@236 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@656) (=> (= (ControlFlow 0 7) 4) $generated@@655)))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@653 ($generated@@181 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@658) (=> (= (ControlFlow 0 8) 7) $generated@@657)))))
(let (($generated@@660  (=> (and (and (and ($generated@@257 $generated@@650) ($generated@@654 $generated@@650)) (<= ($generated@@83 0) $generated@@648)) (and (= 1 $generated@@78) (= (ControlFlow 0 9) 8))) $generated@@659)))
$generated@@660)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 (T@U Int T@U) Bool)
(declare-fun $generated@@144 (Int) Int)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 (Int) T@U)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@197 (T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@199 (T@T T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@263 (Int T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) Bool)
(declare-fun $generated@@303 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U T@U) Bool)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@393 (T@U) Bool)
(declare-fun $generated@@400 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@443 (T@U) Bool)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 () T@U)
(declare-fun $generated@@524 (T@T) T@U)
(declare-fun $generated@@548 () T@T)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@598 (T@U Int) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@639 (T@U) Int)
(declare-fun $generated@@640 (T@U) Int)
(declare-fun $generated@@667 (T@U) T@U)
(declare-fun $generated@@747 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@139) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@138 $generated@@145)) $generated@@139)
 :pattern ( ($generated@@138 $generated@@145))
))) (= (type $generated@@142) $generated@@68)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@139) (= (type $generated@@147) $generated@@140)) (and ($generated@@141 $generated@@147 $generated@@142) ($generated@@137 ($generated@@138 $generated@@146) $generated@@147))) (forall (($generated@@148 Int) ) (!  (=> (<= ($generated@@144 0) $generated@@148) ($generated@@143 ($generated@@138 $generated@@146) $generated@@148 $generated@@147))
 :pattern ( ($generated@@143 ($generated@@138 $generated@@146) $generated@@148 $generated@@147))
)))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@146) $generated@@147))
))))
(assert (= ($generated@@1 $generated@@150) 16))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@150) (= (type $generated@@152) $generated@@150)) (= (type $generated@@153) $generated@@150)) (and ($generated@@149 $generated@@151 $generated@@152) ($generated@@149 $generated@@152 $generated@@153))) ($generated@@149 $generated@@151 $generated@@153))
 :pattern ( ($generated@@149 $generated@@151 $generated@@152) ($generated@@149 $generated@@152 $generated@@153))
 :pattern ( ($generated@@149 $generated@@151 $generated@@152) ($generated@@149 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@141 $generated@@154 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@154 ($generated@@79 0)))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@139) (= (type $generated@@158) $generated@@140)) (or ($generated@@156 $generated@@158) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@158 $generated@@142)))) true)
 :pattern ( ($generated@@155 $generated@@157 $generated@@158))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@139) (= (type $generated@@162) $generated@@140)) (or ($generated@@160 $generated@@162) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@162 $generated@@142)))) true)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@139) (= (type $generated@@165) $generated@@140)) (or ($generated@@163 $generated@@165) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@165 $generated@@142)))) true)
 :pattern ( ($generated@@137 $generated@@164 $generated@@165))
))))
(assert  (and (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@166 $generated@@169 $generated@@170)) $generated@@150)
 :pattern ( ($generated@@166 $generated@@169 $generated@@170))
)) (forall (($generated@@171 Int) ) (! (= (type ($generated@@167 $generated@@171)) $generated@@150)
 :pattern ( ($generated@@167 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ) (!  (=> (= (type $generated@@172) $generated@@150) (=> (and (and (<= 0 $generated@@173) (<= 0 $generated@@174)) (<= (+ $generated@@173 $generated@@174) ($generated@@168 $generated@@172))) (= ($generated@@166 ($generated@@166 $generated@@172 ($generated@@167 $generated@@173)) ($generated@@167 $generated@@174)) ($generated@@166 $generated@@172 ($generated@@167 (+ $generated@@173 $generated@@174))))))
 :pattern ( ($generated@@166 ($generated@@166 $generated@@172 ($generated@@167 $generated@@173)) ($generated@@167 $generated@@174)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@68) (= (type $generated@@180) $generated@@68)) (= (type $generated@@181) $generated@@140)) ($generated@@141 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@141 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@140) (= (type $generated@@188) $generated@@140)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert  (and (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@72)
 :pattern ( ($generated@@189 $generated@@191))
)) (= (type $generated@@190) $generated@@140)))
(assert (= ($generated@@189 $generated@@190) $generated@@65))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@68)
 :pattern ( ($generated@@192 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) ($generated@@80 $generated@@150 $generated@@2)) (= (type $generated@@196) $generated@@68)) ($generated@@141 $generated@@195 ($generated@@192 $generated@@196))) ($generated@@193 $generated@@195))
 :pattern ( ($generated@@141 $generated@@195 ($generated@@192 $generated@@196)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (= ($generated@@1 ($generated@@199 $generated@@203 $generated@@204)) 17)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@205 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@199 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@201 ($generated@@199 $generated@@207 $generated@@208)) $generated@@208)
 :pattern ( ($generated@@199 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@201 (type $generated@@209))))
(= (type ($generated@@197 $generated@@209 $generated@@210 $generated@@211)) $generated@@212))
 :pattern ( ($generated@@197 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(let (($generated@@218 (type $generated@@214)))
(= (type ($generated@@202 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@199 $generated@@218 $generated@@217))))
 :pattern ( ($generated@@202 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@201 (type $generated@@219))))
 (=> (= (type $generated@@222) $generated@@223) (= ($generated@@197 ($generated@@202 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@220 $generated@@221) $generated@@222)))
 :weight 0
))) (and (and (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@197 ($generated@@202 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@197 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@233 $generated@@235) (= ($generated@@197 ($generated@@202 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@197 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or true (= ($generated@@197 ($generated@@202 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@197 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ) (! (= (type ($generated@@198 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@199 $generated@@81 $generated@@4))
 :pattern ( ($generated@@198 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@71 (type $generated@@251))))
 (=> (and (and (and (and (= (type $generated@@246) $generated@@81) (= (type $generated@@247) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@248) ($generated@@70 $generated@@4))) (= (type $generated@@250) $generated@@81)) (= (type $generated@@251) ($generated@@70 $generated@@252))) (= ($generated@@0 ($generated@@197 ($generated@@198 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))  (=> (and (not (= $generated@@250 $generated@@246)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@247 $generated@@250) $generated@@248))) $generated@@249))))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@140)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) $generated@@150)) (= ($generated@@141 ($generated@@253 $generated@@259 $generated@@260) ($generated@@176 $generated@@257 $generated@@258))  (and ($generated@@254 $generated@@259 $generated@@257) ($generated@@254 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@141 ($generated@@253 $generated@@259 $generated@@260) ($generated@@176 $generated@@257 $generated@@258)))
)))
(assert ($generated@@141 $generated@@190 $generated@@142))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@261 $generated@@262)) ($generated@@78 $generated@@190 $generated@@142 $generated@@262))
 :pattern ( ($generated@@78 $generated@@190 $generated@@142 $generated@@262))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@264 T@U) ($generated@@265 Int) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@139) (= (type $generated@@266) $generated@@140)) (or ($generated@@263 $generated@@265 $generated@@266) (and (not (= 2 $generated@@136)) (and (<= ($generated@@144 0) $generated@@265) ($generated@@141 $generated@@266 $generated@@142))))) true)
 :pattern ( ($generated@@143 $generated@@264 $generated@@265 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@140) (= (type $generated@@268) $generated@@140)) (= ($generated@@182 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@182 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@140) (= (type $generated@@271) $generated@@140)) (= ($generated@@269 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@80 $generated@@150 $generated@@4)) (= (type $generated@@275) $generated@@68)) (= ($generated@@141 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@0 ($generated@@85 $generated@@274 $generated@@276))) ($generated@@254 $generated@@276 $generated@@275))
 :pattern ( ($generated@@85 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@141 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@80 $generated@@150 $generated@@4)) (= (type $generated@@280) $generated@@68)) (= ($generated@@141 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@150) ($generated@@0 ($generated@@85 $generated@@279 $generated@@281))) ($generated@@254 $generated@@281 $generated@@280))
 :pattern ( ($generated@@85 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@141 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@282 Int) ) (! (= ($generated@@144 $generated@@282) $generated@@282)
 :pattern ( ($generated@@144 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
(= (type ($generated@@283 $generated@@284)) $generated@@285))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= ($generated@@283 $generated@@286) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 Int) ) (!  (=> (and (and (= (type $generated@@287) $generated@@139) (= (type $generated@@288) $generated@@140)) (and ($generated@@141 $generated@@288 $generated@@142) (= $generated@@289 0))) ($generated@@143 $generated@@287 $generated@@289 $generated@@288))
 :pattern ( ($generated@@143 $generated@@287 $generated@@289 $generated@@288))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@140) (= (type $generated@@292) $generated@@140)) (and ($generated@@290 $generated@@291) ($generated@@290 $generated@@292))) (= ($generated@@269 $generated@@291 $generated@@292) true))
 :pattern ( ($generated@@269 $generated@@291 $generated@@292) ($generated@@290 $generated@@291))
 :pattern ( ($generated@@269 $generated@@291 $generated@@292) ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) $generated@@68)) (= (type $generated@@296) $generated@@150)) (= (type $generated@@297) $generated@@150)) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@298)) (= ($generated@@78 ($generated@@253 $generated@@296 $generated@@297) ($generated@@176 $generated@@294 $generated@@295) $generated@@298)  (and ($generated@@293 $generated@@296 $generated@@294 $generated@@298) ($generated@@293 $generated@@297 $generated@@295 $generated@@298))))
 :pattern ( ($generated@@78 ($generated@@253 $generated@@296 $generated@@297) ($generated@@176 $generated@@294 $generated@@295) $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@140) (= ($generated@@175 $generated@@299) (= ($generated@@189 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@175 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@140) (= ($generated@@300 $generated@@301) (= ($generated@@189 $generated@@301) $generated@@63)))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@140) (= ($generated@@290 $generated@@302) (= ($generated@@189 $generated@@302) $generated@@65)))
 :pattern ( ($generated@@290 $generated@@302))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@139) (= (type $generated@@305) $generated@@140)) (= (type $generated@@306) $generated@@150)) (and ($generated@@141 $generated@@305 $generated@@142) (= $generated@@306 ($generated@@167 0)))) ($generated@@303 $generated@@304 $generated@@306 $generated@@305))
 :pattern ( ($generated@@303 $generated@@304 $generated@@306 $generated@@305))
))))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) $generated@@139) (= (type $generated@@308) $generated@@140)) (and ($generated@@141 $generated@@308 $generated@@142) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@150) ($generated@@303 ($generated@@138 $generated@@307) $generated@@309 $generated@@308))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@307) $generated@@309 $generated@@308))
)))) ($generated@@159 ($generated@@138 $generated@@307) $generated@@308))
 :pattern ( ($generated@@159 ($generated@@138 $generated@@307) $generated@@308))
))))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@140) ($generated@@175 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@150) (= (type $generated@@312) $generated@@150)) (= $generated@@310 ($generated@@253 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@175 $generated@@310))
)))
(assert  (and (and (forall (($generated@@317 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@317)) 18)) (forall (($generated@@318 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
))) (forall (($generated@@319 T@T) ) (! (= (type ($generated@@313 $generated@@319)) ($generated@@315 $generated@@319))
 :pattern ( ($generated@@313 $generated@@319))
))))
(assert (forall (($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@320)) 0)
 :pattern ( ($generated@@313 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@140) ($generated@@290 $generated@@321)) (= $generated@@321 $generated@@190))
 :pattern ( ($generated@@290 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@140)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@140) ($generated@@300 $generated@@324)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@140) (= $generated@@324 ($generated@@322 $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@300 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@140)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (= (type $generated@@329) $generated@@139) (= (type $generated@@330) $generated@@150)) (= (type $generated@@331) $generated@@140)) (or ($generated@@326 ($generated@@283 $generated@@330) $generated@@331) (and (not (= 2 $generated@@136)) ($generated@@141 $generated@@331 $generated@@142)))) (and (and (=> (< 0 ($generated@@168 $generated@@330)) (=> ($generated@@300 $generated@@331) (let (($generated@@332 ($generated@@327 $generated@@331)))
($generated@@326 ($generated@@166 $generated@@330 ($generated@@167 1)) $generated@@332)))) (=> (=> (< 0 ($generated@@168 $generated@@330)) (ite ($generated@@300 $generated@@331) (let (($generated@@333 ($generated@@327 $generated@@331)))
($generated@@303 ($generated@@138 $generated@@329) ($generated@@166 $generated@@330 ($generated@@167 1)) $generated@@333)) true)) (=> (= ($generated@@144 0) ($generated@@168 $generated@@330)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@150) ($generated@@149 $generated@@334 $generated@@330)) ($generated@@326 $generated@@334 $generated@@331))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@329) $generated@@334 $generated@@331))
))))) (= ($generated@@303 ($generated@@138 $generated@@329) ($generated@@283 $generated@@330) $generated@@331)  (and (=> (< 0 ($generated@@168 $generated@@330)) (ite ($generated@@300 $generated@@331) (let (($generated@@335 ($generated@@327 $generated@@331)))
($generated@@303 ($generated@@138 $generated@@329) ($generated@@166 $generated@@330 ($generated@@167 1)) $generated@@335)) true)) (=> (= ($generated@@144 0) ($generated@@168 $generated@@330)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@150) ($generated@@149 $generated@@336 $generated@@330)) ($generated@@303 ($generated@@138 $generated@@329) $generated@@336 $generated@@331))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@329) $generated@@336 $generated@@331))
)))))))
 :weight 3
 :pattern ( ($generated@@303 ($generated@@138 $generated@@329) ($generated@@283 $generated@@330) $generated@@331))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) $generated@@139) (= (type $generated@@338) $generated@@150)) (= (type $generated@@339) $generated@@140)) (= ($generated@@303 ($generated@@138 $generated@@337) $generated@@338 $generated@@339) ($generated@@303 $generated@@337 $generated@@338 $generated@@339)))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@337) $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@139) (= (type $generated@@342) $generated@@140)) (= ($generated@@143 ($generated@@138 $generated@@340) $generated@@341 $generated@@342) ($generated@@143 $generated@@340 $generated@@341 $generated@@342)))
 :pattern ( ($generated@@143 ($generated@@138 $generated@@340) $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@150)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@68) (= (type $generated@@347) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@293 ($generated@@343 $generated@@345) $generated@@346 $generated@@347) ($generated@@78 $generated@@345 $generated@@346 $generated@@347)))
 :pattern ( ($generated@@293 ($generated@@343 $generated@@345) $generated@@346 $generated@@347))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@348) $generated@@139) (= (type $generated@@349) $generated@@140)) (and ($generated@@141 $generated@@349 $generated@@142) ($generated@@159 ($generated@@138 $generated@@348) $generated@@349))) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@150) ($generated@@303 ($generated@@138 $generated@@348) $generated@@350 $generated@@349))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@348) $generated@@350 $generated@@349))
)))
 :pattern ( ($generated@@159 ($generated@@138 $generated@@348) $generated@@349))
))))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@83 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@80 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@85 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 19)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@80 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@85 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@85 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 20)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@85 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@150) (= (type $generated@@395) $generated@@150)) (and ($generated@@393 $generated@@395) (<= ($generated@@168 $generated@@395) ($generated@@168 $generated@@394)))) (and (= ($generated@@393 ($generated@@166 $generated@@394 $generated@@395)) ($generated@@393 $generated@@394)) (= ($generated@@168 ($generated@@166 $generated@@394 $generated@@395)) (- ($generated@@168 $generated@@394) ($generated@@168 $generated@@395)))))
 :pattern ( ($generated@@166 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 Int) ) (!  (=> (<= 0 $generated@@396) (and ($generated@@393 ($generated@@167 $generated@@396)) (= ($generated@@168 ($generated@@167 $generated@@396)) $generated@@396)))
 :pattern ( ($generated@@167 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@83 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@80 $generated@@398 $generated@@2)) (= ($generated@@193 $generated@@397) (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@398) (and (<= 0 ($generated ($generated@@85 $generated@@397 $generated@@399))) (<= ($generated ($generated@@85 $generated@@397 $generated@@399)) ($generated@@351 $generated@@397))))
 :pattern ( ($generated@@85 $generated@@397 $generated@@399))
)))))
 :pattern ( ($generated@@193 $generated@@397))
)))
(assert (forall (($generated@@401 T@T) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@401)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@150) ($generated@@254 $generated@@403 $generated@@142)) (and (= ($generated@@343 ($generated@@400 $generated@@140 $generated@@403)) $generated@@403) ($generated@@141 ($generated@@400 $generated@@140 $generated@@403) $generated@@142)))
 :pattern ( ($generated@@254 $generated@@403 $generated@@142))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) $generated@@139) (= (type $generated@@405) $generated@@150)) (= (type $generated@@406) $generated@@140)) (or ($generated@@326 $generated@@405 $generated@@406) (and (not (= 2 $generated@@136)) ($generated@@141 $generated@@406 $generated@@142)))) true)
 :pattern ( ($generated@@303 $generated@@404 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@140) (= ($generated@@141 ($generated@@322 $generated@@407) $generated@@142) ($generated@@141 $generated@@407 $generated@@142)))
 :pattern ( ($generated@@141 ($generated@@322 $generated@@407) $generated@@142))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@408) $generated@@140) (= (type $generated@@409) $generated@@140)) (and ($generated@@300 $generated@@408) ($generated@@300 $generated@@409))) (= ($generated@@269 $generated@@408 $generated@@409) ($generated@@269 ($generated@@327 $generated@@408) ($generated@@327 $generated@@409))))
 :pattern ( ($generated@@269 $generated@@408 $generated@@409) ($generated@@300 $generated@@408))
 :pattern ( ($generated@@269 $generated@@408 $generated@@409) ($generated@@300 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@361 (type $generated@@410))))
(let (($generated@@412 ($generated@@360 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@359 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@358 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@361 (type $generated@@415))))
(= (type ($generated@@414 $generated@@415)) ($generated@@80 $generated@@416 $generated@@4)))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@361 (type $generated@@417))))
(let (($generated@@419 ($generated@@360 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@359 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@358 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@418) ($generated@@0 ($generated@@85 ($generated@@414 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@414 $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@379 (type $generated@@421))))
(let (($generated@@423 ($generated@@378 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@377 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@376 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@375 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@379 (type $generated@@426))))
(= (type ($generated@@425 $generated@@426)) ($generated@@80 $generated@@427 $generated@@4)))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@379 (type $generated@@428))))
(let (($generated@@430 ($generated@@378 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@377 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@376 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@429) ($generated@@0 ($generated@@85 ($generated@@425 $generated@@428) $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@425 $generated@@428))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) $generated@@139) (= (type $generated@@433) $generated@@150)) (= (type $generated@@434) $generated@@140)) (or ($generated@@326 ($generated@@283 $generated@@433) ($generated@@283 $generated@@434)) (and (not (= 2 $generated@@136)) ($generated@@141 $generated@@434 $generated@@142)))) (and (and (=> (< 0 ($generated@@168 $generated@@433)) (=> ($generated@@300 $generated@@434) (let (($generated@@435 ($generated@@327 $generated@@434)))
($generated@@326 ($generated@@166 $generated@@433 ($generated@@167 1)) $generated@@435)))) (=> (=> (< 0 ($generated@@168 $generated@@433)) (ite ($generated@@300 $generated@@434) (let (($generated@@436 ($generated@@327 $generated@@434)))
($generated@@303 ($generated@@138 $generated@@432) ($generated@@166 $generated@@433 ($generated@@167 1)) $generated@@436)) true)) (=> (= ($generated@@144 0) ($generated@@168 $generated@@433)) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@150) ($generated@@149 $generated@@437 $generated@@433)) ($generated@@326 $generated@@437 $generated@@434))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@432) $generated@@437 $generated@@434))
))))) (= ($generated@@303 ($generated@@138 $generated@@432) ($generated@@283 $generated@@433) ($generated@@283 $generated@@434))  (and (=> (< 0 ($generated@@168 $generated@@433)) (ite ($generated@@300 $generated@@434) (let (($generated@@438 ($generated@@327 $generated@@434)))
($generated@@303 ($generated@@138 $generated@@432) ($generated@@166 $generated@@433 ($generated@@167 1)) $generated@@438)) true)) (=> (= ($generated@@144 0) ($generated@@168 $generated@@433)) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@149 $generated@@439 $generated@@433)) ($generated@@303 ($generated@@138 $generated@@432) $generated@@439 $generated@@434))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@432) $generated@@439 $generated@@434))
)))))))
 :weight 3
 :pattern ( ($generated@@303 ($generated@@138 $generated@@432) ($generated@@283 $generated@@433) ($generated@@283 $generated@@434)))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@80 $generated@@150 $generated@@2)) (= (type $generated@@441) $generated@@68)) (= ($generated@@141 $generated@@440 ($generated@@192 $generated@@441)) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) (< 0 ($generated ($generated@@85 $generated@@440 $generated@@442)))) ($generated@@254 $generated@@442 $generated@@441))
 :pattern ( ($generated@@85 $generated@@440 $generated@@442))
))))
 :pattern ( ($generated@@141 $generated@@440 ($generated@@192 $generated@@441)))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@140) ($generated@@443 $generated@@444)) (or ($generated@@300 $generated@@444) ($generated@@290 $generated@@444)))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@150) (= (type $generated@@446) $generated@@150)) (or (or ($generated@@149 $generated@@445 $generated@@446) (= $generated@@445 $generated@@446)) ($generated@@149 $generated@@446 $generated@@445)))
 :pattern ( ($generated@@149 $generated@@445 $generated@@446) ($generated@@149 $generated@@446 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@80 $generated@@150 $generated@@4)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@447 ($generated@@272 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@150) ($generated@@0 ($generated@@85 $generated@@447 $generated@@450))) ($generated@@293 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@85 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@78 $generated@@447 ($generated@@272 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (= (type $generated@@451) ($generated@@80 $generated@@150 $generated@@4)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@451 ($generated@@277 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@150) ($generated@@0 ($generated@@85 $generated@@451 $generated@@454))) ($generated@@293 $generated@@454 $generated@@452 $generated@@453))
 :pattern ( ($generated@@85 $generated@@451 $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@451 ($generated@@277 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(= ($generated ($generated@@85 ($generated@@352 $generated@@456) $generated@@455)) 0))
 :pattern ( (let (($generated@@456 (type $generated@@455)))
($generated@@85 ($generated@@352 $generated@@456) $generated@@455)))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) ($generated@@80 $generated@@150 $generated@@4))
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@361 (type $generated@@460))))
(let (($generated@@462 ($generated@@360 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460)) ($generated@@80 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@458 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@359 $generated@@150 $generated@@150)) (= (type $generated@@464) $generated@@150)) (= ($generated@@0 ($generated@@85 ($generated@@457 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@85 ($generated@@357 $generated@@463) ($generated@@183 ($generated@@400 $generated@@140 $generated@@464)))) (= ($generated@@85 ($generated@@458 $generated@@463) ($generated@@183 ($generated@@400 $generated@@140 $generated@@464))) ($generated@@184 ($generated@@400 $generated@@140 $generated@@464))))))
 :pattern ( ($generated@@85 ($generated@@457 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@80 $generated@@150 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@379 (type $generated@@468))))
(let (($generated@@470 ($generated@@378 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@80 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@377 $generated@@150 $generated@@150)) (= (type $generated@@472) $generated@@150)) (= ($generated@@0 ($generated@@85 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@471) ($generated@@183 ($generated@@400 $generated@@140 $generated@@472)))) (= ($generated@@85 ($generated@@466 $generated@@471) ($generated@@183 ($generated@@400 $generated@@140 $generated@@472))) ($generated@@184 ($generated@@400 $generated@@140 $generated@@472))))))
 :pattern ( ($generated@@85 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@360 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@359 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@85 ($generated@@414 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@85 ($generated@@357 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@85 ($generated@@458 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@473) $generated@@477))
 :pattern ( ($generated@@85 ($generated@@458 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@378 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@377 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@85 ($generated@@425 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@85 ($generated@@375 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@85 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@478) $generated@@482))
 :pattern ( ($generated@@85 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@85 ($generated@@425 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@359 $generated@@150 $generated@@150)) (= (type $generated@@487) $generated@@68)) (= (type $generated@@488) $generated@@68)) (= (type $generated@@489) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@486) $generated@@490))) (and ($generated@@293 ($generated@@85 ($generated@@458 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@293 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@85 ($generated@@458 $generated@@486) $generated@@490))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@78 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@377 $generated@@150 $generated@@150)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) $generated@@68)) (= (type $generated@@497) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@494) $generated@@498))) (and ($generated@@293 ($generated@@85 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@293 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@85 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@78 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@139)
 :pattern ( ($generated@@499 $generated@@501))
)) (= (type $generated@@500) $generated@@139)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@139) (= (type $generated@@503) $generated@@140)) (= ($generated@@155 $generated@@502 $generated@@503) ($generated@@155 $generated@@500 $generated@@503)))
 :pattern ( ($generated@@155 ($generated@@499 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@139) (= (type $generated@@505) $generated@@140)) (= ($generated@@159 $generated@@504 $generated@@505) ($generated@@159 $generated@@500 $generated@@505)))
 :pattern ( ($generated@@159 ($generated@@499 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@139) (= (type $generated@@507) $generated@@140)) (= ($generated@@137 $generated@@506 $generated@@507) ($generated@@137 $generated@@500 $generated@@507)))
 :pattern ( ($generated@@137 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@508) $generated@@140) (= (type $generated@@509) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@261 $generated@@509)) (= ($generated@@78 ($generated@@322 $generated@@508) $generated@@142 $generated@@509) ($generated@@78 $generated@@508 $generated@@142 $generated@@509)))
 :pattern ( ($generated@@78 ($generated@@322 $generated@@508) $generated@@142 $generated@@509))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@139) (= (type $generated@@511) $generated@@150)) (= (type $generated@@512) $generated@@140)) (or ($generated@@326 $generated@@511 $generated@@512) (and (not (= 2 $generated@@136)) ($generated@@141 $generated@@512 $generated@@142)))) (and (and (=> (< 0 ($generated@@168 $generated@@511)) (=> ($generated@@300 $generated@@512) (let (($generated@@513 ($generated@@327 $generated@@512)))
($generated@@326 ($generated@@166 $generated@@511 ($generated@@167 1)) $generated@@513)))) (=> (=> (< 0 ($generated@@168 $generated@@511)) (ite ($generated@@300 $generated@@512) (let (($generated@@514 ($generated@@327 $generated@@512)))
($generated@@303 $generated@@510 ($generated@@166 $generated@@511 ($generated@@167 1)) $generated@@514)) true)) (=> (= ($generated@@144 0) ($generated@@168 $generated@@511)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) ($generated@@149 $generated@@515 $generated@@511)) ($generated@@326 $generated@@515 $generated@@512))
 :pattern ( ($generated@@303 $generated@@510 $generated@@515 $generated@@512))
))))) (= ($generated@@303 ($generated@@138 $generated@@510) $generated@@511 $generated@@512)  (and (=> (< 0 ($generated@@168 $generated@@511)) (ite ($generated@@300 $generated@@512) (let (($generated@@516 ($generated@@327 $generated@@512)))
($generated@@303 $generated@@510 ($generated@@166 $generated@@511 ($generated@@167 1)) $generated@@516)) true)) (=> (= ($generated@@144 0) ($generated@@168 $generated@@511)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) ($generated@@149 $generated@@517 $generated@@511)) ($generated@@303 $generated@@510 $generated@@517 $generated@@512))
 :pattern ( ($generated@@303 $generated@@510 $generated@@517 $generated@@512))
)))))))
 :pattern ( ($generated@@303 ($generated@@138 $generated@@510) $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@140) ($generated@@141 $generated@@518 $generated@@142)) (or ($generated@@300 $generated@@518) ($generated@@290 $generated@@518)))
 :pattern ( ($generated@@290 $generated@@518) ($generated@@141 $generated@@518 $generated@@142))
 :pattern ( ($generated@@300 $generated@@518) ($generated@@141 $generated@@518 $generated@@142))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@519 T@U) ($generated@@520 Int) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@139) (= (type $generated@@521) $generated@@140)) (or ($generated@@263 ($generated@@144 $generated@@520) $generated@@521) (and (not (= 2 $generated@@136)) (and (<= ($generated@@144 0) $generated@@520) ($generated@@141 $generated@@521 $generated@@142))))) (and (=> (< 0 $generated@@520) (=> ($generated@@300 $generated@@521) (let (($generated@@522 ($generated@@327 $generated@@521)))
($generated@@263 (- $generated@@520 1) $generated@@522)))) (= ($generated@@143 ($generated@@138 $generated@@519) ($generated@@144 $generated@@520) $generated@@521)  (=> (< 0 $generated@@520) (ite ($generated@@300 $generated@@521) (let (($generated@@523 ($generated@@327 $generated@@521)))
($generated@@143 ($generated@@138 $generated@@519) (- $generated@@520 1) $generated@@523)) true)))))
 :weight 3
 :pattern ( ($generated@@143 ($generated@@138 $generated@@519) ($generated@@144 $generated@@520) $generated@@521))
))))
(assert (forall (($generated@@525 T@T) ) (! (= (type ($generated@@524 $generated@@525)) ($generated@@80 $generated@@525 $generated@@4))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@379 (type $generated@@526))))
(let (($generated@@528 ($generated@@378 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@377 $generated@@528 $generated@@527)) (= (= $generated@@526 ($generated@@376 $generated@@528 $generated@@527)) (= ($generated@@375 $generated@@526) ($generated@@524 $generated@@528))))))
 :pattern ( ($generated@@375 $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@379 (type $generated@@529))))
(let (($generated@@531 ($generated@@378 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@377 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@376 $generated@@531 $generated@@530)) (= ($generated@@425 $generated@@529) ($generated@@524 $generated@@530))))))
 :pattern ( ($generated@@425 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@379 (type $generated@@532))))
(let (($generated@@534 ($generated@@378 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@377 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@376 $generated@@534 $generated@@533)) (= ($generated@@465 $generated@@532) ($generated@@524 $generated@@150))))))
 :pattern ( ($generated@@465 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@361 (type $generated@@535))))
(let (($generated@@537 ($generated@@360 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@359 $generated@@537 $generated@@536)) (or (= $generated@@535 ($generated@@358 $generated@@537 $generated@@536)) (exists (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@150)) ($generated@@0 ($generated@@85 ($generated@@457 $generated@@535) ($generated@@343 ($generated@@253 $generated@@538 $generated@@539)))))
 :no-pattern (type $generated@@538)
 :no-pattern (type $generated@@539)
 :no-pattern ($generated $generated@@538)
 :no-pattern ($generated@@0 $generated@@538)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
))))))
 :pattern ( ($generated@@457 $generated@@535))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@379 (type $generated@@540))))
(let (($generated@@542 ($generated@@378 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@377 $generated@@542 $generated@@541)) (or (= $generated@@540 ($generated@@376 $generated@@542 $generated@@541)) (exists (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@150)) ($generated@@0 ($generated@@85 ($generated@@465 $generated@@540) ($generated@@343 ($generated@@253 $generated@@543 $generated@@544)))))
 :no-pattern (type $generated@@543)
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@465 $generated@@540))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@150) ($generated@@254 $generated@@545 $generated@@46)) (and (= ($generated@@343 ($generated@@400 $generated@@2 $generated@@545)) $generated@@545) ($generated@@141 ($generated@@400 $generated@@2 $generated@@545) $generated@@46)))
 :pattern ( ($generated@@254 $generated@@545 $generated@@46))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@150) ($generated@@254 $generated@@546 $generated@@47)) (and (= ($generated@@343 ($generated@@400 $generated@@3 $generated@@546)) $generated@@546) ($generated@@141 ($generated@@400 $generated@@3 $generated@@546) $generated@@47)))
 :pattern ( ($generated@@254 $generated@@546 $generated@@47))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) ($generated@@254 $generated@@547 $generated@@44)) (and (= ($generated@@343 ($generated@@400 $generated@@4 $generated@@547)) $generated@@547) ($generated@@141 ($generated@@400 $generated@@4 $generated@@547) $generated@@44)))
 :pattern ( ($generated@@254 $generated@@547 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@548) 21))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@150) ($generated@@254 $generated@@549 $generated@@45)) (and (= ($generated@@343 ($generated@@400 $generated@@548 $generated@@549)) $generated@@549) ($generated@@141 ($generated@@400 $generated@@548 $generated@@549) $generated@@45)))
 :pattern ( ($generated@@254 $generated@@549 $generated@@45))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@139) (= (type $generated@@551) $generated@@140)) (= ($generated@@155 ($generated@@138 $generated@@550) $generated@@551) ($generated@@155 $generated@@550 $generated@@551)))
 :pattern ( ($generated@@155 ($generated@@138 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@139) (= (type $generated@@553) $generated@@140)) (= ($generated@@159 ($generated@@138 $generated@@552) $generated@@553) ($generated@@159 $generated@@552 $generated@@553)))
 :pattern ( ($generated@@159 ($generated@@138 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@139) (= (type $generated@@555) $generated@@140)) (= ($generated@@137 ($generated@@138 $generated@@554) $generated@@555) ($generated@@137 $generated@@554 $generated@@555)))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@254 ($generated@@343 $generated@@556) $generated@@557) ($generated@@141 $generated@@556 $generated@@557)))
 :pattern ( ($generated@@254 ($generated@@343 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@150) (<= 0 ($generated@@168 $generated@@558)))
 :pattern ( ($generated@@168 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@83 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@80 $generated@@560 $generated@@2)) (<= 0 ($generated@@351 $generated@@559))))
 :pattern ( ($generated@@351 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@316 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@315 $generated@@562)) (<= 0 ($generated@@314 $generated@@561))))
 :pattern ( ($generated@@314 $generated@@561))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= ($generated@@563 ($generated@@483 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@483 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= ($generated@@567 ($generated@@483 $generated@@569 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@483 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (= ($generated@@76 ($generated@@483 $generated@@571 $generated@@572)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@68) (= (type $generated@@576) $generated@@68)) (= ($generated@@573 ($generated@@491 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@491 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@68)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@68) (= (type $generated@@580) $generated@@68)) (= ($generated@@577 ($generated@@491 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@491 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= ($generated@@76 ($generated@@491 $generated@@581 $generated@@582)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@150) (= (type $generated@@584) $generated@@150)) (= ($generated@@189 ($generated@@253 $generated@@583 $generated@@584)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@68)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@68) (= (type $generated@@588) $generated@@68)) (= ($generated@@585 ($generated@@176 $generated@@587 $generated@@588)) $generated@@587))
 :pattern ( ($generated@@176 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@68)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@68)) (= ($generated@@589 ($generated@@176 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@176 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (= ($generated@@183 ($generated@@253 $generated@@593 $generated@@594)) $generated@@593))
 :pattern ( ($generated@@253 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (= ($generated@@184 ($generated@@253 $generated@@595 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@253 $generated@@595 $generated@@596))
)))
(assert  (and (forall (($generated@@599 T@U) ) (! (= (type ($generated@@597 $generated@@599)) $generated@@68)
 :pattern ( ($generated@@597 $generated@@599))
)) (forall (($generated@@600 T@U) ($generated@@601 Int) ) (! (let (($generated@@602 ($generated@@316 (type $generated@@600))))
(= (type ($generated@@598 $generated@@600 $generated@@601)) $generated@@602))
 :pattern ( ($generated@@598 $generated@@600 $generated@@601))
))))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@315 $generated@@150)) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@603 ($generated@@597 $generated@@604) $generated@@605) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@314 $generated@@603))) ($generated@@293 ($generated@@598 $generated@@603 $generated@@606) $generated@@604 $generated@@605))
 :pattern ( ($generated@@598 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@597 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@608 Int) ) (! (= ($generated@@607 ($generated@@79 $generated@@608)) $generated@@608)
 :pattern ( ($generated@@79 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@68)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@68) (= ($generated@@609 ($generated@@272 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@272 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@68) (= ($generated@@76 ($generated@@272 $generated@@612)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@68)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@68) (= ($generated@@613 ($generated@@277 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@277 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@68) (= ($generated@@76 ($generated@@277 $generated@@616)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@68)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@68) (= ($generated@@617 ($generated@@192 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@192 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@68) (= ($generated@@76 ($generated@@192 $generated@@620)) $generated@@56))
 :pattern ( ($generated@@192 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@68)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@68) (= ($generated@@621 ($generated@@597 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@597 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@68) (= ($generated@@76 ($generated@@597 $generated@@624)) $generated@@57))
 :pattern ( ($generated@@597 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@140) (= ($generated@@189 ($generated@@322 $generated@@625)) $generated@@63))
 :pattern ( ($generated@@322 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@140) (= ($generated@@327 ($generated@@322 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@322 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
(= ($generated@@400 $generated@@628 ($generated@@343 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@343 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@359 $generated@@150 $generated@@150)) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) $generated@@68)) (= ($generated@@141 $generated@@629 ($generated@@483 $generated@@630 $generated@@631)) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@629) $generated@@632))) (and ($generated@@254 ($generated@@85 ($generated@@458 $generated@@629) $generated@@632) $generated@@631) ($generated@@254 $generated@@632 $generated@@630)))
 :pattern ( ($generated@@85 ($generated@@458 $generated@@629) $generated@@632))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@629) $generated@@632))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@483 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@377 $generated@@150 $generated@@150)) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) $generated@@68)) (= ($generated@@141 $generated@@633 ($generated@@491 $generated@@634 $generated@@635)) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@150) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@633) $generated@@636))) (and ($generated@@254 ($generated@@85 ($generated@@466 $generated@@633) $generated@@636) $generated@@635) ($generated@@254 $generated@@636 $generated@@634)))
 :pattern ( ($generated@@85 ($generated@@466 $generated@@633) $generated@@636))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@633) $generated@@636))
))))
 :pattern ( ($generated@@141 $generated@@633 ($generated@@491 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@150) (= (type $generated@@638) $generated@@150)) (and (and (and (=> ($generated@@149 $generated@@637 $generated@@638) (not (= $generated@@637 $generated@@638))) (=> (and ($generated@@393 $generated@@637) (not ($generated@@393 $generated@@638))) ($generated@@149 $generated@@637 $generated@@638))) (=> (and ($generated@@393 $generated@@637) ($generated@@393 $generated@@638)) (= ($generated@@149 $generated@@637 $generated@@638) (< ($generated@@168 $generated@@637) ($generated@@168 $generated@@638))))) (=> (and ($generated@@149 $generated@@637 $generated@@638) ($generated@@393 $generated@@638)) ($generated@@393 $generated@@637))))
 :pattern ( ($generated@@149 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (< ($generated@@639 $generated@@641) ($generated@@640 ($generated@@253 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@253 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@150) (= (type $generated@@644) $generated@@150)) (< ($generated@@639 $generated@@644) ($generated@@640 ($generated@@253 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@253 $generated@@643 $generated@@644))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@645 T@U) ($generated@@646 Int) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@139) (= (type $generated@@647) $generated@@140)) (or ($generated@@263 ($generated@@144 $generated@@646) ($generated@@283 $generated@@647)) (and (not (= 2 $generated@@136)) (and (<= ($generated@@144 0) $generated@@646) ($generated@@141 $generated@@647 $generated@@142))))) (and (=> (< 0 $generated@@646) (=> ($generated@@300 $generated@@647) (let (($generated@@648 ($generated@@327 $generated@@647)))
($generated@@263 (- $generated@@646 1) $generated@@648)))) (= ($generated@@143 ($generated@@138 $generated@@645) ($generated@@144 $generated@@646) ($generated@@283 $generated@@647))  (=> (< 0 $generated@@646) (ite ($generated@@300 $generated@@647) (let (($generated@@649 ($generated@@327 $generated@@647)))
($generated@@143 ($generated@@138 $generated@@645) (- $generated@@646 1) $generated@@649)) true)))))
 :weight 3
 :pattern ( ($generated@@143 ($generated@@138 $generated@@645) ($generated@@144 $generated@@646) ($generated@@283 $generated@@647)))
))))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@150) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) ($generated@@254 $generated@@650 ($generated@@483 $generated@@651 $generated@@652))) (and (= ($generated@@343 ($generated@@400 ($generated@@359 $generated@@150 $generated@@150) $generated@@650)) $generated@@650) ($generated@@141 ($generated@@400 ($generated@@359 $generated@@150 $generated@@150) $generated@@650) ($generated@@483 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@254 $generated@@650 ($generated@@483 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@150) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) $generated@@68)) ($generated@@254 $generated@@653 ($generated@@491 $generated@@654 $generated@@655))) (and (= ($generated@@343 ($generated@@400 ($generated@@377 $generated@@150 $generated@@150) $generated@@653)) $generated@@653) ($generated@@141 ($generated@@400 ($generated@@377 $generated@@150 $generated@@150) $generated@@653) ($generated@@491 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@254 $generated@@653 ($generated@@491 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@68) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@150)) ($generated@@254 $generated@@658 ($generated@@176 $generated@@656 $generated@@657))) (and (= ($generated@@343 ($generated@@400 $generated@@140 $generated@@658)) $generated@@658) ($generated@@141 ($generated@@400 $generated@@140 $generated@@658) ($generated@@176 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@254 $generated@@658 ($generated@@176 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@140) (< ($generated@@640 $generated@@659) ($generated@@640 ($generated@@322 $generated@@659))))
 :pattern ( ($generated@@322 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (! (let (($generated@@661 (type $generated@@660)))
 (not ($generated@@0 ($generated@@85 ($generated@@524 $generated@@661) $generated@@660))))
 :pattern ( (let (($generated@@661 (type $generated@@660)))
($generated@@85 ($generated@@524 $generated@@661) $generated@@660)))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@662 T@U) ($generated@@663 Int) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@139) (= (type $generated@@664) $generated@@140)) (or ($generated@@263 $generated@@663 $generated@@664) (and (not (= 2 $generated@@136)) (and (<= ($generated@@144 0) $generated@@663) ($generated@@141 $generated@@664 $generated@@142))))) (and (=> (< 0 $generated@@663) (=> ($generated@@300 $generated@@664) (let (($generated@@665 ($generated@@327 $generated@@664)))
($generated@@263 (- $generated@@663 1) $generated@@665)))) (= ($generated@@143 ($generated@@138 $generated@@662) $generated@@663 $generated@@664)  (=> (< 0 $generated@@663) (ite ($generated@@300 $generated@@664) (let (($generated@@666 ($generated@@327 $generated@@664)))
($generated@@143 $generated@@662 (- $generated@@663 1) $generated@@666)) true)))))
 :pattern ( ($generated@@143 ($generated@@138 $generated@@662) $generated@@663 $generated@@664))
))))
(assert (forall (($generated@@668 T@U) ) (! (= (type ($generated@@667 $generated@@668)) $generated@@73)
 :pattern ( ($generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@68) (= (type $generated@@670) $generated@@68)) (and (= ($generated@@76 ($generated@@176 $generated@@669 $generated@@670)) $generated@@62) (= ($generated@@667 ($generated@@176 $generated@@669 $generated@@670)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@140) (= ($generated@@639 ($generated@@343 $generated@@671)) ($generated@@640 $generated@@671)))
 :pattern ( ($generated@@639 ($generated@@343 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@150) ($generated@@254 $generated@@672 ($generated@@79 0))) (and (= ($generated@@343 ($generated@@400 $generated@@2 $generated@@672)) $generated@@672) ($generated@@141 ($generated@@400 ($generated@@80 $generated@@150 $generated@@4) $generated@@672) ($generated@@79 0))))
 :pattern ( ($generated@@254 $generated@@672 ($generated@@79 0)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@150) (= (type $generated@@674) $generated@@68)) ($generated@@254 $generated@@673 ($generated@@272 $generated@@674))) (and (= ($generated@@343 ($generated@@400 ($generated@@80 $generated@@150 $generated@@4) $generated@@673)) $generated@@673) ($generated@@141 ($generated@@400 ($generated@@80 $generated@@150 $generated@@4) $generated@@673) ($generated@@272 $generated@@674))))
 :pattern ( ($generated@@254 $generated@@673 ($generated@@272 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@150) (= (type $generated@@676) $generated@@68)) ($generated@@254 $generated@@675 ($generated@@277 $generated@@676))) (and (= ($generated@@343 ($generated@@400 ($generated@@80 $generated@@150 $generated@@4) $generated@@675)) $generated@@675) ($generated@@141 ($generated@@400 ($generated@@80 $generated@@150 $generated@@4) $generated@@675) ($generated@@277 $generated@@676))))
 :pattern ( ($generated@@254 $generated@@675 ($generated@@277 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@150) (= (type $generated@@678) $generated@@68)) ($generated@@254 $generated@@677 ($generated@@192 $generated@@678))) (and (= ($generated@@343 ($generated@@400 ($generated@@80 $generated@@150 $generated@@2) $generated@@677)) $generated@@677) ($generated@@141 ($generated@@400 ($generated@@80 $generated@@150 $generated@@2) $generated@@677) ($generated@@192 $generated@@678))))
 :pattern ( ($generated@@254 $generated@@677 ($generated@@192 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@150) (= (type $generated@@680) $generated@@68)) ($generated@@254 $generated@@679 ($generated@@597 $generated@@680))) (and (= ($generated@@343 ($generated@@400 ($generated@@315 $generated@@150) $generated@@679)) $generated@@679) ($generated@@141 ($generated@@400 ($generated@@315 $generated@@150) $generated@@679) ($generated@@597 $generated@@680))))
 :pattern ( ($generated@@254 $generated@@679 ($generated@@597 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@150) ($generated@@393 $generated@@681)) (= $generated@@681 ($generated@@167 ($generated@@168 $generated@@681))))
 :pattern ( ($generated@@168 $generated@@681))
 :pattern ( ($generated@@393 $generated@@681))
)))
(assert (= ($generated@@76 $generated@@142) $generated@@64))
(assert (= ($generated@@667 $generated@@142) $generated@@67))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@80 $generated@@150 $generated@@2)) (= (type $generated@@683) $generated@@68)) (= (type $generated@@684) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@682 ($generated@@192 $generated@@683) $generated@@684) (forall (($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@150) (< 0 ($generated ($generated@@85 $generated@@682 $generated@@685)))) ($generated@@293 $generated@@685 $generated@@683 $generated@@684))
 :pattern ( ($generated@@85 $generated@@682 $generated@@685))
))))
 :pattern ( ($generated@@78 $generated@@682 ($generated@@192 $generated@@683) $generated@@684))
)))
(assert (= $generated@@190 ($generated@@283 $generated@@190)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@150) (= (type $generated@@687) $generated@@150)) (and ($generated@@393 $generated@@687) (<= ($generated@@168 $generated@@687) ($generated@@168 $generated@@686)))) (or (and (= $generated@@687 ($generated@@167 0)) (= ($generated@@166 $generated@@686 $generated@@687) $generated@@686)) (and (not (= $generated@@687 ($generated@@167 0))) ($generated@@149 ($generated@@166 $generated@@686 $generated@@687) $generated@@686))))
 :pattern ( ($generated@@166 $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (= (type $generated@@688) $generated@@140) (= (type $generated@@689) $generated@@68)) (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@690) (and ($generated@@175 $generated@@688) (exists (($generated@@691 T@U) ) (!  (and (= (type $generated@@691) $generated@@68) ($generated@@78 $generated@@688 ($generated@@176 $generated@@689 $generated@@691) $generated@@690))
 :pattern ( ($generated@@78 $generated@@688 ($generated@@176 $generated@@689 $generated@@691) $generated@@690))
))))) ($generated@@293 ($generated@@183 $generated@@688) $generated@@689 $generated@@690))
 :pattern ( ($generated@@293 ($generated@@183 $generated@@688) $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@140) (= (type $generated@@693) $generated@@68)) (= (type $generated@@694) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@694) (and ($generated@@175 $generated@@692) (exists (($generated@@695 T@U) ) (!  (and (= (type $generated@@695) $generated@@68) ($generated@@78 $generated@@692 ($generated@@176 $generated@@695 $generated@@693) $generated@@694))
 :pattern ( ($generated@@78 $generated@@692 ($generated@@176 $generated@@695 $generated@@693) $generated@@694))
))))) ($generated@@293 ($generated@@184 $generated@@692) $generated@@693 $generated@@694))
 :pattern ( ($generated@@293 ($generated@@184 $generated@@692) $generated@@693 $generated@@694))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@139) (= (type $generated@@697) $generated@@140)) (or ($generated@@156 ($generated@@283 $generated@@697)) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@697 $generated@@142)))) (and (=> ($generated@@0 ($generated@@283 ($generated@@11 ($generated@@300 ($generated@@283 $generated@@697))))) (let (($generated@@698 ($generated@@283 ($generated@@327 ($generated@@283 $generated@@697)))))
($generated@@156 $generated@@698))) (= ($generated@@155 ($generated@@138 $generated@@696) ($generated@@283 $generated@@697)) (ite ($generated@@300 ($generated@@283 $generated@@697)) ($generated@@0 (let (($generated@@699 ($generated@@283 ($generated@@327 ($generated@@283 $generated@@697)))))
($generated@@283 ($generated@@11 ($generated@@155 ($generated@@138 $generated@@696) $generated@@699))))) true))))
 :weight 3
 :pattern ( ($generated@@155 ($generated@@138 $generated@@696) ($generated@@283 $generated@@697)))
))))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@700) $generated@@140) (= (type $generated@@701) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@261 $generated@@701) (and ($generated@@300 $generated@@700) ($generated@@78 $generated@@700 $generated@@142 $generated@@701)))) ($generated@@78 ($generated@@327 $generated@@700) $generated@@142 $generated@@701))
 :pattern ( ($generated@@78 ($generated@@327 $generated@@700) $generated@@142 $generated@@701))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@702) $generated@@139) (= (type $generated@@703) $generated@@140)) (or ($generated@@156 $generated@@703) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@703 $generated@@142)))) (and (=> ($generated@@300 $generated@@703) (let (($generated@@704 ($generated@@327 $generated@@703)))
($generated@@156 $generated@@704))) (= ($generated@@155 ($generated@@138 $generated@@702) $generated@@703) (ite ($generated@@300 $generated@@703) (let (($generated@@705 ($generated@@327 $generated@@703)))
($generated@@155 $generated@@702 $generated@@705)) true))))
 :pattern ( ($generated@@155 ($generated@@138 $generated@@702) $generated@@703))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (= (type $generated@@706) $generated@@139) (= (type $generated@@707) $generated@@140)) (or ($generated@@160 $generated@@707) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@707 $generated@@142)))) (and (=> ($generated@@300 $generated@@707) (let (($generated@@708 ($generated@@327 $generated@@707)))
($generated@@160 $generated@@708))) (= ($generated@@159 ($generated@@138 $generated@@706) $generated@@707) (ite ($generated@@300 $generated@@707) (let (($generated@@709 ($generated@@327 $generated@@707)))
($generated@@159 $generated@@706 $generated@@709)) true))))
 :pattern ( ($generated@@159 ($generated@@138 $generated@@706) $generated@@707))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@139) (= (type $generated@@711) $generated@@140)) (or ($generated@@163 $generated@@711) (and (not (= 1 $generated@@136)) ($generated@@141 $generated@@711 $generated@@142)))) (and (=> ($generated@@300 $generated@@711) (let (($generated@@712 ($generated@@327 $generated@@711)))
($generated@@163 $generated@@712))) (= ($generated@@137 ($generated@@138 $generated@@710) $generated@@711) (ite ($generated@@300 $generated@@711) (let (($generated@@713 ($generated@@327 $generated@@711)))
($generated@@137 $generated@@710 $generated@@713)) true))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@710) $generated@@711))
))))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@150) (= (type $generated@@715) $generated@@150)) (= ($generated@@253 ($generated@@283 $generated@@714) ($generated@@283 $generated@@715)) ($generated@@283 ($generated@@253 $generated@@714 $generated@@715))))
 :pattern ( ($generated@@253 ($generated@@283 $generated@@714) ($generated@@283 $generated@@715)))
)))
(assert (forall (($generated@@716 Int) ) (! (= ($generated@@343 ($generated@@8 ($generated@@144 $generated@@716))) ($generated@@283 ($generated@@343 ($generated@@8 $generated@@716))))
 :pattern ( ($generated@@343 ($generated@@8 ($generated@@144 $generated@@716))))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@140) (= ($generated@@322 ($generated@@283 $generated@@717)) ($generated@@283 ($generated@@322 $generated@@717))))
 :pattern ( ($generated@@322 ($generated@@283 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ) (! (= ($generated@@343 ($generated@@283 $generated@@718)) ($generated@@283 ($generated@@343 $generated@@718)))
 :pattern ( ($generated@@343 ($generated@@283 $generated@@718)))
)))
(assert (forall (($generated@@719 T@U) ) (! (let (($generated@@720 ($generated@@316 (type $generated@@719))))
 (=> (and (= (type $generated@@719) ($generated@@315 $generated@@720)) (= ($generated@@314 $generated@@719) 0)) (= $generated@@719 ($generated@@313 $generated@@720))))
 :pattern ( ($generated@@314 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (! (let (($generated@@724 (type $generated@@722)))
 (=> (and (and (= (type $generated@@721) ($generated@@80 $generated@@724 $generated@@2)) (= (type $generated@@723) $generated@@2)) (<= 0 ($generated $generated@@723))) (= ($generated@@351 ($generated@@86 $generated@@721 $generated@@722 $generated@@723)) (+ (- ($generated@@351 $generated@@721) ($generated ($generated@@85 $generated@@721 $generated@@722))) ($generated $generated@@723)))))
 :pattern ( ($generated@@351 ($generated@@86 $generated@@721 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@726) $generated@@2)) ($generated@@78 $generated@@726 $generated@@46 $generated@@725))
 :pattern ( ($generated@@78 $generated@@726 $generated@@46 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@728) $generated@@3)) ($generated@@78 $generated@@728 $generated@@47 $generated@@727))
 :pattern ( ($generated@@78 $generated@@728 $generated@@47 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@730) $generated@@4)) ($generated@@78 $generated@@730 $generated@@44 $generated@@729))
 :pattern ( ($generated@@78 $generated@@730 $generated@@44 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@732) $generated@@548)) ($generated@@78 $generated@@732 $generated@@45 $generated@@731))
 :pattern ( ($generated@@78 $generated@@732 $generated@@45 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@734) $generated@@150)) ($generated@@78 $generated@@734 $generated@@48 $generated@@733))
 :pattern ( ($generated@@78 $generated@@734 $generated@@48 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@315 $generated@@150)) (= (type $generated@@736) $generated@@68)) (= ($generated@@141 $generated@@735 ($generated@@597 $generated@@736)) (forall (($generated@@737 Int) ) (!  (=> (and (<= 0 $generated@@737) (< $generated@@737 ($generated@@314 $generated@@735))) ($generated@@254 ($generated@@598 $generated@@735 $generated@@737) $generated@@736))
 :pattern ( ($generated@@598 $generated@@735 $generated@@737))
))))
 :pattern ( ($generated@@141 $generated@@735 ($generated@@597 $generated@@736)))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@738) $generated@@139) (= (type $generated@@739) $generated@@140)) (and ($generated@@141 $generated@@739 $generated@@142) (forall (($generated@@740 Int) ) (!  (=> (<= ($generated@@144 0) $generated@@740) ($generated@@143 ($generated@@138 $generated@@738) $generated@@740 $generated@@739))
 :pattern ( ($generated@@143 ($generated@@138 $generated@@738) $generated@@740 $generated@@739))
)))) ($generated@@137 ($generated@@138 $generated@@738) $generated@@739))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@738) $generated@@739))
))))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@741) $generated@@139) (= (type $generated@@742) $generated@@150)) (= (type $generated@@743) $generated@@140)) (= ($generated@@303 $generated@@741 $generated@@742 $generated@@743) ($generated@@303 $generated@@500 $generated@@742 $generated@@743)))
 :pattern ( ($generated@@303 ($generated@@499 $generated@@741) $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 Int) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@139) (= (type $generated@@746) $generated@@140)) (= ($generated@@143 $generated@@744 $generated@@745 $generated@@746) ($generated@@143 $generated@@500 $generated@@745 $generated@@746)))
 :pattern ( ($generated@@143 ($generated@@499 $generated@@744) $generated@@745 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 Int) ) (!  (=> (= (type $generated@@748) ($generated@@315 $generated@@150)) (=> (and (<= 0 $generated@@749) (< $generated@@749 ($generated@@314 $generated@@748))) (< ($generated@@640 ($generated@@400 $generated@@140 ($generated@@598 $generated@@748 $generated@@749))) ($generated@@747 $generated@@748))))
 :pattern ( ($generated@@640 ($generated@@400 $generated@@140 ($generated@@598 $generated@@748 $generated@@749))))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (and (= (type $generated@@750) ($generated@@359 $generated@@150 $generated@@150)) (= (type $generated@@751) $generated@@68)) (= (type $generated@@752) $generated@@68)) ($generated@@141 $generated@@750 ($generated@@483 $generated@@751 $generated@@752))) (and (and ($generated@@141 ($generated@@357 $generated@@750) ($generated@@272 $generated@@751)) ($generated@@141 ($generated@@414 $generated@@750) ($generated@@272 $generated@@752))) ($generated@@141 ($generated@@457 $generated@@750) ($generated@@272 ($generated@@176 $generated@@751 $generated@@752)))))
 :pattern ( ($generated@@141 $generated@@750 ($generated@@483 $generated@@751 $generated@@752)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (and (= (type $generated@@753) ($generated@@377 $generated@@150 $generated@@150)) (= (type $generated@@754) $generated@@68)) (= (type $generated@@755) $generated@@68)) ($generated@@141 $generated@@753 ($generated@@491 $generated@@754 $generated@@755))) (and (and ($generated@@141 ($generated@@375 $generated@@753) ($generated@@277 $generated@@754)) ($generated@@141 ($generated@@425 $generated@@753) ($generated@@277 $generated@@755))) ($generated@@141 ($generated@@465 $generated@@753) ($generated@@277 ($generated@@176 $generated@@754 $generated@@755)))))
 :pattern ( ($generated@@141 $generated@@753 ($generated@@491 $generated@@754 $generated@@755)))
)))
(assert (forall (($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@2) ($generated@@141 $generated@@756 $generated@@46))
 :pattern ( ($generated@@141 $generated@@756 $generated@@46))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@3) ($generated@@141 $generated@@757 $generated@@47))
 :pattern ( ($generated@@141 $generated@@757 $generated@@47))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@4) ($generated@@141 $generated@@758 $generated@@44))
 :pattern ( ($generated@@141 $generated@@758 $generated@@44))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@548) ($generated@@141 $generated@@759 $generated@@45))
 :pattern ( ($generated@@141 $generated@@759 $generated@@45))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@150) ($generated@@141 $generated@@760 $generated@@48))
 :pattern ( ($generated@@141 $generated@@760 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@761 () T@U)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () T@U)
(declare-fun $generated@@765 () T@U)
(declare-fun $generated@@766 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@761) ($generated@@199 $generated@@81 $generated@@4)) (= (type $generated@@762) $generated@@81)) (= (type $generated@@763) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@764) $generated@@140)) (= (type $generated@@765) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@767  (=> (and (= $generated@@761 ($generated@@198 $generated@@762 $generated@@763 $generated@@60 false)) ($generated@@443 $generated@@764)) (=> (and (and ($generated@@261 $generated@@765) ($generated@@766 $generated@@765)) (and (= $generated@@763 $generated@@765) (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@140) (=> (and (and ($generated@@141 $generated@@768 $generated@@142) ($generated@@0 ($generated@@283 ($generated@@11 true)))) (< ($generated@@640 $generated@@768) ($generated@@640 $generated@@764))) (and (and ($generated@@155 ($generated@@138 $generated@@500) $generated@@768) ($generated@@159 ($generated@@138 $generated@@500) $generated@@768)) ($generated@@137 ($generated@@138 $generated@@500) $generated@@768))))
 :no-pattern (type $generated@@768)
 :no-pattern ($generated $generated@@768)
 :no-pattern ($generated@@0 $generated@@768)
)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@156 $generated@@764) (or ($generated@@155 ($generated@@138 $generated@@500) $generated@@764) (=> ($generated@@300 $generated@@764) (let (($generated@@769 ($generated@@327 $generated@@764)))
($generated@@155 ($generated@@138 ($generated@@138 $generated@@500)) $generated@@769)))))) (=> (=> ($generated@@156 $generated@@764) (or ($generated@@155 ($generated@@138 $generated@@500) $generated@@764) (=> ($generated@@300 $generated@@764) (let (($generated@@770 ($generated@@327 $generated@@764)))
($generated@@155 ($generated@@138 ($generated@@138 $generated@@500)) $generated@@770))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@156 $generated@@764) (or ($generated@@155 ($generated@@138 $generated@@500) $generated@@764) (=> (not ($generated@@300 $generated@@764)) ($generated@@0 ($generated@@283 ($generated@@11 true))))))) (=> (=> ($generated@@156 $generated@@764) (or ($generated@@155 ($generated@@138 $generated@@500) $generated@@764) (=> (not ($generated@@300 $generated@@764)) ($generated@@0 ($generated@@283 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@160 $generated@@764) (or ($generated@@159 ($generated@@138 $generated@@500) $generated@@764) (=> ($generated@@300 $generated@@764) (let (($generated@@771 ($generated@@327 $generated@@764)))
($generated@@159 ($generated@@138 ($generated@@138 $generated@@500)) $generated@@771)))))) (=> (=> ($generated@@160 $generated@@764) (or ($generated@@159 ($generated@@138 $generated@@500) $generated@@764) (=> ($generated@@300 $generated@@764) (let (($generated@@772 ($generated@@327 $generated@@764)))
($generated@@159 ($generated@@138 ($generated@@138 $generated@@500)) $generated@@772))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@160 $generated@@764) (or ($generated@@159 ($generated@@138 $generated@@500) $generated@@764) (=> (not ($generated@@300 $generated@@764)) ($generated@@0 ($generated@@283 ($generated@@11 true))))))) (=> (=> ($generated@@160 $generated@@764) (or ($generated@@159 ($generated@@138 $generated@@500) $generated@@764) (=> (not ($generated@@300 $generated@@764)) ($generated@@0 ($generated@@283 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@163 $generated@@764) (or ($generated@@137 ($generated@@138 $generated@@500) $generated@@764) (=> ($generated@@300 $generated@@764) (let (($generated@@773 ($generated@@327 $generated@@764)))
($generated@@137 ($generated@@138 ($generated@@138 $generated@@500)) $generated@@773)))))) (=> (=> ($generated@@163 $generated@@764) (or ($generated@@137 ($generated@@138 $generated@@500) $generated@@764) (=> ($generated@@300 $generated@@764) (let (($generated@@774 ($generated@@327 $generated@@764)))
($generated@@137 ($generated@@138 ($generated@@138 $generated@@500)) $generated@@774))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@163 $generated@@764) (or ($generated@@137 ($generated@@138 $generated@@500) $generated@@764) (=> (not ($generated@@300 $generated@@764)) ($generated@@0 ($generated@@283 ($generated@@11 true)))))))))))))))))))))
(let (($generated@@775  (=> (and ($generated@@261 $generated@@763) ($generated@@766 $generated@@763)) (=> (and (and (and ($generated@@141 $generated@@764 $generated@@142) ($generated@@78 $generated@@764 $generated@@142 $generated@@763)) ($generated@@443 $generated@@764)) (and (= 2 $generated@@136) (= (ControlFlow 0 8) 2))) $generated@@767))))
$generated@@775)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 (Int) T@U)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@T)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U T@U T@U) Bool)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@372 (T@U) Bool)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) Bool)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@428 (T@U) Bool)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@468 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@U T@U) T@U)
(declare-fun $generated@@495 (T@T) T@U)
(declare-fun $generated@@519 () T@T)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@563 (T@U Int) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(declare-fun $generated@@605 (T@U) Int)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@691 (T@U) T@U)
(declare-fun $generated@@699 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@137) 14))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (and (= (type $generated@@138) $generated@@137) (= (type $generated@@139) $generated@@137)) (= (type $generated@@140) $generated@@137)) (and ($generated@@136 $generated@@138 $generated@@139) ($generated@@136 $generated@@139 $generated@@140))) ($generated@@136 $generated@@138 $generated@@140))
 :pattern ( ($generated@@136 $generated@@138 $generated@@139) ($generated@@136 $generated@@139 $generated@@140))
 :pattern ( ($generated@@136 $generated@@138 $generated@@139) ($generated@@136 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@79 0)))
)))
(assert  (and (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@143 $generated@@146 $generated@@147)) $generated@@137)
 :pattern ( ($generated@@143 $generated@@146 $generated@@147))
)) (forall (($generated@@148 Int) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@137)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 Int) ($generated@@151 Int) ) (!  (=> (= (type $generated@@149) $generated@@137) (=> (and (and (<= 0 $generated@@150) (<= 0 $generated@@151)) (<= (+ $generated@@150 $generated@@151) ($generated@@145 $generated@@149))) (= ($generated@@143 ($generated@@143 $generated@@149 ($generated@@144 $generated@@150)) ($generated@@144 $generated@@151)) ($generated@@143 $generated@@149 ($generated@@144 (+ $generated@@150 $generated@@151))))))
 :pattern ( ($generated@@143 ($generated@@143 $generated@@149 ($generated@@144 $generated@@150)) ($generated@@144 $generated@@151)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@154)) ($generated@@141 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@141 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@137)
 :pattern ( ($generated@@161 $generated@@163))
)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@137)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@154) (= (type $generated@@166) $generated@@154)) true) (= ($generated@@160 $generated@@165 $generated@@166)  (and (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166)))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@72)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@154)))
(assert (= ($generated@@167 $generated@@168) $generated@@65))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@68)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@80 $generated@@137 $generated@@2)) (= (type $generated@@174) $generated@@68)) ($generated@@141 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@141 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 16)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@71 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@81) (= (type $generated@@225) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@226) ($generated@@70 $generated@@4))) (= (type $generated@@228) $generated@@81)) (= (type $generated@@229) ($generated@@70 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@154)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@68) (= (type $generated@@236) $generated@@68)) (= (type $generated@@237) $generated@@137)) (= (type $generated@@238) $generated@@137)) (= ($generated@@141 ($generated@@231 $generated@@237 $generated@@238) ($generated@@153 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@141 ($generated@@231 $generated@@237 $generated@@238) ($generated@@153 $generated@@235 $generated@@236)))
)))
(assert (= (type $generated@@239) $generated@@68))
(assert ($generated@@141 $generated@@168 $generated@@239))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@240 $generated@@241)) ($generated@@78 $generated@@168 $generated@@239 $generated@@241))
 :pattern ( ($generated@@78 $generated@@168 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@154) (= (type $generated@@243) $generated@@154)) (= ($generated@@160 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@160 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@154) (= (type $generated@@246) $generated@@154)) (= ($generated@@244 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert  (and (and (and (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@249 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@249 $generated@@256))
)) (= ($generated@@1 $generated@@255) 17)) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@253 $generated@@258)) $generated@@255)
 :pattern ( ($generated@@253 $generated@@258))
))) (= (type $generated@@254) $generated@@255)))
(assert  (=> (<= 3 $generated@@247) (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@137) (= (type $generated@@260) $generated@@154)) (or ($generated@@250 ($generated@@249 $generated@@259) ($generated@@249 $generated@@260)) (and (not (= 3 $generated@@247)) ($generated@@141 $generated@@260 $generated@@239)))) (and ($generated@@251 ($generated@@249 $generated@@259) ($generated@@249 $generated@@260)) (= ($generated@@248 ($generated@@249 $generated@@259) ($generated@@249 $generated@@260)) ($generated@@0 ($generated@@249 ($generated@@11 ($generated@@252 ($generated@@253 $generated@@254) ($generated@@249 $generated@@259) ($generated@@249 $generated@@260))))))))
 :weight 3
 :pattern ( ($generated@@248 ($generated@@249 $generated@@259) ($generated@@249 $generated@@260)))
))))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@141 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@137) ($generated@@0 ($generated@@85 $generated@@263 $generated@@265))) ($generated@@232 $generated@@265 $generated@@264))
 :pattern ( ($generated@@85 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@141 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@269) $generated@@68)) (= ($generated@@141 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@137) ($generated@@0 ($generated@@85 $generated@@268 $generated@@270))) ($generated@@232 $generated@@270 $generated@@269))
 :pattern ( ($generated@@85 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@141 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@249 $generated@@273) $generated@@273)
 :pattern ( ($generated@@249 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@275) $generated@@154) (= (type $generated@@276) $generated@@154)) (and ($generated@@274 $generated@@275) ($generated@@274 $generated@@276))) (= ($generated@@244 $generated@@275 $generated@@276) true))
 :pattern ( ($generated@@244 $generated@@275 $generated@@276) ($generated@@274 $generated@@275))
 :pattern ( ($generated@@244 $generated@@275 $generated@@276) ($generated@@274 $generated@@276))
)))
(assert  (=> (<= 3 $generated@@247) (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@137) (= (type $generated@@278) $generated@@154)) (or ($generated@@250 $generated@@277 $generated@@278) (and (not (= 3 $generated@@247)) ($generated@@141 $generated@@278 $generated@@239)))) (and ($generated@@251 $generated@@277 $generated@@278) (= ($generated@@248 $generated@@277 $generated@@278) ($generated@@252 ($generated@@253 $generated@@254) $generated@@277 $generated@@278))))
 :pattern ( ($generated@@248 $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@137)) (= (type $generated@@283) $generated@@137)) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@240 $generated@@284)) (= ($generated@@78 ($generated@@231 $generated@@282 $generated@@283) ($generated@@153 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@231 $generated@@282 $generated@@283) ($generated@@153 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@154) (= ($generated@@152 $generated@@285) (= ($generated@@167 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@154) (= ($generated@@286 $generated@@287) (= ($generated@@167 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@154) (= ($generated@@274 $generated@@288) (= ($generated@@167 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@274 $generated@@288))
)))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) $generated@@255) (= (type $generated@@290) $generated@@154)) (= (type $generated@@291) $generated@@137)) (and ($generated@@141 $generated@@290 $generated@@239) (= $generated@@291 ($generated@@144 0)))) ($generated@@252 $generated@@289 $generated@@291 $generated@@290))
 :pattern ( ($generated@@252 $generated@@289 $generated@@291 $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@154) ($generated@@152 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@137) (= (type $generated@@294) $generated@@137)) (= $generated@@292 ($generated@@231 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@152 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 18)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@154) ($generated@@274 $generated@@303)) (= $generated@@303 $generated@@168))
 :pattern ( ($generated@@274 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@154)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@154) ($generated@@286 $generated@@306)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@154) (= $generated@@306 ($generated@@304 $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@286 $generated@@306))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@154)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) $generated@@255) (= (type $generated@@311) $generated@@137)) (= (type $generated@@312) $generated@@154)) (or ($generated@@251 ($generated@@249 $generated@@311) $generated@@312) (and (not (= 2 $generated@@247)) ($generated@@141 $generated@@312 $generated@@239)))) (and (and (=> (< 0 ($generated@@145 $generated@@311)) (=> ($generated@@286 $generated@@312) (let (($generated@@313 ($generated@@308 $generated@@312)))
($generated@@251 ($generated@@143 $generated@@311 ($generated@@144 1)) $generated@@313)))) (=> (=> (< 0 ($generated@@145 $generated@@311)) (ite ($generated@@286 $generated@@312) (let (($generated@@314 ($generated@@308 $generated@@312)))
($generated@@252 ($generated@@253 $generated@@310) ($generated@@143 $generated@@311 ($generated@@144 1)) $generated@@314)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@311)) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@137) ($generated@@136 $generated@@315 $generated@@311)) ($generated@@251 $generated@@315 $generated@@312))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@310) $generated@@315 $generated@@312))
))))) (= ($generated@@252 ($generated@@253 $generated@@310) ($generated@@249 $generated@@311) $generated@@312)  (and (=> (< 0 ($generated@@145 $generated@@311)) (ite ($generated@@286 $generated@@312) (let (($generated@@316 ($generated@@308 $generated@@312)))
($generated@@252 ($generated@@253 $generated@@310) ($generated@@143 $generated@@311 ($generated@@144 1)) $generated@@316)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@311)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@137) ($generated@@136 $generated@@317 $generated@@311)) ($generated@@252 ($generated@@253 $generated@@310) $generated@@317 $generated@@312))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@310) $generated@@317 $generated@@312))
)))))))
 :weight 3
 :pattern ( ($generated@@252 ($generated@@253 $generated@@310) ($generated@@249 $generated@@311) $generated@@312))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (= (type $generated@@318) $generated@@255) (= (type $generated@@319) $generated@@137)) (= (type $generated@@320) $generated@@154)) (= ($generated@@252 ($generated@@253 $generated@@318) $generated@@319 $generated@@320) ($generated@@252 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@255) (= (type $generated@@323) $generated@@137)) (= (type $generated@@324) $generated@@154)) (= ($generated@@321 ($generated@@253 $generated@@322) $generated@@323 $generated@@324) ($generated@@321 $generated@@322 $generated@@323 $generated@@324)))
 :pattern ( ($generated@@321 ($generated@@253 $generated@@322) $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@137)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@68) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@279 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@78 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@279 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@80 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@83 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@80 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@85 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@80 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@85 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@85 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@359 $generated@@360)) 20)) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@356 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@356 $generated@@363 $generated@@364)) $generated@@364)
 :pattern ( ($generated@@356 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@357 (type $generated@@365))))
(= (type ($generated@@354 $generated@@365)) ($generated@@80 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@365))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= (type ($generated@@355 $generated@@367 $generated@@368)) ($generated@@356 $generated@@367 $generated@@368))
 :pattern ( ($generated@@355 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@T) ) (! (let (($generated@@371 (type $generated@@369)))
 (not ($generated@@0 ($generated@@85 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369))))
 :pattern ( (let (($generated@@371 (type $generated@@369)))
($generated@@85 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@137) (= (type $generated@@374) $generated@@137)) (and ($generated@@372 $generated@@374) (<= ($generated@@145 $generated@@374) ($generated@@145 $generated@@373)))) (and (= ($generated@@372 ($generated@@143 $generated@@373 $generated@@374)) ($generated@@372 $generated@@373)) (= ($generated@@145 ($generated@@143 $generated@@373 $generated@@374)) (- ($generated@@145 $generated@@373) ($generated@@145 $generated@@374)))))
 :pattern ( ($generated@@143 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 Int) ) (!  (=> (<= 0 $generated@@375) (and ($generated@@372 ($generated@@144 $generated@@375)) (= ($generated@@145 ($generated@@144 $generated@@375)) $generated@@375)))
 :pattern ( ($generated@@144 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@83 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@80 $generated@@377 $generated@@2)) (= ($generated@@171 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (and (<= 0 ($generated ($generated@@85 $generated@@376 $generated@@378))) (<= ($generated ($generated@@85 $generated@@376 $generated@@378)) ($generated@@330 $generated@@376))))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@171 $generated@@376))
)))
(assert (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@137) ($generated@@232 $generated@@382 $generated@@239)) (and (= ($generated@@325 ($generated@@379 $generated@@154 $generated@@382)) $generated@@382) ($generated@@141 ($generated@@379 $generated@@154 $generated@@382) $generated@@239)))
 :pattern ( ($generated@@232 $generated@@382 $generated@@239))
)))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) $generated@@255) (= (type $generated@@385) $generated@@137)) (= (type $generated@@386) $generated@@154)) (or ($generated@@383 $generated@@385 $generated@@386) (and (not (= 1 $generated@@247)) ($generated@@141 $generated@@386 $generated@@239)))) true)
 :pattern ( ($generated@@321 $generated@@384 $generated@@385 $generated@@386))
))))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) $generated@@255) (= (type $generated@@388) $generated@@137)) (= (type $generated@@389) $generated@@154)) (or ($generated@@251 $generated@@388 $generated@@389) (and (not (= 2 $generated@@247)) ($generated@@141 $generated@@389 $generated@@239)))) true)
 :pattern ( ($generated@@252 $generated@@387 $generated@@388 $generated@@389))
))))
(assert  (=> (<= 3 $generated@@247) (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) $generated@@137) (= (type $generated@@391) $generated@@154)) (or ($generated@@250 $generated@@390 $generated@@391) (and (not (= 3 $generated@@247)) ($generated@@141 $generated@@391 $generated@@239)))) true)
 :pattern ( ($generated@@248 $generated@@390 $generated@@391))
))))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@154) (= ($generated@@141 ($generated@@304 $generated@@392) $generated@@239) ($generated@@141 $generated@@392 $generated@@239)))
 :pattern ( ($generated@@141 ($generated@@304 $generated@@392) $generated@@239))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@393) $generated@@154) (= (type $generated@@394) $generated@@154)) (and ($generated@@286 $generated@@393) ($generated@@286 $generated@@394))) (= ($generated@@244 $generated@@393 $generated@@394) ($generated@@244 ($generated@@308 $generated@@393) ($generated@@308 $generated@@394))))
 :pattern ( ($generated@@244 $generated@@393 $generated@@394) ($generated@@286 $generated@@393))
 :pattern ( ($generated@@244 $generated@@393 $generated@@394) ($generated@@286 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@340 (type $generated@@395))))
(let (($generated@@397 ($generated@@339 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@338 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@337 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@85 ($generated@@336 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@336 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@340 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@80 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@340 (type $generated@@402))))
(let (($generated@@404 ($generated@@339 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@338 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@337 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@358 (type $generated@@406))))
(let (($generated@@408 ($generated@@357 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@356 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@355 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@354 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@358 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@80 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@358 (type $generated@@413))))
(let (($generated@@415 ($generated@@357 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@356 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@355 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@85 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) $generated@@255) (= (type $generated@@418) $generated@@137)) (= (type $generated@@419) $generated@@154)) (or ($generated@@251 ($generated@@249 $generated@@418) ($generated@@249 $generated@@419)) (and (not (= 2 $generated@@247)) ($generated@@141 $generated@@419 $generated@@239)))) (and (and (=> (< 0 ($generated@@145 $generated@@418)) (=> ($generated@@286 $generated@@419) (let (($generated@@420 ($generated@@308 $generated@@419)))
($generated@@251 ($generated@@143 $generated@@418 ($generated@@144 1)) $generated@@420)))) (=> (=> (< 0 ($generated@@145 $generated@@418)) (ite ($generated@@286 $generated@@419) (let (($generated@@421 ($generated@@308 $generated@@419)))
($generated@@252 ($generated@@253 $generated@@417) ($generated@@143 $generated@@418 ($generated@@144 1)) $generated@@421)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@418)) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@137) ($generated@@136 $generated@@422 $generated@@418)) ($generated@@251 $generated@@422 $generated@@419))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@417) $generated@@422 $generated@@419))
))))) (= ($generated@@252 ($generated@@253 $generated@@417) ($generated@@249 $generated@@418) ($generated@@249 $generated@@419))  (and (=> (< 0 ($generated@@145 $generated@@418)) (ite ($generated@@286 $generated@@419) (let (($generated@@423 ($generated@@308 $generated@@419)))
($generated@@252 ($generated@@253 $generated@@417) ($generated@@143 $generated@@418 ($generated@@144 1)) $generated@@423)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@418)) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@137) ($generated@@136 $generated@@424 $generated@@418)) ($generated@@252 ($generated@@253 $generated@@417) $generated@@424 $generated@@419))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@417) $generated@@424 $generated@@419))
)))))))
 :weight 3
 :pattern ( ($generated@@252 ($generated@@253 $generated@@417) ($generated@@249 $generated@@418) ($generated@@249 $generated@@419)))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@80 $generated@@137 $generated@@2)) (= (type $generated@@426) $generated@@68)) (= ($generated@@141 $generated@@425 ($generated@@170 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@137) (< 0 ($generated ($generated@@85 $generated@@425 $generated@@427)))) ($generated@@232 $generated@@427 $generated@@426))
 :pattern ( ($generated@@85 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@141 $generated@@425 ($generated@@170 $generated@@426)))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@154) ($generated@@428 $generated@@429)) (or ($generated@@286 $generated@@429) ($generated@@274 $generated@@429)))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@137) (= (type $generated@@431) $generated@@137)) (or (or ($generated@@136 $generated@@430 $generated@@431) (= $generated@@430 $generated@@431)) ($generated@@136 $generated@@431 $generated@@430)))
 :pattern ( ($generated@@136 $generated@@430 $generated@@431) ($generated@@136 $generated@@431 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@432 ($generated@@261 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@137) ($generated@@0 ($generated@@85 $generated@@432 $generated@@435))) ($generated@@279 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@85 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@78 $generated@@432 ($generated@@261 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@436 ($generated@@266 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@137) ($generated@@0 ($generated@@85 $generated@@436 $generated@@439))) ($generated@@279 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@85 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@78 $generated@@436 ($generated@@266 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@85 ($generated@@331 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@85 ($generated@@331 $generated@@441) $generated@@440)))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) ($generated@@80 $generated@@137 $generated@@4))
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@340 (type $generated@@445))))
(let (($generated@@447 ($generated@@339 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445)) ($generated@@80 $generated@@447 $generated@@446))))
 :pattern ( ($generated@@443 $generated@@445))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@449) $generated@@137)) (= ($generated@@0 ($generated@@85 ($generated@@442 $generated@@448) $generated@@449))  (and ($generated@@0 ($generated@@85 ($generated@@336 $generated@@448) ($generated@@161 ($generated@@379 $generated@@154 $generated@@449)))) (= ($generated@@85 ($generated@@443 $generated@@448) ($generated@@161 ($generated@@379 $generated@@154 $generated@@449))) ($generated@@162 ($generated@@379 $generated@@154 $generated@@449))))))
 :pattern ( ($generated@@85 ($generated@@442 $generated@@448) $generated@@449))
)))
(assert  (and (forall (($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@452)) ($generated@@80 $generated@@137 $generated@@4))
 :pattern ( ($generated@@450 $generated@@452))
)) (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@358 (type $generated@@453))))
(let (($generated@@455 ($generated@@357 (type $generated@@453))))
(= (type ($generated@@451 $generated@@453)) ($generated@@80 $generated@@455 $generated@@454))))
 :pattern ( ($generated@@451 $generated@@453))
))))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) ($generated@@356 $generated@@137 $generated@@137)) (= (type $generated@@457) $generated@@137)) (= ($generated@@0 ($generated@@85 ($generated@@450 $generated@@456) $generated@@457))  (and ($generated@@0 ($generated@@85 ($generated@@354 $generated@@456) ($generated@@161 ($generated@@379 $generated@@154 $generated@@457)))) (= ($generated@@85 ($generated@@451 $generated@@456) ($generated@@161 ($generated@@379 $generated@@154 $generated@@457))) ($generated@@162 ($generated@@379 $generated@@154 $generated@@457))))))
 :pattern ( ($generated@@85 ($generated@@450 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 (type $generated@@459)))
(let (($generated@@461 ($generated@@339 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@338 $generated@@461 $generated@@460)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@458) $generated@@459)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) (and ($generated@@0 ($generated@@85 ($generated@@336 $generated@@458) $generated@@462)) (= $generated@@459 ($generated@@85 ($generated@@443 $generated@@458) $generated@@462))))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@458) $generated@@462))
))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@357 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@356 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@85 ($generated@@410 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@85 ($generated@@354 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@85 ($generated@@451 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@451 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (= (type $generated@@471) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) $generated@@68)) (= (type $generated@@474) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474) (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@336 $generated@@471) $generated@@475))) (and ($generated@@279 ($generated@@85 ($generated@@443 $generated@@471) $generated@@475) $generated@@473 $generated@@474) ($generated@@279 $generated@@475 $generated@@472 $generated@@474)))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@471) $generated@@475))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@471) $generated@@475))
))))
 :pattern ( ($generated@@78 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (= (type $generated@@479) ($generated@@356 $generated@@137 $generated@@137)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) $generated@@68)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@479 ($generated@@476 $generated@@480 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@479) $generated@@483))) (and ($generated@@279 ($generated@@85 ($generated@@451 $generated@@479) $generated@@483) $generated@@481 $generated@@482) ($generated@@279 $generated@@483 $generated@@480 $generated@@482)))
 :pattern ( ($generated@@85 ($generated@@451 $generated@@479) $generated@@483))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@479) $generated@@483))
))))
 :pattern ( ($generated@@78 $generated@@479 ($generated@@476 $generated@@480 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@484) $generated@@154) (= (type $generated@@485) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@240 $generated@@485)) (= ($generated@@78 ($generated@@304 $generated@@484) $generated@@239 $generated@@485) ($generated@@78 $generated@@484 $generated@@239 $generated@@485)))
 :pattern ( ($generated@@78 ($generated@@304 $generated@@484) $generated@@239 $generated@@485))
)))
(assert  (=> (<= 2 $generated@@247) (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) $generated@@255) (= (type $generated@@487) $generated@@137)) (= (type $generated@@488) $generated@@154)) (or ($generated@@251 $generated@@487 $generated@@488) (and (not (= 2 $generated@@247)) ($generated@@141 $generated@@488 $generated@@239)))) (and (and (=> (< 0 ($generated@@145 $generated@@487)) (=> ($generated@@286 $generated@@488) (let (($generated@@489 ($generated@@308 $generated@@488)))
($generated@@251 ($generated@@143 $generated@@487 ($generated@@144 1)) $generated@@489)))) (=> (=> (< 0 ($generated@@145 $generated@@487)) (ite ($generated@@286 $generated@@488) (let (($generated@@490 ($generated@@308 $generated@@488)))
($generated@@252 $generated@@486 ($generated@@143 $generated@@487 ($generated@@144 1)) $generated@@490)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@487)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@137) ($generated@@136 $generated@@491 $generated@@487)) ($generated@@251 $generated@@491 $generated@@488))
 :pattern ( ($generated@@252 $generated@@486 $generated@@491 $generated@@488))
))))) (= ($generated@@252 ($generated@@253 $generated@@486) $generated@@487 $generated@@488)  (and (=> (< 0 ($generated@@145 $generated@@487)) (ite ($generated@@286 $generated@@488) (let (($generated@@492 ($generated@@308 $generated@@488)))
($generated@@252 $generated@@486 ($generated@@143 $generated@@487 ($generated@@144 1)) $generated@@492)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@487)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@137) ($generated@@136 $generated@@493 $generated@@487)) ($generated@@252 $generated@@486 $generated@@493 $generated@@488))
 :pattern ( ($generated@@252 $generated@@486 $generated@@493 $generated@@488))
)))))))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@486) $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@154) ($generated@@141 $generated@@494 $generated@@239)) (or ($generated@@286 $generated@@494) ($generated@@274 $generated@@494)))
 :pattern ( ($generated@@274 $generated@@494) ($generated@@141 $generated@@494 $generated@@239))
 :pattern ( ($generated@@286 $generated@@494) ($generated@@141 $generated@@494 $generated@@239))
)))
(assert (forall (($generated@@496 T@T) ) (! (= (type ($generated@@495 $generated@@496)) ($generated@@80 $generated@@496 $generated@@4))
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@358 (type $generated@@497))))
(let (($generated@@499 ($generated@@357 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@356 $generated@@499 $generated@@498)) (= (= $generated@@497 ($generated@@355 $generated@@499 $generated@@498)) (= ($generated@@354 $generated@@497) ($generated@@495 $generated@@499))))))
 :pattern ( ($generated@@354 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@358 (type $generated@@500))))
(let (($generated@@502 ($generated@@357 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@356 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@355 $generated@@502 $generated@@501)) (= ($generated@@410 $generated@@500) ($generated@@495 $generated@@501))))))
 :pattern ( ($generated@@410 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@358 (type $generated@@503))))
(let (($generated@@505 ($generated@@357 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@356 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@355 $generated@@505 $generated@@504)) (= ($generated@@450 $generated@@503) ($generated@@495 $generated@@137))))))
 :pattern ( ($generated@@450 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@340 (type $generated@@506))))
(let (($generated@@508 ($generated@@339 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@338 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@337 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@137) (= (type $generated@@510) $generated@@137)) ($generated@@0 ($generated@@85 ($generated@@442 $generated@@506) ($generated@@325 ($generated@@231 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@442 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@358 (type $generated@@511))))
(let (($generated@@513 ($generated@@357 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@356 $generated@@513 $generated@@512)) (or (= $generated@@511 ($generated@@355 $generated@@513 $generated@@512)) (exists (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (and (and (= (type $generated@@514) $generated@@137) (= (type $generated@@515) $generated@@137)) ($generated@@0 ($generated@@85 ($generated@@450 $generated@@511) ($generated@@325 ($generated@@231 $generated@@514 $generated@@515)))))
 :no-pattern (type $generated@@514)
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@450 $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@137) ($generated@@232 $generated@@516 $generated@@46)) (and (= ($generated@@325 ($generated@@379 $generated@@2 $generated@@516)) $generated@@516) ($generated@@141 ($generated@@379 $generated@@2 $generated@@516) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@516 $generated@@46))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@137) ($generated@@232 $generated@@517 $generated@@47)) (and (= ($generated@@325 ($generated@@379 $generated@@3 $generated@@517)) $generated@@517) ($generated@@141 ($generated@@379 $generated@@3 $generated@@517) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@517 $generated@@47))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@137) ($generated@@232 $generated@@518 $generated@@44)) (and (= ($generated@@325 ($generated@@379 $generated@@4 $generated@@518)) $generated@@518) ($generated@@141 ($generated@@379 $generated@@4 $generated@@518) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@518 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@519) 21))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@137) ($generated@@232 $generated@@520 $generated@@45)) (and (= ($generated@@325 ($generated@@379 $generated@@519 $generated@@520)) $generated@@520) ($generated@@141 ($generated@@379 $generated@@519 $generated@@520) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@520 $generated@@45))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@232 ($generated@@325 $generated@@521) $generated@@522) ($generated@@141 $generated@@521 $generated@@522)))
 :pattern ( ($generated@@232 ($generated@@325 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@137) (<= 0 ($generated@@145 $generated@@523)))
 :pattern ( ($generated@@145 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@83 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@80 $generated@@525 $generated@@2)) (<= 0 ($generated@@330 $generated@@524))))
 :pattern ( ($generated@@330 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@298 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@297 $generated@@527)) (<= 0 ($generated@@296 $generated@@526))))
 :pattern ( ($generated@@296 $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@468 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@468 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@468 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@468 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@76 ($generated@@468 $generated@@536 $generated@@537)) $generated@@58))
 :pattern ( ($generated@@468 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@538 ($generated@@476 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@476 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= ($generated@@542 ($generated@@476 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@476 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@76 ($generated@@476 $generated@@546 $generated@@547)) $generated@@59))
 :pattern ( ($generated@@476 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@137) (= (type $generated@@549) $generated@@137)) (= ($generated@@167 ($generated@@231 $generated@@548 $generated@@549)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@68)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@68) (= (type $generated@@553) $generated@@68)) (= ($generated@@550 ($generated@@153 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@153 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (= ($generated@@554 ($generated@@153 $generated@@556 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@153 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@137) (= (type $generated@@559) $generated@@137)) (= ($generated@@161 ($generated@@231 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@231 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@137) (= (type $generated@@561) $generated@@137)) (= ($generated@@162 ($generated@@231 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@231 $generated@@560 $generated@@561))
)))
(assert  (and (forall (($generated@@564 T@U) ) (! (= (type ($generated@@562 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@564))
)) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (! (let (($generated@@567 ($generated@@298 (type $generated@@565))))
(= (type ($generated@@563 $generated@@565 $generated@@566)) $generated@@567))
 :pattern ( ($generated@@563 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@297 $generated@@137)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@568 ($generated@@562 $generated@@569) $generated@@570) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@296 $generated@@568))) ($generated@@279 ($generated@@563 $generated@@568 $generated@@571) $generated@@569 $generated@@570))
 :pattern ( ($generated@@563 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@78 $generated@@568 ($generated@@562 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@572 ($generated@@79 $generated@@573)) $generated@@573)
 :pattern ( ($generated@@79 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@261 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@261 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@261 $generated@@577)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@266 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@266 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@76 ($generated@@266 $generated@@581)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@582 ($generated@@170 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@170 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@68) (= ($generated@@76 ($generated@@170 $generated@@585)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@68)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@68) (= ($generated@@586 ($generated@@562 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@562 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@76 ($generated@@562 $generated@@589)) $generated@@57))
 :pattern ( ($generated@@562 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@154) (= ($generated@@167 ($generated@@304 $generated@@590)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@154) (= ($generated@@308 ($generated@@304 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@304 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@592)))
(= ($generated@@379 $generated@@593 ($generated@@325 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@325 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) $generated@@68)) (= ($generated@@141 $generated@@594 ($generated@@468 $generated@@595 $generated@@596)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@336 $generated@@594) $generated@@597))) (and ($generated@@232 ($generated@@85 ($generated@@443 $generated@@594) $generated@@597) $generated@@596) ($generated@@232 $generated@@597 $generated@@595)))
 :pattern ( ($generated@@85 ($generated@@443 $generated@@594) $generated@@597))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@594) $generated@@597))
))))
 :pattern ( ($generated@@141 $generated@@594 ($generated@@468 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@356 $generated@@137 $generated@@137)) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) (= ($generated@@141 $generated@@598 ($generated@@476 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@598) $generated@@601))) (and ($generated@@232 ($generated@@85 ($generated@@451 $generated@@598) $generated@@601) $generated@@600) ($generated@@232 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@85 ($generated@@451 $generated@@598) $generated@@601))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@141 $generated@@598 ($generated@@476 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@137) (= (type $generated@@603) $generated@@137)) (and (and (and (=> ($generated@@136 $generated@@602 $generated@@603) (not (= $generated@@602 $generated@@603))) (=> (and ($generated@@372 $generated@@602) (not ($generated@@372 $generated@@603))) ($generated@@136 $generated@@602 $generated@@603))) (=> (and ($generated@@372 $generated@@602) ($generated@@372 $generated@@603)) (= ($generated@@136 $generated@@602 $generated@@603) (< ($generated@@145 $generated@@602) ($generated@@145 $generated@@603))))) (=> (and ($generated@@136 $generated@@602 $generated@@603) ($generated@@372 $generated@@603)) ($generated@@372 $generated@@602))))
 :pattern ( ($generated@@136 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@137) (= (type $generated@@607) $generated@@137)) (< ($generated@@604 $generated@@606) ($generated@@605 ($generated@@231 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@231 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@137) (= (type $generated@@609) $generated@@137)) (< ($generated@@604 $generated@@609) ($generated@@605 ($generated@@231 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@231 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@137) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) $generated@@68)) ($generated@@232 $generated@@610 ($generated@@468 $generated@@611 $generated@@612))) (and (= ($generated@@325 ($generated@@379 ($generated@@338 $generated@@137 $generated@@137) $generated@@610)) $generated@@610) ($generated@@141 ($generated@@379 ($generated@@338 $generated@@137 $generated@@137) $generated@@610) ($generated@@468 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@232 $generated@@610 ($generated@@468 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@137) (= (type $generated@@614) $generated@@68)) (= (type $generated@@615) $generated@@68)) ($generated@@232 $generated@@613 ($generated@@476 $generated@@614 $generated@@615))) (and (= ($generated@@325 ($generated@@379 ($generated@@356 $generated@@137 $generated@@137) $generated@@613)) $generated@@613) ($generated@@141 ($generated@@379 ($generated@@356 $generated@@137 $generated@@137) $generated@@613) ($generated@@476 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@232 $generated@@613 ($generated@@476 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) $generated@@137)) ($generated@@232 $generated@@618 ($generated@@153 $generated@@616 $generated@@617))) (and (= ($generated@@325 ($generated@@379 $generated@@154 $generated@@618)) $generated@@618) ($generated@@141 ($generated@@379 $generated@@154 $generated@@618) ($generated@@153 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@232 $generated@@618 ($generated@@153 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@154) (< ($generated@@605 $generated@@619) ($generated@@605 ($generated@@304 $generated@@619))))
 :pattern ( ($generated@@304 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (not ($generated@@0 ($generated@@85 ($generated@@495 $generated@@621) $generated@@620))))
 :pattern ( (let (($generated@@621 (type $generated@@620)))
($generated@@85 ($generated@@495 $generated@@621) $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@73)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@68) (= (type $generated@@625) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@624 $generated@@625)) $generated@@62) (= ($generated@@622 ($generated@@153 $generated@@624 $generated@@625)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@154) (= ($generated@@604 ($generated@@325 $generated@@626)) ($generated@@605 $generated@@626)))
 :pattern ( ($generated@@604 ($generated@@325 $generated@@626)))
)))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@255) (= (type $generated@@628) $generated@@137)) (= (type $generated@@629) $generated@@154)) (or ($generated@@383 ($generated@@249 $generated@@628) ($generated@@249 $generated@@629)) (and (not (= 1 $generated@@247)) ($generated@@141 $generated@@629 $generated@@239)))) (and (=> (not (= ($generated@@249 $generated@@628) ($generated@@249 ($generated@@144 0)))) (and (=> ($generated@@0 ($generated@@249 ($generated@@11 (< 0 ($generated@@145 ($generated@@249 $generated@@628)))))) (=> ($generated@@0 ($generated@@249 ($generated@@11 ($generated@@286 ($generated@@249 $generated@@629))))) (let (($generated@@630 ($generated@@249 ($generated@@308 ($generated@@249 $generated@@629)))))
($generated@@383 ($generated@@249 ($generated@@143 $generated@@628 ($generated@@144 1))) $generated@@630)))) (=> (not ($generated@@0 ($generated@@249 ($generated@@11 (< 0 ($generated@@145 ($generated@@249 $generated@@628))))))) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@137) ($generated@@136 $generated@@631 $generated@@628)) ($generated@@383 $generated@@631 ($generated@@249 $generated@@629)))
 :pattern ( ($generated@@321 ($generated@@253 $generated@@627) $generated@@631 $generated@@629))
 :pattern ( ($generated@@136 $generated@@631 $generated@@628))
))))) (= ($generated@@321 ($generated@@253 $generated@@627) ($generated@@249 $generated@@628) ($generated@@249 $generated@@629)) (ite (= ($generated@@249 $generated@@628) ($generated@@249 ($generated@@144 0))) true (ite (< 0 ($generated@@145 ($generated@@249 $generated@@628))) (ite ($generated@@286 ($generated@@249 $generated@@629)) ($generated@@0 (let (($generated@@632 ($generated@@249 ($generated@@308 ($generated@@249 $generated@@629)))))
($generated@@249 ($generated@@11 ($generated@@321 ($generated@@253 $generated@@627) ($generated@@249 ($generated@@143 $generated@@628 ($generated@@144 1))) $generated@@632))))) true) (forall (($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@137) true) ($generated@@136 $generated@@633 $generated@@628)) ($generated@@321 ($generated@@253 $generated@@627) $generated@@633 ($generated@@249 $generated@@629)))
 :pattern ( ($generated@@321 ($generated@@253 $generated@@627) $generated@@633 $generated@@629))
 :pattern ( ($generated@@136 $generated@@633 $generated@@628))
)))))))
 :weight 3
 :pattern ( ($generated@@321 ($generated@@253 $generated@@627) ($generated@@249 $generated@@628) ($generated@@249 $generated@@629)))
))))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@137) ($generated@@232 $generated@@634 ($generated@@79 0))) (and (= ($generated@@325 ($generated@@379 $generated@@2 $generated@@634)) $generated@@634) ($generated@@141 ($generated@@379 ($generated@@80 $generated@@137 $generated@@4) $generated@@634) ($generated@@79 0))))
 :pattern ( ($generated@@232 $generated@@634 ($generated@@79 0)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@137) (= (type $generated@@636) $generated@@68)) ($generated@@232 $generated@@635 ($generated@@261 $generated@@636))) (and (= ($generated@@325 ($generated@@379 ($generated@@80 $generated@@137 $generated@@4) $generated@@635)) $generated@@635) ($generated@@141 ($generated@@379 ($generated@@80 $generated@@137 $generated@@4) $generated@@635) ($generated@@261 $generated@@636))))
 :pattern ( ($generated@@232 $generated@@635 ($generated@@261 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@137) (= (type $generated@@638) $generated@@68)) ($generated@@232 $generated@@637 ($generated@@266 $generated@@638))) (and (= ($generated@@325 ($generated@@379 ($generated@@80 $generated@@137 $generated@@4) $generated@@637)) $generated@@637) ($generated@@141 ($generated@@379 ($generated@@80 $generated@@137 $generated@@4) $generated@@637) ($generated@@266 $generated@@638))))
 :pattern ( ($generated@@232 $generated@@637 ($generated@@266 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@137) (= (type $generated@@640) $generated@@68)) ($generated@@232 $generated@@639 ($generated@@170 $generated@@640))) (and (= ($generated@@325 ($generated@@379 ($generated@@80 $generated@@137 $generated@@2) $generated@@639)) $generated@@639) ($generated@@141 ($generated@@379 ($generated@@80 $generated@@137 $generated@@2) $generated@@639) ($generated@@170 $generated@@640))))
 :pattern ( ($generated@@232 $generated@@639 ($generated@@170 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@137) (= (type $generated@@642) $generated@@68)) ($generated@@232 $generated@@641 ($generated@@562 $generated@@642))) (and (= ($generated@@325 ($generated@@379 ($generated@@297 $generated@@137) $generated@@641)) $generated@@641) ($generated@@141 ($generated@@379 ($generated@@297 $generated@@137) $generated@@641) ($generated@@562 $generated@@642))))
 :pattern ( ($generated@@232 $generated@@641 ($generated@@562 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@137) ($generated@@372 $generated@@643)) (= $generated@@643 ($generated@@144 ($generated@@145 $generated@@643))))
 :pattern ( ($generated@@145 $generated@@643))
 :pattern ( ($generated@@372 $generated@@643))
)))
(assert (= ($generated@@76 $generated@@239) $generated@@64))
(assert (= ($generated@@622 $generated@@239) $generated@@67))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@80 $generated@@137 $generated@@2)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@644 ($generated@@170 $generated@@645) $generated@@646) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@137) (< 0 ($generated ($generated@@85 $generated@@644 $generated@@647)))) ($generated@@279 $generated@@647 $generated@@645 $generated@@646))
 :pattern ( ($generated@@85 $generated@@644 $generated@@647))
))))
 :pattern ( ($generated@@78 $generated@@644 ($generated@@170 $generated@@645) $generated@@646))
)))
(assert (= $generated@@168 ($generated@@249 $generated@@168)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@137) (= (type $generated@@649) $generated@@137)) (and ($generated@@372 $generated@@649) (<= ($generated@@145 $generated@@649) ($generated@@145 $generated@@648)))) (or (and (= $generated@@649 ($generated@@144 0)) (= ($generated@@143 $generated@@648 $generated@@649) $generated@@648)) (and (not (= $generated@@649 ($generated@@144 0))) ($generated@@136 ($generated@@143 $generated@@648 $generated@@649) $generated@@648))))
 :pattern ( ($generated@@143 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@154) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@652) (and ($generated@@152 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@68) ($generated@@78 $generated@@650 ($generated@@153 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@78 $generated@@650 ($generated@@153 $generated@@651 $generated@@653) $generated@@652))
))))) ($generated@@279 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@279 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) $generated@@154) (= (type $generated@@655) $generated@@68)) (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@656) (and ($generated@@152 $generated@@654) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@68) ($generated@@78 $generated@@654 ($generated@@153 $generated@@657 $generated@@655) $generated@@656))
 :pattern ( ($generated@@78 $generated@@654 ($generated@@153 $generated@@657 $generated@@655) $generated@@656))
))))) ($generated@@279 ($generated@@162 $generated@@654) $generated@@655 $generated@@656))
 :pattern ( ($generated@@279 ($generated@@162 $generated@@654) $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@154) (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@240 $generated@@659) (and ($generated@@286 $generated@@658) ($generated@@78 $generated@@658 $generated@@239 $generated@@659)))) ($generated@@78 ($generated@@308 $generated@@658) $generated@@239 $generated@@659))
 :pattern ( ($generated@@78 ($generated@@308 $generated@@658) $generated@@239 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@137) (= (type $generated@@661) $generated@@137)) (= ($generated@@231 ($generated@@249 $generated@@660) ($generated@@249 $generated@@661)) ($generated@@249 ($generated@@231 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@231 ($generated@@249 $generated@@660) ($generated@@249 $generated@@661)))
)))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@325 ($generated@@8 ($generated@@271 $generated@@662))) ($generated@@249 ($generated@@325 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@325 ($generated@@8 ($generated@@271 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@154) (= ($generated@@304 ($generated@@249 $generated@@663)) ($generated@@249 ($generated@@304 $generated@@663))))
 :pattern ( ($generated@@304 ($generated@@249 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (= ($generated@@325 ($generated@@249 $generated@@664)) ($generated@@249 ($generated@@325 $generated@@664)))
 :pattern ( ($generated@@325 ($generated@@249 $generated@@664)))
)))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@255) (= (type $generated@@666) $generated@@137)) (= (type $generated@@667) $generated@@154)) (or ($generated@@383 $generated@@666 $generated@@667) (and (not (= 1 $generated@@247)) ($generated@@141 $generated@@667 $generated@@239)))) (and (=> (not (= $generated@@666 ($generated@@249 ($generated@@144 0)))) (and (=> (< 0 ($generated@@145 $generated@@666)) (=> ($generated@@286 $generated@@667) (let (($generated@@668 ($generated@@308 $generated@@667)))
($generated@@383 ($generated@@143 $generated@@666 ($generated@@144 1)) $generated@@668)))) (=> (not (< 0 ($generated@@145 $generated@@666))) (forall (($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@137) ($generated@@136 $generated@@669 $generated@@666)) ($generated@@383 $generated@@669 $generated@@667))
 :pattern ( ($generated@@321 $generated@@665 $generated@@669 $generated@@667))
 :pattern ( ($generated@@136 $generated@@669 $generated@@666))
))))) (= ($generated@@321 ($generated@@253 $generated@@665) $generated@@666 $generated@@667) (ite (= $generated@@666 ($generated@@249 ($generated@@144 0))) true (ite (< 0 ($generated@@145 $generated@@666)) (ite ($generated@@286 $generated@@667) (let (($generated@@670 ($generated@@308 $generated@@667)))
($generated@@321 $generated@@665 ($generated@@143 $generated@@666 ($generated@@144 1)) $generated@@670)) true) (forall (($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@137) true) ($generated@@136 $generated@@671 $generated@@666)) ($generated@@321 $generated@@665 $generated@@671 $generated@@667))
 :pattern ( ($generated@@321 $generated@@665 $generated@@671 $generated@@667))
 :pattern ( ($generated@@136 $generated@@671 $generated@@666))
)))))))
 :pattern ( ($generated@@321 ($generated@@253 $generated@@665) $generated@@666 $generated@@667))
))))
(assert (forall (($generated@@672 T@U) ) (! (let (($generated@@673 ($generated@@298 (type $generated@@672))))
 (=> (and (= (type $generated@@672) ($generated@@297 $generated@@673)) (= ($generated@@296 $generated@@672) 0)) (= $generated@@672 ($generated@@295 $generated@@673))))
 :pattern ( ($generated@@296 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 (type $generated@@675)))
 (=> (and (and (= (type $generated@@674) ($generated@@80 $generated@@677 $generated@@2)) (= (type $generated@@676) $generated@@2)) (<= 0 ($generated $generated@@676))) (= ($generated@@330 ($generated@@86 $generated@@674 $generated@@675 $generated@@676)) (+ (- ($generated@@330 $generated@@674) ($generated ($generated@@85 $generated@@674 $generated@@675))) ($generated $generated@@676)))))
 :pattern ( ($generated@@330 ($generated@@86 $generated@@674 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@679) $generated@@2)) ($generated@@78 $generated@@679 $generated@@46 $generated@@678))
 :pattern ( ($generated@@78 $generated@@679 $generated@@46 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@681) $generated@@3)) ($generated@@78 $generated@@681 $generated@@47 $generated@@680))
 :pattern ( ($generated@@78 $generated@@681 $generated@@47 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@683) $generated@@4)) ($generated@@78 $generated@@683 $generated@@44 $generated@@682))
 :pattern ( ($generated@@78 $generated@@683 $generated@@44 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@685) $generated@@519)) ($generated@@78 $generated@@685 $generated@@45 $generated@@684))
 :pattern ( ($generated@@78 $generated@@685 $generated@@45 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@687) $generated@@137)) ($generated@@78 $generated@@687 $generated@@48 $generated@@686))
 :pattern ( ($generated@@78 $generated@@687 $generated@@48 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@297 $generated@@137)) (= (type $generated@@689) $generated@@68)) (= ($generated@@141 $generated@@688 ($generated@@562 $generated@@689)) (forall (($generated@@690 Int) ) (!  (=> (and (<= 0 $generated@@690) (< $generated@@690 ($generated@@296 $generated@@688))) ($generated@@232 ($generated@@563 $generated@@688 $generated@@690) $generated@@689))
 :pattern ( ($generated@@563 $generated@@688 $generated@@690))
))))
 :pattern ( ($generated@@141 $generated@@688 ($generated@@562 $generated@@689)))
)))
(assert (forall (($generated@@692 T@U) ) (! (= (type ($generated@@691 $generated@@692)) $generated@@255)
 :pattern ( ($generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@255) (= (type $generated@@694) $generated@@137)) (= (type $generated@@695) $generated@@154)) (= ($generated@@252 $generated@@693 $generated@@694 $generated@@695) ($generated@@252 $generated@@254 $generated@@694 $generated@@695)))
 :pattern ( ($generated@@252 ($generated@@691 $generated@@693) $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@255) (= (type $generated@@697) $generated@@137)) (= (type $generated@@698) $generated@@154)) (= ($generated@@321 $generated@@696 $generated@@697 $generated@@698) ($generated@@321 $generated@@254 $generated@@697 $generated@@698)))
 :pattern ( ($generated@@321 ($generated@@691 $generated@@696) $generated@@697 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 Int) ) (!  (=> (= (type $generated@@700) ($generated@@297 $generated@@137)) (=> (and (<= 0 $generated@@701) (< $generated@@701 ($generated@@296 $generated@@700))) (< ($generated@@605 ($generated@@379 $generated@@154 ($generated@@563 $generated@@700 $generated@@701))) ($generated@@699 $generated@@700))))
 :pattern ( ($generated@@605 ($generated@@379 $generated@@154 ($generated@@563 $generated@@700 $generated@@701))))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@703) $generated@@68)) (= (type $generated@@704) $generated@@68)) ($generated@@141 $generated@@702 ($generated@@468 $generated@@703 $generated@@704))) (and (and ($generated@@141 ($generated@@336 $generated@@702) ($generated@@261 $generated@@703)) ($generated@@141 ($generated@@399 $generated@@702) ($generated@@261 $generated@@704))) ($generated@@141 ($generated@@442 $generated@@702) ($generated@@261 ($generated@@153 $generated@@703 $generated@@704)))))
 :pattern ( ($generated@@141 $generated@@702 ($generated@@468 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) ($generated@@356 $generated@@137 $generated@@137)) (= (type $generated@@706) $generated@@68)) (= (type $generated@@707) $generated@@68)) ($generated@@141 $generated@@705 ($generated@@476 $generated@@706 $generated@@707))) (and (and ($generated@@141 ($generated@@354 $generated@@705) ($generated@@266 $generated@@706)) ($generated@@141 ($generated@@410 $generated@@705) ($generated@@266 $generated@@707))) ($generated@@141 ($generated@@450 $generated@@705) ($generated@@266 ($generated@@153 $generated@@706 $generated@@707)))))
 :pattern ( ($generated@@141 $generated@@705 ($generated@@476 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@2) ($generated@@141 $generated@@708 $generated@@46))
 :pattern ( ($generated@@141 $generated@@708 $generated@@46))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@3) ($generated@@141 $generated@@709 $generated@@47))
 :pattern ( ($generated@@141 $generated@@709 $generated@@47))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@4) ($generated@@141 $generated@@710 $generated@@44))
 :pattern ( ($generated@@141 $generated@@710 $generated@@44))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@519) ($generated@@141 $generated@@711 $generated@@45))
 :pattern ( ($generated@@141 $generated@@711 $generated@@45))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@137) ($generated@@141 $generated@@712 $generated@@48))
 :pattern ( ($generated@@141 $generated@@712 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 (T@U) Bool)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@723) $generated@@137) (= (type $generated@@713) $generated@@137)) (= (type $generated@@714) $generated@@154)) (= (type $generated@@722) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@717) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@715) $generated@@154)) (= (type $generated@@716) $generated@@154)) (= (type $generated@@718) $generated@@154)) (= (type $generated@@719) $generated@@137)) (= (type $generated@@720) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@724) ($generated@@177 $generated@@81 $generated@@4))) (= (type $generated@@725) $generated@@81)) (= (type $generated@@726) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@727 true))
(let (($generated@@728  (and (=> (= (ControlFlow 0 4) (- 0 13)) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> ($generated@@286 $generated@@714) (let (($generated@@729 ($generated@@308 $generated@@714)))
($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) ($generated@@143 $generated@@713 ($generated@@144 1)) $generated@@729))))))) (=> (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> ($generated@@286 $generated@@714) (let (($generated@@730 ($generated@@308 $generated@@714)))
($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) ($generated@@143 $generated@@713 ($generated@@144 1)) $generated@@730)))))) (and (=> (= (ControlFlow 0 4) (- 0 12)) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> (not ($generated@@286 $generated@@714)) ($generated@@0 ($generated@@249 ($generated@@11 true)))))))) (=> (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> (not ($generated@@286 $generated@@714)) ($generated@@0 ($generated@@249 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 4) (- 0 11)) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (= ($generated@@271 0) ($generated@@145 $generated@@713)) (forall (($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@731) $generated@@137) ($generated@@136 $generated@@731 $generated@@713)) ($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@731 $generated@@714))
 :pattern ( ($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@731 $generated@@714))
)))))) (=> (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (= ($generated@@271 0) ($generated@@145 $generated@@713)) (forall (($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@732) $generated@@137) ($generated@@136 $generated@@732 $generated@@713)) ($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@732 $generated@@714))
 :pattern ( ($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@732 $generated@@714))
))))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (= $generated@@713 ($generated@@249 ($generated@@144 0))) ($generated@@0 ($generated@@249 ($generated@@11 true))))))) (=> (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (= $generated@@713 ($generated@@249 ($generated@@144 0))) ($generated@@0 ($generated@@249 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 4) (- 0 9)) (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (not (= $generated@@713 ($generated@@249 ($generated@@144 0)))) (=> (< 0 ($generated@@145 $generated@@713)) (=> ($generated@@286 $generated@@714) (let (($generated@@733 ($generated@@308 $generated@@714)))
($generated@@321 ($generated@@253 ($generated@@253 $generated@@254)) ($generated@@143 $generated@@713 ($generated@@144 1)) $generated@@733)))))))) (=> (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (not (= $generated@@713 ($generated@@249 ($generated@@144 0)))) (=> (< 0 ($generated@@145 $generated@@713)) (=> ($generated@@286 $generated@@714) (let (($generated@@734 ($generated@@308 $generated@@714)))
($generated@@321 ($generated@@253 ($generated@@253 $generated@@254)) ($generated@@143 $generated@@713 ($generated@@144 1)) $generated@@734))))))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (not (= $generated@@713 ($generated@@249 ($generated@@144 0)))) (=> (< 0 ($generated@@145 $generated@@713)) (=> (not ($generated@@286 $generated@@714)) ($generated@@0 ($generated@@249 ($generated@@11 true))))))))) (=> (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (not (= $generated@@713 ($generated@@249 ($generated@@144 0)))) (=> (< 0 ($generated@@145 $generated@@713)) (=> (not ($generated@@286 $generated@@714)) ($generated@@0 ($generated@@249 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (not (= $generated@@713 ($generated@@249 ($generated@@144 0)))) (=> (not (< 0 ($generated@@145 $generated@@713))) (forall (($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@137) true) ($generated@@136 $generated@@735 $generated@@713)) ($generated@@321 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@735 $generated@@714))
 :pattern ( ($generated@@321 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@735 $generated@@714))
 :pattern ( ($generated@@136 $generated@@735 $generated@@713))
))))))) (=> (=> ($generated@@383 $generated@@713 $generated@@714) (or ($generated@@321 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (not (= $generated@@713 ($generated@@249 ($generated@@144 0)))) (=> (not (< 0 ($generated@@145 $generated@@713))) (forall (($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@736) $generated@@137) true) ($generated@@136 $generated@@736 $generated@@713)) ($generated@@321 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@736 $generated@@714))
 :pattern ( ($generated@@321 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@736 $generated@@714))
 :pattern ( ($generated@@136 $generated@@736 $generated@@713))
)))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@250 $generated@@713 $generated@@714) (or ($generated@@248 $generated@@713 $generated@@714) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> ($generated@@286 $generated@@714) (let (($generated@@737 ($generated@@308 $generated@@714)))
($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) ($generated@@143 $generated@@713 ($generated@@144 1)) $generated@@737))))))))) (=> (=> ($generated@@250 $generated@@713 $generated@@714) (or ($generated@@248 $generated@@713 $generated@@714) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> ($generated@@286 $generated@@714) (let (($generated@@738 ($generated@@308 $generated@@714)))
($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) ($generated@@143 $generated@@713 ($generated@@144 1)) $generated@@738)))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@250 $generated@@713 $generated@@714) (or ($generated@@248 $generated@@713 $generated@@714) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> (not ($generated@@286 $generated@@714)) ($generated@@0 ($generated@@249 ($generated@@11 true)))))))))) (=> (=> ($generated@@250 $generated@@713 $generated@@714) (or ($generated@@248 $generated@@713 $generated@@714) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (< 0 ($generated@@145 $generated@@713)) (=> (not ($generated@@286 $generated@@714)) ($generated@@0 ($generated@@249 ($generated@@11 true))))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@250 $generated@@713 $generated@@714) (or ($generated@@248 $generated@@713 $generated@@714) (=> ($generated@@251 $generated@@713 $generated@@714) (or ($generated@@252 ($generated@@253 $generated@@254) $generated@@713 $generated@@714) (=> (= ($generated@@271 0) ($generated@@145 $generated@@713)) (forall (($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@739) $generated@@137) ($generated@@136 $generated@@739 $generated@@713)) ($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@739 $generated@@714))
 :pattern ( ($generated@@252 ($generated@@253 ($generated@@253 $generated@@254)) $generated@@739 $generated@@714))
))))))))))))))))))))))))))))
(let (($generated@@740  (=> (and (= $generated@@714 $generated@@168) (= (ControlFlow 0 20) 4)) $generated@@728)))
(let (($generated@@741  (=> (not (= $generated@@714 ($generated@@304 $generated@@715))) (and (=> (= (ControlFlow 0 22) 20) $generated@@740) (=> (= (ControlFlow 0 22) 21) $generated@@727)))))
(let (($generated@@742  (=> (and (= $generated@@714 ($generated@@304 $generated@@715)) ($generated@@141 $generated@@715 $generated@@239)) (=> (and (and (and ($generated@@141 $generated@@716 $generated@@239) ($generated@@78 $generated@@716 $generated@@239 $generated@@717)) (= $generated@@718 $generated@@715)) (and ($generated@@141 $generated@@718 $generated@@239) (= $generated@@716 $generated@@718))) (and (=> (= (ControlFlow 0 16) (- 0 19)) ($generated@@372 ($generated@@249 ($generated@@144 1)))) (=> ($generated@@372 ($generated@@249 ($generated@@144 1))) (and (=> (= (ControlFlow 0 16) (- 0 18)) (<= ($generated@@145 ($generated@@249 ($generated@@144 1))) ($generated@@145 $generated@@713))) (=> (<= ($generated@@145 ($generated@@249 ($generated@@144 1))) ($generated@@145 $generated@@713)) (=> (= $generated@@719 ($generated@@143 $generated@@713 ($generated@@144 1))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or ($generated@@136 $generated@@719 $generated@@713) (and (= $generated@@719 $generated@@713) (< ($generated@@605 $generated@@716) ($generated@@605 $generated@@714))))) (=> (or ($generated@@136 $generated@@719 $generated@@713) (and (= $generated@@719 $generated@@713) (< ($generated@@605 $generated@@716) ($generated@@605 $generated@@714)))) (=> (and (and (and (and ($generated@@240 $generated@@720) ($generated@@721 $generated@@720)) ($generated@@251 $generated@@719 $generated@@716)) (and (and ($generated@@251 $generated@@719 $generated@@716) (and ($generated@@252 ($generated@@253 $generated@@254) $generated@@719 $generated@@716) (and (=> (< 0 ($generated@@145 $generated@@719)) (ite ($generated@@286 $generated@@716) (let (($generated@@743 ($generated@@308 $generated@@716)))
($generated@@252 ($generated@@253 $generated@@254) ($generated@@143 $generated@@719 ($generated@@144 1)) $generated@@743)) true)) (=> (= ($generated@@271 0) ($generated@@145 $generated@@719)) (forall (($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@137) ($generated@@136 $generated@@744 $generated@@719)) ($generated@@252 ($generated@@253 $generated@@254) $generated@@744 $generated@@716))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@254) $generated@@744 $generated@@716))
)))))) ($generated@@383 $generated@@719 $generated@@716))) (and (and (and ($generated@@383 $generated@@719 $generated@@716) (and ($generated@@321 ($generated@@253 $generated@@254) $generated@@719 $generated@@716) (ite (= $generated@@719 ($generated@@249 ($generated@@144 0))) true (ite (< 0 ($generated@@145 $generated@@719)) (ite ($generated@@286 $generated@@716) (let (($generated@@745 ($generated@@308 $generated@@716)))
($generated@@321 ($generated@@253 $generated@@254) ($generated@@143 $generated@@719 ($generated@@144 1)) $generated@@745)) true) (forall (($generated@@746 T@U) ) (!  (=> (and (and (= (type $generated@@746) $generated@@137) true) ($generated@@136 $generated@@746 $generated@@719)) ($generated@@321 ($generated@@253 $generated@@254) $generated@@746 $generated@@716))
 :pattern ( ($generated@@321 ($generated@@253 $generated@@254) $generated@@746 $generated@@716))
 :pattern ( ($generated@@136 $generated@@746 $generated@@719))
)))))) ($generated@@250 $generated@@719 $generated@@716)) (and (and ($generated@@250 $generated@@719 $generated@@716) (and (and ($generated@@248 $generated@@719 $generated@@716) ($generated@@141 $generated@@716 $generated@@239)) ($generated@@252 ($generated@@253 $generated@@254) $generated@@719 $generated@@716))) (and (= $generated@@717 $generated@@720) (= (ControlFlow 0 16) 4))))) $generated@@728))))))))))))
(let (($generated@@747  (=> (< 0 ($generated@@145 $generated@@713)) (and (=> (= (ControlFlow 0 23) 16) $generated@@742) (=> (= (ControlFlow 0 23) 22) $generated@@741)))))
(let (($generated@@748  (=> (and (and (and ($generated@@240 $generated@@722) ($generated@@721 $generated@@722)) (= $generated@@717 $generated@@722)) (and (forall (($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@137) ($generated@@136 $generated@@749 $generated@@713)) (and (and ($generated@@252 ($generated@@253 $generated@@254) $generated@@749 $generated@@714) ($generated@@321 ($generated@@253 $generated@@254) $generated@@749 $generated@@714)) ($generated@@248 $generated@@749 $generated@@714)))
 :pattern ( ($generated@@248 $generated@@749 $generated@@714))
 :pattern ( ($generated@@321 ($generated@@253 $generated@@254) $generated@@749 $generated@@714))
 :pattern ( ($generated@@252 ($generated@@253 $generated@@254) $generated@@749 $generated@@714))
 :pattern ( ($generated@@136 $generated@@749 $generated@@713))
)) (= (ControlFlow 0 14) 4))) $generated@@728)))
(let (($generated@@750  (=> (and ($generated@@136 $generated@@723 $generated@@713) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@136 $generated@@723 $generated@@713) (and (= $generated@@723 $generated@@713) (< ($generated@@605 $generated@@714) ($generated@@605 $generated@@714)))))))
(let (($generated@@751  (=> (not (< 0 ($generated@@145 $generated@@713))) (and (=> (= (ControlFlow 0 15) 2) $generated@@750) (=> (= (ControlFlow 0 15) 14) $generated@@748)))))
(let (($generated@@752  (=> (and (= $generated@@724 ($generated@@176 $generated@@725 $generated@@726 $generated@@60 false)) ($generated@@428 $generated@@714)) (=> (and (and ($generated@@240 $generated@@717) ($generated@@721 $generated@@717)) (and (= $generated@@726 $generated@@717) (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) $generated@@137) (= (type $generated@@754) $generated@@154)) (=> (and (and ($generated@@141 $generated@@754 $generated@@239) ($generated@@0 ($generated@@249 ($generated@@11 true)))) (or ($generated@@136 $generated@@753 $generated@@713) (and (= $generated@@753 $generated@@713) (< ($generated@@605 $generated@@754) ($generated@@605 $generated@@714))))) (and (and ($generated@@252 ($generated@@253 $generated@@254) $generated@@753 $generated@@754) ($generated@@321 ($generated@@253 $generated@@254) $generated@@753 $generated@@754)) ($generated@@248 $generated@@753 $generated@@754))))
 :no-pattern (type $generated@@753)
 :no-pattern (type $generated@@754)
 :no-pattern ($generated $generated@@753)
 :no-pattern ($generated@@0 $generated@@753)
 :no-pattern ($generated $generated@@754)
 :no-pattern ($generated@@0 $generated@@754)
)))) (and (=> (= (ControlFlow 0 24) 23) $generated@@747) (=> (= (ControlFlow 0 24) 15) $generated@@751))))))
(let (($generated@@755  (=> (and ($generated@@240 $generated@@726) ($generated@@721 $generated@@726)) (=> (and (and (and ($generated@@141 $generated@@714 $generated@@239) ($generated@@78 $generated@@714 $generated@@239 $generated@@726)) ($generated@@428 $generated@@714)) (and (= 4 $generated@@247) (= (ControlFlow 0 25) 24))) $generated@@752))))
$generated@@755))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U Int T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (Int T@U) Bool)
(declare-fun $generated@@142 (Int) Int)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@247 (T@U Int T@U) Bool)
(declare-fun $generated@@248 (Int T@U) Bool)
(declare-fun $generated@@252 (Int T@U) Bool)
(declare-fun $generated@@253 (Int T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@400 (T@U) Bool)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@T) T@U)
(declare-fun $generated@@486 () T@T)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U Int) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@653 (T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@139) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@138 $generated@@147)) $generated@@139)
 :pattern ( ($generated@@138 $generated@@147))
))) (= (type $generated@@144) $generated@@68)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@148)) $generated@@140)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@149 T@U) ($generated@@150 Int) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@139) (= (type $generated@@151) $generated@@140)) (or ($generated@@141 $generated@@150 $generated@@151) (and (not (= 1 $generated@@136)) (and (<= ($generated@@142 0) $generated@@150) ($generated@@143 $generated@@151 $generated@@144))))) (and (=> (not (= $generated@@150 ($generated@@142 0))) (=> ($generated@@145 $generated@@151) (let (($generated@@152 ($generated@@146 $generated@@151)))
($generated@@141 (- $generated@@150 1) $generated@@152)))) (= ($generated@@137 ($generated@@138 $generated@@149) $generated@@150 $generated@@151) (ite (= $generated@@150 ($generated@@142 0)) true (ite ($generated@@145 $generated@@151) (let (($generated@@153 ($generated@@146 $generated@@151)))
($generated@@137 $generated@@149 (- $generated@@150 1) $generated@@153)) true)))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@149) $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@143 $generated@@154 ($generated@@79 0)))
 :pattern ( ($generated@@143 $generated@@154 ($generated@@79 0)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@157 $generated@@158)) $generated@@68)
 :pattern ( ($generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@68) (= (type $generated@@160) $generated@@68)) (= (type $generated@@161) $generated@@140)) ($generated@@143 $generated@@161 ($generated@@156 $generated@@159 $generated@@160))) ($generated@@155 $generated@@161))
 :pattern ( ($generated@@155 $generated@@161) ($generated@@143 $generated@@161 ($generated@@156 $generated@@159 $generated@@160)))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 16) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@165)
 :pattern ( ($generated@@164 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@140) (= (type $generated@@169) $generated@@140)) true) (= ($generated@@162 $generated@@168 $generated@@169)  (and (= ($generated@@163 $generated@@168) ($generated@@163 $generated@@169)) (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)))))
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
)))
(assert  (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@72)
 :pattern ( ($generated@@170 $generated@@172))
)) (= (type $generated@@171) $generated@@140)))
(assert (= ($generated@@170 $generated@@171) $generated@@65))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@80 $generated@@165 $generated@@2)) (= (type $generated@@177) $generated@@68)) ($generated@@143 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@143 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 17)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@81 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@71 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@229) ($generated@@70 $generated@@4))) (= (type $generated@@231) $generated@@81)) (= (type $generated@@232) ($generated@@70 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@140)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@68) (= (type $generated@@239) $generated@@68)) (= (type $generated@@240) $generated@@165)) (= (type $generated@@241) $generated@@165)) (= ($generated@@143 ($generated@@234 $generated@@240 $generated@@241) ($generated@@156 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@143 ($generated@@234 $generated@@240 $generated@@241) ($generated@@156 $generated@@238 $generated@@239)))
)))
(assert ($generated@@143 $generated@@171 $generated@@144))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@242 $generated@@243)) ($generated@@78 $generated@@171 $generated@@144 $generated@@243))
 :pattern ( ($generated@@78 $generated@@171 $generated@@144 $generated@@243))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@244 T@U) ($generated@@245 Int) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@244) $generated@@139) (= (type $generated@@246) $generated@@140)) (or ($generated@@141 $generated@@245 $generated@@246) (and (not (= 1 $generated@@136)) (and (<= ($generated@@142 0) $generated@@245) ($generated@@143 $generated@@246 $generated@@144))))) true)
 :pattern ( ($generated@@137 $generated@@244 $generated@@245 $generated@@246))
))))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@249 T@U) ($generated@@250 Int) ($generated@@251 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@139) (= (type $generated@@251) $generated@@140)) (or ($generated@@248 $generated@@250 $generated@@251) (and (not (= 2 $generated@@136)) (and (<= ($generated@@142 0) $generated@@250) ($generated@@143 $generated@@251 $generated@@144))))) true)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250 $generated@@251))
))))
(assert  (=> (<= 3 $generated@@136) (forall (($generated@@254 Int) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@140) (or ($generated@@253 $generated@@254 $generated@@255) (and (not (= 3 $generated@@136)) (and (<= ($generated@@142 0) $generated@@254) ($generated@@143 $generated@@255 $generated@@144))))) true)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@259 T@U) ($generated@@260 Int) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@139) (= (type $generated@@261) $generated@@140)) (or ($generated@@141 ($generated@@142 $generated@@260) ($generated@@256 $generated@@261)) (and (not (= 1 $generated@@136)) (and (<= ($generated@@142 0) $generated@@260) ($generated@@143 $generated@@261 $generated@@144))))) (and (=> (not (= ($generated@@142 $generated@@260) ($generated@@142 0))) (=> ($generated@@0 ($generated@@256 ($generated@@11 ($generated@@145 ($generated@@256 $generated@@261))))) (let (($generated@@262 ($generated@@256 ($generated@@146 ($generated@@256 $generated@@261)))))
($generated@@141 ($generated@@142 (- $generated@@260 1)) $generated@@262)))) (= ($generated@@137 ($generated@@138 $generated@@259) ($generated@@142 $generated@@260) ($generated@@256 $generated@@261)) (ite (= ($generated@@142 $generated@@260) ($generated@@142 0)) true (ite ($generated@@145 ($generated@@256 $generated@@261)) ($generated@@0 (let (($generated@@263 ($generated@@256 ($generated@@146 ($generated@@256 $generated@@261)))))
($generated@@256 ($generated@@11 ($generated@@137 ($generated@@138 $generated@@259) ($generated@@142 (- $generated@@260 1)) $generated@@263))))) true)))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@138 $generated@@259) ($generated@@142 $generated@@260) ($generated@@256 $generated@@261)))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@140) (= (type $generated@@265) $generated@@140)) (= ($generated@@162 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@162 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@140) (= (type $generated@@268) $generated@@140)) (= ($generated@@266 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@165 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@143 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@165) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@235 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@143 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@80 $generated@@165 $generated@@4)) (= (type $generated@@277) $generated@@68)) (= ($generated@@143 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@165) ($generated@@0 ($generated@@85 $generated@@276 $generated@@278))) ($generated@@235 $generated@@278 $generated@@277))
 :pattern ( ($generated@@85 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@143 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@142 $generated@@279) $generated@@279)
 :pattern ( ($generated@@142 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@256 $generated@@280) $generated@@280)
 :pattern ( ($generated@@256 $generated@@280))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Int) ) (!  (=> (and (and (= (type $generated@@281) $generated@@139) (= (type $generated@@282) $generated@@140)) (and ($generated@@143 $generated@@282 $generated@@144) (= $generated@@283 0))) ($generated@@247 $generated@@281 $generated@@283 $generated@@282))
 :pattern ( ($generated@@247 $generated@@281 $generated@@283 $generated@@282))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@140) (= (type $generated@@286) $generated@@140)) (and ($generated@@284 $generated@@285) ($generated@@284 $generated@@286))) (= ($generated@@266 $generated@@285 $generated@@286) true))
 :pattern ( ($generated@@266 $generated@@285 $generated@@286) ($generated@@284 $generated@@285))
 :pattern ( ($generated@@266 $generated@@285 $generated@@286) ($generated@@284 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) $generated@@68)) (= (type $generated@@290) $generated@@165)) (= (type $generated@@291) $generated@@165)) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@292)) (= ($generated@@78 ($generated@@234 $generated@@290 $generated@@291) ($generated@@156 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@78 ($generated@@234 $generated@@290 $generated@@291) ($generated@@156 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@140) (= ($generated@@155 $generated@@293) (= ($generated@@170 $generated@@293) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@140) (= ($generated@@145 $generated@@294) (= ($generated@@170 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@145 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@140) (= ($generated@@284 $generated@@295) (= ($generated@@170 $generated@@295) $generated@@65)))
 :pattern ( ($generated@@284 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@140) ($generated@@155 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@165) (= (type $generated@@298) $generated@@165)) (= $generated@@296 ($generated@@234 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@155 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 18)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@140) ($generated@@284 $generated@@307)) (= $generated@@307 $generated@@171))
 :pattern ( ($generated@@284 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@140)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@140) ($generated@@145 $generated@@310)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@140) (= $generated@@310 ($generated@@308 $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@145 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 Int) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@139) (= (type $generated@@314) $generated@@140)) (= ($generated@@247 ($generated@@138 $generated@@312) $generated@@313 $generated@@314) ($generated@@247 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@247 ($generated@@138 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 Int) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@139) (= (type $generated@@317) $generated@@140)) (= ($generated@@137 ($generated@@138 $generated@@315) $generated@@316 $generated@@317) ($generated@@137 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@165)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@68) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@287 ($generated@@318 $generated@@320) $generated@@321 $generated@@322) ($generated@@78 $generated@@320 $generated@@321 $generated@@322)))
 :pattern ( ($generated@@287 ($generated@@318 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@325 T@T) ) (! (= (type ($generated@@324 $generated@@325)) ($generated@@80 $generated@@325 $generated@@2))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@83 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@80 $generated@@327 $generated@@2)) (and (= (= ($generated@@323 $generated@@326) 0) (= $generated@@326 ($generated@@324 $generated@@327))) (=> (not (= ($generated@@323 $generated@@326) 0)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) (< 0 ($generated ($generated@@85 $generated@@326 $generated@@328))))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@80 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 20)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@83 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@80 $generated@@366 $generated@@2)) (= ($generated@@174 $generated@@365) (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@366) (and (<= 0 ($generated ($generated@@85 $generated@@365 $generated@@367))) (<= ($generated ($generated@@85 $generated@@365 $generated@@367)) ($generated@@323 $generated@@365))))
 :pattern ( ($generated@@85 $generated@@365 $generated@@367))
)))))
 :pattern ( ($generated@@174 $generated@@365))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@165) ($generated@@235 $generated@@371 $generated@@144)) (and (= ($generated@@318 ($generated@@368 $generated@@140 $generated@@371)) $generated@@371) ($generated@@143 ($generated@@368 $generated@@140 $generated@@371) $generated@@144)))
 :pattern ( ($generated@@235 $generated@@371 $generated@@144))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@140) (= ($generated@@143 ($generated@@308 $generated@@372) $generated@@144) ($generated@@143 $generated@@372 $generated@@144)))
 :pattern ( ($generated@@143 ($generated@@308 $generated@@372) $generated@@144))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@140) (= (type $generated@@374) $generated@@140)) (and ($generated@@145 $generated@@373) ($generated@@145 $generated@@374))) (= ($generated@@266 $generated@@373 $generated@@374) ($generated@@266 ($generated@@146 $generated@@373) ($generated@@146 $generated@@374))))
 :pattern ( ($generated@@266 $generated@@373 $generated@@374) ($generated@@145 $generated@@373))
 :pattern ( ($generated@@266 $generated@@373 $generated@@374) ($generated@@145 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@333 (type $generated@@375))))
(let (($generated@@377 ($generated@@332 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@331 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@330 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@329 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@333 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@80 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@333 (type $generated@@382))))
(let (($generated@@384 ($generated@@332 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@331 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@330 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@351 (type $generated@@386))))
(let (($generated@@388 ($generated@@350 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@349 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@348 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@347 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@80 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@351 (type $generated@@393))))
(let (($generated@@395 ($generated@@350 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@349 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@348 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@85 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@80 $generated@@165 $generated@@2)) (= (type $generated@@398) $generated@@68)) (= ($generated@@143 $generated@@397 ($generated@@173 $generated@@398)) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@165) (< 0 ($generated ($generated@@85 $generated@@397 $generated@@399)))) ($generated@@235 $generated@@399 $generated@@398))
 :pattern ( ($generated@@85 $generated@@397 $generated@@399))
))))
 :pattern ( ($generated@@143 $generated@@397 ($generated@@173 $generated@@398)))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@140) ($generated@@400 $generated@@401)) (or ($generated@@145 $generated@@401) ($generated@@284 $generated@@401)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@80 $generated@@165 $generated@@4)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@269 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@165) ($generated@@0 ($generated@@85 $generated@@402 $generated@@405))) ($generated@@287 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@85 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@269 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@80 $generated@@165 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@406 ($generated@@274 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@165) ($generated@@0 ($generated@@85 $generated@@406 $generated@@409))) ($generated@@287 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@85 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@78 $generated@@406 ($generated@@274 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@85 ($generated@@324 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@85 ($generated@@324 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@165 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@333 (type $generated@@415))))
(let (($generated@@417 ($generated@@332 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@331 $generated@@165 $generated@@165)) (= (type $generated@@419) $generated@@165)) (= ($generated@@0 ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@418) ($generated@@163 ($generated@@368 $generated@@140 $generated@@419)))) (= ($generated@@85 ($generated@@413 $generated@@418) ($generated@@163 ($generated@@368 $generated@@140 $generated@@419))) ($generated@@164 ($generated@@368 $generated@@140 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@165 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@351 (type $generated@@423))))
(let (($generated@@425 ($generated@@350 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@349 $generated@@165 $generated@@165)) (= (type $generated@@427) $generated@@165)) (= ($generated@@0 ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@426) ($generated@@163 ($generated@@368 $generated@@140 $generated@@427)))) (= ($generated@@85 ($generated@@421 $generated@@426) ($generated@@163 ($generated@@368 $generated@@140 $generated@@427))) ($generated@@164 ($generated@@368 $generated@@140 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@332 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@331 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@350 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@349 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@85 ($generated@@390 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@331 $generated@@165 $generated@@165)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@165) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@441) $generated@@445))) (and ($generated@@287 ($generated@@85 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@287 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@349 $generated@@165 $generated@@165)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@165) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@449) $generated@@453))) (and ($generated@@287 ($generated@@85 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@287 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@140) (= (type $generated@@455) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@242 $generated@@455)) (= ($generated@@78 ($generated@@308 $generated@@454) $generated@@144 $generated@@455) ($generated@@78 $generated@@454 $generated@@144 $generated@@455)))
 :pattern ( ($generated@@78 ($generated@@308 $generated@@454) $generated@@144 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@140) ($generated@@143 $generated@@456 $generated@@144)) (or ($generated@@145 $generated@@456) ($generated@@284 $generated@@456)))
 :pattern ( ($generated@@284 $generated@@456) ($generated@@143 $generated@@456 $generated@@144))
 :pattern ( ($generated@@145 $generated@@456) ($generated@@143 $generated@@456 $generated@@144))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) $generated@@139) (= (type $generated@@459) $generated@@140)) (or ($generated@@248 ($generated@@142 $generated@@458) $generated@@459) (and (not (= 2 $generated@@136)) (and (<= ($generated@@142 0) $generated@@458) ($generated@@143 $generated@@459 $generated@@144))))) (and (=> (< 0 $generated@@458) (=> ($generated@@145 $generated@@459) (let (($generated@@460 ($generated@@146 $generated@@459)))
($generated@@248 (- $generated@@458 1) $generated@@460)))) (= ($generated@@247 ($generated@@138 $generated@@457) ($generated@@142 $generated@@458) $generated@@459)  (=> (< 0 $generated@@458) (ite ($generated@@145 $generated@@459) (let (($generated@@461 ($generated@@146 $generated@@459)))
($generated@@247 ($generated@@138 $generated@@457) (- $generated@@458 1) $generated@@461)) true)))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@138 $generated@@457) ($generated@@142 $generated@@458) $generated@@459))
))))
(assert (forall (($generated@@463 T@T) ) (! (= (type ($generated@@462 $generated@@463)) ($generated@@80 $generated@@463 $generated@@4))
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@351 (type $generated@@464))))
(let (($generated@@466 ($generated@@350 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@349 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@348 $generated@@466 $generated@@465)) (= ($generated@@347 $generated@@464) ($generated@@462 $generated@@466))))))
 :pattern ( ($generated@@347 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@351 (type $generated@@467))))
(let (($generated@@469 ($generated@@350 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@349 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@348 $generated@@469 $generated@@468)) (= ($generated@@390 $generated@@467) ($generated@@462 $generated@@468))))))
 :pattern ( ($generated@@390 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@351 (type $generated@@470))))
(let (($generated@@472 ($generated@@350 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@349 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@348 $generated@@472 $generated@@471)) (= ($generated@@420 $generated@@470) ($generated@@462 $generated@@165))))))
 :pattern ( ($generated@@420 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@333 (type $generated@@473))))
(let (($generated@@475 ($generated@@332 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@331 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@330 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@165) (= (type $generated@@477) $generated@@165)) ($generated@@0 ($generated@@85 ($generated@@412 $generated@@473) ($generated@@318 ($generated@@234 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@412 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@351 (type $generated@@478))))
(let (($generated@@480 ($generated@@350 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@349 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@348 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@165) (= (type $generated@@482) $generated@@165)) ($generated@@0 ($generated@@85 ($generated@@420 $generated@@478) ($generated@@318 ($generated@@234 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@420 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@165) ($generated@@235 $generated@@483 $generated@@46)) (and (= ($generated@@318 ($generated@@368 $generated@@2 $generated@@483)) $generated@@483) ($generated@@143 ($generated@@368 $generated@@2 $generated@@483) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@483 $generated@@46))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@165) ($generated@@235 $generated@@484 $generated@@47)) (and (= ($generated@@318 ($generated@@368 $generated@@3 $generated@@484)) $generated@@484) ($generated@@143 ($generated@@368 $generated@@3 $generated@@484) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@484 $generated@@47))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@165) ($generated@@235 $generated@@485 $generated@@44)) (and (= ($generated@@318 ($generated@@368 $generated@@4 $generated@@485)) $generated@@485) ($generated@@143 ($generated@@368 $generated@@4 $generated@@485) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@485 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@486) 21))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@165) ($generated@@235 $generated@@487 $generated@@45)) (and (= ($generated@@318 ($generated@@368 $generated@@486 $generated@@487)) $generated@@487) ($generated@@143 ($generated@@368 $generated@@486 $generated@@487) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@487 $generated@@45))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@235 ($generated@@318 $generated@@488) $generated@@489) ($generated@@143 $generated@@488 $generated@@489)))
 :pattern ( ($generated@@235 ($generated@@318 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@83 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@80 $generated@@491 $generated@@2)) (<= 0 ($generated@@323 $generated@@490))))
 :pattern ( ($generated@@323 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@302 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@301 $generated@@493)) (<= 0 ($generated@@300 $generated@@492))))
 :pattern ( ($generated@@300 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@438 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@76 ($generated@@438 $generated@@502 $generated@@503)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@446 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@446 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@446 $generated@@512 $generated@@513)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@165) (= (type $generated@@515) $generated@@165)) (= ($generated@@170 ($generated@@234 $generated@@514 $generated@@515)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@156 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@156 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@520 ($generated@@156 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@156 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@165) (= (type $generated@@525) $generated@@165)) (= ($generated@@163 ($generated@@234 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@234 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@165) (= (type $generated@@527) $generated@@165)) (= ($generated@@164 ($generated@@234 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@234 $generated@@526 $generated@@527))
)))
(assert  (and (forall (($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@530))
)) (forall (($generated@@531 T@U) ($generated@@532 Int) ) (! (let (($generated@@533 ($generated@@302 (type $generated@@531))))
(= (type ($generated@@529 $generated@@531 $generated@@532)) $generated@@533))
 :pattern ( ($generated@@529 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@301 $generated@@165)) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@534 ($generated@@528 $generated@@535) $generated@@536) (forall (($generated@@537 Int) ) (!  (=> (and (<= 0 $generated@@537) (< $generated@@537 ($generated@@300 $generated@@534))) ($generated@@287 ($generated@@529 $generated@@534 $generated@@537) $generated@@535 $generated@@536))
 :pattern ( ($generated@@529 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@78 $generated@@534 ($generated@@528 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@79 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@79 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@540 ($generated@@269 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@269 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@543)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@544 ($generated@@274 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@274 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@76 ($generated@@274 $generated@@547)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@548 ($generated@@173 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@173 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@76 ($generated@@173 $generated@@551)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@528 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@528 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@76 ($generated@@528 $generated@@555)) $generated@@57))
 :pattern ( ($generated@@528 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@140) (= ($generated@@170 ($generated@@308 $generated@@556)) $generated@@63))
 :pattern ( ($generated@@308 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@140) (= ($generated@@146 ($generated@@308 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@308 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@368 $generated@@559 ($generated@@318 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@318 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@331 $generated@@165 $generated@@165)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) (= ($generated@@143 $generated@@560 ($generated@@438 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@165) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@560) $generated@@563))) (and ($generated@@235 ($generated@@85 ($generated@@413 $generated@@560) $generated@@563) $generated@@562) ($generated@@235 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@560) $generated@@563))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@143 $generated@@560 ($generated@@438 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@349 $generated@@165 $generated@@165)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@143 $generated@@564 ($generated@@446 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@165) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@564) $generated@@567))) (and ($generated@@235 ($generated@@85 ($generated@@421 $generated@@564) $generated@@567) $generated@@566) ($generated@@235 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@143 $generated@@564 ($generated@@446 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@165) (= (type $generated@@571) $generated@@165)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@234 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@234 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@165) (= (type $generated@@573) $generated@@165)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@234 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@234 $generated@@572 $generated@@573))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@574 T@U) ($generated@@575 Int) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@139) (= (type $generated@@576) $generated@@140)) (or ($generated@@248 ($generated@@142 $generated@@575) ($generated@@256 $generated@@576)) (and (not (= 2 $generated@@136)) (and (<= ($generated@@142 0) $generated@@575) ($generated@@143 $generated@@576 $generated@@144))))) (and (=> (< 0 $generated@@575) (=> ($generated@@145 $generated@@576) (let (($generated@@577 ($generated@@146 $generated@@576)))
($generated@@248 (- $generated@@575 1) $generated@@577)))) (= ($generated@@247 ($generated@@138 $generated@@574) ($generated@@142 $generated@@575) ($generated@@256 $generated@@576))  (=> (< 0 $generated@@575) (ite ($generated@@145 $generated@@576) (let (($generated@@578 ($generated@@146 $generated@@576)))
($generated@@247 ($generated@@138 $generated@@574) (- $generated@@575 1) $generated@@578)) true)))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@138 $generated@@574) ($generated@@142 $generated@@575) ($generated@@256 $generated@@576)))
))))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@165) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) ($generated@@235 $generated@@579 ($generated@@438 $generated@@580 $generated@@581))) (and (= ($generated@@318 ($generated@@368 ($generated@@331 $generated@@165 $generated@@165) $generated@@579)) $generated@@579) ($generated@@143 ($generated@@368 ($generated@@331 $generated@@165 $generated@@165) $generated@@579) ($generated@@438 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@235 $generated@@579 ($generated@@438 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@165) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@235 $generated@@582 ($generated@@446 $generated@@583 $generated@@584))) (and (= ($generated@@318 ($generated@@368 ($generated@@349 $generated@@165 $generated@@165) $generated@@582)) $generated@@582) ($generated@@143 ($generated@@368 ($generated@@349 $generated@@165 $generated@@165) $generated@@582) ($generated@@446 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@235 $generated@@582 ($generated@@446 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@165)) ($generated@@235 $generated@@587 ($generated@@156 $generated@@585 $generated@@586))) (and (= ($generated@@318 ($generated@@368 $generated@@140 $generated@@587)) $generated@@587) ($generated@@143 ($generated@@368 $generated@@140 $generated@@587) ($generated@@156 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@235 $generated@@587 ($generated@@156 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@140) (< ($generated@@569 $generated@@588) ($generated@@569 ($generated@@308 $generated@@588))))
 :pattern ( ($generated@@308 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@589)))
 (not ($generated@@0 ($generated@@85 ($generated@@462 $generated@@590) $generated@@589))))
 :pattern ( (let (($generated@@590 (type $generated@@589)))
($generated@@85 ($generated@@462 $generated@@590) $generated@@589)))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@591 T@U) ($generated@@592 Int) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@139) (= (type $generated@@593) $generated@@140)) (or ($generated@@248 $generated@@592 $generated@@593) (and (not (= 2 $generated@@136)) (and (<= ($generated@@142 0) $generated@@592) ($generated@@143 $generated@@593 $generated@@144))))) (and (=> (< 0 $generated@@592) (=> ($generated@@145 $generated@@593) (let (($generated@@594 ($generated@@146 $generated@@593)))
($generated@@248 (- $generated@@592 1) $generated@@594)))) (= ($generated@@247 ($generated@@138 $generated@@591) $generated@@592 $generated@@593)  (=> (< 0 $generated@@592) (ite ($generated@@145 $generated@@593) (let (($generated@@595 ($generated@@146 $generated@@593)))
($generated@@247 $generated@@591 (- $generated@@592 1) $generated@@595)) true)))))
 :pattern ( ($generated@@247 ($generated@@138 $generated@@591) $generated@@592 $generated@@593))
))))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@73)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@68) (= (type $generated@@599) $generated@@68)) (and (= ($generated@@76 ($generated@@156 $generated@@598 $generated@@599)) $generated@@62) (= ($generated@@596 ($generated@@156 $generated@@598 $generated@@599)) $generated@@66)))
 :pattern ( ($generated@@156 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@140) (= ($generated@@568 ($generated@@318 $generated@@600)) ($generated@@569 $generated@@600)))
 :pattern ( ($generated@@568 ($generated@@318 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@165) ($generated@@235 $generated@@601 ($generated@@79 0))) (and (= ($generated@@318 ($generated@@368 $generated@@2 $generated@@601)) $generated@@601) ($generated@@143 ($generated@@368 ($generated@@80 $generated@@165 $generated@@4) $generated@@601) ($generated@@79 0))))
 :pattern ( ($generated@@235 $generated@@601 ($generated@@79 0)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@165) (= (type $generated@@603) $generated@@68)) ($generated@@235 $generated@@602 ($generated@@269 $generated@@603))) (and (= ($generated@@318 ($generated@@368 ($generated@@80 $generated@@165 $generated@@4) $generated@@602)) $generated@@602) ($generated@@143 ($generated@@368 ($generated@@80 $generated@@165 $generated@@4) $generated@@602) ($generated@@269 $generated@@603))))
 :pattern ( ($generated@@235 $generated@@602 ($generated@@269 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@165) (= (type $generated@@605) $generated@@68)) ($generated@@235 $generated@@604 ($generated@@274 $generated@@605))) (and (= ($generated@@318 ($generated@@368 ($generated@@80 $generated@@165 $generated@@4) $generated@@604)) $generated@@604) ($generated@@143 ($generated@@368 ($generated@@80 $generated@@165 $generated@@4) $generated@@604) ($generated@@274 $generated@@605))))
 :pattern ( ($generated@@235 $generated@@604 ($generated@@274 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@165) (= (type $generated@@607) $generated@@68)) ($generated@@235 $generated@@606 ($generated@@173 $generated@@607))) (and (= ($generated@@318 ($generated@@368 ($generated@@80 $generated@@165 $generated@@2) $generated@@606)) $generated@@606) ($generated@@143 ($generated@@368 ($generated@@80 $generated@@165 $generated@@2) $generated@@606) ($generated@@173 $generated@@607))))
 :pattern ( ($generated@@235 $generated@@606 ($generated@@173 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@165) (= (type $generated@@609) $generated@@68)) ($generated@@235 $generated@@608 ($generated@@528 $generated@@609))) (and (= ($generated@@318 ($generated@@368 ($generated@@301 $generated@@165) $generated@@608)) $generated@@608) ($generated@@143 ($generated@@368 ($generated@@301 $generated@@165) $generated@@608) ($generated@@528 $generated@@609))))
 :pattern ( ($generated@@235 $generated@@608 ($generated@@528 $generated@@609)))
)))
(assert (= ($generated@@76 $generated@@144) $generated@@64))
(assert (= ($generated@@596 $generated@@144) $generated@@67))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@80 $generated@@165 $generated@@2)) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@610 ($generated@@173 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@165) (< 0 ($generated ($generated@@85 $generated@@610 $generated@@613)))) ($generated@@287 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@85 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@173 $generated@@611) $generated@@612))
)))
(assert (= $generated@@171 ($generated@@256 $generated@@171)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@140) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@616) (and ($generated@@155 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@68) ($generated@@78 $generated@@614 ($generated@@156 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@156 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@287 ($generated@@163 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@287 ($generated@@163 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@140) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@620) (and ($generated@@155 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@68) ($generated@@78 $generated@@618 ($generated@@156 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 $generated@@618 ($generated@@156 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@287 ($generated@@164 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@287 ($generated@@164 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@140) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@242 $generated@@623) (and ($generated@@145 $generated@@622) ($generated@@78 $generated@@622 $generated@@144 $generated@@623)))) ($generated@@78 ($generated@@146 $generated@@622) $generated@@144 $generated@@623))
 :pattern ( ($generated@@78 ($generated@@146 $generated@@622) $generated@@144 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@165) (= (type $generated@@625) $generated@@165)) (= ($generated@@234 ($generated@@256 $generated@@624) ($generated@@256 $generated@@625)) ($generated@@256 ($generated@@234 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@234 ($generated@@256 $generated@@624) ($generated@@256 $generated@@625)))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@318 ($generated@@8 ($generated@@142 $generated@@626))) ($generated@@256 ($generated@@318 ($generated@@8 $generated@@626))))
 :pattern ( ($generated@@318 ($generated@@8 ($generated@@142 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@140) (= ($generated@@308 ($generated@@256 $generated@@627)) ($generated@@256 ($generated@@308 $generated@@627))))
 :pattern ( ($generated@@308 ($generated@@256 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (= ($generated@@318 ($generated@@256 $generated@@628)) ($generated@@256 ($generated@@318 $generated@@628)))
 :pattern ( ($generated@@318 ($generated@@256 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@302 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@301 $generated@@630)) (= ($generated@@300 $generated@@629) 0)) (= $generated@@629 ($generated@@299 $generated@@630))))
 :pattern ( ($generated@@300 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@632)))
 (=> (and (and (= (type $generated@@631) ($generated@@80 $generated@@634 $generated@@2)) (= (type $generated@@633) $generated@@2)) (<= 0 ($generated $generated@@633))) (= ($generated@@323 ($generated@@86 $generated@@631 $generated@@632 $generated@@633)) (+ (- ($generated@@323 $generated@@631) ($generated ($generated@@85 $generated@@631 $generated@@632))) ($generated $generated@@633)))))
 :pattern ( ($generated@@323 ($generated@@86 $generated@@631 $generated@@632 $generated@@633)))
)))
(assert (= (type $generated@@635) $generated@@139))
(assert  (=> (<= 3 $generated@@136) (forall (($generated@@636 Int) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@140) (or ($generated@@253 ($generated@@142 $generated@@636) ($generated@@256 $generated@@637)) (and (not (= 3 $generated@@136)) (and (<= ($generated@@142 0) $generated@@636) ($generated@@143 $generated@@637 $generated@@144))))) (and ($generated@@248 ($generated@@142 $generated@@636) ($generated@@256 $generated@@637)) (= ($generated@@252 ($generated@@142 $generated@@636) ($generated@@256 $generated@@637)) ($generated@@0 ($generated@@256 ($generated@@11 ($generated@@247 ($generated@@138 $generated@@635) ($generated@@142 $generated@@636) ($generated@@256 $generated@@637))))))))
 :weight 3
 :pattern ( ($generated@@252 ($generated@@142 $generated@@636) ($generated@@256 $generated@@637)))
))))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@2)) ($generated@@78 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@3)) ($generated@@78 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@4)) ($generated@@78 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@486)) ($generated@@78 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@165)) ($generated@@78 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@301 $generated@@165)) (= (type $generated@@649) $generated@@68)) (= ($generated@@143 $generated@@648 ($generated@@528 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@300 $generated@@648))) ($generated@@235 ($generated@@529 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@529 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@143 $generated@@648 ($generated@@528 $generated@@649)))
)))
(assert  (=> (<= 3 $generated@@136) (forall (($generated@@651 Int) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@140) (or ($generated@@253 $generated@@651 $generated@@652) (and (not (= 3 $generated@@136)) (and (<= ($generated@@142 0) $generated@@651) ($generated@@143 $generated@@652 $generated@@144))))) (and ($generated@@248 $generated@@651 $generated@@652) (= ($generated@@252 $generated@@651 $generated@@652) ($generated@@247 ($generated@@138 $generated@@635) $generated@@651 $generated@@652))))
 :pattern ( ($generated@@252 $generated@@651 $generated@@652))
))))
(assert (forall (($generated@@654 T@U) ) (! (= (type ($generated@@653 $generated@@654)) $generated@@139)
 :pattern ( ($generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@139) (= (type $generated@@657) $generated@@140)) (= ($generated@@247 $generated@@655 $generated@@656 $generated@@657) ($generated@@247 $generated@@635 $generated@@656 $generated@@657)))
 :pattern ( ($generated@@247 ($generated@@653 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@139) (= (type $generated@@660) $generated@@140)) (= ($generated@@137 $generated@@658 $generated@@659 $generated@@660) ($generated@@137 $generated@@635 $generated@@659 $generated@@660)))
 :pattern ( ($generated@@137 ($generated@@653 $generated@@658) $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@301 $generated@@165)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@300 $generated@@662))) (< ($generated@@569 ($generated@@368 $generated@@140 ($generated@@529 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@569 ($generated@@368 $generated@@140 ($generated@@529 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@331 $generated@@165 $generated@@165)) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@143 $generated@@664 ($generated@@438 $generated@@665 $generated@@666))) (and (and ($generated@@143 ($generated@@329 $generated@@664) ($generated@@269 $generated@@665)) ($generated@@143 ($generated@@379 $generated@@664) ($generated@@269 $generated@@666))) ($generated@@143 ($generated@@412 $generated@@664) ($generated@@269 ($generated@@156 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@143 $generated@@664 ($generated@@438 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@349 $generated@@165 $generated@@165)) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) $generated@@68)) ($generated@@143 $generated@@667 ($generated@@446 $generated@@668 $generated@@669))) (and (and ($generated@@143 ($generated@@347 $generated@@667) ($generated@@274 $generated@@668)) ($generated@@143 ($generated@@390 $generated@@667) ($generated@@274 $generated@@669))) ($generated@@143 ($generated@@420 $generated@@667) ($generated@@274 ($generated@@156 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@143 $generated@@667 ($generated@@446 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@143 $generated@@670 $generated@@46))
 :pattern ( ($generated@@143 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@143 $generated@@671 $generated@@47))
 :pattern ( ($generated@@143 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@143 $generated@@672 $generated@@44))
 :pattern ( ($generated@@143 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@486) ($generated@@143 $generated@@673 $generated@@45))
 :pattern ( ($generated@@143 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@165) ($generated@@143 $generated@@674 $generated@@48))
 :pattern ( ($generated@@143 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 (T@U) Bool)
(declare-fun $generated@@681 () Int)
(assert  (and (and (and (and (= (type $generated@@675) ($generated@@180 $generated@@81 $generated@@4)) (= (type $generated@@676) $generated@@81)) (= (type $generated@@677) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@678) $generated@@140)) (= (type $generated@@679) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@682  (=> (and (= $generated@@675 ($generated@@179 $generated@@676 $generated@@677 $generated@@60 false)) ($generated@@400 $generated@@678)) (=> (and (and ($generated@@242 $generated@@679) ($generated@@680 $generated@@679)) (and (= $generated@@677 $generated@@679) (forall (($generated@@683 Int) ($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@140) (=> (and (and (and (<= ($generated@@142 0) $generated@@683) ($generated@@143 $generated@@684 $generated@@144)) ($generated@@0 ($generated@@256 ($generated@@11 true)))) (or (and (<= 0 $generated@@683) (< $generated@@683 $generated@@681)) (and (= $generated@@683 $generated@@681) (< ($generated@@569 $generated@@684) ($generated@@569 $generated@@678))))) (and (and ($generated@@247 ($generated@@138 $generated@@635) $generated@@683 $generated@@684) ($generated@@137 ($generated@@138 $generated@@635) $generated@@683 $generated@@684)) ($generated@@252 $generated@@683 $generated@@684))))
 :no-pattern (type $generated@@684)
 :no-pattern ($generated $generated@@684)
 :no-pattern ($generated@@0 $generated@@684)
)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> ($generated@@145 $generated@@678) (let (($generated@@685 ($generated@@146 $generated@@678)))
($generated@@247 ($generated@@138 ($generated@@138 $generated@@635)) (- $generated@@681 1) $generated@@685))))))) (=> (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> ($generated@@145 $generated@@678) (let (($generated@@686 ($generated@@146 $generated@@678)))
($generated@@247 ($generated@@138 ($generated@@138 $generated@@635)) (- $generated@@681 1) $generated@@686)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> (not ($generated@@145 $generated@@678)) ($generated@@0 ($generated@@256 ($generated@@11 true)))))))) (=> (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> (not ($generated@@145 $generated@@678)) ($generated@@0 ($generated@@256 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@141 $generated@@681 $generated@@678) (or ($generated@@137 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (= $generated@@681 ($generated@@142 0)) ($generated@@0 ($generated@@256 ($generated@@11 true))))))) (=> (=> ($generated@@141 $generated@@681 $generated@@678) (or ($generated@@137 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (= $generated@@681 ($generated@@142 0)) ($generated@@0 ($generated@@256 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@141 $generated@@681 $generated@@678) (or ($generated@@137 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (not (= $generated@@681 ($generated@@142 0))) (=> ($generated@@145 $generated@@678) (let (($generated@@687 ($generated@@146 $generated@@678)))
($generated@@137 ($generated@@138 ($generated@@138 $generated@@635)) (- $generated@@681 1) $generated@@687))))))) (=> (=> ($generated@@141 $generated@@681 $generated@@678) (or ($generated@@137 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (not (= $generated@@681 ($generated@@142 0))) (=> ($generated@@145 $generated@@678) (let (($generated@@688 ($generated@@146 $generated@@678)))
($generated@@137 ($generated@@138 ($generated@@138 $generated@@635)) (- $generated@@681 1) $generated@@688)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@141 $generated@@681 $generated@@678) (or ($generated@@137 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (not (= $generated@@681 ($generated@@142 0))) (=> (not ($generated@@145 $generated@@678)) ($generated@@0 ($generated@@256 ($generated@@11 true)))))))) (=> (=> ($generated@@141 $generated@@681 $generated@@678) (or ($generated@@137 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (not (= $generated@@681 ($generated@@142 0))) (=> (not ($generated@@145 $generated@@678)) ($generated@@0 ($generated@@256 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@253 $generated@@681 $generated@@678) (or ($generated@@252 $generated@@681 $generated@@678) (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> ($generated@@145 $generated@@678) (let (($generated@@689 ($generated@@146 $generated@@678)))
($generated@@247 ($generated@@138 ($generated@@138 $generated@@635)) (- $generated@@681 1) $generated@@689))))))))) (=> (=> ($generated@@253 $generated@@681 $generated@@678) (or ($generated@@252 $generated@@681 $generated@@678) (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> ($generated@@145 $generated@@678) (let (($generated@@690 ($generated@@146 $generated@@678)))
($generated@@247 ($generated@@138 ($generated@@138 $generated@@635)) (- $generated@@681 1) $generated@@690)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@253 $generated@@681 $generated@@678) (or ($generated@@252 $generated@@681 $generated@@678) (=> ($generated@@248 $generated@@681 $generated@@678) (or ($generated@@247 ($generated@@138 $generated@@635) $generated@@681 $generated@@678) (=> (< 0 $generated@@681) (=> (not ($generated@@145 $generated@@678)) ($generated@@0 ($generated@@256 ($generated@@11 true))))))))))))))))))))))))))
(let (($generated@@691  (=> (and (and ($generated@@242 $generated@@677) ($generated@@680 $generated@@677)) (<= ($generated@@142 0) $generated@@681)) (=> (and (and (and ($generated@@143 $generated@@678 $generated@@144) ($generated@@78 $generated@@678 $generated@@144 $generated@@677)) ($generated@@400 $generated@@678)) (and (= 4 $generated@@136) (= (ControlFlow 0 9) 2))) $generated@@682))))
$generated@@691)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 () T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (= (type $generated@@143) $generated@@68)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@140) (= (type $generated@@145) $generated@@141)) (or ($generated@@142 $generated@@145) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@145 $generated@@143)))) true)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@141)) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 16) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@141) (= (type $generated@@160) $generated@@141)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@141)))
(assert (= ($generated@@161 $generated@@162) $generated@@65))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@136 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@81)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@141)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@156)) (= (type $generated@@244) $generated@@156)) (= ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242)))
)))
(assert ($generated@@136 $generated@@162 $generated@@143))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@245 $generated@@246)) ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
 :pattern ( ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@141) (= (type $generated@@248) $generated@@141)) (= ($generated@@153 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@153 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@141) (= (type $generated@@251) $generated@@141)) (= ($generated@@249 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@68)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@255) $generated@@68)) (= ($generated@@136 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@156) ($generated@@0 ($generated@@85 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@85 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@136 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@136 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@156) ($generated@@0 ($generated@@85 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@85 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@136 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@141) (= (type $generated@@268) $generated@@141)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@249 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@249 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@249 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@156)) (= (type $generated@@273) $generated@@156)) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@274)) (= ($generated@@78 ($generated@@237 $generated@@272 $generated@@273) ($generated@@147 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@272 $generated@@273) ($generated@@147 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@141) (= ($generated@@146 $generated@@275) (= ($generated@@161 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@141) (= ($generated@@276 $generated@@277) (= ($generated@@161 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@141) (= ($generated@@266 $generated@@278) (= ($generated@@161 $generated@@278) $generated@@65)))
 :pattern ( ($generated@@266 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@141) ($generated@@146 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@156) (= (type $generated@@281) $generated@@156)) (= $generated@@279 ($generated@@237 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@146 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 18)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@141) ($generated@@266 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@266 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@141)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@141) ($generated@@276 $generated@@293)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@141) (= $generated@@293 ($generated@@291 $generated@@294)))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@276 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@156)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@269 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@269 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@80 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 20)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@80 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@83 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@80 $generated@@343 $generated@@2)) (= ($generated@@165 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@85 $generated@@342 $generated@@344))) (<= ($generated ($generated@@85 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@85 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@165 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@156) ($generated@@238 $generated@@348 $generated@@143)) (and (= ($generated@@295 ($generated@@345 $generated@@141 $generated@@348)) $generated@@348) ($generated@@136 ($generated@@345 $generated@@141 $generated@@348) $generated@@143)))
 :pattern ( ($generated@@238 $generated@@348 $generated@@143))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@141) (= ($generated@@136 ($generated@@291 $generated@@349) $generated@@143) ($generated@@136 $generated@@349 $generated@@143)))
 :pattern ( ($generated@@136 ($generated@@291 $generated@@349) $generated@@143))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@141)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@352) $generated@@141) (= (type $generated@@353) $generated@@141)) (and ($generated@@276 $generated@@352) ($generated@@276 $generated@@353))) (= ($generated@@249 $generated@@352 $generated@@353) ($generated@@249 ($generated@@350 $generated@@352) ($generated@@350 $generated@@353))))
 :pattern ( ($generated@@249 $generated@@352 $generated@@353) ($generated@@276 $generated@@352))
 :pattern ( ($generated@@249 $generated@@352 $generated@@353) ($generated@@276 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@306 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@310 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@310 (type $generated@@361))))
(let (($generated@@363 ($generated@@309 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@308 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@307 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@328 (type $generated@@365))))
(let (($generated@@367 ($generated@@327 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@326 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@325 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@324 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@328 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@80 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(let (($generated@@374 ($generated@@327 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@326 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@325 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@377) $generated@@68)) (= ($generated@@136 $generated@@376 ($generated@@164 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@376 $generated@@378)))) ($generated@@238 $generated@@378 $generated@@377))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@136 $generated@@376 ($generated@@164 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@380) $generated@@68)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@252 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@156) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@269 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@252 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@384) $generated@@68)) (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@383 ($generated@@257 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) ($generated@@0 ($generated@@85 $generated@@383 $generated@@386))) ($generated@@269 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@85 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@78 $generated@@383 ($generated@@257 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@85 ($generated@@301 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@396) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@395) ($generated@@154 ($generated@@345 $generated@@141 $generated@@396)))) (= ($generated@@85 ($generated@@390 $generated@@395) ($generated@@154 ($generated@@345 $generated@@141 $generated@@396))) ($generated@@155 ($generated@@345 $generated@@141 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@403) ($generated@@154 ($generated@@345 $generated@@141 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@154 ($generated@@345 $generated@@141 $generated@@404))) ($generated@@155 ($generated@@345 $generated@@141 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@68)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@269 ($generated@@85 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@269 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@68)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@269 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@269 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) $generated@@140)
 :pattern ( ($generated@@431 $generated@@433))
)) (= (type $generated@@432) $generated@@140)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@140) (= (type $generated@@435) $generated@@141)) (= ($generated@@139 $generated@@434 $generated@@435) ($generated@@139 $generated@@432 $generated@@435)))
 :pattern ( ($generated@@139 ($generated@@431 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@436) $generated@@141) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@437)) (= ($generated@@78 ($generated@@291 $generated@@436) $generated@@143 $generated@@437) ($generated@@78 $generated@@436 $generated@@143 $generated@@437)))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@436) $generated@@143 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@141) ($generated@@136 $generated@@438 $generated@@143)) (or ($generated@@276 $generated@@438) ($generated@@266 $generated@@438)))
 :pattern ( ($generated@@266 $generated@@438) ($generated@@136 $generated@@438 $generated@@143))
 :pattern ( ($generated@@276 $generated@@438) ($generated@@136 $generated@@438 $generated@@143))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@80 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@328 (type $generated@@441))))
(let (($generated@@443 ($generated@@327 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@326 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@325 $generated@@443 $generated@@442)) (= ($generated@@324 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@324 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@328 (type $generated@@444))))
(let (($generated@@446 ($generated@@327 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@326 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@325 $generated@@446 $generated@@445)) (= ($generated@@369 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@369 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (= ($generated@@397 $generated@@447) ($generated@@439 $generated@@156))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@310 (type $generated@@450))))
(let (($generated@@452 ($generated@@309 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@308 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@307 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@156) (= (type $generated@@454) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@450) ($generated@@295 ($generated@@237 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@389 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@328 (type $generated@@455))))
(let (($generated@@457 ($generated@@327 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@326 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@325 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@156) (= (type $generated@@459) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@455) ($generated@@295 ($generated@@237 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@397 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@156) ($generated@@238 $generated@@460 $generated@@46)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@460)) $generated@@460) ($generated@@136 ($generated@@345 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@156) ($generated@@238 $generated@@461 $generated@@47)) (and (= ($generated@@295 ($generated@@345 $generated@@3 $generated@@461)) $generated@@461) ($generated@@136 ($generated@@345 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@156) ($generated@@238 $generated@@462 $generated@@44)) (and (= ($generated@@295 ($generated@@345 $generated@@4 $generated@@462)) $generated@@462) ($generated@@136 ($generated@@345 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 21))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@238 $generated@@464 $generated@@45)) (and (= ($generated@@295 ($generated@@345 $generated@@463 $generated@@464)) $generated@@464) ($generated@@136 ($generated@@345 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@140)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@140) (= (type $generated@@468) $generated@@141)) (= ($generated@@139 ($generated@@465 $generated@@467) $generated@@468) ($generated@@139 $generated@@467 $generated@@468)))
 :pattern ( ($generated@@139 ($generated@@465 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@68) (= ($generated@@238 ($generated@@295 $generated@@469) $generated@@470) ($generated@@136 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@238 ($generated@@295 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@300 $generated@@471))))
 :pattern ( ($generated@@300 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@285 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@284 $generated@@474)) (<= 0 ($generated@@283 $generated@@473))))
 :pattern ( ($generated@@283 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@415 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@415 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@415 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@415 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@423 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@423 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@423 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@423 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@156) (= (type $generated@@496) $generated@@156)) (= ($generated@@161 ($generated@@237 $generated@@495 $generated@@496)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@147 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@147 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@147 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@147 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@156) (= (type $generated@@506) $generated@@156)) (= ($generated@@154 ($generated@@237 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@237 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@156) (= (type $generated@@508) $generated@@156)) (= ($generated@@155 ($generated@@237 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@237 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@285 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@284 $generated@@156)) (= (type $generated@@516) $generated@@68)) (= (type $generated@@517) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@283 $generated@@515))) ($generated@@269 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@79 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@79 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@521 ($generated@@252 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@252 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@76 ($generated@@252 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@257 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@257 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@164 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@164 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@141) (= ($generated@@161 ($generated@@291 $generated@@537)) $generated@@63))
 :pattern ( ($generated@@291 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@141) (= ($generated@@350 ($generated@@291 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@291 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@345 $generated@@540 ($generated@@295 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@295 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@68)) (= ($generated@@136 $generated@@541 ($generated@@415 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@541) $generated@@544))) (and ($generated@@238 ($generated@@85 ($generated@@390 $generated@@541) $generated@@544) $generated@@543) ($generated@@238 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@541) $generated@@544))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@136 $generated@@541 ($generated@@415 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) (= ($generated@@136 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@545) $generated@@548))) (and ($generated@@238 ($generated@@85 ($generated@@398 $generated@@545) $generated@@548) $generated@@547) ($generated@@238 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@545) $generated@@548))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@136 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@156)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@237 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@237 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@156)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@237 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@237 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) ($generated@@238 $generated@@555 ($generated@@415 $generated@@556 $generated@@557))) (and (= ($generated@@295 ($generated@@345 ($generated@@308 $generated@@156 $generated@@156) $generated@@555)) $generated@@555) ($generated@@136 ($generated@@345 ($generated@@308 $generated@@156 $generated@@156) $generated@@555) ($generated@@415 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@238 $generated@@555 ($generated@@415 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@156) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@238 $generated@@558 ($generated@@423 $generated@@559 $generated@@560))) (and (= ($generated@@295 ($generated@@345 ($generated@@326 $generated@@156 $generated@@156) $generated@@558)) $generated@@558) ($generated@@136 ($generated@@345 ($generated@@326 $generated@@156 $generated@@156) $generated@@558) ($generated@@423 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@238 $generated@@558 ($generated@@423 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@156)) ($generated@@238 $generated@@563 ($generated@@147 $generated@@561 $generated@@562))) (and (= ($generated@@295 ($generated@@345 $generated@@141 $generated@@563)) $generated@@563) ($generated@@136 ($generated@@345 $generated@@141 $generated@@563) ($generated@@147 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@238 $generated@@563 ($generated@@147 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@141) (< ($generated@@550 $generated@@564) ($generated@@550 ($generated@@291 $generated@@564))))
 :pattern ( ($generated@@291 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@85 ($generated@@439 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@85 ($generated@@439 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@73)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@569 $generated@@570)) $generated@@62) (= ($generated@@567 ($generated@@147 $generated@@569 $generated@@570)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@141) (= ($generated@@549 ($generated@@295 $generated@@571)) ($generated@@550 $generated@@571)))
 :pattern ( ($generated@@549 ($generated@@295 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@156) ($generated@@238 $generated@@572 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@572)) $generated@@572) ($generated@@136 ($generated@@345 ($generated@@80 $generated@@156 $generated@@4) $generated@@572) ($generated@@79 0))))
 :pattern ( ($generated@@238 $generated@@572 ($generated@@79 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@156) (= (type $generated@@574) $generated@@68)) ($generated@@238 $generated@@573 ($generated@@252 $generated@@574))) (and (= ($generated@@295 ($generated@@345 ($generated@@80 $generated@@156 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@345 ($generated@@80 $generated@@156 $generated@@4) $generated@@573) ($generated@@252 $generated@@574))))
 :pattern ( ($generated@@238 $generated@@573 ($generated@@252 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@156) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@575 ($generated@@257 $generated@@576))) (and (= ($generated@@295 ($generated@@345 ($generated@@80 $generated@@156 $generated@@4) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@345 ($generated@@80 $generated@@156 $generated@@4) $generated@@575) ($generated@@257 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@575 ($generated@@257 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@156) (= (type $generated@@578) $generated@@68)) ($generated@@238 $generated@@577 ($generated@@164 $generated@@578))) (and (= ($generated@@295 ($generated@@345 ($generated@@80 $generated@@156 $generated@@2) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@345 ($generated@@80 $generated@@156 $generated@@2) $generated@@577) ($generated@@164 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@577 ($generated@@164 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@156) (= (type $generated@@580) $generated@@68)) ($generated@@238 $generated@@579 ($generated@@509 $generated@@580))) (and (= ($generated@@295 ($generated@@345 ($generated@@284 $generated@@156) $generated@@579)) $generated@@579) ($generated@@136 ($generated@@345 ($generated@@284 $generated@@156) $generated@@579) ($generated@@509 $generated@@580))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@509 $generated@@580)))
)))
(assert (= ($generated@@76 $generated@@143) $generated@@64))
(assert (= ($generated@@567 $generated@@143) $generated@@67))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@581 ($generated@@164 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@581 $generated@@584)))) ($generated@@269 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@85 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@78 $generated@@581 ($generated@@164 $generated@@582) $generated@@583))
)))
(assert (= $generated@@162 ($generated@@262 $generated@@162)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@141) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@587) (and ($generated@@146 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@68) ($generated@@78 $generated@@585 ($generated@@147 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@78 $generated@@585 ($generated@@147 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@269 ($generated@@154 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@269 ($generated@@154 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@141) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@591) (and ($generated@@146 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@68) ($generated@@78 $generated@@589 ($generated@@147 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@78 $generated@@589 ($generated@@147 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@269 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@269 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@140) (= (type $generated@@594) $generated@@141)) (or ($generated@@142 ($generated@@262 $generated@@594)) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@594 $generated@@143)))) (and (=> ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@276 ($generated@@262 $generated@@594))))) (let (($generated@@595 ($generated@@262 ($generated@@350 ($generated@@262 $generated@@594)))))
($generated@@142 $generated@@595))) (= ($generated@@139 ($generated@@465 $generated@@593) ($generated@@262 $generated@@594)) (ite ($generated@@276 ($generated@@262 $generated@@594)) ($generated@@0 (let (($generated@@596 ($generated@@262 ($generated@@350 ($generated@@262 $generated@@594)))))
($generated@@262 ($generated@@11 ($generated@@139 ($generated@@465 $generated@@593) $generated@@596))))) true))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@465 $generated@@593) ($generated@@262 $generated@@594)))
))))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@141) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@598) (and ($generated@@276 $generated@@597) ($generated@@78 $generated@@597 $generated@@143 $generated@@598)))) ($generated@@78 ($generated@@350 $generated@@597) $generated@@143 $generated@@598))
 :pattern ( ($generated@@78 ($generated@@350 $generated@@597) $generated@@143 $generated@@598))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@140) (= (type $generated@@600) $generated@@141)) (or ($generated@@142 $generated@@600) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@600 $generated@@143)))) (and (=> ($generated@@276 $generated@@600) (let (($generated@@601 ($generated@@350 $generated@@600)))
($generated@@142 $generated@@601))) (= ($generated@@139 ($generated@@465 $generated@@599) $generated@@600) (ite ($generated@@276 $generated@@600) (let (($generated@@602 ($generated@@350 $generated@@600)))
($generated@@139 $generated@@599 $generated@@602)) true))))
 :pattern ( ($generated@@139 ($generated@@465 $generated@@599) $generated@@600))
))))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@156) (= (type $generated@@604) $generated@@156)) (= ($generated@@237 ($generated@@262 $generated@@603) ($generated@@262 $generated@@604)) ($generated@@262 ($generated@@237 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@237 ($generated@@262 $generated@@603) ($generated@@262 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@141) (= ($generated@@291 ($generated@@262 $generated@@605)) ($generated@@262 ($generated@@291 $generated@@605))))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@295 ($generated@@262 $generated@@606)) ($generated@@262 ($generated@@295 $generated@@606)))
 :pattern ( ($generated@@295 ($generated@@262 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@285 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@284 $generated@@608)) (= ($generated@@283 $generated@@607) 0)) (= $generated@@607 ($generated@@282 $generated@@608))))
 :pattern ( ($generated@@283 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@300 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@300 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@463)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@156)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@284 $generated@@156)) (= (type $generated@@624) $generated@@68)) (= ($generated@@136 $generated@@623 ($generated@@509 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@283 $generated@@623))) ($generated@@238 ($generated@@510 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@510 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@136 $generated@@623 ($generated@@509 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@284 $generated@@156)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@283 $generated@@627))) (< ($generated@@550 ($generated@@345 $generated@@141 ($generated@@510 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@550 ($generated@@345 $generated@@141 ($generated@@510 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) $generated@@68)) ($generated@@136 $generated@@629 ($generated@@415 $generated@@630 $generated@@631))) (and (and ($generated@@136 ($generated@@306 $generated@@629) ($generated@@252 $generated@@630)) ($generated@@136 ($generated@@358 $generated@@629) ($generated@@252 $generated@@631))) ($generated@@136 ($generated@@389 $generated@@629) ($generated@@252 ($generated@@147 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@136 $generated@@629 ($generated@@415 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@136 $generated@@632 ($generated@@423 $generated@@633 $generated@@634))) (and (and ($generated@@136 ($generated@@324 $generated@@632) ($generated@@257 $generated@@633)) ($generated@@136 ($generated@@369 $generated@@632) ($generated@@257 $generated@@634))) ($generated@@136 ($generated@@397 $generated@@632) ($generated@@257 ($generated@@147 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@136 $generated@@632 ($generated@@423 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@136 $generated@@635 $generated@@46))
 :pattern ( ($generated@@136 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@136 $generated@@636 $generated@@47))
 :pattern ( ($generated@@136 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@136 $generated@@637 $generated@@44))
 :pattern ( ($generated@@136 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@463) ($generated@@136 $generated@@638 $generated@@45))
 :pattern ( ($generated@@136 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@156) ($generated@@136 $generated@@639 $generated@@48))
 :pattern ( ($generated@@136 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@640) $generated@@141) (= (type $generated@@641) $generated@@141)) (= (type $generated@@642) $generated@@141)) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@644) $generated@@141)) (= (type $generated@@645) ($generated@@171 $generated@@81 $generated@@4))) (= (type $generated@@646) $generated@@81)) (= (type $generated@@647) ($generated@@171 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@649 true))
(let (($generated@@650 true))
(let (($generated@@651  (=> (not (= $generated@@640 ($generated@@291 $generated@@641))) (and (=> (= (ControlFlow 0 6) 4) $generated@@650) (=> (= (ControlFlow 0 6) 5) $generated@@649)))))
(let (($generated@@652  (=> (and (= $generated@@640 ($generated@@291 $generated@@641)) ($generated@@136 $generated@@641 $generated@@143)) (=> (and (and (and ($generated@@136 $generated@@642 $generated@@143) ($generated@@78 $generated@@642 $generated@@143 $generated@@643)) (= $generated@@644 $generated@@641)) (and (and ($generated@@136 $generated@@644 $generated@@143) (= $generated@@642 $generated@@644)) (and ($generated@@78 $generated@@642 $generated@@143 $generated@@643) (= (ControlFlow 0 3) (- 0 2))))) (< ($generated@@550 $generated@@642) ($generated@@550 $generated@@640))))))
(let (($generated@@653  (=> (= $generated@@645 ($generated@@225 $generated@@646 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@652) (=> (= (ControlFlow 0 7) 6) $generated@@651)))))
(let (($generated@@654 true))
(let (($generated@@655  (=> (= $generated@@647 ($generated@@170 $generated@@646 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@654) (=> (= (ControlFlow 0 8) 7) $generated@@653)))))
(let (($generated@@656  (=> (and (and (and ($generated@@245 $generated@@643) ($generated@@648 $generated@@643)) ($generated@@136 $generated@@640 $generated@@143)) (and (= 1 $generated@@138) (= (ControlFlow 0 9) 8))) $generated@@655)))
$generated@@656)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U Int T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@181 (Int) T@U)
(declare-fun $generated@@182 (T@U) Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@276 (Int T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Bool)
(declare-fun $generated@@306 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U) Bool)
(declare-fun $generated@@416 (T@T T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@498 (T@U T@U) T@U)
(declare-fun $generated@@506 (T@U T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 () T@U)
(declare-fun $generated@@539 (T@T) T@U)
(declare-fun $generated@@563 () T@T)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@615 (T@U Int) T@U)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@686 (T@U) T@U)
(declare-fun $generated@@766 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@81) (= (type $generated@@158) $generated@@86)) (and ($generated@@154 $generated@@158 $generated@@155) ($generated@@153 ($generated@@80 $generated@@157) $generated@@158))) (forall (($generated@@159 Int) ) (!  (=> (<= ($generated@@83 0) $generated@@159) ($generated@@156 ($generated@@80 $generated@@157) $generated@@159 $generated@@158))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@157) $generated@@159 $generated@@158))
)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@157) $generated@@158))
))))
(assert (= ($generated@@1 $generated@@161) 16))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@161) (= (type $generated@@163) $generated@@161)) (= (type $generated@@164) $generated@@161)) (and ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@163 $generated@@164))) ($generated@@160 $generated@@162 $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@163 $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@162 $generated@@164))
)))
(assert (= (type $generated@@165) $generated@@70))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@154 $generated@@168 ($generated@@96 0)))
 :pattern ( ($generated@@154 $generated@@168 ($generated@@96 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@86)) (or ($generated@@170 $generated@@172) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@172 $generated@@155)))) true)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@81) (= (type $generated@@176) $generated@@86)) (or ($generated@@174 $generated@@176) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@176 $generated@@155)))) true)
 :pattern ( ($generated@@173 $generated@@175 $generated@@176))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@81) (= (type $generated@@179) $generated@@86)) (or ($generated@@177 $generated@@179) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@179 $generated@@155)))) true)
 :pattern ( ($generated@@153 $generated@@178 $generated@@179))
))))
(assert  (and (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@180 $generated@@183 $generated@@184)) $generated@@161)
 :pattern ( ($generated@@180 $generated@@183 $generated@@184))
)) (forall (($generated@@185 Int) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@161)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ($generated@@188 Int) ) (!  (=> (= (type $generated@@186) $generated@@161) (=> (and (and (<= 0 $generated@@187) (<= 0 $generated@@188)) (<= (+ $generated@@187 $generated@@188) ($generated@@182 $generated@@186))) (= ($generated@@180 ($generated@@180 $generated@@186 ($generated@@181 $generated@@187)) ($generated@@181 $generated@@188)) ($generated@@180 $generated@@186 ($generated@@181 (+ $generated@@187 $generated@@188))))))
 :pattern ( ($generated@@180 ($generated@@180 $generated@@186 ($generated@@181 $generated@@187)) ($generated@@181 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@191 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@193) $generated@@70) (= (type $generated@@194) $generated@@70)) (= (type $generated@@195) $generated@@86)) ($generated@@154 $generated@@195 ($generated@@190 $generated@@193 $generated@@194))) ($generated@@189 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195) ($generated@@154 $generated@@195 ($generated@@190 $generated@@193 $generated@@194)))
)))
(assert  (and (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@161)
 :pattern ( ($generated@@197 $generated@@199))
)) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@161)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (= (type $generated@@201) $generated@@86) (= (type $generated@@202) $generated@@86)) true) (= ($generated@@196 $generated@@201 $generated@@202)  (and (= ($generated@@197 $generated@@201) ($generated@@197 $generated@@202)) (= ($generated@@198 $generated@@201) ($generated@@198 $generated@@202)))))
 :pattern ( ($generated@@196 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@203 $generated@@204)) $generated@@74)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (= ($generated@@203 $generated@@84) $generated@@66))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@209) $generated@@70)) ($generated@@154 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@154 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@98 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@73 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@98) (= (type $generated@@260) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@261) ($generated@@72 $generated@@4))) (= (type $generated@@263) $generated@@98)) (= (type $generated@@264) ($generated@@72 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@86)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= ($generated@@154 ($generated@@266 $generated@@272 $generated@@273) ($generated@@190 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@154 ($generated@@266 $generated@@272 $generated@@273) ($generated@@190 $generated@@270 $generated@@271)))
)))
(assert ($generated@@154 $generated@@84 $generated@@155))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@274 $generated@@275)) ($generated@@95 $generated@@84 $generated@@155 $generated@@275))
 :pattern ( ($generated@@95 $generated@@84 $generated@@155 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@277 T@U) ($generated@@278 Int) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@81) (= (type $generated@@279) $generated@@86)) (or ($generated@@276 $generated@@278 $generated@@279) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@278) ($generated@@154 $generated@@279 $generated@@155))))) true)
 :pattern ( ($generated@@156 $generated@@277 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (= ($generated@@196 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@196 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@86) (= (type $generated@@284) $generated@@86)) (= ($generated@@282 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@288) $generated@@70)) (= ($generated@@154 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@161) ($generated@@0 ($generated@@102 $generated@@287 $generated@@289))) ($generated@@267 $generated@@289 $generated@@288))
 :pattern ( ($generated@@102 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@154 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@70)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@293) $generated@@70)) (= ($generated@@154 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@161) ($generated@@0 ($generated@@102 $generated@@292 $generated@@294))) ($generated@@267 $generated@@294 $generated@@293))
 :pattern ( ($generated@@102 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@154 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@295 Int) ) (! (= ($generated@@83 $generated@@295) $generated@@295)
 :pattern ( ($generated@@83 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
(= (type ($generated@@296 $generated@@297)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@296 $generated@@299) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Int) ) (!  (=> (and (and (= (type $generated@@300) $generated@@81) (= (type $generated@@301) $generated@@86)) (and ($generated@@154 $generated@@301 $generated@@155) (= $generated@@302 0))) ($generated@@156 $generated@@300 $generated@@302 $generated@@301))
 :pattern ( ($generated@@156 $generated@@300 $generated@@302 $generated@@301))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@86) (= (type $generated@@305) $generated@@86)) (and ($generated@@303 $generated@@304) ($generated@@303 $generated@@305))) (= ($generated@@282 $generated@@304 $generated@@305) true))
 :pattern ( ($generated@@282 $generated@@304 $generated@@305) ($generated@@303 $generated@@304))
 :pattern ( ($generated@@282 $generated@@304 $generated@@305) ($generated@@303 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@70) (= (type $generated@@308) $generated@@70)) (= (type $generated@@309) $generated@@161)) (= (type $generated@@310) $generated@@161)) (= (type $generated@@311) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@274 $generated@@311)) (= ($generated@@95 ($generated@@266 $generated@@309 $generated@@310) ($generated@@190 $generated@@307 $generated@@308) $generated@@311)  (and ($generated@@306 $generated@@309 $generated@@307 $generated@@311) ($generated@@306 $generated@@310 $generated@@308 $generated@@311))))
 :pattern ( ($generated@@95 ($generated@@266 $generated@@309 $generated@@310) ($generated@@190 $generated@@307 $generated@@308) $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@86) (= ($generated@@189 $generated@@312) (= ($generated@@203 $generated@@312) $generated@@62)))
 :pattern ( ($generated@@189 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@86) (= ($generated@@313 $generated@@314) (= ($generated@@203 $generated@@314) $generated@@64)))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@86) (= ($generated@@303 $generated@@315) (= ($generated@@203 $generated@@315) $generated@@66)))
 :pattern ( ($generated@@303 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@316 T@U) ($generated@@317 Int) ) (!  (=> (and (= (type $generated@@316) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@317)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@317)))) (and (=> (not (= ($generated@@83 $generated@@317) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@317 1)))) (= ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 $generated@@317)) (ite (= ($generated@@83 $generated@@317) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@296 ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 (- $generated@@317 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 $generated@@317)))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) $generated@@81) (= (type $generated@@320) $generated@@86)) (= (type $generated@@321) $generated@@161)) (and ($generated@@154 $generated@@320 $generated@@155) (= $generated@@321 ($generated@@181 0)))) ($generated@@318 $generated@@319 $generated@@321 $generated@@320))
 :pattern ( ($generated@@318 $generated@@319 $generated@@321 $generated@@320))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@81) (= (type $generated@@323) $generated@@86)) (and ($generated@@154 $generated@@323 $generated@@155) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@161) ($generated@@318 ($generated@@80 $generated@@322) $generated@@324 $generated@@323))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@322) $generated@@324 $generated@@323))
)))) ($generated@@173 ($generated@@80 $generated@@322) $generated@@323))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@322) $generated@@323))
))))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@86) ($generated@@189 $generated@@325)) (exists (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@161) (= (type $generated@@327) $generated@@161)) (= $generated@@325 ($generated@@266 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@189 $generated@@325))
)))
(assert  (and (and (forall (($generated@@332 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@332)) 18)) (forall (($generated@@333 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
))) (forall (($generated@@334 T@T) ) (! (= (type ($generated@@328 $generated@@334)) ($generated@@330 $generated@@334))
 :pattern ( ($generated@@328 $generated@@334))
))))
(assert (forall (($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@335)) 0)
 :pattern ( ($generated@@328 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@86) ($generated@@303 $generated@@336)) (= $generated@@336 $generated@@84))
 :pattern ( ($generated@@303 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@86) ($generated@@313 $generated@@337)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@86) (= $generated@@337 ($generated@@85 $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@313 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@2) (= ($generated@@154 $generated@@339 $generated@@165) (<= ($generated@@83 0) ($generated $generated@@339))))
 :pattern ( ($generated@@154 $generated@@339 $generated@@165))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@86)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) $generated@@81) (= (type $generated@@344) $generated@@161)) (= (type $generated@@345) $generated@@86)) (or ($generated@@340 ($generated@@296 $generated@@344) $generated@@345) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@345 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@344)) (=> ($generated@@313 $generated@@345) (let (($generated@@346 ($generated@@341 $generated@@345)))
($generated@@340 ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@346)))) (=> (=> (< 0 ($generated@@182 $generated@@344)) (ite ($generated@@313 $generated@@345) (let (($generated@@347 ($generated@@341 $generated@@345)))
($generated@@318 ($generated@@80 $generated@@343) ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@347)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@344)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@161) ($generated@@160 $generated@@348 $generated@@344)) ($generated@@340 $generated@@348 $generated@@345))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) $generated@@348 $generated@@345))
))))) (= ($generated@@318 ($generated@@80 $generated@@343) ($generated@@296 $generated@@344) $generated@@345)  (and (=> (< 0 ($generated@@182 $generated@@344)) (ite ($generated@@313 $generated@@345) (let (($generated@@349 ($generated@@341 $generated@@345)))
($generated@@318 ($generated@@80 $generated@@343) ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@349)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@344)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@161) ($generated@@160 $generated@@350 $generated@@344)) ($generated@@318 ($generated@@80 $generated@@343) $generated@@350 $generated@@345))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) $generated@@350 $generated@@345))
)))))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) ($generated@@296 $generated@@344) $generated@@345))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@81) (= (type $generated@@352) $generated@@161)) (= (type $generated@@353) $generated@@86)) (= ($generated@@318 ($generated@@80 $generated@@351) $generated@@352 $generated@@353) ($generated@@318 $generated@@351 $generated@@352 $generated@@353)))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@351) $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 Int) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@81) (= (type $generated@@356) $generated@@86)) (= ($generated@@156 ($generated@@80 $generated@@354) $generated@@355 $generated@@356) ($generated@@156 $generated@@354 $generated@@355 $generated@@356)))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@354) $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@161)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@70) (= (type $generated@@361) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@306 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@95 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@306 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (and (= (type $generated@@362) $generated@@81) (or ($generated@@82 $generated@@363) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@363)))) ($generated@@154 ($generated@@79 $generated@@362 $generated@@363) $generated@@155))
 :pattern ( ($generated@@79 $generated@@362 $generated@@363))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@81) (= (type $generated@@365) $generated@@86)) (and ($generated@@154 $generated@@365 $generated@@155) ($generated@@173 ($generated@@80 $generated@@364) $generated@@365))) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@161) ($generated@@318 ($generated@@80 $generated@@364) $generated@@366 $generated@@365))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@364) $generated@@366 $generated@@365))
)))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@364) $generated@@365))
))))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@97 $generated@@369 $generated@@2))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@100 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@97 $generated@@371 $generated@@2)) (and (= (= ($generated@@367 $generated@@370) 0) (= $generated@@370 ($generated@@368 $generated@@371))) (=> (not (= ($generated@@367 $generated@@370) 0)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (< 0 ($generated ($generated@@102 $generated@@370 $generated@@372))))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 19)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@97 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@102 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@102 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 20)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@97 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@102 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@102 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@161) (= (type $generated@@411) $generated@@161)) (and ($generated@@409 $generated@@411) (<= ($generated@@182 $generated@@411) ($generated@@182 $generated@@410)))) (and (= ($generated@@409 ($generated@@180 $generated@@410 $generated@@411)) ($generated@@409 $generated@@410)) (= ($generated@@182 ($generated@@180 $generated@@410 $generated@@411)) (- ($generated@@182 $generated@@410) ($generated@@182 $generated@@411)))))
 :pattern ( ($generated@@180 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 Int) ) (!  (=> (<= 0 $generated@@412) (and ($generated@@409 ($generated@@181 $generated@@412)) (= ($generated@@182 ($generated@@181 $generated@@412)) $generated@@412)))
 :pattern ( ($generated@@181 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@100 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@97 $generated@@414 $generated@@2)) (= ($generated@@206 $generated@@413) (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@414) (and (<= 0 ($generated ($generated@@102 $generated@@413 $generated@@415))) (<= ($generated ($generated@@102 $generated@@413 $generated@@415)) ($generated@@367 $generated@@413))))
 :pattern ( ($generated@@102 $generated@@413 $generated@@415))
)))))
 :pattern ( ($generated@@206 $generated@@413))
)))
(assert (forall (($generated@@417 T@T) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@161) ($generated@@267 $generated@@419 $generated@@165)) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@419)) $generated@@419) ($generated@@154 ($generated@@416 $generated@@2 $generated@@419) $generated@@165)))
 :pattern ( ($generated@@267 $generated@@419 $generated@@165))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@161) ($generated@@267 $generated@@420 $generated@@155)) (and (= ($generated@@357 ($generated@@416 $generated@@86 $generated@@420)) $generated@@420) ($generated@@154 ($generated@@416 $generated@@86 $generated@@420) $generated@@155)))
 :pattern ( ($generated@@267 $generated@@420 $generated@@155))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@81) (= (type $generated@@422) $generated@@161)) (= (type $generated@@423) $generated@@86)) (or ($generated@@340 $generated@@422 $generated@@423) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@423 $generated@@155)))) true)
 :pattern ( ($generated@@318 $generated@@421 $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@86) (= ($generated@@154 ($generated@@85 $generated@@424) $generated@@155) ($generated@@154 $generated@@424 $generated@@155)))
 :pattern ( ($generated@@154 ($generated@@85 $generated@@424) $generated@@155))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@86) (= (type $generated@@426) $generated@@86)) (and ($generated@@313 $generated@@425) ($generated@@313 $generated@@426))) (= ($generated@@282 $generated@@425 $generated@@426) ($generated@@282 ($generated@@341 $generated@@425) ($generated@@341 $generated@@426))))
 :pattern ( ($generated@@282 $generated@@425 $generated@@426) ($generated@@313 $generated@@425))
 :pattern ( ($generated@@282 $generated@@425 $generated@@426) ($generated@@313 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@377 (type $generated@@427))))
(let (($generated@@429 ($generated@@376 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@375 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@374 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@377 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@97 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@377 (type $generated@@434))))
(let (($generated@@436 ($generated@@376 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@375 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@374 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@102 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@395 (type $generated@@438))))
(let (($generated@@440 ($generated@@394 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@393 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@392 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@391 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@395 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@97 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@395 (type $generated@@445))))
(let (($generated@@447 ($generated@@394 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@393 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@392 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@102 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) $generated@@81) (= (type $generated@@450) $generated@@161)) (= (type $generated@@451) $generated@@86)) (or ($generated@@340 ($generated@@296 $generated@@450) ($generated@@296 $generated@@451)) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@451 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@450)) (=> ($generated@@313 $generated@@451) (let (($generated@@452 ($generated@@341 $generated@@451)))
($generated@@340 ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@452)))) (=> (=> (< 0 ($generated@@182 $generated@@450)) (ite ($generated@@313 $generated@@451) (let (($generated@@453 ($generated@@341 $generated@@451)))
($generated@@318 ($generated@@80 $generated@@449) ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@453)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@450)) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@161) ($generated@@160 $generated@@454 $generated@@450)) ($generated@@340 $generated@@454 $generated@@451))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) $generated@@454 $generated@@451))
))))) (= ($generated@@318 ($generated@@80 $generated@@449) ($generated@@296 $generated@@450) ($generated@@296 $generated@@451))  (and (=> (< 0 ($generated@@182 $generated@@450)) (ite ($generated@@313 $generated@@451) (let (($generated@@455 ($generated@@341 $generated@@451)))
($generated@@318 ($generated@@80 $generated@@449) ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@455)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@450)) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@161) ($generated@@160 $generated@@456 $generated@@450)) ($generated@@318 ($generated@@80 $generated@@449) $generated@@456 $generated@@451))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) $generated@@456 $generated@@451))
)))))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) ($generated@@296 $generated@@450) ($generated@@296 $generated@@451)))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@458) $generated@@70)) (= ($generated@@154 $generated@@457 ($generated@@205 $generated@@458)) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@161) (< 0 ($generated ($generated@@102 $generated@@457 $generated@@459)))) ($generated@@267 $generated@@459 $generated@@458))
 :pattern ( ($generated@@102 $generated@@457 $generated@@459))
))))
 :pattern ( ($generated@@154 $generated@@457 ($generated@@205 $generated@@458)))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@161) (= (type $generated@@461) $generated@@161)) (or (or ($generated@@160 $generated@@460 $generated@@461) (= $generated@@460 $generated@@461)) ($generated@@160 $generated@@461 $generated@@460)))
 :pattern ( ($generated@@160 $generated@@460 $generated@@461) ($generated@@160 $generated@@461 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@462 ($generated@@285 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@161) ($generated@@0 ($generated@@102 $generated@@462 $generated@@465))) ($generated@@306 $generated@@465 $generated@@463 $generated@@464))
 :pattern ( ($generated@@102 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@95 $generated@@462 ($generated@@285 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@466 ($generated@@290 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@161) ($generated@@0 ($generated@@102 $generated@@466 $generated@@469))) ($generated@@306 $generated@@469 $generated@@467 $generated@@468))
 :pattern ( ($generated@@102 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@95 $generated@@466 ($generated@@290 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(= ($generated ($generated@@102 ($generated@@368 $generated@@471) $generated@@470)) 0))
 :pattern ( (let (($generated@@471 (type $generated@@470)))
($generated@@102 ($generated@@368 $generated@@471) $generated@@470)))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) ($generated@@97 $generated@@161 $generated@@4))
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@377 (type $generated@@475))))
(let (($generated@@477 ($generated@@376 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475)) ($generated@@97 $generated@@477 $generated@@476))))
 :pattern ( ($generated@@473 $generated@@475))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@479) $generated@@161)) (= ($generated@@0 ($generated@@102 ($generated@@472 $generated@@478) $generated@@479))  (and ($generated@@0 ($generated@@102 ($generated@@373 $generated@@478) ($generated@@197 ($generated@@416 $generated@@86 $generated@@479)))) (= ($generated@@102 ($generated@@473 $generated@@478) ($generated@@197 ($generated@@416 $generated@@86 $generated@@479))) ($generated@@198 ($generated@@416 $generated@@86 $generated@@479))))))
 :pattern ( ($generated@@102 ($generated@@472 $generated@@478) $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) ($generated@@97 $generated@@161 $generated@@4))
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@395 (type $generated@@483))))
(let (($generated@@485 ($generated@@394 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483)) ($generated@@97 $generated@@485 $generated@@484))))
 :pattern ( ($generated@@481 $generated@@483))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@487) $generated@@161)) (= ($generated@@0 ($generated@@102 ($generated@@480 $generated@@486) $generated@@487))  (and ($generated@@0 ($generated@@102 ($generated@@391 $generated@@486) ($generated@@197 ($generated@@416 $generated@@86 $generated@@487)))) (= ($generated@@102 ($generated@@481 $generated@@486) ($generated@@197 ($generated@@416 $generated@@86 $generated@@487))) ($generated@@198 ($generated@@416 $generated@@86 $generated@@487))))))
 :pattern ( ($generated@@102 ($generated@@480 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(let (($generated@@491 ($generated@@376 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@375 $generated@@491 $generated@@490)) (= ($generated@@0 ($generated@@102 ($generated@@431 $generated@@488) $generated@@489)) (exists (($generated@@492 T@U) ) (!  (and (= (type $generated@@492) $generated@@491) (and ($generated@@0 ($generated@@102 ($generated@@373 $generated@@488) $generated@@492)) (= $generated@@489 ($generated@@102 ($generated@@473 $generated@@488) $generated@@492))))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@488) $generated@@492))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@488) $generated@@492))
))))))
 :pattern ( ($generated@@102 ($generated@@431 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(let (($generated@@496 ($generated@@394 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@393 $generated@@496 $generated@@495)) (= ($generated@@0 ($generated@@102 ($generated@@442 $generated@@493) $generated@@494)) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@496) (and ($generated@@0 ($generated@@102 ($generated@@391 $generated@@493) $generated@@497)) (= $generated@@494 ($generated@@102 ($generated@@481 $generated@@493) $generated@@497))))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@493) $generated@@497))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@493) $generated@@497))
))))))
 :pattern ( ($generated@@102 ($generated@@442 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@502) $generated@@70)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@501) $generated@@505))) (and ($generated@@306 ($generated@@102 ($generated@@473 $generated@@501) $generated@@505) $generated@@503 $generated@@504) ($generated@@306 $generated@@505 $generated@@502 $generated@@504)))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@501) $generated@@505))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@501) $generated@@505))
))))
 :pattern ( ($generated@@95 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@510) $generated@@70)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@509) $generated@@513))) (and ($generated@@306 ($generated@@102 ($generated@@481 $generated@@509) $generated@@513) $generated@@511 $generated@@512) ($generated@@306 $generated@@513 $generated@@510 $generated@@512)))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@509) $generated@@513))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@509) $generated@@513))
))))
 :pattern ( ($generated@@95 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@81)
 :pattern ( ($generated@@514 $generated@@516))
)) (= (type $generated@@515) $generated@@81)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@81) (= (type $generated@@518) $generated@@86)) (= ($generated@@169 $generated@@517 $generated@@518) ($generated@@169 $generated@@515 $generated@@518)))
 :pattern ( ($generated@@169 ($generated@@514 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@81) (= (type $generated@@520) $generated@@86)) (= ($generated@@173 $generated@@519 $generated@@520) ($generated@@173 $generated@@515 $generated@@520)))
 :pattern ( ($generated@@173 ($generated@@514 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@81) (= (type $generated@@522) $generated@@86)) (= ($generated@@153 $generated@@521 $generated@@522) ($generated@@153 $generated@@515 $generated@@522)))
 :pattern ( ($generated@@153 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@86) (= (type $generated@@524) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@274 $generated@@524)) (= ($generated@@95 ($generated@@85 $generated@@523) $generated@@155 $generated@@524) ($generated@@95 $generated@@523 $generated@@155 $generated@@524)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@523) $generated@@155 $generated@@524))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@81) (= (type $generated@@526) $generated@@161)) (= (type $generated@@527) $generated@@86)) (or ($generated@@340 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@527 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@526)) (=> ($generated@@313 $generated@@527) (let (($generated@@528 ($generated@@341 $generated@@527)))
($generated@@340 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@528)))) (=> (=> (< 0 ($generated@@182 $generated@@526)) (ite ($generated@@313 $generated@@527) (let (($generated@@529 ($generated@@341 $generated@@527)))
($generated@@318 $generated@@525 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@529)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@526)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@161) ($generated@@160 $generated@@530 $generated@@526)) ($generated@@340 $generated@@530 $generated@@527))
 :pattern ( ($generated@@318 $generated@@525 $generated@@530 $generated@@527))
))))) (= ($generated@@318 ($generated@@80 $generated@@525) $generated@@526 $generated@@527)  (and (=> (< 0 ($generated@@182 $generated@@526)) (ite ($generated@@313 $generated@@527) (let (($generated@@531 ($generated@@341 $generated@@527)))
($generated@@318 $generated@@525 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@531)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@526)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@160 $generated@@532 $generated@@526)) ($generated@@318 $generated@@525 $generated@@532 $generated@@527))
 :pattern ( ($generated@@318 $generated@@525 $generated@@532 $generated@@527))
)))))))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@525) $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@86) ($generated@@154 $generated@@533 $generated@@155)) (or ($generated@@313 $generated@@533) ($generated@@303 $generated@@533)))
 :pattern ( ($generated@@303 $generated@@533) ($generated@@154 $generated@@533 $generated@@155))
 :pattern ( ($generated@@313 $generated@@533) ($generated@@154 $generated@@533 $generated@@155))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@534 T@U) ($generated@@535 Int) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@81) (= (type $generated@@536) $generated@@86)) (or ($generated@@276 ($generated@@83 $generated@@535) $generated@@536) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@535) ($generated@@154 $generated@@536 $generated@@155))))) (and (=> (< 0 $generated@@535) (=> ($generated@@313 $generated@@536) (let (($generated@@537 ($generated@@341 $generated@@536)))
($generated@@276 (- $generated@@535 1) $generated@@537)))) (= ($generated@@156 ($generated@@80 $generated@@534) ($generated@@83 $generated@@535) $generated@@536)  (=> (< 0 $generated@@535) (ite ($generated@@313 $generated@@536) (let (($generated@@538 ($generated@@341 $generated@@536)))
($generated@@156 ($generated@@80 $generated@@534) (- $generated@@535 1) $generated@@538)) true)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@80 $generated@@534) ($generated@@83 $generated@@535) $generated@@536))
))))
(assert (forall (($generated@@540 T@T) ) (! (= (type ($generated@@539 $generated@@540)) ($generated@@97 $generated@@540 $generated@@4))
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@395 (type $generated@@541))))
(let (($generated@@543 ($generated@@394 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@393 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@392 $generated@@543 $generated@@542)) (= ($generated@@391 $generated@@541) ($generated@@539 $generated@@543))))))
 :pattern ( ($generated@@391 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@395 (type $generated@@544))))
(let (($generated@@546 ($generated@@394 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@393 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@392 $generated@@546 $generated@@545)) (= ($generated@@442 $generated@@544) ($generated@@539 $generated@@545))))))
 :pattern ( ($generated@@442 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@395 (type $generated@@547))))
(let (($generated@@549 ($generated@@394 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@393 $generated@@549 $generated@@548)) (= (= $generated@@547 ($generated@@392 $generated@@549 $generated@@548)) (= ($generated@@480 $generated@@547) ($generated@@539 $generated@@161))))))
 :pattern ( ($generated@@480 $generated@@547))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@377 (type $generated@@550))))
(let (($generated@@552 ($generated@@376 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@375 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@374 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@161) (= (type $generated@@554) $generated@@161)) ($generated@@0 ($generated@@102 ($generated@@472 $generated@@550) ($generated@@357 ($generated@@266 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@472 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@395 (type $generated@@555))))
(let (($generated@@557 ($generated@@394 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@393 $generated@@557 $generated@@556)) (or (= $generated@@555 ($generated@@392 $generated@@557 $generated@@556)) (exists (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@161)) ($generated@@0 ($generated@@102 ($generated@@480 $generated@@555) ($generated@@357 ($generated@@266 $generated@@558 $generated@@559)))))
 :no-pattern (type $generated@@558)
 :no-pattern (type $generated@@559)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
))))))
 :pattern ( ($generated@@480 $generated@@555))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@161) ($generated@@267 $generated@@560 $generated@@46)) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@560)) $generated@@560) ($generated@@154 ($generated@@416 $generated@@2 $generated@@560) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@560 $generated@@46))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@161) ($generated@@267 $generated@@561 $generated@@47)) (and (= ($generated@@357 ($generated@@416 $generated@@3 $generated@@561)) $generated@@561) ($generated@@154 ($generated@@416 $generated@@3 $generated@@561) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@561 $generated@@47))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@161) ($generated@@267 $generated@@562 $generated@@44)) (and (= ($generated@@357 ($generated@@416 $generated@@4 $generated@@562)) $generated@@562) ($generated@@154 ($generated@@416 $generated@@4 $generated@@562) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@562 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@563) 21))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@161) ($generated@@267 $generated@@564 $generated@@45)) (and (= ($generated@@357 ($generated@@416 $generated@@563 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@416 $generated@@563 $generated@@564) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@564 $generated@@45))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) (= (type $generated@@566) $generated@@86)) (= ($generated@@169 ($generated@@80 $generated@@565) $generated@@566) ($generated@@169 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@81) (= (type $generated@@568) $generated@@86)) (= ($generated@@173 ($generated@@80 $generated@@567) $generated@@568) ($generated@@173 $generated@@567 $generated@@568)))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) (= (type $generated@@570) $generated@@86)) (= ($generated@@153 ($generated@@80 $generated@@569) $generated@@570) ($generated@@153 $generated@@569 $generated@@570)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@267 ($generated@@357 $generated@@571) $generated@@572) ($generated@@154 $generated@@571 $generated@@572)))
 :pattern ( ($generated@@267 ($generated@@357 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (<= 0 ($generated@@182 $generated@@573)))
 :pattern ( ($generated@@182 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@100 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@97 $generated@@575 $generated@@2)) (<= 0 ($generated@@367 $generated@@574))))
 :pattern ( ($generated@@367 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@331 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@330 $generated@@577)) (<= 0 ($generated@@329 $generated@@576))))
 :pattern ( ($generated@@329 $generated@@576))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@70)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@70) (= (type $generated@@581) $generated@@70)) (= ($generated@@578 ($generated@@498 $generated@@580 $generated@@581)) $generated@@580))
 :pattern ( ($generated@@498 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@70)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@70) (= (type $generated@@585) $generated@@70)) (= ($generated@@582 ($generated@@498 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@498 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@70)) (= ($generated@@93 ($generated@@498 $generated@@586 $generated@@587)) $generated@@58))
 :pattern ( ($generated@@498 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@70)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@70) (= (type $generated@@591) $generated@@70)) (= ($generated@@588 ($generated@@506 $generated@@590 $generated@@591)) $generated@@590))
 :pattern ( ($generated@@506 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@70)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@70) (= (type $generated@@595) $generated@@70)) (= ($generated@@592 ($generated@@506 $generated@@594 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@506 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@70) (= (type $generated@@597) $generated@@70)) (= ($generated@@93 ($generated@@506 $generated@@596 $generated@@597)) $generated@@59))
 :pattern ( ($generated@@506 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@161) (= (type $generated@@599) $generated@@161)) (= ($generated@@203 ($generated@@266 $generated@@598 $generated@@599)) $generated@@62))
 :pattern ( ($generated@@266 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@70)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@70)) (= ($generated@@600 ($generated@@190 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@190 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@70)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= ($generated@@604 ($generated@@190 $generated@@606 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@190 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@161) (= (type $generated@@609) $generated@@161)) (= ($generated@@197 ($generated@@266 $generated@@608 $generated@@609)) $generated@@608))
 :pattern ( ($generated@@266 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@161) (= (type $generated@@611) $generated@@161)) (= ($generated@@198 ($generated@@266 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@266 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) $generated@@81) (= ($generated@@79 $generated@@612 $generated@@613) ($generated@@79 $generated@@515 $generated@@613)))
 :pattern ( ($generated@@79 ($generated@@514 $generated@@612) $generated@@613))
)))
(assert  (and (forall (($generated@@616 T@U) ) (! (= (type ($generated@@614 $generated@@616)) $generated@@70)
 :pattern ( ($generated@@614 $generated@@616))
)) (forall (($generated@@617 T@U) ($generated@@618 Int) ) (! (let (($generated@@619 ($generated@@331 (type $generated@@617))))
(= (type ($generated@@615 $generated@@617 $generated@@618)) $generated@@619))
 :pattern ( ($generated@@615 $generated@@617 $generated@@618))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@330 $generated@@161)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@620 ($generated@@614 $generated@@621) $generated@@622) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@329 $generated@@620))) ($generated@@306 ($generated@@615 $generated@@620 $generated@@623) $generated@@621 $generated@@622))
 :pattern ( ($generated@@615 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@95 $generated@@620 ($generated@@614 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@624 ($generated@@96 $generated@@625)) $generated@@625)
 :pattern ( ($generated@@96 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (! (= (type ($generated@@626 $generated@@627)) $generated@@70)
 :pattern ( ($generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@70) (= ($generated@@626 ($generated@@285 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@285 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@70) (= ($generated@@93 ($generated@@285 $generated@@629)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@70)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@70) (= ($generated@@630 ($generated@@290 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@290 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@70) (= ($generated@@93 ($generated@@290 $generated@@633)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@70)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@70) (= ($generated@@634 ($generated@@205 $generated@@636)) $generated@@636))
 :pattern ( ($generated@@205 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@70) (= ($generated@@93 ($generated@@205 $generated@@637)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (! (= (type ($generated@@638 $generated@@639)) $generated@@70)
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@70) (= ($generated@@638 ($generated@@614 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@614 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@70) (= ($generated@@93 ($generated@@614 $generated@@641)) $generated@@57))
 :pattern ( ($generated@@614 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@86) (= ($generated@@203 ($generated@@85 $generated@@642)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@86) (= ($generated@@341 ($generated@@85 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@85 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@644)))
(= ($generated@@416 $generated@@645 ($generated@@357 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@357 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@647) $generated@@70)) (= (type $generated@@648) $generated@@70)) (= ($generated@@154 $generated@@646 ($generated@@498 $generated@@647 $generated@@648)) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@646) $generated@@649))) (and ($generated@@267 ($generated@@102 ($generated@@473 $generated@@646) $generated@@649) $generated@@648) ($generated@@267 $generated@@649 $generated@@647)))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@646) $generated@@649))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@646) $generated@@649))
))))
 :pattern ( ($generated@@154 $generated@@646 ($generated@@498 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) (= ($generated@@154 $generated@@650 ($generated@@506 $generated@@651 $generated@@652)) (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@650) $generated@@653))) (and ($generated@@267 ($generated@@102 ($generated@@481 $generated@@650) $generated@@653) $generated@@652) ($generated@@267 $generated@@653 $generated@@651)))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@650) $generated@@653))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@650) $generated@@653))
))))
 :pattern ( ($generated@@154 $generated@@650 ($generated@@506 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@161) (= (type $generated@@655) $generated@@161)) (and (and (and (=> ($generated@@160 $generated@@654 $generated@@655) (not (= $generated@@654 $generated@@655))) (=> (and ($generated@@409 $generated@@654) (not ($generated@@409 $generated@@655))) ($generated@@160 $generated@@654 $generated@@655))) (=> (and ($generated@@409 $generated@@654) ($generated@@409 $generated@@655)) (= ($generated@@160 $generated@@654 $generated@@655) (< ($generated@@182 $generated@@654) ($generated@@182 $generated@@655))))) (=> (and ($generated@@160 $generated@@654 $generated@@655) ($generated@@409 $generated@@655)) ($generated@@409 $generated@@654))))
 :pattern ( ($generated@@160 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@161) (= (type $generated@@659) $generated@@161)) (< ($generated@@656 $generated@@658) ($generated@@657 ($generated@@266 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@266 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@161) (= (type $generated@@661) $generated@@161)) (< ($generated@@656 $generated@@661) ($generated@@657 ($generated@@266 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@266 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@662) $generated@@663) ($generated@@79 $generated@@662 $generated@@663)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@662) $generated@@663))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@664 T@U) ($generated@@665 Int) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@81) (= (type $generated@@666) $generated@@86)) (or ($generated@@276 ($generated@@83 $generated@@665) ($generated@@296 $generated@@666)) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@665) ($generated@@154 $generated@@666 $generated@@155))))) (and (=> (< 0 $generated@@665) (=> ($generated@@313 $generated@@666) (let (($generated@@667 ($generated@@341 $generated@@666)))
($generated@@276 (- $generated@@665 1) $generated@@667)))) (= ($generated@@156 ($generated@@80 $generated@@664) ($generated@@83 $generated@@665) ($generated@@296 $generated@@666))  (=> (< 0 $generated@@665) (ite ($generated@@313 $generated@@666) (let (($generated@@668 ($generated@@341 $generated@@666)))
($generated@@156 ($generated@@80 $generated@@664) (- $generated@@665 1) $generated@@668)) true)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@80 $generated@@664) ($generated@@83 $generated@@665) ($generated@@296 $generated@@666)))
))))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@161) (= (type $generated@@670) $generated@@70)) (= (type $generated@@671) $generated@@70)) ($generated@@267 $generated@@669 ($generated@@498 $generated@@670 $generated@@671))) (and (= ($generated@@357 ($generated@@416 ($generated@@375 $generated@@161 $generated@@161) $generated@@669)) $generated@@669) ($generated@@154 ($generated@@416 ($generated@@375 $generated@@161 $generated@@161) $generated@@669) ($generated@@498 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@267 $generated@@669 ($generated@@498 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@161) (= (type $generated@@673) $generated@@70)) (= (type $generated@@674) $generated@@70)) ($generated@@267 $generated@@672 ($generated@@506 $generated@@673 $generated@@674))) (and (= ($generated@@357 ($generated@@416 ($generated@@393 $generated@@161 $generated@@161) $generated@@672)) $generated@@672) ($generated@@154 ($generated@@416 ($generated@@393 $generated@@161 $generated@@161) $generated@@672) ($generated@@506 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@267 $generated@@672 ($generated@@506 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@70) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) $generated@@161)) ($generated@@267 $generated@@677 ($generated@@190 $generated@@675 $generated@@676))) (and (= ($generated@@357 ($generated@@416 $generated@@86 $generated@@677)) $generated@@677) ($generated@@154 ($generated@@416 $generated@@86 $generated@@677) ($generated@@190 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@267 $generated@@677 ($generated@@190 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@86) (< ($generated@@657 $generated@@678) ($generated@@657 ($generated@@85 $generated@@678))))
 :pattern ( ($generated@@85 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@679)))
 (not ($generated@@0 ($generated@@102 ($generated@@539 $generated@@680) $generated@@679))))
 :pattern ( (let (($generated@@680 (type $generated@@679)))
($generated@@102 ($generated@@539 $generated@@680) $generated@@679)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@681 T@U) ($generated@@682 Int) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@81) (= (type $generated@@683) $generated@@86)) (or ($generated@@276 $generated@@682 $generated@@683) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@682) ($generated@@154 $generated@@683 $generated@@155))))) (and (=> (< 0 $generated@@682) (=> ($generated@@313 $generated@@683) (let (($generated@@684 ($generated@@341 $generated@@683)))
($generated@@276 (- $generated@@682 1) $generated@@684)))) (= ($generated@@156 ($generated@@80 $generated@@681) $generated@@682 $generated@@683)  (=> (< 0 $generated@@682) (ite ($generated@@313 $generated@@683) (let (($generated@@685 ($generated@@341 $generated@@683)))
($generated@@156 $generated@@681 (- $generated@@682 1) $generated@@685)) true)))))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@681) $generated@@682 $generated@@683))
))))
(assert (forall (($generated@@687 T@U) ) (! (= (type ($generated@@686 $generated@@687)) $generated@@75)
 :pattern ( ($generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@70) (= (type $generated@@689) $generated@@70)) (and (= ($generated@@93 ($generated@@190 $generated@@688 $generated@@689)) $generated@@63) (= ($generated@@686 ($generated@@190 $generated@@688 $generated@@689)) $generated@@68)))
 :pattern ( ($generated@@190 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@86) (= ($generated@@656 ($generated@@357 $generated@@690)) ($generated@@657 $generated@@690)))
 :pattern ( ($generated@@656 ($generated@@357 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@161) ($generated@@267 $generated@@691 ($generated@@96 0))) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@691)) $generated@@691) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@691) ($generated@@96 0))))
 :pattern ( ($generated@@267 $generated@@691 ($generated@@96 0)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@161) (= (type $generated@@693) $generated@@70)) ($generated@@267 $generated@@692 ($generated@@285 $generated@@693))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@692)) $generated@@692) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@692) ($generated@@285 $generated@@693))))
 :pattern ( ($generated@@267 $generated@@692 ($generated@@285 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@161) (= (type $generated@@695) $generated@@70)) ($generated@@267 $generated@@694 ($generated@@290 $generated@@695))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@694)) $generated@@694) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@694) ($generated@@290 $generated@@695))))
 :pattern ( ($generated@@267 $generated@@694 ($generated@@290 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@161) (= (type $generated@@697) $generated@@70)) ($generated@@267 $generated@@696 ($generated@@205 $generated@@697))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@2) $generated@@696)) $generated@@696) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@2) $generated@@696) ($generated@@205 $generated@@697))))
 :pattern ( ($generated@@267 $generated@@696 ($generated@@205 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@161) (= (type $generated@@699) $generated@@70)) ($generated@@267 $generated@@698 ($generated@@614 $generated@@699))) (and (= ($generated@@357 ($generated@@416 ($generated@@330 $generated@@161) $generated@@698)) $generated@@698) ($generated@@154 ($generated@@416 ($generated@@330 $generated@@161) $generated@@698) ($generated@@614 $generated@@699))))
 :pattern ( ($generated@@267 $generated@@698 ($generated@@614 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@161) ($generated@@409 $generated@@700)) (= $generated@@700 ($generated@@181 ($generated@@182 $generated@@700))))
 :pattern ( ($generated@@182 $generated@@700))
 :pattern ( ($generated@@409 $generated@@700))
)))
(assert (= ($generated@@93 $generated@@165) $generated@@61))
(assert (= ($generated@@686 $generated@@165) $generated@@67))
(assert (= ($generated@@93 $generated@@155) $generated@@65))
(assert (= ($generated@@686 $generated@@155) $generated@@69))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@701) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@702) $generated@@70)) (= (type $generated@@703) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@701 ($generated@@205 $generated@@702) $generated@@703) (forall (($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@704) $generated@@161) (< 0 ($generated ($generated@@102 $generated@@701 $generated@@704)))) ($generated@@306 $generated@@704 $generated@@702 $generated@@703))
 :pattern ( ($generated@@102 $generated@@701 $generated@@704))
))))
 :pattern ( ($generated@@95 $generated@@701 ($generated@@205 $generated@@702) $generated@@703))
)))
(assert (= $generated@@84 ($generated@@296 $generated@@84)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) $generated@@161) (= (type $generated@@706) $generated@@161)) (and ($generated@@409 $generated@@706) (<= ($generated@@182 $generated@@706) ($generated@@182 $generated@@705)))) (or (and (= $generated@@706 ($generated@@181 0)) (= ($generated@@180 $generated@@705 $generated@@706) $generated@@705)) (and (not (= $generated@@706 ($generated@@181 0))) ($generated@@160 ($generated@@180 $generated@@705 $generated@@706) $generated@@705))))
 :pattern ( ($generated@@180 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) $generated@@86) (= (type $generated@@708) $generated@@70)) (= (type $generated@@709) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@709) (and ($generated@@189 $generated@@707) (exists (($generated@@710 T@U) ) (!  (and (= (type $generated@@710) $generated@@70) ($generated@@95 $generated@@707 ($generated@@190 $generated@@708 $generated@@710) $generated@@709))
 :pattern ( ($generated@@95 $generated@@707 ($generated@@190 $generated@@708 $generated@@710) $generated@@709))
))))) ($generated@@306 ($generated@@197 $generated@@707) $generated@@708 $generated@@709))
 :pattern ( ($generated@@306 ($generated@@197 $generated@@707) $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) $generated@@86) (= (type $generated@@712) $generated@@70)) (= (type $generated@@713) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@713) (and ($generated@@189 $generated@@711) (exists (($generated@@714 T@U) ) (!  (and (= (type $generated@@714) $generated@@70) ($generated@@95 $generated@@711 ($generated@@190 $generated@@714 $generated@@712) $generated@@713))
 :pattern ( ($generated@@95 $generated@@711 ($generated@@190 $generated@@714 $generated@@712) $generated@@713))
))))) ($generated@@306 ($generated@@198 $generated@@711) $generated@@712 $generated@@713))
 :pattern ( ($generated@@306 ($generated@@198 $generated@@711) $generated@@712 $generated@@713))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@81) (= (type $generated@@716) $generated@@86)) (or ($generated@@170 ($generated@@296 $generated@@716)) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@716 $generated@@155)))) (and (=> ($generated@@0 ($generated@@296 ($generated@@11 ($generated@@313 ($generated@@296 $generated@@716))))) (let (($generated@@717 ($generated@@296 ($generated@@341 ($generated@@296 $generated@@716)))))
($generated@@170 $generated@@717))) (= ($generated@@169 ($generated@@80 $generated@@715) ($generated@@296 $generated@@716)) (ite ($generated@@313 ($generated@@296 $generated@@716)) ($generated@@0 (let (($generated@@718 ($generated@@296 ($generated@@341 ($generated@@296 $generated@@716)))))
($generated@@296 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@715) $generated@@718))))) true))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@80 $generated@@715) ($generated@@296 $generated@@716)))
))))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@86) (= (type $generated@@720) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@720) (and ($generated@@313 $generated@@719) ($generated@@95 $generated@@719 $generated@@155 $generated@@720)))) ($generated@@95 ($generated@@341 $generated@@719) $generated@@155 $generated@@720))
 :pattern ( ($generated@@95 ($generated@@341 $generated@@719) $generated@@155 $generated@@720))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@81) (= (type $generated@@722) $generated@@86)) (or ($generated@@170 $generated@@722) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@722 $generated@@155)))) (and (=> ($generated@@313 $generated@@722) (let (($generated@@723 ($generated@@341 $generated@@722)))
($generated@@170 $generated@@723))) (= ($generated@@169 ($generated@@80 $generated@@721) $generated@@722) (ite ($generated@@313 $generated@@722) (let (($generated@@724 ($generated@@341 $generated@@722)))
($generated@@169 $generated@@721 $generated@@724)) true))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@721) $generated@@722))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@725) $generated@@81) (= (type $generated@@726) $generated@@86)) (or ($generated@@174 $generated@@726) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@726 $generated@@155)))) (and (=> ($generated@@313 $generated@@726) (let (($generated@@727 ($generated@@341 $generated@@726)))
($generated@@174 $generated@@727))) (= ($generated@@173 ($generated@@80 $generated@@725) $generated@@726) (ite ($generated@@313 $generated@@726) (let (($generated@@728 ($generated@@341 $generated@@726)))
($generated@@173 $generated@@725 $generated@@728)) true))))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@725) $generated@@726))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@81) (= (type $generated@@730) $generated@@86)) (or ($generated@@177 $generated@@730) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@730 $generated@@155)))) (and (=> ($generated@@313 $generated@@730) (let (($generated@@731 ($generated@@341 $generated@@730)))
($generated@@177 $generated@@731))) (= ($generated@@153 ($generated@@80 $generated@@729) $generated@@730) (ite ($generated@@313 $generated@@730) (let (($generated@@732 ($generated@@341 $generated@@730)))
($generated@@153 $generated@@729 $generated@@732)) true))))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@729) $generated@@730))
))))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@161) (= (type $generated@@734) $generated@@161)) (= ($generated@@266 ($generated@@296 $generated@@733) ($generated@@296 $generated@@734)) ($generated@@296 ($generated@@266 $generated@@733 $generated@@734))))
 :pattern ( ($generated@@266 ($generated@@296 $generated@@733) ($generated@@296 $generated@@734)))
)))
(assert (forall (($generated@@735 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@83 $generated@@735))) ($generated@@296 ($generated@@357 ($generated@@8 $generated@@735))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@83 $generated@@735))))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@86) (= ($generated@@85 ($generated@@296 $generated@@736)) ($generated@@296 ($generated@@85 $generated@@736))))
 :pattern ( ($generated@@85 ($generated@@296 $generated@@736)))
)))
(assert (forall (($generated@@737 T@U) ) (! (= ($generated@@357 ($generated@@296 $generated@@737)) ($generated@@296 ($generated@@357 $generated@@737)))
 :pattern ( ($generated@@357 ($generated@@296 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@331 (type $generated@@738))))
 (=> (and (= (type $generated@@738) ($generated@@330 $generated@@739)) (= ($generated@@329 $generated@@738) 0)) (= $generated@@738 ($generated@@328 $generated@@739))))
 :pattern ( ($generated@@329 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (! (let (($generated@@743 (type $generated@@741)))
 (=> (and (and (= (type $generated@@740) ($generated@@97 $generated@@743 $generated@@2)) (= (type $generated@@742) $generated@@2)) (<= 0 ($generated $generated@@742))) (= ($generated@@367 ($generated@@103 $generated@@740 $generated@@741 $generated@@742)) (+ (- ($generated@@367 $generated@@740) ($generated ($generated@@102 $generated@@740 $generated@@741))) ($generated $generated@@742)))))
 :pattern ( ($generated@@367 ($generated@@103 $generated@@740 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@745) $generated@@2)) ($generated@@95 $generated@@745 $generated@@46 $generated@@744))
 :pattern ( ($generated@@95 $generated@@745 $generated@@46 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@747) $generated@@3)) ($generated@@95 $generated@@747 $generated@@47 $generated@@746))
 :pattern ( ($generated@@95 $generated@@747 $generated@@47 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@749) $generated@@4)) ($generated@@95 $generated@@749 $generated@@44 $generated@@748))
 :pattern ( ($generated@@95 $generated@@749 $generated@@44 $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@751) $generated@@563)) ($generated@@95 $generated@@751 $generated@@45 $generated@@750))
 :pattern ( ($generated@@95 $generated@@751 $generated@@45 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@753) $generated@@161)) ($generated@@95 $generated@@753 $generated@@48 $generated@@752))
 :pattern ( ($generated@@95 $generated@@753 $generated@@48 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) ($generated@@330 $generated@@161)) (= (type $generated@@755) $generated@@70)) (= ($generated@@154 $generated@@754 ($generated@@614 $generated@@755)) (forall (($generated@@756 Int) ) (!  (=> (and (<= 0 $generated@@756) (< $generated@@756 ($generated@@329 $generated@@754))) ($generated@@267 ($generated@@615 $generated@@754 $generated@@756) $generated@@755))
 :pattern ( ($generated@@615 $generated@@754 $generated@@756))
))))
 :pattern ( ($generated@@154 $generated@@754 ($generated@@614 $generated@@755)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@757) $generated@@81) (= (type $generated@@758) $generated@@86)) (and ($generated@@154 $generated@@758 $generated@@155) (forall (($generated@@759 Int) ) (!  (=> (<= ($generated@@83 0) $generated@@759) ($generated@@156 ($generated@@80 $generated@@757) $generated@@759 $generated@@758))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@757) $generated@@759 $generated@@758))
)))) ($generated@@153 ($generated@@80 $generated@@757) $generated@@758))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@757) $generated@@758))
))))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) $generated@@81) (= (type $generated@@761) $generated@@161)) (= (type $generated@@762) $generated@@86)) (= ($generated@@318 $generated@@760 $generated@@761 $generated@@762) ($generated@@318 $generated@@515 $generated@@761 $generated@@762)))
 :pattern ( ($generated@@318 ($generated@@514 $generated@@760) $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 Int) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@81) (= (type $generated@@765) $generated@@86)) (= ($generated@@156 $generated@@763 $generated@@764 $generated@@765) ($generated@@156 $generated@@515 $generated@@764 $generated@@765)))
 :pattern ( ($generated@@156 ($generated@@514 $generated@@763) $generated@@764 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 Int) ) (!  (=> (= (type $generated@@767) ($generated@@330 $generated@@161)) (=> (and (<= 0 $generated@@768) (< $generated@@768 ($generated@@329 $generated@@767))) (< ($generated@@657 ($generated@@416 $generated@@86 ($generated@@615 $generated@@767 $generated@@768))) ($generated@@766 $generated@@767))))
 :pattern ( ($generated@@657 ($generated@@416 $generated@@86 ($generated@@615 $generated@@767 $generated@@768))))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (and (= (type $generated@@769) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@770) $generated@@70)) (= (type $generated@@771) $generated@@70)) ($generated@@154 $generated@@769 ($generated@@498 $generated@@770 $generated@@771))) (and (and ($generated@@154 ($generated@@373 $generated@@769) ($generated@@285 $generated@@770)) ($generated@@154 ($generated@@431 $generated@@769) ($generated@@285 $generated@@771))) ($generated@@154 ($generated@@472 $generated@@769) ($generated@@285 ($generated@@190 $generated@@770 $generated@@771)))))
 :pattern ( ($generated@@154 $generated@@769 ($generated@@498 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (and (= (type $generated@@772) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@773) $generated@@70)) (= (type $generated@@774) $generated@@70)) ($generated@@154 $generated@@772 ($generated@@506 $generated@@773 $generated@@774))) (and (and ($generated@@154 ($generated@@391 $generated@@772) ($generated@@290 $generated@@773)) ($generated@@154 ($generated@@442 $generated@@772) ($generated@@290 $generated@@774))) ($generated@@154 ($generated@@480 $generated@@772) ($generated@@290 ($generated@@190 $generated@@773 $generated@@774)))))
 :pattern ( ($generated@@154 $generated@@772 ($generated@@506 $generated@@773 $generated@@774)))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@2) ($generated@@154 $generated@@775 $generated@@46))
 :pattern ( ($generated@@154 $generated@@775 $generated@@46))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@3) ($generated@@154 $generated@@776 $generated@@47))
 :pattern ( ($generated@@154 $generated@@776 $generated@@47))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@4) ($generated@@154 $generated@@777 $generated@@44))
 :pattern ( ($generated@@154 $generated@@777 $generated@@44))
)))
(assert (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@563) ($generated@@154 $generated@@778 $generated@@45))
 :pattern ( ($generated@@154 $generated@@778 $generated@@45))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@161) ($generated@@154 $generated@@779 $generated@@48))
 :pattern ( ($generated@@154 $generated@@779 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () Int)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 (T@U) Bool)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@782) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@783) $generated@@86)) (= (type $generated@@785) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@786) $generated@@86)) (= (type $generated@@788) ($generated@@212 $generated@@98 $generated@@4))) (= (type $generated@@789) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@790  (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165)) (=> ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165) (=> (and (and (and (= $generated@@781 (ite (< $generated@@780 0) 0 $generated@@780)) ($generated@@95 ($generated@@8 $generated@@781) $generated@@165 $generated@@782)) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) (= $generated@@783 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))))) (and (and ($generated@@95 $generated@@783 $generated@@155 $generated@@782) ($generated@@170 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) ($generated@@170 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@170 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (or ($generated@@169 ($generated@@80 $generated@@515) ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (=> ($generated@@313 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (let (($generated@@791 ($generated@@341 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@515)) (ite (< $generated@@780 0) 0 $generated@@780)))))
($generated@@169 ($generated@@80 ($generated@@80 $generated@@515)) $generated@@791)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@170 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (or ($generated@@169 ($generated@@80 $generated@@515) ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (=> (not ($generated@@313 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))) ($generated@@0 ($generated@@296 ($generated@@11 true)))))))))))))
(let (($generated@@792  (=> (and (<= 0 $generated@@780) (= (ControlFlow 0 6) 2)) $generated@@790)))
(let (($generated@@793  (=> (and (< $generated@@780 0) (= (ControlFlow 0 5) 2)) $generated@@790)))
(let (($generated@@794  (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165)) (=> ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165) (=> (= $generated@@784 (ite (< $generated@@780 0) 0 $generated@@780)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@784) $generated@@165 $generated@@785) ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780))) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) (= $generated@@786 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))))) (=> (and (and (and (and ($generated@@274 $generated@@782) ($generated@@787 $generated@@782)) ($generated@@170 $generated@@786)) (and (and ($generated@@170 $generated@@786) (and ($generated@@169 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@795 ($generated@@341 $generated@@786)))
($generated@@169 ($generated@@80 $generated@@515) $generated@@795)) true))) ($generated@@174 $generated@@786))) (and (and (and ($generated@@174 $generated@@786) (and ($generated@@173 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@796 ($generated@@341 $generated@@786)))
($generated@@173 ($generated@@80 $generated@@515) $generated@@796)) true))) ($generated@@177 $generated@@786)) (and (and ($generated@@177 $generated@@786) (and ($generated@@153 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@797 ($generated@@341 $generated@@786)))
($generated@@153 ($generated@@80 $generated@@515) $generated@@797)) true))) (= $generated@@785 $generated@@782)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@793) (=> (= (ControlFlow 0 7) 6) $generated@@792)))))))))
(let (($generated@@798  (=> (and (<= 0 $generated@@780) (= (ControlFlow 0 10) 7)) $generated@@794)))
(let (($generated@@799  (=> (and (< $generated@@780 0) (= (ControlFlow 0 9) 7)) $generated@@794)))
(let (($generated@@800  (=> (= $generated@@788 ($generated@@211 $generated@@789 $generated@@785 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@799) (=> (= (ControlFlow 0 11) 10) $generated@@798)))))
(let (($generated@@801  (=> (and (and ($generated@@274 $generated@@785) ($generated@@787 $generated@@785)) (and (= 3 $generated@@78) (= (ControlFlow 0 12) 11))) $generated@@800)))
$generated@@801)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U Int T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@181 (Int) T@U)
(declare-fun $generated@@182 (T@U) Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@276 (Int T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Bool)
(declare-fun $generated@@306 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U) Bool)
(declare-fun $generated@@416 (T@T T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@498 (T@U T@U) T@U)
(declare-fun $generated@@506 (T@U T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 () T@U)
(declare-fun $generated@@539 (T@T) T@U)
(declare-fun $generated@@563 () T@T)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@615 (T@U Int) T@U)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@686 (T@U) T@U)
(declare-fun $generated@@766 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@81) (= (type $generated@@158) $generated@@86)) (and ($generated@@154 $generated@@158 $generated@@155) ($generated@@153 ($generated@@80 $generated@@157) $generated@@158))) (forall (($generated@@159 Int) ) (!  (=> (<= ($generated@@83 0) $generated@@159) ($generated@@156 ($generated@@80 $generated@@157) $generated@@159 $generated@@158))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@157) $generated@@159 $generated@@158))
)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@157) $generated@@158))
))))
(assert (= ($generated@@1 $generated@@161) 16))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@161) (= (type $generated@@163) $generated@@161)) (= (type $generated@@164) $generated@@161)) (and ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@163 $generated@@164))) ($generated@@160 $generated@@162 $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@163 $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@162 $generated@@164))
)))
(assert (= (type $generated@@165) $generated@@70))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@154 $generated@@168 ($generated@@96 0)))
 :pattern ( ($generated@@154 $generated@@168 ($generated@@96 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@86)) (or ($generated@@170 $generated@@172) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@172 $generated@@155)))) true)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@81) (= (type $generated@@176) $generated@@86)) (or ($generated@@174 $generated@@176) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@176 $generated@@155)))) true)
 :pattern ( ($generated@@173 $generated@@175 $generated@@176))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@81) (= (type $generated@@179) $generated@@86)) (or ($generated@@177 $generated@@179) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@179 $generated@@155)))) true)
 :pattern ( ($generated@@153 $generated@@178 $generated@@179))
))))
(assert  (and (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@180 $generated@@183 $generated@@184)) $generated@@161)
 :pattern ( ($generated@@180 $generated@@183 $generated@@184))
)) (forall (($generated@@185 Int) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@161)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ($generated@@188 Int) ) (!  (=> (= (type $generated@@186) $generated@@161) (=> (and (and (<= 0 $generated@@187) (<= 0 $generated@@188)) (<= (+ $generated@@187 $generated@@188) ($generated@@182 $generated@@186))) (= ($generated@@180 ($generated@@180 $generated@@186 ($generated@@181 $generated@@187)) ($generated@@181 $generated@@188)) ($generated@@180 $generated@@186 ($generated@@181 (+ $generated@@187 $generated@@188))))))
 :pattern ( ($generated@@180 ($generated@@180 $generated@@186 ($generated@@181 $generated@@187)) ($generated@@181 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@191 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@193) $generated@@70) (= (type $generated@@194) $generated@@70)) (= (type $generated@@195) $generated@@86)) ($generated@@154 $generated@@195 ($generated@@190 $generated@@193 $generated@@194))) ($generated@@189 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195) ($generated@@154 $generated@@195 ($generated@@190 $generated@@193 $generated@@194)))
)))
(assert  (and (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@161)
 :pattern ( ($generated@@197 $generated@@199))
)) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@161)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (= (type $generated@@201) $generated@@86) (= (type $generated@@202) $generated@@86)) true) (= ($generated@@196 $generated@@201 $generated@@202)  (and (= ($generated@@197 $generated@@201) ($generated@@197 $generated@@202)) (= ($generated@@198 $generated@@201) ($generated@@198 $generated@@202)))))
 :pattern ( ($generated@@196 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@203 $generated@@204)) $generated@@74)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (= ($generated@@203 $generated@@84) $generated@@66))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@209) $generated@@70)) ($generated@@154 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@154 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@98 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@73 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@98) (= (type $generated@@260) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@261) ($generated@@72 $generated@@4))) (= (type $generated@@263) $generated@@98)) (= (type $generated@@264) ($generated@@72 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@86)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= ($generated@@154 ($generated@@266 $generated@@272 $generated@@273) ($generated@@190 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@154 ($generated@@266 $generated@@272 $generated@@273) ($generated@@190 $generated@@270 $generated@@271)))
)))
(assert ($generated@@154 $generated@@84 $generated@@155))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@274 $generated@@275)) ($generated@@95 $generated@@84 $generated@@155 $generated@@275))
 :pattern ( ($generated@@95 $generated@@84 $generated@@155 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@277 T@U) ($generated@@278 Int) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@81) (= (type $generated@@279) $generated@@86)) (or ($generated@@276 $generated@@278 $generated@@279) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@278) ($generated@@154 $generated@@279 $generated@@155))))) true)
 :pattern ( ($generated@@156 $generated@@277 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (= ($generated@@196 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@196 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@86) (= (type $generated@@284) $generated@@86)) (= ($generated@@282 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@288) $generated@@70)) (= ($generated@@154 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@161) ($generated@@0 ($generated@@102 $generated@@287 $generated@@289))) ($generated@@267 $generated@@289 $generated@@288))
 :pattern ( ($generated@@102 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@154 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@70)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@293) $generated@@70)) (= ($generated@@154 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@161) ($generated@@0 ($generated@@102 $generated@@292 $generated@@294))) ($generated@@267 $generated@@294 $generated@@293))
 :pattern ( ($generated@@102 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@154 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@295 Int) ) (! (= ($generated@@83 $generated@@295) $generated@@295)
 :pattern ( ($generated@@83 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
(= (type ($generated@@296 $generated@@297)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@296 $generated@@299) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Int) ) (!  (=> (and (and (= (type $generated@@300) $generated@@81) (= (type $generated@@301) $generated@@86)) (and ($generated@@154 $generated@@301 $generated@@155) (= $generated@@302 0))) ($generated@@156 $generated@@300 $generated@@302 $generated@@301))
 :pattern ( ($generated@@156 $generated@@300 $generated@@302 $generated@@301))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@86) (= (type $generated@@305) $generated@@86)) (and ($generated@@303 $generated@@304) ($generated@@303 $generated@@305))) (= ($generated@@282 $generated@@304 $generated@@305) true))
 :pattern ( ($generated@@282 $generated@@304 $generated@@305) ($generated@@303 $generated@@304))
 :pattern ( ($generated@@282 $generated@@304 $generated@@305) ($generated@@303 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@70) (= (type $generated@@308) $generated@@70)) (= (type $generated@@309) $generated@@161)) (= (type $generated@@310) $generated@@161)) (= (type $generated@@311) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@274 $generated@@311)) (= ($generated@@95 ($generated@@266 $generated@@309 $generated@@310) ($generated@@190 $generated@@307 $generated@@308) $generated@@311)  (and ($generated@@306 $generated@@309 $generated@@307 $generated@@311) ($generated@@306 $generated@@310 $generated@@308 $generated@@311))))
 :pattern ( ($generated@@95 ($generated@@266 $generated@@309 $generated@@310) ($generated@@190 $generated@@307 $generated@@308) $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@86) (= ($generated@@189 $generated@@312) (= ($generated@@203 $generated@@312) $generated@@62)))
 :pattern ( ($generated@@189 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@86) (= ($generated@@313 $generated@@314) (= ($generated@@203 $generated@@314) $generated@@64)))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@86) (= ($generated@@303 $generated@@315) (= ($generated@@203 $generated@@315) $generated@@66)))
 :pattern ( ($generated@@303 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@316 T@U) ($generated@@317 Int) ) (!  (=> (and (= (type $generated@@316) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@317)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@317)))) (and (=> (not (= ($generated@@83 $generated@@317) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@317 1)))) (= ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 $generated@@317)) (ite (= ($generated@@83 $generated@@317) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@296 ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 (- $generated@@317 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 $generated@@317)))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) $generated@@81) (= (type $generated@@320) $generated@@86)) (= (type $generated@@321) $generated@@161)) (and ($generated@@154 $generated@@320 $generated@@155) (= $generated@@321 ($generated@@181 0)))) ($generated@@318 $generated@@319 $generated@@321 $generated@@320))
 :pattern ( ($generated@@318 $generated@@319 $generated@@321 $generated@@320))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@81) (= (type $generated@@323) $generated@@86)) (and ($generated@@154 $generated@@323 $generated@@155) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@161) ($generated@@318 ($generated@@80 $generated@@322) $generated@@324 $generated@@323))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@322) $generated@@324 $generated@@323))
)))) ($generated@@173 ($generated@@80 $generated@@322) $generated@@323))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@322) $generated@@323))
))))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@86) ($generated@@189 $generated@@325)) (exists (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@161) (= (type $generated@@327) $generated@@161)) (= $generated@@325 ($generated@@266 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@189 $generated@@325))
)))
(assert  (and (and (forall (($generated@@332 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@332)) 18)) (forall (($generated@@333 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
))) (forall (($generated@@334 T@T) ) (! (= (type ($generated@@328 $generated@@334)) ($generated@@330 $generated@@334))
 :pattern ( ($generated@@328 $generated@@334))
))))
(assert (forall (($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@335)) 0)
 :pattern ( ($generated@@328 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@86) ($generated@@303 $generated@@336)) (= $generated@@336 $generated@@84))
 :pattern ( ($generated@@303 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@86) ($generated@@313 $generated@@337)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@86) (= $generated@@337 ($generated@@85 $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@313 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@2) (= ($generated@@154 $generated@@339 $generated@@165) (<= ($generated@@83 0) ($generated $generated@@339))))
 :pattern ( ($generated@@154 $generated@@339 $generated@@165))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@86)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) $generated@@81) (= (type $generated@@344) $generated@@161)) (= (type $generated@@345) $generated@@86)) (or ($generated@@340 ($generated@@296 $generated@@344) $generated@@345) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@345 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@344)) (=> ($generated@@313 $generated@@345) (let (($generated@@346 ($generated@@341 $generated@@345)))
($generated@@340 ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@346)))) (=> (=> (< 0 ($generated@@182 $generated@@344)) (ite ($generated@@313 $generated@@345) (let (($generated@@347 ($generated@@341 $generated@@345)))
($generated@@318 ($generated@@80 $generated@@343) ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@347)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@344)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@161) ($generated@@160 $generated@@348 $generated@@344)) ($generated@@340 $generated@@348 $generated@@345))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) $generated@@348 $generated@@345))
))))) (= ($generated@@318 ($generated@@80 $generated@@343) ($generated@@296 $generated@@344) $generated@@345)  (and (=> (< 0 ($generated@@182 $generated@@344)) (ite ($generated@@313 $generated@@345) (let (($generated@@349 ($generated@@341 $generated@@345)))
($generated@@318 ($generated@@80 $generated@@343) ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@349)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@344)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@161) ($generated@@160 $generated@@350 $generated@@344)) ($generated@@318 ($generated@@80 $generated@@343) $generated@@350 $generated@@345))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) $generated@@350 $generated@@345))
)))))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) ($generated@@296 $generated@@344) $generated@@345))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@81) (= (type $generated@@352) $generated@@161)) (= (type $generated@@353) $generated@@86)) (= ($generated@@318 ($generated@@80 $generated@@351) $generated@@352 $generated@@353) ($generated@@318 $generated@@351 $generated@@352 $generated@@353)))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@351) $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 Int) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@81) (= (type $generated@@356) $generated@@86)) (= ($generated@@156 ($generated@@80 $generated@@354) $generated@@355 $generated@@356) ($generated@@156 $generated@@354 $generated@@355 $generated@@356)))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@354) $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@161)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@70) (= (type $generated@@361) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@306 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@95 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@306 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (and (= (type $generated@@362) $generated@@81) (or ($generated@@82 $generated@@363) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@363)))) ($generated@@154 ($generated@@79 $generated@@362 $generated@@363) $generated@@155))
 :pattern ( ($generated@@79 $generated@@362 $generated@@363))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@81) (= (type $generated@@365) $generated@@86)) (and ($generated@@154 $generated@@365 $generated@@155) ($generated@@173 ($generated@@80 $generated@@364) $generated@@365))) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@161) ($generated@@318 ($generated@@80 $generated@@364) $generated@@366 $generated@@365))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@364) $generated@@366 $generated@@365))
)))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@364) $generated@@365))
))))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@97 $generated@@369 $generated@@2))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@100 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@97 $generated@@371 $generated@@2)) (and (= (= ($generated@@367 $generated@@370) 0) (= $generated@@370 ($generated@@368 $generated@@371))) (=> (not (= ($generated@@367 $generated@@370) 0)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (< 0 ($generated ($generated@@102 $generated@@370 $generated@@372))))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 19)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@97 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@102 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@102 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 20)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@97 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@102 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@102 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@161) (= (type $generated@@411) $generated@@161)) (and ($generated@@409 $generated@@411) (<= ($generated@@182 $generated@@411) ($generated@@182 $generated@@410)))) (and (= ($generated@@409 ($generated@@180 $generated@@410 $generated@@411)) ($generated@@409 $generated@@410)) (= ($generated@@182 ($generated@@180 $generated@@410 $generated@@411)) (- ($generated@@182 $generated@@410) ($generated@@182 $generated@@411)))))
 :pattern ( ($generated@@180 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 Int) ) (!  (=> (<= 0 $generated@@412) (and ($generated@@409 ($generated@@181 $generated@@412)) (= ($generated@@182 ($generated@@181 $generated@@412)) $generated@@412)))
 :pattern ( ($generated@@181 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@100 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@97 $generated@@414 $generated@@2)) (= ($generated@@206 $generated@@413) (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@414) (and (<= 0 ($generated ($generated@@102 $generated@@413 $generated@@415))) (<= ($generated ($generated@@102 $generated@@413 $generated@@415)) ($generated@@367 $generated@@413))))
 :pattern ( ($generated@@102 $generated@@413 $generated@@415))
)))))
 :pattern ( ($generated@@206 $generated@@413))
)))
(assert (forall (($generated@@417 T@T) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@161) ($generated@@267 $generated@@419 $generated@@165)) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@419)) $generated@@419) ($generated@@154 ($generated@@416 $generated@@2 $generated@@419) $generated@@165)))
 :pattern ( ($generated@@267 $generated@@419 $generated@@165))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@161) ($generated@@267 $generated@@420 $generated@@155)) (and (= ($generated@@357 ($generated@@416 $generated@@86 $generated@@420)) $generated@@420) ($generated@@154 ($generated@@416 $generated@@86 $generated@@420) $generated@@155)))
 :pattern ( ($generated@@267 $generated@@420 $generated@@155))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@81) (= (type $generated@@422) $generated@@161)) (= (type $generated@@423) $generated@@86)) (or ($generated@@340 $generated@@422 $generated@@423) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@423 $generated@@155)))) true)
 :pattern ( ($generated@@318 $generated@@421 $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@86) (= ($generated@@154 ($generated@@85 $generated@@424) $generated@@155) ($generated@@154 $generated@@424 $generated@@155)))
 :pattern ( ($generated@@154 ($generated@@85 $generated@@424) $generated@@155))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@86) (= (type $generated@@426) $generated@@86)) (and ($generated@@313 $generated@@425) ($generated@@313 $generated@@426))) (= ($generated@@282 $generated@@425 $generated@@426) ($generated@@282 ($generated@@341 $generated@@425) ($generated@@341 $generated@@426))))
 :pattern ( ($generated@@282 $generated@@425 $generated@@426) ($generated@@313 $generated@@425))
 :pattern ( ($generated@@282 $generated@@425 $generated@@426) ($generated@@313 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@377 (type $generated@@427))))
(let (($generated@@429 ($generated@@376 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@375 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@374 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@377 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@97 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@377 (type $generated@@434))))
(let (($generated@@436 ($generated@@376 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@375 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@374 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@102 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@395 (type $generated@@438))))
(let (($generated@@440 ($generated@@394 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@393 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@392 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@391 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@395 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@97 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@395 (type $generated@@445))))
(let (($generated@@447 ($generated@@394 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@393 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@392 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@102 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) $generated@@81) (= (type $generated@@450) $generated@@161)) (= (type $generated@@451) $generated@@86)) (or ($generated@@340 ($generated@@296 $generated@@450) ($generated@@296 $generated@@451)) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@451 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@450)) (=> ($generated@@313 $generated@@451) (let (($generated@@452 ($generated@@341 $generated@@451)))
($generated@@340 ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@452)))) (=> (=> (< 0 ($generated@@182 $generated@@450)) (ite ($generated@@313 $generated@@451) (let (($generated@@453 ($generated@@341 $generated@@451)))
($generated@@318 ($generated@@80 $generated@@449) ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@453)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@450)) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@161) ($generated@@160 $generated@@454 $generated@@450)) ($generated@@340 $generated@@454 $generated@@451))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) $generated@@454 $generated@@451))
))))) (= ($generated@@318 ($generated@@80 $generated@@449) ($generated@@296 $generated@@450) ($generated@@296 $generated@@451))  (and (=> (< 0 ($generated@@182 $generated@@450)) (ite ($generated@@313 $generated@@451) (let (($generated@@455 ($generated@@341 $generated@@451)))
($generated@@318 ($generated@@80 $generated@@449) ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@455)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@450)) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@161) ($generated@@160 $generated@@456 $generated@@450)) ($generated@@318 ($generated@@80 $generated@@449) $generated@@456 $generated@@451))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) $generated@@456 $generated@@451))
)))))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) ($generated@@296 $generated@@450) ($generated@@296 $generated@@451)))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@458) $generated@@70)) (= ($generated@@154 $generated@@457 ($generated@@205 $generated@@458)) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@161) (< 0 ($generated ($generated@@102 $generated@@457 $generated@@459)))) ($generated@@267 $generated@@459 $generated@@458))
 :pattern ( ($generated@@102 $generated@@457 $generated@@459))
))))
 :pattern ( ($generated@@154 $generated@@457 ($generated@@205 $generated@@458)))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@161) (= (type $generated@@461) $generated@@161)) (or (or ($generated@@160 $generated@@460 $generated@@461) (= $generated@@460 $generated@@461)) ($generated@@160 $generated@@461 $generated@@460)))
 :pattern ( ($generated@@160 $generated@@460 $generated@@461) ($generated@@160 $generated@@461 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@462 ($generated@@285 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@161) ($generated@@0 ($generated@@102 $generated@@462 $generated@@465))) ($generated@@306 $generated@@465 $generated@@463 $generated@@464))
 :pattern ( ($generated@@102 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@95 $generated@@462 ($generated@@285 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@466 ($generated@@290 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@161) ($generated@@0 ($generated@@102 $generated@@466 $generated@@469))) ($generated@@306 $generated@@469 $generated@@467 $generated@@468))
 :pattern ( ($generated@@102 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@95 $generated@@466 ($generated@@290 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(= ($generated ($generated@@102 ($generated@@368 $generated@@471) $generated@@470)) 0))
 :pattern ( (let (($generated@@471 (type $generated@@470)))
($generated@@102 ($generated@@368 $generated@@471) $generated@@470)))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) ($generated@@97 $generated@@161 $generated@@4))
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@377 (type $generated@@475))))
(let (($generated@@477 ($generated@@376 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475)) ($generated@@97 $generated@@477 $generated@@476))))
 :pattern ( ($generated@@473 $generated@@475))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@479) $generated@@161)) (= ($generated@@0 ($generated@@102 ($generated@@472 $generated@@478) $generated@@479))  (and ($generated@@0 ($generated@@102 ($generated@@373 $generated@@478) ($generated@@197 ($generated@@416 $generated@@86 $generated@@479)))) (= ($generated@@102 ($generated@@473 $generated@@478) ($generated@@197 ($generated@@416 $generated@@86 $generated@@479))) ($generated@@198 ($generated@@416 $generated@@86 $generated@@479))))))
 :pattern ( ($generated@@102 ($generated@@472 $generated@@478) $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) ($generated@@97 $generated@@161 $generated@@4))
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@395 (type $generated@@483))))
(let (($generated@@485 ($generated@@394 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483)) ($generated@@97 $generated@@485 $generated@@484))))
 :pattern ( ($generated@@481 $generated@@483))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@487) $generated@@161)) (= ($generated@@0 ($generated@@102 ($generated@@480 $generated@@486) $generated@@487))  (and ($generated@@0 ($generated@@102 ($generated@@391 $generated@@486) ($generated@@197 ($generated@@416 $generated@@86 $generated@@487)))) (= ($generated@@102 ($generated@@481 $generated@@486) ($generated@@197 ($generated@@416 $generated@@86 $generated@@487))) ($generated@@198 ($generated@@416 $generated@@86 $generated@@487))))))
 :pattern ( ($generated@@102 ($generated@@480 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(let (($generated@@491 ($generated@@376 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@375 $generated@@491 $generated@@490)) (= ($generated@@0 ($generated@@102 ($generated@@431 $generated@@488) $generated@@489)) (exists (($generated@@492 T@U) ) (!  (and (= (type $generated@@492) $generated@@491) (and ($generated@@0 ($generated@@102 ($generated@@373 $generated@@488) $generated@@492)) (= $generated@@489 ($generated@@102 ($generated@@473 $generated@@488) $generated@@492))))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@488) $generated@@492))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@488) $generated@@492))
))))))
 :pattern ( ($generated@@102 ($generated@@431 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(let (($generated@@496 ($generated@@394 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@393 $generated@@496 $generated@@495)) (= ($generated@@0 ($generated@@102 ($generated@@442 $generated@@493) $generated@@494)) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@496) (and ($generated@@0 ($generated@@102 ($generated@@391 $generated@@493) $generated@@497)) (= $generated@@494 ($generated@@102 ($generated@@481 $generated@@493) $generated@@497))))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@493) $generated@@497))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@493) $generated@@497))
))))))
 :pattern ( ($generated@@102 ($generated@@442 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@502) $generated@@70)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@501) $generated@@505))) (and ($generated@@306 ($generated@@102 ($generated@@473 $generated@@501) $generated@@505) $generated@@503 $generated@@504) ($generated@@306 $generated@@505 $generated@@502 $generated@@504)))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@501) $generated@@505))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@501) $generated@@505))
))))
 :pattern ( ($generated@@95 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@510) $generated@@70)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@509) $generated@@513))) (and ($generated@@306 ($generated@@102 ($generated@@481 $generated@@509) $generated@@513) $generated@@511 $generated@@512) ($generated@@306 $generated@@513 $generated@@510 $generated@@512)))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@509) $generated@@513))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@509) $generated@@513))
))))
 :pattern ( ($generated@@95 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@81)
 :pattern ( ($generated@@514 $generated@@516))
)) (= (type $generated@@515) $generated@@81)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@81) (= (type $generated@@518) $generated@@86)) (= ($generated@@169 $generated@@517 $generated@@518) ($generated@@169 $generated@@515 $generated@@518)))
 :pattern ( ($generated@@169 ($generated@@514 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@81) (= (type $generated@@520) $generated@@86)) (= ($generated@@173 $generated@@519 $generated@@520) ($generated@@173 $generated@@515 $generated@@520)))
 :pattern ( ($generated@@173 ($generated@@514 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@81) (= (type $generated@@522) $generated@@86)) (= ($generated@@153 $generated@@521 $generated@@522) ($generated@@153 $generated@@515 $generated@@522)))
 :pattern ( ($generated@@153 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@86) (= (type $generated@@524) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@274 $generated@@524)) (= ($generated@@95 ($generated@@85 $generated@@523) $generated@@155 $generated@@524) ($generated@@95 $generated@@523 $generated@@155 $generated@@524)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@523) $generated@@155 $generated@@524))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@81) (= (type $generated@@526) $generated@@161)) (= (type $generated@@527) $generated@@86)) (or ($generated@@340 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@527 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@526)) (=> ($generated@@313 $generated@@527) (let (($generated@@528 ($generated@@341 $generated@@527)))
($generated@@340 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@528)))) (=> (=> (< 0 ($generated@@182 $generated@@526)) (ite ($generated@@313 $generated@@527) (let (($generated@@529 ($generated@@341 $generated@@527)))
($generated@@318 $generated@@525 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@529)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@526)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@161) ($generated@@160 $generated@@530 $generated@@526)) ($generated@@340 $generated@@530 $generated@@527))
 :pattern ( ($generated@@318 $generated@@525 $generated@@530 $generated@@527))
))))) (= ($generated@@318 ($generated@@80 $generated@@525) $generated@@526 $generated@@527)  (and (=> (< 0 ($generated@@182 $generated@@526)) (ite ($generated@@313 $generated@@527) (let (($generated@@531 ($generated@@341 $generated@@527)))
($generated@@318 $generated@@525 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@531)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@526)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@160 $generated@@532 $generated@@526)) ($generated@@318 $generated@@525 $generated@@532 $generated@@527))
 :pattern ( ($generated@@318 $generated@@525 $generated@@532 $generated@@527))
)))))))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@525) $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@86) ($generated@@154 $generated@@533 $generated@@155)) (or ($generated@@313 $generated@@533) ($generated@@303 $generated@@533)))
 :pattern ( ($generated@@303 $generated@@533) ($generated@@154 $generated@@533 $generated@@155))
 :pattern ( ($generated@@313 $generated@@533) ($generated@@154 $generated@@533 $generated@@155))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@534 T@U) ($generated@@535 Int) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@81) (= (type $generated@@536) $generated@@86)) (or ($generated@@276 ($generated@@83 $generated@@535) $generated@@536) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@535) ($generated@@154 $generated@@536 $generated@@155))))) (and (=> (< 0 $generated@@535) (=> ($generated@@313 $generated@@536) (let (($generated@@537 ($generated@@341 $generated@@536)))
($generated@@276 (- $generated@@535 1) $generated@@537)))) (= ($generated@@156 ($generated@@80 $generated@@534) ($generated@@83 $generated@@535) $generated@@536)  (=> (< 0 $generated@@535) (ite ($generated@@313 $generated@@536) (let (($generated@@538 ($generated@@341 $generated@@536)))
($generated@@156 ($generated@@80 $generated@@534) (- $generated@@535 1) $generated@@538)) true)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@80 $generated@@534) ($generated@@83 $generated@@535) $generated@@536))
))))
(assert (forall (($generated@@540 T@T) ) (! (= (type ($generated@@539 $generated@@540)) ($generated@@97 $generated@@540 $generated@@4))
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@395 (type $generated@@541))))
(let (($generated@@543 ($generated@@394 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@393 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@392 $generated@@543 $generated@@542)) (= ($generated@@391 $generated@@541) ($generated@@539 $generated@@543))))))
 :pattern ( ($generated@@391 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@395 (type $generated@@544))))
(let (($generated@@546 ($generated@@394 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@393 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@392 $generated@@546 $generated@@545)) (= ($generated@@442 $generated@@544) ($generated@@539 $generated@@545))))))
 :pattern ( ($generated@@442 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@395 (type $generated@@547))))
(let (($generated@@549 ($generated@@394 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@393 $generated@@549 $generated@@548)) (= (= $generated@@547 ($generated@@392 $generated@@549 $generated@@548)) (= ($generated@@480 $generated@@547) ($generated@@539 $generated@@161))))))
 :pattern ( ($generated@@480 $generated@@547))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@377 (type $generated@@550))))
(let (($generated@@552 ($generated@@376 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@375 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@374 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@161) (= (type $generated@@554) $generated@@161)) ($generated@@0 ($generated@@102 ($generated@@472 $generated@@550) ($generated@@357 ($generated@@266 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@472 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@395 (type $generated@@555))))
(let (($generated@@557 ($generated@@394 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@393 $generated@@557 $generated@@556)) (or (= $generated@@555 ($generated@@392 $generated@@557 $generated@@556)) (exists (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@161)) ($generated@@0 ($generated@@102 ($generated@@480 $generated@@555) ($generated@@357 ($generated@@266 $generated@@558 $generated@@559)))))
 :no-pattern (type $generated@@558)
 :no-pattern (type $generated@@559)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
))))))
 :pattern ( ($generated@@480 $generated@@555))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@161) ($generated@@267 $generated@@560 $generated@@46)) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@560)) $generated@@560) ($generated@@154 ($generated@@416 $generated@@2 $generated@@560) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@560 $generated@@46))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@161) ($generated@@267 $generated@@561 $generated@@47)) (and (= ($generated@@357 ($generated@@416 $generated@@3 $generated@@561)) $generated@@561) ($generated@@154 ($generated@@416 $generated@@3 $generated@@561) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@561 $generated@@47))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@161) ($generated@@267 $generated@@562 $generated@@44)) (and (= ($generated@@357 ($generated@@416 $generated@@4 $generated@@562)) $generated@@562) ($generated@@154 ($generated@@416 $generated@@4 $generated@@562) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@562 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@563) 21))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@161) ($generated@@267 $generated@@564 $generated@@45)) (and (= ($generated@@357 ($generated@@416 $generated@@563 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@416 $generated@@563 $generated@@564) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@564 $generated@@45))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) (= (type $generated@@566) $generated@@86)) (= ($generated@@169 ($generated@@80 $generated@@565) $generated@@566) ($generated@@169 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@81) (= (type $generated@@568) $generated@@86)) (= ($generated@@173 ($generated@@80 $generated@@567) $generated@@568) ($generated@@173 $generated@@567 $generated@@568)))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) (= (type $generated@@570) $generated@@86)) (= ($generated@@153 ($generated@@80 $generated@@569) $generated@@570) ($generated@@153 $generated@@569 $generated@@570)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@267 ($generated@@357 $generated@@571) $generated@@572) ($generated@@154 $generated@@571 $generated@@572)))
 :pattern ( ($generated@@267 ($generated@@357 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (<= 0 ($generated@@182 $generated@@573)))
 :pattern ( ($generated@@182 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@100 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@97 $generated@@575 $generated@@2)) (<= 0 ($generated@@367 $generated@@574))))
 :pattern ( ($generated@@367 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@331 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@330 $generated@@577)) (<= 0 ($generated@@329 $generated@@576))))
 :pattern ( ($generated@@329 $generated@@576))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@70)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@70) (= (type $generated@@581) $generated@@70)) (= ($generated@@578 ($generated@@498 $generated@@580 $generated@@581)) $generated@@580))
 :pattern ( ($generated@@498 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@70)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@70) (= (type $generated@@585) $generated@@70)) (= ($generated@@582 ($generated@@498 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@498 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@70)) (= ($generated@@93 ($generated@@498 $generated@@586 $generated@@587)) $generated@@58))
 :pattern ( ($generated@@498 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@70)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@70) (= (type $generated@@591) $generated@@70)) (= ($generated@@588 ($generated@@506 $generated@@590 $generated@@591)) $generated@@590))
 :pattern ( ($generated@@506 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@70)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@70) (= (type $generated@@595) $generated@@70)) (= ($generated@@592 ($generated@@506 $generated@@594 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@506 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@70) (= (type $generated@@597) $generated@@70)) (= ($generated@@93 ($generated@@506 $generated@@596 $generated@@597)) $generated@@59))
 :pattern ( ($generated@@506 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@161) (= (type $generated@@599) $generated@@161)) (= ($generated@@203 ($generated@@266 $generated@@598 $generated@@599)) $generated@@62))
 :pattern ( ($generated@@266 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@70)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@70)) (= ($generated@@600 ($generated@@190 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@190 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@70)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= ($generated@@604 ($generated@@190 $generated@@606 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@190 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@161) (= (type $generated@@609) $generated@@161)) (= ($generated@@197 ($generated@@266 $generated@@608 $generated@@609)) $generated@@608))
 :pattern ( ($generated@@266 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@161) (= (type $generated@@611) $generated@@161)) (= ($generated@@198 ($generated@@266 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@266 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) $generated@@81) (= ($generated@@79 $generated@@612 $generated@@613) ($generated@@79 $generated@@515 $generated@@613)))
 :pattern ( ($generated@@79 ($generated@@514 $generated@@612) $generated@@613))
)))
(assert  (and (forall (($generated@@616 T@U) ) (! (= (type ($generated@@614 $generated@@616)) $generated@@70)
 :pattern ( ($generated@@614 $generated@@616))
)) (forall (($generated@@617 T@U) ($generated@@618 Int) ) (! (let (($generated@@619 ($generated@@331 (type $generated@@617))))
(= (type ($generated@@615 $generated@@617 $generated@@618)) $generated@@619))
 :pattern ( ($generated@@615 $generated@@617 $generated@@618))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@330 $generated@@161)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@620 ($generated@@614 $generated@@621) $generated@@622) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@329 $generated@@620))) ($generated@@306 ($generated@@615 $generated@@620 $generated@@623) $generated@@621 $generated@@622))
 :pattern ( ($generated@@615 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@95 $generated@@620 ($generated@@614 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@624 ($generated@@96 $generated@@625)) $generated@@625)
 :pattern ( ($generated@@96 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (! (= (type ($generated@@626 $generated@@627)) $generated@@70)
 :pattern ( ($generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@70) (= ($generated@@626 ($generated@@285 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@285 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@70) (= ($generated@@93 ($generated@@285 $generated@@629)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@70)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@70) (= ($generated@@630 ($generated@@290 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@290 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@70) (= ($generated@@93 ($generated@@290 $generated@@633)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@70)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@70) (= ($generated@@634 ($generated@@205 $generated@@636)) $generated@@636))
 :pattern ( ($generated@@205 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@70) (= ($generated@@93 ($generated@@205 $generated@@637)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (! (= (type ($generated@@638 $generated@@639)) $generated@@70)
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@70) (= ($generated@@638 ($generated@@614 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@614 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@70) (= ($generated@@93 ($generated@@614 $generated@@641)) $generated@@57))
 :pattern ( ($generated@@614 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@86) (= ($generated@@203 ($generated@@85 $generated@@642)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@86) (= ($generated@@341 ($generated@@85 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@85 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@644)))
(= ($generated@@416 $generated@@645 ($generated@@357 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@357 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@647) $generated@@70)) (= (type $generated@@648) $generated@@70)) (= ($generated@@154 $generated@@646 ($generated@@498 $generated@@647 $generated@@648)) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@646) $generated@@649))) (and ($generated@@267 ($generated@@102 ($generated@@473 $generated@@646) $generated@@649) $generated@@648) ($generated@@267 $generated@@649 $generated@@647)))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@646) $generated@@649))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@646) $generated@@649))
))))
 :pattern ( ($generated@@154 $generated@@646 ($generated@@498 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) (= ($generated@@154 $generated@@650 ($generated@@506 $generated@@651 $generated@@652)) (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@650) $generated@@653))) (and ($generated@@267 ($generated@@102 ($generated@@481 $generated@@650) $generated@@653) $generated@@652) ($generated@@267 $generated@@653 $generated@@651)))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@650) $generated@@653))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@650) $generated@@653))
))))
 :pattern ( ($generated@@154 $generated@@650 ($generated@@506 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@161) (= (type $generated@@655) $generated@@161)) (and (and (and (=> ($generated@@160 $generated@@654 $generated@@655) (not (= $generated@@654 $generated@@655))) (=> (and ($generated@@409 $generated@@654) (not ($generated@@409 $generated@@655))) ($generated@@160 $generated@@654 $generated@@655))) (=> (and ($generated@@409 $generated@@654) ($generated@@409 $generated@@655)) (= ($generated@@160 $generated@@654 $generated@@655) (< ($generated@@182 $generated@@654) ($generated@@182 $generated@@655))))) (=> (and ($generated@@160 $generated@@654 $generated@@655) ($generated@@409 $generated@@655)) ($generated@@409 $generated@@654))))
 :pattern ( ($generated@@160 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@161) (= (type $generated@@659) $generated@@161)) (< ($generated@@656 $generated@@658) ($generated@@657 ($generated@@266 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@266 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@161) (= (type $generated@@661) $generated@@161)) (< ($generated@@656 $generated@@661) ($generated@@657 ($generated@@266 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@266 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@662) $generated@@663) ($generated@@79 $generated@@662 $generated@@663)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@662) $generated@@663))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@664 T@U) ($generated@@665 Int) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@81) (= (type $generated@@666) $generated@@86)) (or ($generated@@276 ($generated@@83 $generated@@665) ($generated@@296 $generated@@666)) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@665) ($generated@@154 $generated@@666 $generated@@155))))) (and (=> (< 0 $generated@@665) (=> ($generated@@313 $generated@@666) (let (($generated@@667 ($generated@@341 $generated@@666)))
($generated@@276 (- $generated@@665 1) $generated@@667)))) (= ($generated@@156 ($generated@@80 $generated@@664) ($generated@@83 $generated@@665) ($generated@@296 $generated@@666))  (=> (< 0 $generated@@665) (ite ($generated@@313 $generated@@666) (let (($generated@@668 ($generated@@341 $generated@@666)))
($generated@@156 ($generated@@80 $generated@@664) (- $generated@@665 1) $generated@@668)) true)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@80 $generated@@664) ($generated@@83 $generated@@665) ($generated@@296 $generated@@666)))
))))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@161) (= (type $generated@@670) $generated@@70)) (= (type $generated@@671) $generated@@70)) ($generated@@267 $generated@@669 ($generated@@498 $generated@@670 $generated@@671))) (and (= ($generated@@357 ($generated@@416 ($generated@@375 $generated@@161 $generated@@161) $generated@@669)) $generated@@669) ($generated@@154 ($generated@@416 ($generated@@375 $generated@@161 $generated@@161) $generated@@669) ($generated@@498 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@267 $generated@@669 ($generated@@498 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@161) (= (type $generated@@673) $generated@@70)) (= (type $generated@@674) $generated@@70)) ($generated@@267 $generated@@672 ($generated@@506 $generated@@673 $generated@@674))) (and (= ($generated@@357 ($generated@@416 ($generated@@393 $generated@@161 $generated@@161) $generated@@672)) $generated@@672) ($generated@@154 ($generated@@416 ($generated@@393 $generated@@161 $generated@@161) $generated@@672) ($generated@@506 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@267 $generated@@672 ($generated@@506 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@70) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) $generated@@161)) ($generated@@267 $generated@@677 ($generated@@190 $generated@@675 $generated@@676))) (and (= ($generated@@357 ($generated@@416 $generated@@86 $generated@@677)) $generated@@677) ($generated@@154 ($generated@@416 $generated@@86 $generated@@677) ($generated@@190 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@267 $generated@@677 ($generated@@190 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@86) (< ($generated@@657 $generated@@678) ($generated@@657 ($generated@@85 $generated@@678))))
 :pattern ( ($generated@@85 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@679)))
 (not ($generated@@0 ($generated@@102 ($generated@@539 $generated@@680) $generated@@679))))
 :pattern ( (let (($generated@@680 (type $generated@@679)))
($generated@@102 ($generated@@539 $generated@@680) $generated@@679)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@681 T@U) ($generated@@682 Int) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@81) (= (type $generated@@683) $generated@@86)) (or ($generated@@276 $generated@@682 $generated@@683) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@682) ($generated@@154 $generated@@683 $generated@@155))))) (and (=> (< 0 $generated@@682) (=> ($generated@@313 $generated@@683) (let (($generated@@684 ($generated@@341 $generated@@683)))
($generated@@276 (- $generated@@682 1) $generated@@684)))) (= ($generated@@156 ($generated@@80 $generated@@681) $generated@@682 $generated@@683)  (=> (< 0 $generated@@682) (ite ($generated@@313 $generated@@683) (let (($generated@@685 ($generated@@341 $generated@@683)))
($generated@@156 $generated@@681 (- $generated@@682 1) $generated@@685)) true)))))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@681) $generated@@682 $generated@@683))
))))
(assert (forall (($generated@@687 T@U) ) (! (= (type ($generated@@686 $generated@@687)) $generated@@75)
 :pattern ( ($generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@70) (= (type $generated@@689) $generated@@70)) (and (= ($generated@@93 ($generated@@190 $generated@@688 $generated@@689)) $generated@@63) (= ($generated@@686 ($generated@@190 $generated@@688 $generated@@689)) $generated@@68)))
 :pattern ( ($generated@@190 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@86) (= ($generated@@656 ($generated@@357 $generated@@690)) ($generated@@657 $generated@@690)))
 :pattern ( ($generated@@656 ($generated@@357 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@161) ($generated@@267 $generated@@691 ($generated@@96 0))) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@691)) $generated@@691) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@691) ($generated@@96 0))))
 :pattern ( ($generated@@267 $generated@@691 ($generated@@96 0)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@161) (= (type $generated@@693) $generated@@70)) ($generated@@267 $generated@@692 ($generated@@285 $generated@@693))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@692)) $generated@@692) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@692) ($generated@@285 $generated@@693))))
 :pattern ( ($generated@@267 $generated@@692 ($generated@@285 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@161) (= (type $generated@@695) $generated@@70)) ($generated@@267 $generated@@694 ($generated@@290 $generated@@695))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@694)) $generated@@694) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@694) ($generated@@290 $generated@@695))))
 :pattern ( ($generated@@267 $generated@@694 ($generated@@290 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@161) (= (type $generated@@697) $generated@@70)) ($generated@@267 $generated@@696 ($generated@@205 $generated@@697))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@2) $generated@@696)) $generated@@696) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@2) $generated@@696) ($generated@@205 $generated@@697))))
 :pattern ( ($generated@@267 $generated@@696 ($generated@@205 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@161) (= (type $generated@@699) $generated@@70)) ($generated@@267 $generated@@698 ($generated@@614 $generated@@699))) (and (= ($generated@@357 ($generated@@416 ($generated@@330 $generated@@161) $generated@@698)) $generated@@698) ($generated@@154 ($generated@@416 ($generated@@330 $generated@@161) $generated@@698) ($generated@@614 $generated@@699))))
 :pattern ( ($generated@@267 $generated@@698 ($generated@@614 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@161) ($generated@@409 $generated@@700)) (= $generated@@700 ($generated@@181 ($generated@@182 $generated@@700))))
 :pattern ( ($generated@@182 $generated@@700))
 :pattern ( ($generated@@409 $generated@@700))
)))
(assert (= ($generated@@93 $generated@@165) $generated@@61))
(assert (= ($generated@@686 $generated@@165) $generated@@67))
(assert (= ($generated@@93 $generated@@155) $generated@@65))
(assert (= ($generated@@686 $generated@@155) $generated@@69))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@701) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@702) $generated@@70)) (= (type $generated@@703) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@701 ($generated@@205 $generated@@702) $generated@@703) (forall (($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@704) $generated@@161) (< 0 ($generated ($generated@@102 $generated@@701 $generated@@704)))) ($generated@@306 $generated@@704 $generated@@702 $generated@@703))
 :pattern ( ($generated@@102 $generated@@701 $generated@@704))
))))
 :pattern ( ($generated@@95 $generated@@701 ($generated@@205 $generated@@702) $generated@@703))
)))
(assert (= $generated@@84 ($generated@@296 $generated@@84)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) $generated@@161) (= (type $generated@@706) $generated@@161)) (and ($generated@@409 $generated@@706) (<= ($generated@@182 $generated@@706) ($generated@@182 $generated@@705)))) (or (and (= $generated@@706 ($generated@@181 0)) (= ($generated@@180 $generated@@705 $generated@@706) $generated@@705)) (and (not (= $generated@@706 ($generated@@181 0))) ($generated@@160 ($generated@@180 $generated@@705 $generated@@706) $generated@@705))))
 :pattern ( ($generated@@180 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) $generated@@86) (= (type $generated@@708) $generated@@70)) (= (type $generated@@709) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@709) (and ($generated@@189 $generated@@707) (exists (($generated@@710 T@U) ) (!  (and (= (type $generated@@710) $generated@@70) ($generated@@95 $generated@@707 ($generated@@190 $generated@@708 $generated@@710) $generated@@709))
 :pattern ( ($generated@@95 $generated@@707 ($generated@@190 $generated@@708 $generated@@710) $generated@@709))
))))) ($generated@@306 ($generated@@197 $generated@@707) $generated@@708 $generated@@709))
 :pattern ( ($generated@@306 ($generated@@197 $generated@@707) $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) $generated@@86) (= (type $generated@@712) $generated@@70)) (= (type $generated@@713) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@713) (and ($generated@@189 $generated@@711) (exists (($generated@@714 T@U) ) (!  (and (= (type $generated@@714) $generated@@70) ($generated@@95 $generated@@711 ($generated@@190 $generated@@714 $generated@@712) $generated@@713))
 :pattern ( ($generated@@95 $generated@@711 ($generated@@190 $generated@@714 $generated@@712) $generated@@713))
))))) ($generated@@306 ($generated@@198 $generated@@711) $generated@@712 $generated@@713))
 :pattern ( ($generated@@306 ($generated@@198 $generated@@711) $generated@@712 $generated@@713))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@81) (= (type $generated@@716) $generated@@86)) (or ($generated@@170 ($generated@@296 $generated@@716)) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@716 $generated@@155)))) (and (=> ($generated@@0 ($generated@@296 ($generated@@11 ($generated@@313 ($generated@@296 $generated@@716))))) (let (($generated@@717 ($generated@@296 ($generated@@341 ($generated@@296 $generated@@716)))))
($generated@@170 $generated@@717))) (= ($generated@@169 ($generated@@80 $generated@@715) ($generated@@296 $generated@@716)) (ite ($generated@@313 ($generated@@296 $generated@@716)) ($generated@@0 (let (($generated@@718 ($generated@@296 ($generated@@341 ($generated@@296 $generated@@716)))))
($generated@@296 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@715) $generated@@718))))) true))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@80 $generated@@715) ($generated@@296 $generated@@716)))
))))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@86) (= (type $generated@@720) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@720) (and ($generated@@313 $generated@@719) ($generated@@95 $generated@@719 $generated@@155 $generated@@720)))) ($generated@@95 ($generated@@341 $generated@@719) $generated@@155 $generated@@720))
 :pattern ( ($generated@@95 ($generated@@341 $generated@@719) $generated@@155 $generated@@720))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@81) (= (type $generated@@722) $generated@@86)) (or ($generated@@170 $generated@@722) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@722 $generated@@155)))) (and (=> ($generated@@313 $generated@@722) (let (($generated@@723 ($generated@@341 $generated@@722)))
($generated@@170 $generated@@723))) (= ($generated@@169 ($generated@@80 $generated@@721) $generated@@722) (ite ($generated@@313 $generated@@722) (let (($generated@@724 ($generated@@341 $generated@@722)))
($generated@@169 $generated@@721 $generated@@724)) true))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@721) $generated@@722))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@725) $generated@@81) (= (type $generated@@726) $generated@@86)) (or ($generated@@174 $generated@@726) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@726 $generated@@155)))) (and (=> ($generated@@313 $generated@@726) (let (($generated@@727 ($generated@@341 $generated@@726)))
($generated@@174 $generated@@727))) (= ($generated@@173 ($generated@@80 $generated@@725) $generated@@726) (ite ($generated@@313 $generated@@726) (let (($generated@@728 ($generated@@341 $generated@@726)))
($generated@@173 $generated@@725 $generated@@728)) true))))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@725) $generated@@726))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@81) (= (type $generated@@730) $generated@@86)) (or ($generated@@177 $generated@@730) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@730 $generated@@155)))) (and (=> ($generated@@313 $generated@@730) (let (($generated@@731 ($generated@@341 $generated@@730)))
($generated@@177 $generated@@731))) (= ($generated@@153 ($generated@@80 $generated@@729) $generated@@730) (ite ($generated@@313 $generated@@730) (let (($generated@@732 ($generated@@341 $generated@@730)))
($generated@@153 $generated@@729 $generated@@732)) true))))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@729) $generated@@730))
))))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@161) (= (type $generated@@734) $generated@@161)) (= ($generated@@266 ($generated@@296 $generated@@733) ($generated@@296 $generated@@734)) ($generated@@296 ($generated@@266 $generated@@733 $generated@@734))))
 :pattern ( ($generated@@266 ($generated@@296 $generated@@733) ($generated@@296 $generated@@734)))
)))
(assert (forall (($generated@@735 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@83 $generated@@735))) ($generated@@296 ($generated@@357 ($generated@@8 $generated@@735))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@83 $generated@@735))))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@86) (= ($generated@@85 ($generated@@296 $generated@@736)) ($generated@@296 ($generated@@85 $generated@@736))))
 :pattern ( ($generated@@85 ($generated@@296 $generated@@736)))
)))
(assert (forall (($generated@@737 T@U) ) (! (= ($generated@@357 ($generated@@296 $generated@@737)) ($generated@@296 ($generated@@357 $generated@@737)))
 :pattern ( ($generated@@357 ($generated@@296 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@331 (type $generated@@738))))
 (=> (and (= (type $generated@@738) ($generated@@330 $generated@@739)) (= ($generated@@329 $generated@@738) 0)) (= $generated@@738 ($generated@@328 $generated@@739))))
 :pattern ( ($generated@@329 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (! (let (($generated@@743 (type $generated@@741)))
 (=> (and (and (= (type $generated@@740) ($generated@@97 $generated@@743 $generated@@2)) (= (type $generated@@742) $generated@@2)) (<= 0 ($generated $generated@@742))) (= ($generated@@367 ($generated@@103 $generated@@740 $generated@@741 $generated@@742)) (+ (- ($generated@@367 $generated@@740) ($generated ($generated@@102 $generated@@740 $generated@@741))) ($generated $generated@@742)))))
 :pattern ( ($generated@@367 ($generated@@103 $generated@@740 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@745) $generated@@2)) ($generated@@95 $generated@@745 $generated@@46 $generated@@744))
 :pattern ( ($generated@@95 $generated@@745 $generated@@46 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@747) $generated@@3)) ($generated@@95 $generated@@747 $generated@@47 $generated@@746))
 :pattern ( ($generated@@95 $generated@@747 $generated@@47 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@749) $generated@@4)) ($generated@@95 $generated@@749 $generated@@44 $generated@@748))
 :pattern ( ($generated@@95 $generated@@749 $generated@@44 $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@751) $generated@@563)) ($generated@@95 $generated@@751 $generated@@45 $generated@@750))
 :pattern ( ($generated@@95 $generated@@751 $generated@@45 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@753) $generated@@161)) ($generated@@95 $generated@@753 $generated@@48 $generated@@752))
 :pattern ( ($generated@@95 $generated@@753 $generated@@48 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) ($generated@@330 $generated@@161)) (= (type $generated@@755) $generated@@70)) (= ($generated@@154 $generated@@754 ($generated@@614 $generated@@755)) (forall (($generated@@756 Int) ) (!  (=> (and (<= 0 $generated@@756) (< $generated@@756 ($generated@@329 $generated@@754))) ($generated@@267 ($generated@@615 $generated@@754 $generated@@756) $generated@@755))
 :pattern ( ($generated@@615 $generated@@754 $generated@@756))
))))
 :pattern ( ($generated@@154 $generated@@754 ($generated@@614 $generated@@755)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@757) $generated@@81) (= (type $generated@@758) $generated@@86)) (and ($generated@@154 $generated@@758 $generated@@155) (forall (($generated@@759 Int) ) (!  (=> (<= ($generated@@83 0) $generated@@759) ($generated@@156 ($generated@@80 $generated@@757) $generated@@759 $generated@@758))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@757) $generated@@759 $generated@@758))
)))) ($generated@@153 ($generated@@80 $generated@@757) $generated@@758))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@757) $generated@@758))
))))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) $generated@@81) (= (type $generated@@761) $generated@@161)) (= (type $generated@@762) $generated@@86)) (= ($generated@@318 $generated@@760 $generated@@761 $generated@@762) ($generated@@318 $generated@@515 $generated@@761 $generated@@762)))
 :pattern ( ($generated@@318 ($generated@@514 $generated@@760) $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 Int) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@81) (= (type $generated@@765) $generated@@86)) (= ($generated@@156 $generated@@763 $generated@@764 $generated@@765) ($generated@@156 $generated@@515 $generated@@764 $generated@@765)))
 :pattern ( ($generated@@156 ($generated@@514 $generated@@763) $generated@@764 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 Int) ) (!  (=> (= (type $generated@@767) ($generated@@330 $generated@@161)) (=> (and (<= 0 $generated@@768) (< $generated@@768 ($generated@@329 $generated@@767))) (< ($generated@@657 ($generated@@416 $generated@@86 ($generated@@615 $generated@@767 $generated@@768))) ($generated@@766 $generated@@767))))
 :pattern ( ($generated@@657 ($generated@@416 $generated@@86 ($generated@@615 $generated@@767 $generated@@768))))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (and (= (type $generated@@769) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@770) $generated@@70)) (= (type $generated@@771) $generated@@70)) ($generated@@154 $generated@@769 ($generated@@498 $generated@@770 $generated@@771))) (and (and ($generated@@154 ($generated@@373 $generated@@769) ($generated@@285 $generated@@770)) ($generated@@154 ($generated@@431 $generated@@769) ($generated@@285 $generated@@771))) ($generated@@154 ($generated@@472 $generated@@769) ($generated@@285 ($generated@@190 $generated@@770 $generated@@771)))))
 :pattern ( ($generated@@154 $generated@@769 ($generated@@498 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (and (= (type $generated@@772) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@773) $generated@@70)) (= (type $generated@@774) $generated@@70)) ($generated@@154 $generated@@772 ($generated@@506 $generated@@773 $generated@@774))) (and (and ($generated@@154 ($generated@@391 $generated@@772) ($generated@@290 $generated@@773)) ($generated@@154 ($generated@@442 $generated@@772) ($generated@@290 $generated@@774))) ($generated@@154 ($generated@@480 $generated@@772) ($generated@@290 ($generated@@190 $generated@@773 $generated@@774)))))
 :pattern ( ($generated@@154 $generated@@772 ($generated@@506 $generated@@773 $generated@@774)))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@2) ($generated@@154 $generated@@775 $generated@@46))
 :pattern ( ($generated@@154 $generated@@775 $generated@@46))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@3) ($generated@@154 $generated@@776 $generated@@47))
 :pattern ( ($generated@@154 $generated@@776 $generated@@47))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@4) ($generated@@154 $generated@@777 $generated@@44))
 :pattern ( ($generated@@154 $generated@@777 $generated@@44))
)))
(assert (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@563) ($generated@@154 $generated@@778 $generated@@45))
 :pattern ( ($generated@@154 $generated@@778 $generated@@45))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@161) ($generated@@154 $generated@@779 $generated@@48))
 :pattern ( ($generated@@154 $generated@@779 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () Int)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 (T@U) Bool)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@782) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@783) $generated@@86)) (= (type $generated@@785) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@786) $generated@@86)) (= (type $generated@@788) ($generated@@212 $generated@@98 $generated@@4))) (= (type $generated@@789) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@790  (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165)) (=> ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165) (=> (and (and (and (= $generated@@781 (ite (< $generated@@780 0) 0 $generated@@780)) ($generated@@95 ($generated@@8 $generated@@781) $generated@@165 $generated@@782)) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) (= $generated@@783 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))))) (and (and ($generated@@95 $generated@@783 $generated@@155 $generated@@782) ($generated@@174 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) ($generated@@174 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@174 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (or ($generated@@173 ($generated@@80 $generated@@515) ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (=> ($generated@@313 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (let (($generated@@791 ($generated@@341 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@515)) (ite (< $generated@@780 0) 0 $generated@@780)))))
($generated@@173 ($generated@@80 ($generated@@80 $generated@@515)) $generated@@791)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@174 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (or ($generated@@173 ($generated@@80 $generated@@515) ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (=> (not ($generated@@313 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))) ($generated@@0 ($generated@@296 ($generated@@11 true)))))))))))))
(let (($generated@@792  (=> (and (<= 0 $generated@@780) (= (ControlFlow 0 6) 2)) $generated@@790)))
(let (($generated@@793  (=> (and (< $generated@@780 0) (= (ControlFlow 0 5) 2)) $generated@@790)))
(let (($generated@@794  (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165)) (=> ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165) (=> (= $generated@@784 (ite (< $generated@@780 0) 0 $generated@@780)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@784) $generated@@165 $generated@@785) ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780))) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) (= $generated@@786 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))))) (=> (and (and (and (and ($generated@@274 $generated@@782) ($generated@@787 $generated@@782)) ($generated@@170 $generated@@786)) (and (and ($generated@@170 $generated@@786) (and ($generated@@169 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@795 ($generated@@341 $generated@@786)))
($generated@@169 ($generated@@80 $generated@@515) $generated@@795)) true))) ($generated@@174 $generated@@786))) (and (and (and ($generated@@174 $generated@@786) (and ($generated@@173 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@796 ($generated@@341 $generated@@786)))
($generated@@173 ($generated@@80 $generated@@515) $generated@@796)) true))) ($generated@@177 $generated@@786)) (and (and ($generated@@177 $generated@@786) (and ($generated@@153 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@797 ($generated@@341 $generated@@786)))
($generated@@153 ($generated@@80 $generated@@515) $generated@@797)) true))) (= $generated@@785 $generated@@782)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@793) (=> (= (ControlFlow 0 7) 6) $generated@@792)))))))))
(let (($generated@@798  (=> (and (<= 0 $generated@@780) (= (ControlFlow 0 10) 7)) $generated@@794)))
(let (($generated@@799  (=> (and (< $generated@@780 0) (= (ControlFlow 0 9) 7)) $generated@@794)))
(let (($generated@@800  (=> (= $generated@@788 ($generated@@211 $generated@@789 $generated@@785 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@799) (=> (= (ControlFlow 0 11) 10) $generated@@798)))))
(let (($generated@@801  (=> (and (and ($generated@@274 $generated@@785) ($generated@@787 $generated@@785)) (and (= 3 $generated@@78) (= (ControlFlow 0 12) 11))) $generated@@800)))
$generated@@801)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (Int) T@U)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@335 (T@U T@U T@U) Bool)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) Bool)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@510 (T@T) T@U)
(declare-fun $generated@@534 () T@T)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U Int) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@718 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= ($generated@@1 $generated@@154) 16))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@154) (= (type $generated@@156) $generated@@154)) (= (type $generated@@157) $generated@@154)) (and ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@156 $generated@@157))) ($generated@@153 $generated@@155 $generated@@157))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@156 $generated@@157))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@155 $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@96 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@96 0)))
)))
(assert  (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@166 $generated@@167)) $generated@@154)
 :pattern ( ($generated@@163 $generated@@166 $generated@@167))
)) (forall (($generated@@168 Int) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@154)
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 Int) ) (!  (=> (= (type $generated@@169) $generated@@154) (=> (and (and (<= 0 $generated@@170) (<= 0 $generated@@171)) (<= (+ $generated@@170 $generated@@171) ($generated@@165 $generated@@169))) (= ($generated@@163 ($generated@@163 $generated@@169 ($generated@@164 $generated@@170)) ($generated@@164 $generated@@171)) ($generated@@163 $generated@@169 ($generated@@164 (+ $generated@@170 $generated@@171))))))
 :pattern ( ($generated@@163 ($generated@@163 $generated@@169 ($generated@@164 $generated@@170)) ($generated@@164 $generated@@171)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@86)) ($generated@@161 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@161 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@154)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@154)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@86) (= (type $generated@@185) $generated@@86)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@186 $generated@@187)) $generated@@74)
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert (= ($generated@@186 $generated@@84) $generated@@66))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@70)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@192) $generated@@70)) ($generated@@161 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@161 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@98 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@73 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@98) (= (type $generated@@243) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@244) ($generated@@72 $generated@@4))) (= (type $generated@@246) $generated@@98)) (= (type $generated@@247) ($generated@@72 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@86)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@154)) (= (type $generated@@256) $generated@@154)) (= ($generated@@161 ($generated@@249 $generated@@255 $generated@@256) ($generated@@173 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@161 ($generated@@249 $generated@@255 $generated@@256) ($generated@@173 $generated@@253 $generated@@254)))
)))
(assert (= (type $generated@@257) $generated@@70))
(assert ($generated@@161 $generated@@84 $generated@@257))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@258 $generated@@259)) ($generated@@95 $generated@@84 $generated@@257 $generated@@259))
 :pattern ( ($generated@@95 $generated@@84 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@86) (= (type $generated@@261) $generated@@86)) (= ($generated@@179 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@179 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@86) (= (type $generated@@264) $generated@@86)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert  (and (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@266 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@266 $generated@@271))
)) (= (type $generated@@270) $generated@@81)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@154) (= (type $generated@@274) $generated@@86)) (or ($generated@@267 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@274 $generated@@257)))) (and ($generated@@268 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) (= ($generated@@265 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@269 ($generated@@80 $generated@@270) ($generated@@266 $generated@@273) ($generated@@266 $generated@@274))))))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@70)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@278) $generated@@70)) (= ($generated@@161 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@154) ($generated@@0 ($generated@@102 $generated@@277 $generated@@279))) ($generated@@250 $generated@@279 $generated@@278))
 :pattern ( ($generated@@102 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@161 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@70)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@283) $generated@@70)) (= ($generated@@161 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@154) ($generated@@0 ($generated@@102 $generated@@282 $generated@@284))) ($generated@@250 $generated@@284 $generated@@283))
 :pattern ( ($generated@@102 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@161 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@83 $generated@@285) $generated@@285)
 :pattern ( ($generated@@83 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (= ($generated@@266 $generated@@286) $generated@@286)
 :pattern ( ($generated@@266 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@86) (= (type $generated@@289) $generated@@86)) (and ($generated@@287 $generated@@288) ($generated@@287 $generated@@289))) (= ($generated@@262 $generated@@288 $generated@@289) true))
 :pattern ( ($generated@@262 $generated@@288 $generated@@289) ($generated@@287 $generated@@288))
 :pattern ( ($generated@@262 $generated@@288 $generated@@289) ($generated@@287 $generated@@289))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@154) (= (type $generated@@291) $generated@@86)) (or ($generated@@267 $generated@@290 $generated@@291) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@291 $generated@@257)))) (and ($generated@@268 $generated@@290 $generated@@291) (= ($generated@@265 $generated@@290 $generated@@291) ($generated@@269 ($generated@@80 $generated@@270) $generated@@290 $generated@@291))))
 :pattern ( ($generated@@265 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@154)) (= (type $generated@@296) $generated@@154)) (= (type $generated@@297) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@258 $generated@@297)) (= ($generated@@95 ($generated@@249 $generated@@295 $generated@@296) ($generated@@173 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@95 ($generated@@249 $generated@@295 $generated@@296) ($generated@@173 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@86) (= ($generated@@172 $generated@@298) (= ($generated@@186 $generated@@298) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@86) (= ($generated@@299 $generated@@300) (= ($generated@@186 $generated@@300) $generated@@64)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@86) (= ($generated@@287 $generated@@301) (= ($generated@@186 $generated@@301) $generated@@66)))
 :pattern ( ($generated@@287 $generated@@301))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@302 T@U) ($generated@@303 Int) ) (!  (=> (and (= (type $generated@@302) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@303)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@303)))) (and (=> (not (= ($generated@@83 $generated@@303) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@303 1)))) (= ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 $generated@@303)) (ite (= ($generated@@83 $generated@@303) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@266 ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 (- $generated@@303 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 $generated@@303)))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@81) (= (type $generated@@305) $generated@@86)) (= (type $generated@@306) $generated@@154)) (and ($generated@@161 $generated@@305 $generated@@257) (= $generated@@306 ($generated@@164 0)))) ($generated@@269 $generated@@304 $generated@@306 $generated@@305))
 :pattern ( ($generated@@269 $generated@@304 $generated@@306 $generated@@305))
))))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@86) ($generated@@172 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@154) (= (type $generated@@309) $generated@@154)) (= $generated@@307 ($generated@@249 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@172 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@86) ($generated@@287 $generated@@318)) (= $generated@@318 $generated@@84))
 :pattern ( ($generated@@287 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@86) ($generated@@299 $generated@@319)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@86) (= $generated@@319 ($generated@@85 $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@299 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@2) (= ($generated@@161 $generated@@321 $generated@@158) (<= ($generated@@83 0) ($generated $generated@@321))))
 :pattern ( ($generated@@161 $generated@@321 $generated@@158))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@86)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@324) $generated@@81) (= (type $generated@@325) $generated@@154)) (= (type $generated@@326) $generated@@86)) (or ($generated@@268 ($generated@@266 $generated@@325) $generated@@326) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@326 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@325)) (=> ($generated@@299 $generated@@326) (let (($generated@@327 ($generated@@322 $generated@@326)))
($generated@@268 ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@327)))) (=> (=> (< 0 ($generated@@165 $generated@@325)) (ite ($generated@@299 $generated@@326) (let (($generated@@328 ($generated@@322 $generated@@326)))
($generated@@269 ($generated@@80 $generated@@324) ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@328)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@325)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@153 $generated@@329 $generated@@325)) ($generated@@268 $generated@@329 $generated@@326))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) $generated@@329 $generated@@326))
))))) (= ($generated@@269 ($generated@@80 $generated@@324) ($generated@@266 $generated@@325) $generated@@326)  (and (=> (< 0 ($generated@@165 $generated@@325)) (ite ($generated@@299 $generated@@326) (let (($generated@@330 ($generated@@322 $generated@@326)))
($generated@@269 ($generated@@80 $generated@@324) ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@330)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@325)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@154) ($generated@@153 $generated@@331 $generated@@325)) ($generated@@269 ($generated@@80 $generated@@324) $generated@@331 $generated@@326))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) $generated@@331 $generated@@326))
)))))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) ($generated@@266 $generated@@325) $generated@@326))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@81) (= (type $generated@@333) $generated@@154)) (= (type $generated@@334) $generated@@86)) (= ($generated@@269 ($generated@@80 $generated@@332) $generated@@333 $generated@@334) ($generated@@269 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) $generated@@81) (= (type $generated@@337) $generated@@154)) (= (type $generated@@338) $generated@@86)) (= ($generated@@335 ($generated@@80 $generated@@336) $generated@@337 $generated@@338) ($generated@@335 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@154)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@70) (= (type $generated@@343) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@292 ($generated@@339 $generated@@341) $generated@@342 $generated@@343) ($generated@@95 $generated@@341 $generated@@342 $generated@@343)))
 :pattern ( ($generated@@292 ($generated@@339 $generated@@341) $generated@@342 $generated@@343))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@344 T@U) ($generated@@345 Int) ) (!  (=> (and (= (type $generated@@344) $generated@@81) (or ($generated@@82 $generated@@345) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@345)))) ($generated@@161 ($generated@@79 $generated@@344 $generated@@345) $generated@@257))
 :pattern ( ($generated@@79 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@97 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@100 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@97 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@102 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@97 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@102 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@102 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@97 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@102 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@102 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@154) (= (type $generated@@390) $generated@@154)) (and ($generated@@388 $generated@@390) (<= ($generated@@165 $generated@@390) ($generated@@165 $generated@@389)))) (and (= ($generated@@388 ($generated@@163 $generated@@389 $generated@@390)) ($generated@@388 $generated@@389)) (= ($generated@@165 ($generated@@163 $generated@@389 $generated@@390)) (- ($generated@@165 $generated@@389) ($generated@@165 $generated@@390)))))
 :pattern ( ($generated@@163 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 Int) ) (!  (=> (<= 0 $generated@@391) (and ($generated@@388 ($generated@@164 $generated@@391)) (= ($generated@@165 ($generated@@164 $generated@@391)) $generated@@391)))
 :pattern ( ($generated@@164 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@100 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@97 $generated@@393 $generated@@2)) (= ($generated@@189 $generated@@392) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@393) (and (<= 0 ($generated ($generated@@102 $generated@@392 $generated@@394))) (<= ($generated ($generated@@102 $generated@@392 $generated@@394)) ($generated@@346 $generated@@392))))
 :pattern ( ($generated@@102 $generated@@392 $generated@@394))
)))))
 :pattern ( ($generated@@189 $generated@@392))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@250 $generated@@398 $generated@@158)) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@398)) $generated@@398) ($generated@@161 ($generated@@395 $generated@@2 $generated@@398) $generated@@158)))
 :pattern ( ($generated@@250 $generated@@398 $generated@@158))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@154) ($generated@@250 $generated@@399 $generated@@257)) (and (= ($generated@@339 ($generated@@395 $generated@@86 $generated@@399)) $generated@@399) ($generated@@161 ($generated@@395 $generated@@86 $generated@@399) $generated@@257)))
 :pattern ( ($generated@@250 $generated@@399 $generated@@257))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) $generated@@81) (= (type $generated@@402) $generated@@154)) (= (type $generated@@403) $generated@@86)) (or ($generated@@400 $generated@@402 $generated@@403) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@403 $generated@@257)))) true)
 :pattern ( ($generated@@335 $generated@@401 $generated@@402 $generated@@403))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) $generated@@81) (= (type $generated@@405) $generated@@154)) (= (type $generated@@406) $generated@@86)) (or ($generated@@268 $generated@@405 $generated@@406) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@406 $generated@@257)))) true)
 :pattern ( ($generated@@269 $generated@@404 $generated@@405 $generated@@406))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@407) $generated@@154) (= (type $generated@@408) $generated@@86)) (or ($generated@@267 $generated@@407 $generated@@408) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@408 $generated@@257)))) true)
 :pattern ( ($generated@@265 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@86) (= ($generated@@161 ($generated@@85 $generated@@409) $generated@@257) ($generated@@161 $generated@@409 $generated@@257)))
 :pattern ( ($generated@@161 ($generated@@85 $generated@@409) $generated@@257))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@86) (= (type $generated@@411) $generated@@86)) (and ($generated@@299 $generated@@410) ($generated@@299 $generated@@411))) (= ($generated@@262 $generated@@410 $generated@@411) ($generated@@262 ($generated@@322 $generated@@410) ($generated@@322 $generated@@411))))
 :pattern ( ($generated@@262 $generated@@410 $generated@@411) ($generated@@299 $generated@@410))
 :pattern ( ($generated@@262 $generated@@410 $generated@@411) ($generated@@299 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@356 (type $generated@@412))))
(let (($generated@@414 ($generated@@355 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@354 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@353 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@352 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@356 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417)) ($generated@@97 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@356 (type $generated@@419))))
(let (($generated@@421 ($generated@@355 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@354 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@353 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@420) ($generated@@0 ($generated@@102 ($generated@@416 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@416 $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@374 (type $generated@@423))))
(let (($generated@@425 ($generated@@373 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@372 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@371 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@374 (type $generated@@428))))
(= (type ($generated@@427 $generated@@428)) ($generated@@97 $generated@@429 $generated@@4)))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@374 (type $generated@@430))))
(let (($generated@@432 ($generated@@373 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@372 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@371 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@431) ($generated@@0 ($generated@@102 ($generated@@427 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@427 $generated@@430))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) $generated@@81) (= (type $generated@@435) $generated@@154)) (= (type $generated@@436) $generated@@86)) (or ($generated@@268 ($generated@@266 $generated@@435) ($generated@@266 $generated@@436)) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@436 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@435)) (=> ($generated@@299 $generated@@436) (let (($generated@@437 ($generated@@322 $generated@@436)))
($generated@@268 ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@437)))) (=> (=> (< 0 ($generated@@165 $generated@@435)) (ite ($generated@@299 $generated@@436) (let (($generated@@438 ($generated@@322 $generated@@436)))
($generated@@269 ($generated@@80 $generated@@434) ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@438)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@435)) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@153 $generated@@439 $generated@@435)) ($generated@@268 $generated@@439 $generated@@436))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) $generated@@439 $generated@@436))
))))) (= ($generated@@269 ($generated@@80 $generated@@434) ($generated@@266 $generated@@435) ($generated@@266 $generated@@436))  (and (=> (< 0 ($generated@@165 $generated@@435)) (ite ($generated@@299 $generated@@436) (let (($generated@@440 ($generated@@322 $generated@@436)))
($generated@@269 ($generated@@80 $generated@@434) ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@440)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@435)) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@154) ($generated@@153 $generated@@441 $generated@@435)) ($generated@@269 ($generated@@80 $generated@@434) $generated@@441 $generated@@436))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) $generated@@441 $generated@@436))
)))))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) ($generated@@266 $generated@@435) ($generated@@266 $generated@@436)))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@443) $generated@@70)) (= ($generated@@161 $generated@@442 ($generated@@188 $generated@@443)) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@154) (< 0 ($generated ($generated@@102 $generated@@442 $generated@@444)))) ($generated@@250 $generated@@444 $generated@@443))
 :pattern ( ($generated@@102 $generated@@442 $generated@@444))
))))
 :pattern ( ($generated@@161 $generated@@442 ($generated@@188 $generated@@443)))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@154) (= (type $generated@@446) $generated@@154)) (or (or ($generated@@153 $generated@@445 $generated@@446) (= $generated@@445 $generated@@446)) ($generated@@153 $generated@@446 $generated@@445)))
 :pattern ( ($generated@@153 $generated@@445 $generated@@446) ($generated@@153 $generated@@446 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@448) $generated@@70)) (= (type $generated@@449) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@447 ($generated@@275 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@102 $generated@@447 $generated@@450))) ($generated@@292 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@102 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@95 $generated@@447 ($generated@@275 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (= (type $generated@@451) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@452) $generated@@70)) (= (type $generated@@453) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@451 ($generated@@280 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@154) ($generated@@0 ($generated@@102 $generated@@451 $generated@@454))) ($generated@@292 $generated@@454 $generated@@452 $generated@@453))
 :pattern ( ($generated@@102 $generated@@451 $generated@@454))
))))
 :pattern ( ($generated@@95 $generated@@451 ($generated@@280 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(= ($generated ($generated@@102 ($generated@@347 $generated@@456) $generated@@455)) 0))
 :pattern ( (let (($generated@@456 (type $generated@@455)))
($generated@@102 ($generated@@347 $generated@@456) $generated@@455)))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) ($generated@@97 $generated@@154 $generated@@4))
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@356 (type $generated@@460))))
(let (($generated@@462 ($generated@@355 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460)) ($generated@@97 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@458 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@464) $generated@@154)) (= ($generated@@0 ($generated@@102 ($generated@@457 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@102 ($generated@@352 $generated@@463) ($generated@@180 ($generated@@395 $generated@@86 $generated@@464)))) (= ($generated@@102 ($generated@@458 $generated@@463) ($generated@@180 ($generated@@395 $generated@@86 $generated@@464))) ($generated@@181 ($generated@@395 $generated@@86 $generated@@464))))))
 :pattern ( ($generated@@102 ($generated@@457 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@97 $generated@@154 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@374 (type $generated@@468))))
(let (($generated@@470 ($generated@@373 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@97 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@472) $generated@@154)) (= ($generated@@0 ($generated@@102 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@102 ($generated@@370 $generated@@471) ($generated@@180 ($generated@@395 $generated@@86 $generated@@472)))) (= ($generated@@102 ($generated@@466 $generated@@471) ($generated@@180 ($generated@@395 $generated@@86 $generated@@472))) ($generated@@181 ($generated@@395 $generated@@86 $generated@@472))))))
 :pattern ( ($generated@@102 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@355 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@354 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@102 ($generated@@416 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@102 ($generated@@352 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@102 ($generated@@458 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@473) $generated@@477))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@102 ($generated@@416 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@373 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@372 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@102 ($generated@@427 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@102 ($generated@@370 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@102 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@478) $generated@@482))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@102 ($generated@@427 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= (type $generated@@489) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@486) $generated@@490))) (and ($generated@@292 ($generated@@102 ($generated@@458 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@292 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@486) $generated@@490))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@95 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@494) $generated@@498))) (and ($generated@@292 ($generated@@102 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@292 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@95 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@499) $generated@@86) (= (type $generated@@500) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@258 $generated@@500)) (= ($generated@@95 ($generated@@85 $generated@@499) $generated@@257 $generated@@500) ($generated@@95 $generated@@499 $generated@@257 $generated@@500)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@499) $generated@@257 $generated@@500))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@81) (= (type $generated@@502) $generated@@154)) (= (type $generated@@503) $generated@@86)) (or ($generated@@268 $generated@@502 $generated@@503) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@503 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@502)) (=> ($generated@@299 $generated@@503) (let (($generated@@504 ($generated@@322 $generated@@503)))
($generated@@268 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@504)))) (=> (=> (< 0 ($generated@@165 $generated@@502)) (ite ($generated@@299 $generated@@503) (let (($generated@@505 ($generated@@322 $generated@@503)))
($generated@@269 $generated@@501 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@505)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@502)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@154) ($generated@@153 $generated@@506 $generated@@502)) ($generated@@268 $generated@@506 $generated@@503))
 :pattern ( ($generated@@269 $generated@@501 $generated@@506 $generated@@503))
))))) (= ($generated@@269 ($generated@@80 $generated@@501) $generated@@502 $generated@@503)  (and (=> (< 0 ($generated@@165 $generated@@502)) (ite ($generated@@299 $generated@@503) (let (($generated@@507 ($generated@@322 $generated@@503)))
($generated@@269 $generated@@501 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@507)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@502)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@153 $generated@@508 $generated@@502)) ($generated@@269 $generated@@501 $generated@@508 $generated@@503))
 :pattern ( ($generated@@269 $generated@@501 $generated@@508 $generated@@503))
)))))))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@501) $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@86) ($generated@@161 $generated@@509 $generated@@257)) (or ($generated@@299 $generated@@509) ($generated@@287 $generated@@509)))
 :pattern ( ($generated@@287 $generated@@509) ($generated@@161 $generated@@509 $generated@@257))
 :pattern ( ($generated@@299 $generated@@509) ($generated@@161 $generated@@509 $generated@@257))
)))
(assert (forall (($generated@@511 T@T) ) (! (= (type ($generated@@510 $generated@@511)) ($generated@@97 $generated@@511 $generated@@4))
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@374 (type $generated@@512))))
(let (($generated@@514 ($generated@@373 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@372 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@371 $generated@@514 $generated@@513)) (= ($generated@@370 $generated@@512) ($generated@@510 $generated@@514))))))
 :pattern ( ($generated@@370 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@374 (type $generated@@515))))
(let (($generated@@517 ($generated@@373 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@372 $generated@@517 $generated@@516)) (= (= $generated@@515 ($generated@@371 $generated@@517 $generated@@516)) (= ($generated@@427 $generated@@515) ($generated@@510 $generated@@516))))))
 :pattern ( ($generated@@427 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@374 (type $generated@@518))))
(let (($generated@@520 ($generated@@373 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@372 $generated@@520 $generated@@519)) (= (= $generated@@518 ($generated@@371 $generated@@520 $generated@@519)) (= ($generated@@465 $generated@@518) ($generated@@510 $generated@@154))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@356 (type $generated@@521))))
(let (($generated@@523 ($generated@@355 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@354 $generated@@523 $generated@@522)) (or (= $generated@@521 ($generated@@353 $generated@@523 $generated@@522)) (exists (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (and (and (= (type $generated@@524) $generated@@154) (= (type $generated@@525) $generated@@154)) ($generated@@0 ($generated@@102 ($generated@@457 $generated@@521) ($generated@@339 ($generated@@249 $generated@@524 $generated@@525)))))
 :no-pattern (type $generated@@524)
 :no-pattern (type $generated@@525)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
))))))
 :pattern ( ($generated@@457 $generated@@521))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@374 (type $generated@@526))))
(let (($generated@@528 ($generated@@373 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@372 $generated@@528 $generated@@527)) (or (= $generated@@526 ($generated@@371 $generated@@528 $generated@@527)) (exists (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (and (and (= (type $generated@@529) $generated@@154) (= (type $generated@@530) $generated@@154)) ($generated@@0 ($generated@@102 ($generated@@465 $generated@@526) ($generated@@339 ($generated@@249 $generated@@529 $generated@@530)))))
 :no-pattern (type $generated@@529)
 :no-pattern (type $generated@@530)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
))))))
 :pattern ( ($generated@@465 $generated@@526))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@154) ($generated@@250 $generated@@531 $generated@@46)) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@531)) $generated@@531) ($generated@@161 ($generated@@395 $generated@@2 $generated@@531) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@531 $generated@@46))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@154) ($generated@@250 $generated@@532 $generated@@47)) (and (= ($generated@@339 ($generated@@395 $generated@@3 $generated@@532)) $generated@@532) ($generated@@161 ($generated@@395 $generated@@3 $generated@@532) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@532 $generated@@47))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@250 $generated@@533 $generated@@44)) (and (= ($generated@@339 ($generated@@395 $generated@@4 $generated@@533)) $generated@@533) ($generated@@161 ($generated@@395 $generated@@4 $generated@@533) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@533 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@534) 21))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@250 $generated@@535 $generated@@45)) (and (= ($generated@@339 ($generated@@395 $generated@@534 $generated@@535)) $generated@@535) ($generated@@161 ($generated@@395 $generated@@534 $generated@@535) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@535 $generated@@45))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@250 ($generated@@339 $generated@@536) $generated@@537) ($generated@@161 $generated@@536 $generated@@537)))
 :pattern ( ($generated@@250 ($generated@@339 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@154) (<= 0 ($generated@@165 $generated@@538)))
 :pattern ( ($generated@@165 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@100 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@97 $generated@@540 $generated@@2)) (<= 0 ($generated@@346 $generated@@539))))
 :pattern ( ($generated@@346 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@313 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@312 $generated@@542)) (<= 0 ($generated@@311 $generated@@541))))
 :pattern ( ($generated@@311 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (= ($generated@@543 ($generated@@483 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@483 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= ($generated@@547 ($generated@@483 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@483 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= ($generated@@93 ($generated@@483 $generated@@551 $generated@@552)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@70) (= (type $generated@@556) $generated@@70)) (= ($generated@@553 ($generated@@491 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@491 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@70) (= (type $generated@@560) $generated@@70)) (= ($generated@@557 ($generated@@491 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@491 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@70) (= (type $generated@@562) $generated@@70)) (= ($generated@@93 ($generated@@491 $generated@@561 $generated@@562)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (= ($generated@@186 ($generated@@249 $generated@@563 $generated@@564)) $generated@@62))
 :pattern ( ($generated@@249 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= ($generated@@565 ($generated@@173 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@173 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@70)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (= ($generated@@569 ($generated@@173 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@173 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@154)) (= ($generated@@180 ($generated@@249 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@249 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@154)) (= ($generated@@181 ($generated@@249 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@249 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@81)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) $generated@@81) (= ($generated@@79 $generated@@579 $generated@@580) ($generated@@79 $generated@@270 $generated@@580)))
 :pattern ( ($generated@@79 ($generated@@577 $generated@@579) $generated@@580))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) $generated@@70)
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ($generated@@585 Int) ) (! (let (($generated@@586 ($generated@@313 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584 $generated@@585)) $generated@@586))
 :pattern ( ($generated@@582 $generated@@584 $generated@@585))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@312 $generated@@154)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@587 ($generated@@581 $generated@@588) $generated@@589) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@311 $generated@@587))) ($generated@@292 ($generated@@582 $generated@@587 $generated@@590) $generated@@588 $generated@@589))
 :pattern ( ($generated@@582 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@95 $generated@@587 ($generated@@581 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@591 ($generated@@96 $generated@@592)) $generated@@592)
 :pattern ( ($generated@@96 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@70)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@70) (= ($generated@@593 ($generated@@275 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@275 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@70) (= ($generated@@93 ($generated@@275 $generated@@596)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@70) (= ($generated@@597 ($generated@@280 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@280 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@70) (= ($generated@@93 ($generated@@280 $generated@@600)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@70)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@70) (= ($generated@@601 ($generated@@188 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@188 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@70) (= ($generated@@93 ($generated@@188 $generated@@604)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@70)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@70) (= ($generated@@605 ($generated@@581 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@581 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@70) (= ($generated@@93 ($generated@@581 $generated@@608)) $generated@@57))
 :pattern ( ($generated@@581 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@86) (= ($generated@@186 ($generated@@85 $generated@@609)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@86) (= ($generated@@322 ($generated@@85 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@85 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
(= ($generated@@395 $generated@@612 ($generated@@339 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@339 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) $generated@@70)) (= ($generated@@161 $generated@@613 ($generated@@483 $generated@@614 $generated@@615)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@613) $generated@@616))) (and ($generated@@250 ($generated@@102 ($generated@@458 $generated@@613) $generated@@616) $generated@@615) ($generated@@250 $generated@@616 $generated@@614)))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@613) $generated@@616))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@613) $generated@@616))
))))
 :pattern ( ($generated@@161 $generated@@613 ($generated@@483 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) (= ($generated@@161 $generated@@617 ($generated@@491 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@617) $generated@@620))) (and ($generated@@250 ($generated@@102 ($generated@@466 $generated@@617) $generated@@620) $generated@@619) ($generated@@250 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@617) $generated@@620))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@161 $generated@@617 ($generated@@491 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@154) (= (type $generated@@622) $generated@@154)) (and (and (and (=> ($generated@@153 $generated@@621 $generated@@622) (not (= $generated@@621 $generated@@622))) (=> (and ($generated@@388 $generated@@621) (not ($generated@@388 $generated@@622))) ($generated@@153 $generated@@621 $generated@@622))) (=> (and ($generated@@388 $generated@@621) ($generated@@388 $generated@@622)) (= ($generated@@153 $generated@@621 $generated@@622) (< ($generated@@165 $generated@@621) ($generated@@165 $generated@@622))))) (=> (and ($generated@@153 $generated@@621 $generated@@622) ($generated@@388 $generated@@622)) ($generated@@388 $generated@@621))))
 :pattern ( ($generated@@153 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@154) (= (type $generated@@626) $generated@@154)) (< ($generated@@623 $generated@@625) ($generated@@624 ($generated@@249 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@249 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@154) (= (type $generated@@628) $generated@@154)) (< ($generated@@623 $generated@@628) ($generated@@624 ($generated@@249 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@249 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@629) $generated@@630) ($generated@@79 $generated@@629 $generated@@630)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@154) (= (type $generated@@632) $generated@@70)) (= (type $generated@@633) $generated@@70)) ($generated@@250 $generated@@631 ($generated@@483 $generated@@632 $generated@@633))) (and (= ($generated@@339 ($generated@@395 ($generated@@354 $generated@@154 $generated@@154) $generated@@631)) $generated@@631) ($generated@@161 ($generated@@395 ($generated@@354 $generated@@154 $generated@@154) $generated@@631) ($generated@@483 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@250 $generated@@631 ($generated@@483 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@154) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) $generated@@70)) ($generated@@250 $generated@@634 ($generated@@491 $generated@@635 $generated@@636))) (and (= ($generated@@339 ($generated@@395 ($generated@@372 $generated@@154 $generated@@154) $generated@@634)) $generated@@634) ($generated@@161 ($generated@@395 ($generated@@372 $generated@@154 $generated@@154) $generated@@634) ($generated@@491 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@250 $generated@@634 ($generated@@491 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@70) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@154)) ($generated@@250 $generated@@639 ($generated@@173 $generated@@637 $generated@@638))) (and (= ($generated@@339 ($generated@@395 $generated@@86 $generated@@639)) $generated@@639) ($generated@@161 ($generated@@395 $generated@@86 $generated@@639) ($generated@@173 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@250 $generated@@639 ($generated@@173 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@86) (< ($generated@@624 $generated@@640) ($generated@@624 ($generated@@85 $generated@@640))))
 :pattern ( ($generated@@85 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (not ($generated@@0 ($generated@@102 ($generated@@510 $generated@@642) $generated@@641))))
 :pattern ( (let (($generated@@642 (type $generated@@641)))
($generated@@102 ($generated@@510 $generated@@642) $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@75)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@70) (= (type $generated@@646) $generated@@70)) (and (= ($generated@@93 ($generated@@173 $generated@@645 $generated@@646)) $generated@@63) (= ($generated@@643 ($generated@@173 $generated@@645 $generated@@646)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@86) (= ($generated@@623 ($generated@@339 $generated@@647)) ($generated@@624 $generated@@647)))
 :pattern ( ($generated@@623 ($generated@@339 $generated@@647)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@81) (= (type $generated@@649) $generated@@154)) (= (type $generated@@650) $generated@@86)) (or ($generated@@400 ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@650 $generated@@257)))) (and (=> (not (= ($generated@@266 $generated@@649) ($generated@@266 ($generated@@164 0)))) (and (=> ($generated@@0 ($generated@@266 ($generated@@11 (< 0 ($generated@@165 ($generated@@266 $generated@@649)))))) (=> ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@299 ($generated@@266 $generated@@650))))) (let (($generated@@651 ($generated@@266 ($generated@@322 ($generated@@266 $generated@@650)))))
($generated@@400 ($generated@@266 ($generated@@163 $generated@@649 ($generated@@164 1))) $generated@@651)))) (=> (not ($generated@@0 ($generated@@266 ($generated@@11 (< 0 ($generated@@165 ($generated@@266 $generated@@649))))))) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@154) ($generated@@153 $generated@@652 $generated@@649)) ($generated@@400 $generated@@652 ($generated@@266 $generated@@650)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) $generated@@652 $generated@@650))
 :pattern ( ($generated@@153 $generated@@652 $generated@@649))
))))) (= ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)) (ite (= ($generated@@266 $generated@@649) ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 ($generated@@266 $generated@@649))) (ite ($generated@@299 ($generated@@266 $generated@@650)) ($generated@@0 (let (($generated@@653 ($generated@@266 ($generated@@322 ($generated@@266 $generated@@650)))))
($generated@@266 ($generated@@11 ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 ($generated@@163 $generated@@649 ($generated@@164 1))) $generated@@653))))) true) (forall (($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@154) true) ($generated@@153 $generated@@654 $generated@@649)) ($generated@@335 ($generated@@80 $generated@@648) $generated@@654 ($generated@@266 $generated@@650)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) $generated@@654 $generated@@650))
 :pattern ( ($generated@@153 $generated@@654 $generated@@649))
)))))))
 :weight 3
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)))
))))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@154) ($generated@@250 $generated@@655 ($generated@@96 0))) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@655)) $generated@@655) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@655) ($generated@@96 0))))
 :pattern ( ($generated@@250 $generated@@655 ($generated@@96 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@154) (= (type $generated@@657) $generated@@70)) ($generated@@250 $generated@@656 ($generated@@275 $generated@@657))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@656)) $generated@@656) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@656) ($generated@@275 $generated@@657))))
 :pattern ( ($generated@@250 $generated@@656 ($generated@@275 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@154) (= (type $generated@@659) $generated@@70)) ($generated@@250 $generated@@658 ($generated@@280 $generated@@659))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@658)) $generated@@658) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@658) ($generated@@280 $generated@@659))))
 :pattern ( ($generated@@250 $generated@@658 ($generated@@280 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@154) (= (type $generated@@661) $generated@@70)) ($generated@@250 $generated@@660 ($generated@@188 $generated@@661))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@2) $generated@@660)) $generated@@660) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@2) $generated@@660) ($generated@@188 $generated@@661))))
 :pattern ( ($generated@@250 $generated@@660 ($generated@@188 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@154) (= (type $generated@@663) $generated@@70)) ($generated@@250 $generated@@662 ($generated@@581 $generated@@663))) (and (= ($generated@@339 ($generated@@395 ($generated@@312 $generated@@154) $generated@@662)) $generated@@662) ($generated@@161 ($generated@@395 ($generated@@312 $generated@@154) $generated@@662) ($generated@@581 $generated@@663))))
 :pattern ( ($generated@@250 $generated@@662 ($generated@@581 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@154) ($generated@@388 $generated@@664)) (= $generated@@664 ($generated@@164 ($generated@@165 $generated@@664))))
 :pattern ( ($generated@@165 $generated@@664))
 :pattern ( ($generated@@388 $generated@@664))
)))
(assert (= ($generated@@93 $generated@@158) $generated@@61))
(assert (= ($generated@@643 $generated@@158) $generated@@67))
(assert (= ($generated@@93 $generated@@257) $generated@@65))
(assert (= ($generated@@643 $generated@@257) $generated@@69))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@666) $generated@@70)) (= (type $generated@@667) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@665 ($generated@@188 $generated@@666) $generated@@667) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@154) (< 0 ($generated ($generated@@102 $generated@@665 $generated@@668)))) ($generated@@292 $generated@@668 $generated@@666 $generated@@667))
 :pattern ( ($generated@@102 $generated@@665 $generated@@668))
))))
 :pattern ( ($generated@@95 $generated@@665 ($generated@@188 $generated@@666) $generated@@667))
)))
(assert (= $generated@@84 ($generated@@266 $generated@@84)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@669) $generated@@154) (= (type $generated@@670) $generated@@154)) (and ($generated@@388 $generated@@670) (<= ($generated@@165 $generated@@670) ($generated@@165 $generated@@669)))) (or (and (= $generated@@670 ($generated@@164 0)) (= ($generated@@163 $generated@@669 $generated@@670) $generated@@669)) (and (not (= $generated@@670 ($generated@@164 0))) ($generated@@153 ($generated@@163 $generated@@669 $generated@@670) $generated@@669))))
 :pattern ( ($generated@@163 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@86) (= (type $generated@@672) $generated@@70)) (= (type $generated@@673) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@673) (and ($generated@@172 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@70) ($generated@@95 $generated@@671 ($generated@@173 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@95 $generated@@671 ($generated@@173 $generated@@672 $generated@@674) $generated@@673))
))))) ($generated@@292 ($generated@@180 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@292 ($generated@@180 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@86) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@677) (and ($generated@@172 $generated@@675) (exists (($generated@@678 T@U) ) (!  (and (= (type $generated@@678) $generated@@70) ($generated@@95 $generated@@675 ($generated@@173 $generated@@678 $generated@@676) $generated@@677))
 :pattern ( ($generated@@95 $generated@@675 ($generated@@173 $generated@@678 $generated@@676) $generated@@677))
))))) ($generated@@292 ($generated@@181 $generated@@675) $generated@@676 $generated@@677))
 :pattern ( ($generated@@292 ($generated@@181 $generated@@675) $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@86) (= (type $generated@@680) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@680) (and ($generated@@299 $generated@@679) ($generated@@95 $generated@@679 $generated@@257 $generated@@680)))) ($generated@@95 ($generated@@322 $generated@@679) $generated@@257 $generated@@680))
 :pattern ( ($generated@@95 ($generated@@322 $generated@@679) $generated@@257 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@154) (= (type $generated@@682) $generated@@154)) (= ($generated@@249 ($generated@@266 $generated@@681) ($generated@@266 $generated@@682)) ($generated@@266 ($generated@@249 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@249 ($generated@@266 $generated@@681) ($generated@@266 $generated@@682)))
)))
(assert (forall (($generated@@683 Int) ) (! (= ($generated@@339 ($generated@@8 ($generated@@83 $generated@@683))) ($generated@@266 ($generated@@339 ($generated@@8 $generated@@683))))
 :pattern ( ($generated@@339 ($generated@@8 ($generated@@83 $generated@@683))))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@86) (= ($generated@@85 ($generated@@266 $generated@@684)) ($generated@@266 ($generated@@85 $generated@@684))))
 :pattern ( ($generated@@85 ($generated@@266 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (! (= ($generated@@339 ($generated@@266 $generated@@685)) ($generated@@266 ($generated@@339 $generated@@685)))
 :pattern ( ($generated@@339 ($generated@@266 $generated@@685)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@81) (= (type $generated@@687) $generated@@154)) (= (type $generated@@688) $generated@@86)) (or ($generated@@400 $generated@@687 $generated@@688) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@688 $generated@@257)))) (and (=> (not (= $generated@@687 ($generated@@266 ($generated@@164 0)))) (and (=> (< 0 ($generated@@165 $generated@@687)) (=> ($generated@@299 $generated@@688) (let (($generated@@689 ($generated@@322 $generated@@688)))
($generated@@400 ($generated@@163 $generated@@687 ($generated@@164 1)) $generated@@689)))) (=> (not (< 0 ($generated@@165 $generated@@687))) (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@154) ($generated@@153 $generated@@690 $generated@@687)) ($generated@@400 $generated@@690 $generated@@688))
 :pattern ( ($generated@@335 $generated@@686 $generated@@690 $generated@@688))
 :pattern ( ($generated@@153 $generated@@690 $generated@@687))
))))) (= ($generated@@335 ($generated@@80 $generated@@686) $generated@@687 $generated@@688) (ite (= $generated@@687 ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 $generated@@687)) (ite ($generated@@299 $generated@@688) (let (($generated@@691 ($generated@@322 $generated@@688)))
($generated@@335 $generated@@686 ($generated@@163 $generated@@687 ($generated@@164 1)) $generated@@691)) true) (forall (($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@154) true) ($generated@@153 $generated@@692 $generated@@687)) ($generated@@335 $generated@@686 $generated@@692 $generated@@688))
 :pattern ( ($generated@@335 $generated@@686 $generated@@692 $generated@@688))
 :pattern ( ($generated@@153 $generated@@692 $generated@@687))
)))))))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@686) $generated@@687 $generated@@688))
))))
(assert (forall (($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@313 (type $generated@@693))))
 (=> (and (= (type $generated@@693) ($generated@@312 $generated@@694)) (= ($generated@@311 $generated@@693) 0)) (= $generated@@693 ($generated@@310 $generated@@694))))
 :pattern ( ($generated@@311 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 (type $generated@@696)))
 (=> (and (and (= (type $generated@@695) ($generated@@97 $generated@@698 $generated@@2)) (= (type $generated@@697) $generated@@2)) (<= 0 ($generated $generated@@697))) (= ($generated@@346 ($generated@@103 $generated@@695 $generated@@696 $generated@@697)) (+ (- ($generated@@346 $generated@@695) ($generated ($generated@@102 $generated@@695 $generated@@696))) ($generated $generated@@697)))))
 :pattern ( ($generated@@346 ($generated@@103 $generated@@695 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@700) $generated@@2)) ($generated@@95 $generated@@700 $generated@@46 $generated@@699))
 :pattern ( ($generated@@95 $generated@@700 $generated@@46 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@702) $generated@@3)) ($generated@@95 $generated@@702 $generated@@47 $generated@@701))
 :pattern ( ($generated@@95 $generated@@702 $generated@@47 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@704) $generated@@4)) ($generated@@95 $generated@@704 $generated@@44 $generated@@703))
 :pattern ( ($generated@@95 $generated@@704 $generated@@44 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@706) $generated@@534)) ($generated@@95 $generated@@706 $generated@@45 $generated@@705))
 :pattern ( ($generated@@95 $generated@@706 $generated@@45 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@708) $generated@@154)) ($generated@@95 $generated@@708 $generated@@48 $generated@@707))
 :pattern ( ($generated@@95 $generated@@708 $generated@@48 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@312 $generated@@154)) (= (type $generated@@710) $generated@@70)) (= ($generated@@161 $generated@@709 ($generated@@581 $generated@@710)) (forall (($generated@@711 Int) ) (!  (=> (and (<= 0 $generated@@711) (< $generated@@711 ($generated@@311 $generated@@709))) ($generated@@250 ($generated@@582 $generated@@709 $generated@@711) $generated@@710))
 :pattern ( ($generated@@582 $generated@@709 $generated@@711))
))))
 :pattern ( ($generated@@161 $generated@@709 ($generated@@581 $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@81) (= (type $generated@@713) $generated@@154)) (= (type $generated@@714) $generated@@86)) (= ($generated@@269 $generated@@712 $generated@@713 $generated@@714) ($generated@@269 $generated@@270 $generated@@713 $generated@@714)))
 :pattern ( ($generated@@269 ($generated@@577 $generated@@712) $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@81) (= (type $generated@@716) $generated@@154)) (= (type $generated@@717) $generated@@86)) (= ($generated@@335 $generated@@715 $generated@@716 $generated@@717) ($generated@@335 $generated@@270 $generated@@716 $generated@@717)))
 :pattern ( ($generated@@335 ($generated@@577 $generated@@715) $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 Int) ) (!  (=> (= (type $generated@@719) ($generated@@312 $generated@@154)) (=> (and (<= 0 $generated@@720) (< $generated@@720 ($generated@@311 $generated@@719))) (< ($generated@@624 ($generated@@395 $generated@@86 ($generated@@582 $generated@@719 $generated@@720))) ($generated@@718 $generated@@719))))
 :pattern ( ($generated@@624 ($generated@@395 $generated@@86 ($generated@@582 $generated@@719 $generated@@720))))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (and (= (type $generated@@721) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@722) $generated@@70)) (= (type $generated@@723) $generated@@70)) ($generated@@161 $generated@@721 ($generated@@483 $generated@@722 $generated@@723))) (and (and ($generated@@161 ($generated@@352 $generated@@721) ($generated@@275 $generated@@722)) ($generated@@161 ($generated@@416 $generated@@721) ($generated@@275 $generated@@723))) ($generated@@161 ($generated@@457 $generated@@721) ($generated@@275 ($generated@@173 $generated@@722 $generated@@723)))))
 :pattern ( ($generated@@161 $generated@@721 ($generated@@483 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@725) $generated@@70)) (= (type $generated@@726) $generated@@70)) ($generated@@161 $generated@@724 ($generated@@491 $generated@@725 $generated@@726))) (and (and ($generated@@161 ($generated@@370 $generated@@724) ($generated@@280 $generated@@725)) ($generated@@161 ($generated@@427 $generated@@724) ($generated@@280 $generated@@726))) ($generated@@161 ($generated@@465 $generated@@724) ($generated@@280 ($generated@@173 $generated@@725 $generated@@726)))))
 :pattern ( ($generated@@161 $generated@@724 ($generated@@491 $generated@@725 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@2) ($generated@@161 $generated@@727 $generated@@46))
 :pattern ( ($generated@@161 $generated@@727 $generated@@46))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@3) ($generated@@161 $generated@@728 $generated@@47))
 :pattern ( ($generated@@161 $generated@@728 $generated@@47))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@4) ($generated@@161 $generated@@729 $generated@@44))
 :pattern ( ($generated@@161 $generated@@729 $generated@@44))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@534) ($generated@@161 $generated@@730 $generated@@45))
 :pattern ( ($generated@@161 $generated@@730 $generated@@45))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@154) ($generated@@161 $generated@@731 $generated@@48))
 :pattern ( ($generated@@161 $generated@@731 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@732 () Int)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 (T@U) Bool)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@734) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@735) $generated@@154)) (= (type $generated@@736) $generated@@86)) (= (type $generated@@738) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@739) $generated@@86)) (= (type $generated@@741) ($generated@@195 $generated@@98 $generated@@4))) (= (type $generated@@742) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@743  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158) (=> (= $generated@@733 (ite (< $generated@@732 0) 0 $generated@@732)) (=> (and ($generated@@95 ($generated@@8 $generated@@733) $generated@@158 $generated@@734) ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732))) (=> (and (and ($generated@@95 $generated@@735 $generated@@48 $generated@@734) (= $generated@@736 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (and ($generated@@95 $generated@@736 $generated@@257 $generated@@734) ($generated@@268 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))))) (=> (and (and (and ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732)) ($generated@@268 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@268 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))))))))))
(let (($generated@@744  (=> (and (<= 0 $generated@@732) (= (ControlFlow 0 5) 2)) $generated@@743)))
(let (($generated@@745  (=> (and (< $generated@@732 0) (= (ControlFlow 0 4) 2)) $generated@@743)))
(let (($generated@@746  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158) (=> (= $generated@@737 (ite (< $generated@@732 0) 0 $generated@@732)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@737) $generated@@158 $generated@@738) ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732))) (and ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732)) (= $generated@@739 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))))) (=> (and (and (and (and ($generated@@258 $generated@@734) ($generated@@740 $generated@@734)) ($generated@@268 $generated@@735 $generated@@739)) (and (and ($generated@@268 $generated@@735 $generated@@739) (and ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 $generated@@739) (and (=> (< 0 ($generated@@165 $generated@@735)) (ite ($generated@@299 $generated@@739) (let (($generated@@747 ($generated@@322 $generated@@739)))
($generated@@269 ($generated@@80 $generated@@270) ($generated@@163 $generated@@735 ($generated@@164 1)) $generated@@747)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@735)) (forall (($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@748) $generated@@154) ($generated@@153 $generated@@748 $generated@@735)) ($generated@@269 ($generated@@80 $generated@@270) $generated@@748 $generated@@739))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@270) $generated@@748 $generated@@739))
)))))) ($generated@@400 $generated@@735 $generated@@739))) (and (and (and ($generated@@400 $generated@@735 $generated@@739) (and ($generated@@335 ($generated@@80 $generated@@270) $generated@@735 $generated@@739) (ite (= $generated@@735 ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 $generated@@735)) (ite ($generated@@299 $generated@@739) (let (($generated@@749 ($generated@@322 $generated@@739)))
($generated@@335 ($generated@@80 $generated@@270) ($generated@@163 $generated@@735 ($generated@@164 1)) $generated@@749)) true) (forall (($generated@@750 T@U) ) (!  (=> (and (and (= (type $generated@@750) $generated@@154) true) ($generated@@153 $generated@@750 $generated@@735)) ($generated@@335 ($generated@@80 $generated@@270) $generated@@750 $generated@@739))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@270) $generated@@750 $generated@@739))
 :pattern ( ($generated@@153 $generated@@750 $generated@@735))
)))))) ($generated@@267 $generated@@735 $generated@@739)) (and (and ($generated@@267 $generated@@735 $generated@@739) (and (and ($generated@@265 $generated@@735 $generated@@739) ($generated@@161 $generated@@739 $generated@@257)) ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 $generated@@739))) (= $generated@@738 $generated@@734)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@745) (=> (= (ControlFlow 0 6) 5) $generated@@744)))))))))
(let (($generated@@751  (=> (and (<= 0 $generated@@732) (= (ControlFlow 0 9) 6)) $generated@@746)))
(let (($generated@@752  (=> (and (< $generated@@732 0) (= (ControlFlow 0 8) 6)) $generated@@746)))
(let (($generated@@753  (=> (= $generated@@741 ($generated@@194 $generated@@742 $generated@@738 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@752) (=> (= (ControlFlow 0 10) 9) $generated@@751)))))
(let (($generated@@754  (=> (and (and ($generated@@258 $generated@@738) ($generated@@740 $generated@@738)) (and (= 5 $generated@@78) (= (ControlFlow 0 11) 10))) $generated@@753)))
$generated@@754)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U Int T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@181 (Int) T@U)
(declare-fun $generated@@182 (T@U) Int)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@276 (Int T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Bool)
(declare-fun $generated@@306 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U) Bool)
(declare-fun $generated@@416 (T@T T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@498 (T@U T@U) T@U)
(declare-fun $generated@@506 (T@U T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 () T@U)
(declare-fun $generated@@539 (T@T) T@U)
(declare-fun $generated@@563 () T@T)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@615 (T@U Int) T@U)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@686 (T@U) T@U)
(declare-fun $generated@@766 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@81) (= (type $generated@@158) $generated@@86)) (and ($generated@@154 $generated@@158 $generated@@155) ($generated@@153 ($generated@@80 $generated@@157) $generated@@158))) (forall (($generated@@159 Int) ) (!  (=> (<= ($generated@@83 0) $generated@@159) ($generated@@156 ($generated@@80 $generated@@157) $generated@@159 $generated@@158))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@157) $generated@@159 $generated@@158))
)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@157) $generated@@158))
))))
(assert (= ($generated@@1 $generated@@161) 16))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@161) (= (type $generated@@163) $generated@@161)) (= (type $generated@@164) $generated@@161)) (and ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@163 $generated@@164))) ($generated@@160 $generated@@162 $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@163 $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163) ($generated@@160 $generated@@162 $generated@@164))
)))
(assert (= (type $generated@@165) $generated@@70))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@154 $generated@@168 ($generated@@96 0)))
 :pattern ( ($generated@@154 $generated@@168 ($generated@@96 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@86)) (or ($generated@@170 $generated@@172) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@172 $generated@@155)))) true)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@81) (= (type $generated@@176) $generated@@86)) (or ($generated@@174 $generated@@176) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@176 $generated@@155)))) true)
 :pattern ( ($generated@@173 $generated@@175 $generated@@176))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@81) (= (type $generated@@179) $generated@@86)) (or ($generated@@177 $generated@@179) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@179 $generated@@155)))) true)
 :pattern ( ($generated@@153 $generated@@178 $generated@@179))
))))
(assert  (and (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@180 $generated@@183 $generated@@184)) $generated@@161)
 :pattern ( ($generated@@180 $generated@@183 $generated@@184))
)) (forall (($generated@@185 Int) ) (! (= (type ($generated@@181 $generated@@185)) $generated@@161)
 :pattern ( ($generated@@181 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ($generated@@188 Int) ) (!  (=> (= (type $generated@@186) $generated@@161) (=> (and (and (<= 0 $generated@@187) (<= 0 $generated@@188)) (<= (+ $generated@@187 $generated@@188) ($generated@@182 $generated@@186))) (= ($generated@@180 ($generated@@180 $generated@@186 ($generated@@181 $generated@@187)) ($generated@@181 $generated@@188)) ($generated@@180 $generated@@186 ($generated@@181 (+ $generated@@187 $generated@@188))))))
 :pattern ( ($generated@@180 ($generated@@180 $generated@@186 ($generated@@181 $generated@@187)) ($generated@@181 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@191 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@193) $generated@@70) (= (type $generated@@194) $generated@@70)) (= (type $generated@@195) $generated@@86)) ($generated@@154 $generated@@195 ($generated@@190 $generated@@193 $generated@@194))) ($generated@@189 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195) ($generated@@154 $generated@@195 ($generated@@190 $generated@@193 $generated@@194)))
)))
(assert  (and (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@161)
 :pattern ( ($generated@@197 $generated@@199))
)) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@161)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (= (type $generated@@201) $generated@@86) (= (type $generated@@202) $generated@@86)) true) (= ($generated@@196 $generated@@201 $generated@@202)  (and (= ($generated@@197 $generated@@201) ($generated@@197 $generated@@202)) (= ($generated@@198 $generated@@201) ($generated@@198 $generated@@202)))))
 :pattern ( ($generated@@196 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@203 $generated@@204)) $generated@@74)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (= ($generated@@203 $generated@@84) $generated@@66))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@209) $generated@@70)) ($generated@@154 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@154 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@98 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@73 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@98) (= (type $generated@@260) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@261) ($generated@@72 $generated@@4))) (= (type $generated@@263) $generated@@98)) (= (type $generated@@264) ($generated@@72 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@86)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@161)) (= (type $generated@@273) $generated@@161)) (= ($generated@@154 ($generated@@266 $generated@@272 $generated@@273) ($generated@@190 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@154 ($generated@@266 $generated@@272 $generated@@273) ($generated@@190 $generated@@270 $generated@@271)))
)))
(assert ($generated@@154 $generated@@84 $generated@@155))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@274 $generated@@275)) ($generated@@95 $generated@@84 $generated@@155 $generated@@275))
 :pattern ( ($generated@@95 $generated@@84 $generated@@155 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@277 T@U) ($generated@@278 Int) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@81) (= (type $generated@@279) $generated@@86)) (or ($generated@@276 $generated@@278 $generated@@279) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@278) ($generated@@154 $generated@@279 $generated@@155))))) true)
 :pattern ( ($generated@@156 $generated@@277 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (= ($generated@@196 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@196 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@86) (= (type $generated@@284) $generated@@86)) (= ($generated@@282 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@288) $generated@@70)) (= ($generated@@154 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@161) ($generated@@0 ($generated@@102 $generated@@287 $generated@@289))) ($generated@@267 $generated@@289 $generated@@288))
 :pattern ( ($generated@@102 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@154 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@70)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@293) $generated@@70)) (= ($generated@@154 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@161) ($generated@@0 ($generated@@102 $generated@@292 $generated@@294))) ($generated@@267 $generated@@294 $generated@@293))
 :pattern ( ($generated@@102 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@154 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@295 Int) ) (! (= ($generated@@83 $generated@@295) $generated@@295)
 :pattern ( ($generated@@83 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
(= (type ($generated@@296 $generated@@297)) $generated@@298))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@296 $generated@@299) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Int) ) (!  (=> (and (and (= (type $generated@@300) $generated@@81) (= (type $generated@@301) $generated@@86)) (and ($generated@@154 $generated@@301 $generated@@155) (= $generated@@302 0))) ($generated@@156 $generated@@300 $generated@@302 $generated@@301))
 :pattern ( ($generated@@156 $generated@@300 $generated@@302 $generated@@301))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@86) (= (type $generated@@305) $generated@@86)) (and ($generated@@303 $generated@@304) ($generated@@303 $generated@@305))) (= ($generated@@282 $generated@@304 $generated@@305) true))
 :pattern ( ($generated@@282 $generated@@304 $generated@@305) ($generated@@303 $generated@@304))
 :pattern ( ($generated@@282 $generated@@304 $generated@@305) ($generated@@303 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@70) (= (type $generated@@308) $generated@@70)) (= (type $generated@@309) $generated@@161)) (= (type $generated@@310) $generated@@161)) (= (type $generated@@311) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@274 $generated@@311)) (= ($generated@@95 ($generated@@266 $generated@@309 $generated@@310) ($generated@@190 $generated@@307 $generated@@308) $generated@@311)  (and ($generated@@306 $generated@@309 $generated@@307 $generated@@311) ($generated@@306 $generated@@310 $generated@@308 $generated@@311))))
 :pattern ( ($generated@@95 ($generated@@266 $generated@@309 $generated@@310) ($generated@@190 $generated@@307 $generated@@308) $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@86) (= ($generated@@189 $generated@@312) (= ($generated@@203 $generated@@312) $generated@@62)))
 :pattern ( ($generated@@189 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@86) (= ($generated@@313 $generated@@314) (= ($generated@@203 $generated@@314) $generated@@64)))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@86) (= ($generated@@303 $generated@@315) (= ($generated@@203 $generated@@315) $generated@@66)))
 :pattern ( ($generated@@303 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@316 T@U) ($generated@@317 Int) ) (!  (=> (and (= (type $generated@@316) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@317)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@317)))) (and (=> (not (= ($generated@@83 $generated@@317) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@317 1)))) (= ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 $generated@@317)) (ite (= ($generated@@83 $generated@@317) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@296 ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 (- $generated@@317 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@316) ($generated@@83 $generated@@317)))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (= (type $generated@@319) $generated@@81) (= (type $generated@@320) $generated@@86)) (= (type $generated@@321) $generated@@161)) (and ($generated@@154 $generated@@320 $generated@@155) (= $generated@@321 ($generated@@181 0)))) ($generated@@318 $generated@@319 $generated@@321 $generated@@320))
 :pattern ( ($generated@@318 $generated@@319 $generated@@321 $generated@@320))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@81) (= (type $generated@@323) $generated@@86)) (and ($generated@@154 $generated@@323 $generated@@155) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@161) ($generated@@318 ($generated@@80 $generated@@322) $generated@@324 $generated@@323))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@322) $generated@@324 $generated@@323))
)))) ($generated@@173 ($generated@@80 $generated@@322) $generated@@323))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@322) $generated@@323))
))))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@86) ($generated@@189 $generated@@325)) (exists (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@161) (= (type $generated@@327) $generated@@161)) (= $generated@@325 ($generated@@266 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@189 $generated@@325))
)))
(assert  (and (and (forall (($generated@@332 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@332)) 18)) (forall (($generated@@333 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
))) (forall (($generated@@334 T@T) ) (! (= (type ($generated@@328 $generated@@334)) ($generated@@330 $generated@@334))
 :pattern ( ($generated@@328 $generated@@334))
))))
(assert (forall (($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@335)) 0)
 :pattern ( ($generated@@328 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@86) ($generated@@303 $generated@@336)) (= $generated@@336 $generated@@84))
 :pattern ( ($generated@@303 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@86) ($generated@@313 $generated@@337)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@86) (= $generated@@337 ($generated@@85 $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@313 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@2) (= ($generated@@154 $generated@@339 $generated@@165) (<= ($generated@@83 0) ($generated $generated@@339))))
 :pattern ( ($generated@@154 $generated@@339 $generated@@165))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@86)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) $generated@@81) (= (type $generated@@344) $generated@@161)) (= (type $generated@@345) $generated@@86)) (or ($generated@@340 ($generated@@296 $generated@@344) $generated@@345) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@345 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@344)) (=> ($generated@@313 $generated@@345) (let (($generated@@346 ($generated@@341 $generated@@345)))
($generated@@340 ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@346)))) (=> (=> (< 0 ($generated@@182 $generated@@344)) (ite ($generated@@313 $generated@@345) (let (($generated@@347 ($generated@@341 $generated@@345)))
($generated@@318 ($generated@@80 $generated@@343) ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@347)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@344)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@161) ($generated@@160 $generated@@348 $generated@@344)) ($generated@@340 $generated@@348 $generated@@345))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) $generated@@348 $generated@@345))
))))) (= ($generated@@318 ($generated@@80 $generated@@343) ($generated@@296 $generated@@344) $generated@@345)  (and (=> (< 0 ($generated@@182 $generated@@344)) (ite ($generated@@313 $generated@@345) (let (($generated@@349 ($generated@@341 $generated@@345)))
($generated@@318 ($generated@@80 $generated@@343) ($generated@@180 $generated@@344 ($generated@@181 1)) $generated@@349)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@344)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@161) ($generated@@160 $generated@@350 $generated@@344)) ($generated@@318 ($generated@@80 $generated@@343) $generated@@350 $generated@@345))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) $generated@@350 $generated@@345))
)))))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@80 $generated@@343) ($generated@@296 $generated@@344) $generated@@345))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@81) (= (type $generated@@352) $generated@@161)) (= (type $generated@@353) $generated@@86)) (= ($generated@@318 ($generated@@80 $generated@@351) $generated@@352 $generated@@353) ($generated@@318 $generated@@351 $generated@@352 $generated@@353)))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@351) $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 Int) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@81) (= (type $generated@@356) $generated@@86)) (= ($generated@@156 ($generated@@80 $generated@@354) $generated@@355 $generated@@356) ($generated@@156 $generated@@354 $generated@@355 $generated@@356)))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@354) $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@161)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@70) (= (type $generated@@361) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@306 ($generated@@357 $generated@@359) $generated@@360 $generated@@361) ($generated@@95 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@306 ($generated@@357 $generated@@359) $generated@@360 $generated@@361))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (and (= (type $generated@@362) $generated@@81) (or ($generated@@82 $generated@@363) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@363)))) ($generated@@154 ($generated@@79 $generated@@362 $generated@@363) $generated@@155))
 :pattern ( ($generated@@79 $generated@@362 $generated@@363))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@81) (= (type $generated@@365) $generated@@86)) (and ($generated@@154 $generated@@365 $generated@@155) ($generated@@173 ($generated@@80 $generated@@364) $generated@@365))) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@161) ($generated@@318 ($generated@@80 $generated@@364) $generated@@366 $generated@@365))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@364) $generated@@366 $generated@@365))
)))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@364) $generated@@365))
))))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@97 $generated@@369 $generated@@2))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@100 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@97 $generated@@371 $generated@@2)) (and (= (= ($generated@@367 $generated@@370) 0) (= $generated@@370 ($generated@@368 $generated@@371))) (=> (not (= ($generated@@367 $generated@@370) 0)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (< 0 ($generated ($generated@@102 $generated@@370 $generated@@372))))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 19)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@97 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@102 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@102 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 20)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@97 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@102 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@102 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@161) (= (type $generated@@411) $generated@@161)) (and ($generated@@409 $generated@@411) (<= ($generated@@182 $generated@@411) ($generated@@182 $generated@@410)))) (and (= ($generated@@409 ($generated@@180 $generated@@410 $generated@@411)) ($generated@@409 $generated@@410)) (= ($generated@@182 ($generated@@180 $generated@@410 $generated@@411)) (- ($generated@@182 $generated@@410) ($generated@@182 $generated@@411)))))
 :pattern ( ($generated@@180 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 Int) ) (!  (=> (<= 0 $generated@@412) (and ($generated@@409 ($generated@@181 $generated@@412)) (= ($generated@@182 ($generated@@181 $generated@@412)) $generated@@412)))
 :pattern ( ($generated@@181 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@100 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@97 $generated@@414 $generated@@2)) (= ($generated@@206 $generated@@413) (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@414) (and (<= 0 ($generated ($generated@@102 $generated@@413 $generated@@415))) (<= ($generated ($generated@@102 $generated@@413 $generated@@415)) ($generated@@367 $generated@@413))))
 :pattern ( ($generated@@102 $generated@@413 $generated@@415))
)))))
 :pattern ( ($generated@@206 $generated@@413))
)))
(assert (forall (($generated@@417 T@T) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@161) ($generated@@267 $generated@@419 $generated@@165)) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@419)) $generated@@419) ($generated@@154 ($generated@@416 $generated@@2 $generated@@419) $generated@@165)))
 :pattern ( ($generated@@267 $generated@@419 $generated@@165))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@161) ($generated@@267 $generated@@420 $generated@@155)) (and (= ($generated@@357 ($generated@@416 $generated@@86 $generated@@420)) $generated@@420) ($generated@@154 ($generated@@416 $generated@@86 $generated@@420) $generated@@155)))
 :pattern ( ($generated@@267 $generated@@420 $generated@@155))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@81) (= (type $generated@@422) $generated@@161)) (= (type $generated@@423) $generated@@86)) (or ($generated@@340 $generated@@422 $generated@@423) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@423 $generated@@155)))) true)
 :pattern ( ($generated@@318 $generated@@421 $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@86) (= ($generated@@154 ($generated@@85 $generated@@424) $generated@@155) ($generated@@154 $generated@@424 $generated@@155)))
 :pattern ( ($generated@@154 ($generated@@85 $generated@@424) $generated@@155))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@86) (= (type $generated@@426) $generated@@86)) (and ($generated@@313 $generated@@425) ($generated@@313 $generated@@426))) (= ($generated@@282 $generated@@425 $generated@@426) ($generated@@282 ($generated@@341 $generated@@425) ($generated@@341 $generated@@426))))
 :pattern ( ($generated@@282 $generated@@425 $generated@@426) ($generated@@313 $generated@@425))
 :pattern ( ($generated@@282 $generated@@425 $generated@@426) ($generated@@313 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@377 (type $generated@@427))))
(let (($generated@@429 ($generated@@376 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@375 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@374 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@377 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@97 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@377 (type $generated@@434))))
(let (($generated@@436 ($generated@@376 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@375 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@374 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@102 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@395 (type $generated@@438))))
(let (($generated@@440 ($generated@@394 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@393 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@392 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@391 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@395 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@97 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@395 (type $generated@@445))))
(let (($generated@@447 ($generated@@394 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@393 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@392 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@102 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) $generated@@81) (= (type $generated@@450) $generated@@161)) (= (type $generated@@451) $generated@@86)) (or ($generated@@340 ($generated@@296 $generated@@450) ($generated@@296 $generated@@451)) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@451 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@450)) (=> ($generated@@313 $generated@@451) (let (($generated@@452 ($generated@@341 $generated@@451)))
($generated@@340 ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@452)))) (=> (=> (< 0 ($generated@@182 $generated@@450)) (ite ($generated@@313 $generated@@451) (let (($generated@@453 ($generated@@341 $generated@@451)))
($generated@@318 ($generated@@80 $generated@@449) ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@453)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@450)) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@161) ($generated@@160 $generated@@454 $generated@@450)) ($generated@@340 $generated@@454 $generated@@451))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) $generated@@454 $generated@@451))
))))) (= ($generated@@318 ($generated@@80 $generated@@449) ($generated@@296 $generated@@450) ($generated@@296 $generated@@451))  (and (=> (< 0 ($generated@@182 $generated@@450)) (ite ($generated@@313 $generated@@451) (let (($generated@@455 ($generated@@341 $generated@@451)))
($generated@@318 ($generated@@80 $generated@@449) ($generated@@180 $generated@@450 ($generated@@181 1)) $generated@@455)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@450)) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@161) ($generated@@160 $generated@@456 $generated@@450)) ($generated@@318 ($generated@@80 $generated@@449) $generated@@456 $generated@@451))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) $generated@@456 $generated@@451))
)))))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@80 $generated@@449) ($generated@@296 $generated@@450) ($generated@@296 $generated@@451)))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@458) $generated@@70)) (= ($generated@@154 $generated@@457 ($generated@@205 $generated@@458)) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@161) (< 0 ($generated ($generated@@102 $generated@@457 $generated@@459)))) ($generated@@267 $generated@@459 $generated@@458))
 :pattern ( ($generated@@102 $generated@@457 $generated@@459))
))))
 :pattern ( ($generated@@154 $generated@@457 ($generated@@205 $generated@@458)))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@161) (= (type $generated@@461) $generated@@161)) (or (or ($generated@@160 $generated@@460 $generated@@461) (= $generated@@460 $generated@@461)) ($generated@@160 $generated@@461 $generated@@460)))
 :pattern ( ($generated@@160 $generated@@460 $generated@@461) ($generated@@160 $generated@@461 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@462 ($generated@@285 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@161) ($generated@@0 ($generated@@102 $generated@@462 $generated@@465))) ($generated@@306 $generated@@465 $generated@@463 $generated@@464))
 :pattern ( ($generated@@102 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@95 $generated@@462 ($generated@@285 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@97 $generated@@161 $generated@@4)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@466 ($generated@@290 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@161) ($generated@@0 ($generated@@102 $generated@@466 $generated@@469))) ($generated@@306 $generated@@469 $generated@@467 $generated@@468))
 :pattern ( ($generated@@102 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@95 $generated@@466 ($generated@@290 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(= ($generated ($generated@@102 ($generated@@368 $generated@@471) $generated@@470)) 0))
 :pattern ( (let (($generated@@471 (type $generated@@470)))
($generated@@102 ($generated@@368 $generated@@471) $generated@@470)))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) ($generated@@97 $generated@@161 $generated@@4))
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@377 (type $generated@@475))))
(let (($generated@@477 ($generated@@376 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475)) ($generated@@97 $generated@@477 $generated@@476))))
 :pattern ( ($generated@@473 $generated@@475))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@479) $generated@@161)) (= ($generated@@0 ($generated@@102 ($generated@@472 $generated@@478) $generated@@479))  (and ($generated@@0 ($generated@@102 ($generated@@373 $generated@@478) ($generated@@197 ($generated@@416 $generated@@86 $generated@@479)))) (= ($generated@@102 ($generated@@473 $generated@@478) ($generated@@197 ($generated@@416 $generated@@86 $generated@@479))) ($generated@@198 ($generated@@416 $generated@@86 $generated@@479))))))
 :pattern ( ($generated@@102 ($generated@@472 $generated@@478) $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) ($generated@@97 $generated@@161 $generated@@4))
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@395 (type $generated@@483))))
(let (($generated@@485 ($generated@@394 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483)) ($generated@@97 $generated@@485 $generated@@484))))
 :pattern ( ($generated@@481 $generated@@483))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@487) $generated@@161)) (= ($generated@@0 ($generated@@102 ($generated@@480 $generated@@486) $generated@@487))  (and ($generated@@0 ($generated@@102 ($generated@@391 $generated@@486) ($generated@@197 ($generated@@416 $generated@@86 $generated@@487)))) (= ($generated@@102 ($generated@@481 $generated@@486) ($generated@@197 ($generated@@416 $generated@@86 $generated@@487))) ($generated@@198 ($generated@@416 $generated@@86 $generated@@487))))))
 :pattern ( ($generated@@102 ($generated@@480 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(let (($generated@@491 ($generated@@376 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@375 $generated@@491 $generated@@490)) (= ($generated@@0 ($generated@@102 ($generated@@431 $generated@@488) $generated@@489)) (exists (($generated@@492 T@U) ) (!  (and (= (type $generated@@492) $generated@@491) (and ($generated@@0 ($generated@@102 ($generated@@373 $generated@@488) $generated@@492)) (= $generated@@489 ($generated@@102 ($generated@@473 $generated@@488) $generated@@492))))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@488) $generated@@492))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@488) $generated@@492))
))))))
 :pattern ( ($generated@@102 ($generated@@431 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(let (($generated@@496 ($generated@@394 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@393 $generated@@496 $generated@@495)) (= ($generated@@0 ($generated@@102 ($generated@@442 $generated@@493) $generated@@494)) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@496) (and ($generated@@0 ($generated@@102 ($generated@@391 $generated@@493) $generated@@497)) (= $generated@@494 ($generated@@102 ($generated@@481 $generated@@493) $generated@@497))))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@493) $generated@@497))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@493) $generated@@497))
))))))
 :pattern ( ($generated@@102 ($generated@@442 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@502) $generated@@70)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@501) $generated@@505))) (and ($generated@@306 ($generated@@102 ($generated@@473 $generated@@501) $generated@@505) $generated@@503 $generated@@504) ($generated@@306 $generated@@505 $generated@@502 $generated@@504)))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@501) $generated@@505))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@501) $generated@@505))
))))
 :pattern ( ($generated@@95 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@510) $generated@@70)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@509) $generated@@513))) (and ($generated@@306 ($generated@@102 ($generated@@481 $generated@@509) $generated@@513) $generated@@511 $generated@@512) ($generated@@306 $generated@@513 $generated@@510 $generated@@512)))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@509) $generated@@513))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@509) $generated@@513))
))))
 :pattern ( ($generated@@95 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@81)
 :pattern ( ($generated@@514 $generated@@516))
)) (= (type $generated@@515) $generated@@81)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@81) (= (type $generated@@518) $generated@@86)) (= ($generated@@169 $generated@@517 $generated@@518) ($generated@@169 $generated@@515 $generated@@518)))
 :pattern ( ($generated@@169 ($generated@@514 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@81) (= (type $generated@@520) $generated@@86)) (= ($generated@@173 $generated@@519 $generated@@520) ($generated@@173 $generated@@515 $generated@@520)))
 :pattern ( ($generated@@173 ($generated@@514 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@81) (= (type $generated@@522) $generated@@86)) (= ($generated@@153 $generated@@521 $generated@@522) ($generated@@153 $generated@@515 $generated@@522)))
 :pattern ( ($generated@@153 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@86) (= (type $generated@@524) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@274 $generated@@524)) (= ($generated@@95 ($generated@@85 $generated@@523) $generated@@155 $generated@@524) ($generated@@95 $generated@@523 $generated@@155 $generated@@524)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@523) $generated@@155 $generated@@524))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@81) (= (type $generated@@526) $generated@@161)) (= (type $generated@@527) $generated@@86)) (or ($generated@@340 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) ($generated@@154 $generated@@527 $generated@@155)))) (and (and (=> (< 0 ($generated@@182 $generated@@526)) (=> ($generated@@313 $generated@@527) (let (($generated@@528 ($generated@@341 $generated@@527)))
($generated@@340 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@528)))) (=> (=> (< 0 ($generated@@182 $generated@@526)) (ite ($generated@@313 $generated@@527) (let (($generated@@529 ($generated@@341 $generated@@527)))
($generated@@318 $generated@@525 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@529)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@526)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@161) ($generated@@160 $generated@@530 $generated@@526)) ($generated@@340 $generated@@530 $generated@@527))
 :pattern ( ($generated@@318 $generated@@525 $generated@@530 $generated@@527))
))))) (= ($generated@@318 ($generated@@80 $generated@@525) $generated@@526 $generated@@527)  (and (=> (< 0 ($generated@@182 $generated@@526)) (ite ($generated@@313 $generated@@527) (let (($generated@@531 ($generated@@341 $generated@@527)))
($generated@@318 $generated@@525 ($generated@@180 $generated@@526 ($generated@@181 1)) $generated@@531)) true)) (=> (= ($generated@@83 0) ($generated@@182 $generated@@526)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@160 $generated@@532 $generated@@526)) ($generated@@318 $generated@@525 $generated@@532 $generated@@527))
 :pattern ( ($generated@@318 $generated@@525 $generated@@532 $generated@@527))
)))))))
 :pattern ( ($generated@@318 ($generated@@80 $generated@@525) $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@86) ($generated@@154 $generated@@533 $generated@@155)) (or ($generated@@313 $generated@@533) ($generated@@303 $generated@@533)))
 :pattern ( ($generated@@303 $generated@@533) ($generated@@154 $generated@@533 $generated@@155))
 :pattern ( ($generated@@313 $generated@@533) ($generated@@154 $generated@@533 $generated@@155))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@534 T@U) ($generated@@535 Int) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@81) (= (type $generated@@536) $generated@@86)) (or ($generated@@276 ($generated@@83 $generated@@535) $generated@@536) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@535) ($generated@@154 $generated@@536 $generated@@155))))) (and (=> (< 0 $generated@@535) (=> ($generated@@313 $generated@@536) (let (($generated@@537 ($generated@@341 $generated@@536)))
($generated@@276 (- $generated@@535 1) $generated@@537)))) (= ($generated@@156 ($generated@@80 $generated@@534) ($generated@@83 $generated@@535) $generated@@536)  (=> (< 0 $generated@@535) (ite ($generated@@313 $generated@@536) (let (($generated@@538 ($generated@@341 $generated@@536)))
($generated@@156 ($generated@@80 $generated@@534) (- $generated@@535 1) $generated@@538)) true)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@80 $generated@@534) ($generated@@83 $generated@@535) $generated@@536))
))))
(assert (forall (($generated@@540 T@T) ) (! (= (type ($generated@@539 $generated@@540)) ($generated@@97 $generated@@540 $generated@@4))
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@395 (type $generated@@541))))
(let (($generated@@543 ($generated@@394 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@393 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@392 $generated@@543 $generated@@542)) (= ($generated@@391 $generated@@541) ($generated@@539 $generated@@543))))))
 :pattern ( ($generated@@391 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@395 (type $generated@@544))))
(let (($generated@@546 ($generated@@394 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@393 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@392 $generated@@546 $generated@@545)) (= ($generated@@442 $generated@@544) ($generated@@539 $generated@@545))))))
 :pattern ( ($generated@@442 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@395 (type $generated@@547))))
(let (($generated@@549 ($generated@@394 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@393 $generated@@549 $generated@@548)) (= (= $generated@@547 ($generated@@392 $generated@@549 $generated@@548)) (= ($generated@@480 $generated@@547) ($generated@@539 $generated@@161))))))
 :pattern ( ($generated@@480 $generated@@547))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@377 (type $generated@@550))))
(let (($generated@@552 ($generated@@376 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@375 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@374 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@161) (= (type $generated@@554) $generated@@161)) ($generated@@0 ($generated@@102 ($generated@@472 $generated@@550) ($generated@@357 ($generated@@266 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@472 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@395 (type $generated@@555))))
(let (($generated@@557 ($generated@@394 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@393 $generated@@557 $generated@@556)) (or (= $generated@@555 ($generated@@392 $generated@@557 $generated@@556)) (exists (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@161)) ($generated@@0 ($generated@@102 ($generated@@480 $generated@@555) ($generated@@357 ($generated@@266 $generated@@558 $generated@@559)))))
 :no-pattern (type $generated@@558)
 :no-pattern (type $generated@@559)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
))))))
 :pattern ( ($generated@@480 $generated@@555))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@161) ($generated@@267 $generated@@560 $generated@@46)) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@560)) $generated@@560) ($generated@@154 ($generated@@416 $generated@@2 $generated@@560) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@560 $generated@@46))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@161) ($generated@@267 $generated@@561 $generated@@47)) (and (= ($generated@@357 ($generated@@416 $generated@@3 $generated@@561)) $generated@@561) ($generated@@154 ($generated@@416 $generated@@3 $generated@@561) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@561 $generated@@47))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@161) ($generated@@267 $generated@@562 $generated@@44)) (and (= ($generated@@357 ($generated@@416 $generated@@4 $generated@@562)) $generated@@562) ($generated@@154 ($generated@@416 $generated@@4 $generated@@562) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@562 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@563) 21))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@161) ($generated@@267 $generated@@564 $generated@@45)) (and (= ($generated@@357 ($generated@@416 $generated@@563 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@416 $generated@@563 $generated@@564) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@564 $generated@@45))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) (= (type $generated@@566) $generated@@86)) (= ($generated@@169 ($generated@@80 $generated@@565) $generated@@566) ($generated@@169 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@81) (= (type $generated@@568) $generated@@86)) (= ($generated@@173 ($generated@@80 $generated@@567) $generated@@568) ($generated@@173 $generated@@567 $generated@@568)))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) (= (type $generated@@570) $generated@@86)) (= ($generated@@153 ($generated@@80 $generated@@569) $generated@@570) ($generated@@153 $generated@@569 $generated@@570)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@267 ($generated@@357 $generated@@571) $generated@@572) ($generated@@154 $generated@@571 $generated@@572)))
 :pattern ( ($generated@@267 ($generated@@357 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (<= 0 ($generated@@182 $generated@@573)))
 :pattern ( ($generated@@182 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@100 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@97 $generated@@575 $generated@@2)) (<= 0 ($generated@@367 $generated@@574))))
 :pattern ( ($generated@@367 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@331 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@330 $generated@@577)) (<= 0 ($generated@@329 $generated@@576))))
 :pattern ( ($generated@@329 $generated@@576))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@70)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@70) (= (type $generated@@581) $generated@@70)) (= ($generated@@578 ($generated@@498 $generated@@580 $generated@@581)) $generated@@580))
 :pattern ( ($generated@@498 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@70)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@70) (= (type $generated@@585) $generated@@70)) (= ($generated@@582 ($generated@@498 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@498 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@70)) (= ($generated@@93 ($generated@@498 $generated@@586 $generated@@587)) $generated@@58))
 :pattern ( ($generated@@498 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@70)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@70) (= (type $generated@@591) $generated@@70)) (= ($generated@@588 ($generated@@506 $generated@@590 $generated@@591)) $generated@@590))
 :pattern ( ($generated@@506 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@70)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@70) (= (type $generated@@595) $generated@@70)) (= ($generated@@592 ($generated@@506 $generated@@594 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@506 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@70) (= (type $generated@@597) $generated@@70)) (= ($generated@@93 ($generated@@506 $generated@@596 $generated@@597)) $generated@@59))
 :pattern ( ($generated@@506 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@161) (= (type $generated@@599) $generated@@161)) (= ($generated@@203 ($generated@@266 $generated@@598 $generated@@599)) $generated@@62))
 :pattern ( ($generated@@266 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@70)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@70)) (= ($generated@@600 ($generated@@190 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@190 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@70)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= ($generated@@604 ($generated@@190 $generated@@606 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@190 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@161) (= (type $generated@@609) $generated@@161)) (= ($generated@@197 ($generated@@266 $generated@@608 $generated@@609)) $generated@@608))
 :pattern ( ($generated@@266 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@161) (= (type $generated@@611) $generated@@161)) (= ($generated@@198 ($generated@@266 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@266 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) $generated@@81) (= ($generated@@79 $generated@@612 $generated@@613) ($generated@@79 $generated@@515 $generated@@613)))
 :pattern ( ($generated@@79 ($generated@@514 $generated@@612) $generated@@613))
)))
(assert  (and (forall (($generated@@616 T@U) ) (! (= (type ($generated@@614 $generated@@616)) $generated@@70)
 :pattern ( ($generated@@614 $generated@@616))
)) (forall (($generated@@617 T@U) ($generated@@618 Int) ) (! (let (($generated@@619 ($generated@@331 (type $generated@@617))))
(= (type ($generated@@615 $generated@@617 $generated@@618)) $generated@@619))
 :pattern ( ($generated@@615 $generated@@617 $generated@@618))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@330 $generated@@161)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@620 ($generated@@614 $generated@@621) $generated@@622) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@329 $generated@@620))) ($generated@@306 ($generated@@615 $generated@@620 $generated@@623) $generated@@621 $generated@@622))
 :pattern ( ($generated@@615 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@95 $generated@@620 ($generated@@614 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@624 ($generated@@96 $generated@@625)) $generated@@625)
 :pattern ( ($generated@@96 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (! (= (type ($generated@@626 $generated@@627)) $generated@@70)
 :pattern ( ($generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@70) (= ($generated@@626 ($generated@@285 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@285 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@70) (= ($generated@@93 ($generated@@285 $generated@@629)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@70)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@70) (= ($generated@@630 ($generated@@290 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@290 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@70) (= ($generated@@93 ($generated@@290 $generated@@633)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@70)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@70) (= ($generated@@634 ($generated@@205 $generated@@636)) $generated@@636))
 :pattern ( ($generated@@205 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@70) (= ($generated@@93 ($generated@@205 $generated@@637)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (! (= (type ($generated@@638 $generated@@639)) $generated@@70)
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@70) (= ($generated@@638 ($generated@@614 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@614 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@70) (= ($generated@@93 ($generated@@614 $generated@@641)) $generated@@57))
 :pattern ( ($generated@@614 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@86) (= ($generated@@203 ($generated@@85 $generated@@642)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@86) (= ($generated@@341 ($generated@@85 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@85 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@644)))
(= ($generated@@416 $generated@@645 ($generated@@357 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@357 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@647) $generated@@70)) (= (type $generated@@648) $generated@@70)) (= ($generated@@154 $generated@@646 ($generated@@498 $generated@@647 $generated@@648)) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@373 $generated@@646) $generated@@649))) (and ($generated@@267 ($generated@@102 ($generated@@473 $generated@@646) $generated@@649) $generated@@648) ($generated@@267 $generated@@649 $generated@@647)))
 :pattern ( ($generated@@102 ($generated@@473 $generated@@646) $generated@@649))
 :pattern ( ($generated@@102 ($generated@@373 $generated@@646) $generated@@649))
))))
 :pattern ( ($generated@@154 $generated@@646 ($generated@@498 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) (= ($generated@@154 $generated@@650 ($generated@@506 $generated@@651 $generated@@652)) (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@161) ($generated@@0 ($generated@@102 ($generated@@391 $generated@@650) $generated@@653))) (and ($generated@@267 ($generated@@102 ($generated@@481 $generated@@650) $generated@@653) $generated@@652) ($generated@@267 $generated@@653 $generated@@651)))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@650) $generated@@653))
 :pattern ( ($generated@@102 ($generated@@391 $generated@@650) $generated@@653))
))))
 :pattern ( ($generated@@154 $generated@@650 ($generated@@506 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@161) (= (type $generated@@655) $generated@@161)) (and (and (and (=> ($generated@@160 $generated@@654 $generated@@655) (not (= $generated@@654 $generated@@655))) (=> (and ($generated@@409 $generated@@654) (not ($generated@@409 $generated@@655))) ($generated@@160 $generated@@654 $generated@@655))) (=> (and ($generated@@409 $generated@@654) ($generated@@409 $generated@@655)) (= ($generated@@160 $generated@@654 $generated@@655) (< ($generated@@182 $generated@@654) ($generated@@182 $generated@@655))))) (=> (and ($generated@@160 $generated@@654 $generated@@655) ($generated@@409 $generated@@655)) ($generated@@409 $generated@@654))))
 :pattern ( ($generated@@160 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@161) (= (type $generated@@659) $generated@@161)) (< ($generated@@656 $generated@@658) ($generated@@657 ($generated@@266 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@266 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@161) (= (type $generated@@661) $generated@@161)) (< ($generated@@656 $generated@@661) ($generated@@657 ($generated@@266 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@266 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@662) $generated@@663) ($generated@@79 $generated@@662 $generated@@663)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@662) $generated@@663))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@664 T@U) ($generated@@665 Int) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@81) (= (type $generated@@666) $generated@@86)) (or ($generated@@276 ($generated@@83 $generated@@665) ($generated@@296 $generated@@666)) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@665) ($generated@@154 $generated@@666 $generated@@155))))) (and (=> (< 0 $generated@@665) (=> ($generated@@313 $generated@@666) (let (($generated@@667 ($generated@@341 $generated@@666)))
($generated@@276 (- $generated@@665 1) $generated@@667)))) (= ($generated@@156 ($generated@@80 $generated@@664) ($generated@@83 $generated@@665) ($generated@@296 $generated@@666))  (=> (< 0 $generated@@665) (ite ($generated@@313 $generated@@666) (let (($generated@@668 ($generated@@341 $generated@@666)))
($generated@@156 ($generated@@80 $generated@@664) (- $generated@@665 1) $generated@@668)) true)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@80 $generated@@664) ($generated@@83 $generated@@665) ($generated@@296 $generated@@666)))
))))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@161) (= (type $generated@@670) $generated@@70)) (= (type $generated@@671) $generated@@70)) ($generated@@267 $generated@@669 ($generated@@498 $generated@@670 $generated@@671))) (and (= ($generated@@357 ($generated@@416 ($generated@@375 $generated@@161 $generated@@161) $generated@@669)) $generated@@669) ($generated@@154 ($generated@@416 ($generated@@375 $generated@@161 $generated@@161) $generated@@669) ($generated@@498 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@267 $generated@@669 ($generated@@498 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@161) (= (type $generated@@673) $generated@@70)) (= (type $generated@@674) $generated@@70)) ($generated@@267 $generated@@672 ($generated@@506 $generated@@673 $generated@@674))) (and (= ($generated@@357 ($generated@@416 ($generated@@393 $generated@@161 $generated@@161) $generated@@672)) $generated@@672) ($generated@@154 ($generated@@416 ($generated@@393 $generated@@161 $generated@@161) $generated@@672) ($generated@@506 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@267 $generated@@672 ($generated@@506 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@70) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) $generated@@161)) ($generated@@267 $generated@@677 ($generated@@190 $generated@@675 $generated@@676))) (and (= ($generated@@357 ($generated@@416 $generated@@86 $generated@@677)) $generated@@677) ($generated@@154 ($generated@@416 $generated@@86 $generated@@677) ($generated@@190 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@267 $generated@@677 ($generated@@190 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@86) (< ($generated@@657 $generated@@678) ($generated@@657 ($generated@@85 $generated@@678))))
 :pattern ( ($generated@@85 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@679)))
 (not ($generated@@0 ($generated@@102 ($generated@@539 $generated@@680) $generated@@679))))
 :pattern ( (let (($generated@@680 (type $generated@@679)))
($generated@@102 ($generated@@539 $generated@@680) $generated@@679)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@681 T@U) ($generated@@682 Int) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@81) (= (type $generated@@683) $generated@@86)) (or ($generated@@276 $generated@@682 $generated@@683) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@682) ($generated@@154 $generated@@683 $generated@@155))))) (and (=> (< 0 $generated@@682) (=> ($generated@@313 $generated@@683) (let (($generated@@684 ($generated@@341 $generated@@683)))
($generated@@276 (- $generated@@682 1) $generated@@684)))) (= ($generated@@156 ($generated@@80 $generated@@681) $generated@@682 $generated@@683)  (=> (< 0 $generated@@682) (ite ($generated@@313 $generated@@683) (let (($generated@@685 ($generated@@341 $generated@@683)))
($generated@@156 $generated@@681 (- $generated@@682 1) $generated@@685)) true)))))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@681) $generated@@682 $generated@@683))
))))
(assert (forall (($generated@@687 T@U) ) (! (= (type ($generated@@686 $generated@@687)) $generated@@75)
 :pattern ( ($generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@70) (= (type $generated@@689) $generated@@70)) (and (= ($generated@@93 ($generated@@190 $generated@@688 $generated@@689)) $generated@@63) (= ($generated@@686 ($generated@@190 $generated@@688 $generated@@689)) $generated@@68)))
 :pattern ( ($generated@@190 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@86) (= ($generated@@656 ($generated@@357 $generated@@690)) ($generated@@657 $generated@@690)))
 :pattern ( ($generated@@656 ($generated@@357 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@161) ($generated@@267 $generated@@691 ($generated@@96 0))) (and (= ($generated@@357 ($generated@@416 $generated@@2 $generated@@691)) $generated@@691) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@691) ($generated@@96 0))))
 :pattern ( ($generated@@267 $generated@@691 ($generated@@96 0)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@161) (= (type $generated@@693) $generated@@70)) ($generated@@267 $generated@@692 ($generated@@285 $generated@@693))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@692)) $generated@@692) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@692) ($generated@@285 $generated@@693))))
 :pattern ( ($generated@@267 $generated@@692 ($generated@@285 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@161) (= (type $generated@@695) $generated@@70)) ($generated@@267 $generated@@694 ($generated@@290 $generated@@695))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@694)) $generated@@694) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@4) $generated@@694) ($generated@@290 $generated@@695))))
 :pattern ( ($generated@@267 $generated@@694 ($generated@@290 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@161) (= (type $generated@@697) $generated@@70)) ($generated@@267 $generated@@696 ($generated@@205 $generated@@697))) (and (= ($generated@@357 ($generated@@416 ($generated@@97 $generated@@161 $generated@@2) $generated@@696)) $generated@@696) ($generated@@154 ($generated@@416 ($generated@@97 $generated@@161 $generated@@2) $generated@@696) ($generated@@205 $generated@@697))))
 :pattern ( ($generated@@267 $generated@@696 ($generated@@205 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@161) (= (type $generated@@699) $generated@@70)) ($generated@@267 $generated@@698 ($generated@@614 $generated@@699))) (and (= ($generated@@357 ($generated@@416 ($generated@@330 $generated@@161) $generated@@698)) $generated@@698) ($generated@@154 ($generated@@416 ($generated@@330 $generated@@161) $generated@@698) ($generated@@614 $generated@@699))))
 :pattern ( ($generated@@267 $generated@@698 ($generated@@614 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@161) ($generated@@409 $generated@@700)) (= $generated@@700 ($generated@@181 ($generated@@182 $generated@@700))))
 :pattern ( ($generated@@182 $generated@@700))
 :pattern ( ($generated@@409 $generated@@700))
)))
(assert (= ($generated@@93 $generated@@165) $generated@@61))
(assert (= ($generated@@686 $generated@@165) $generated@@67))
(assert (= ($generated@@93 $generated@@155) $generated@@65))
(assert (= ($generated@@686 $generated@@155) $generated@@69))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@701) ($generated@@97 $generated@@161 $generated@@2)) (= (type $generated@@702) $generated@@70)) (= (type $generated@@703) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@701 ($generated@@205 $generated@@702) $generated@@703) (forall (($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@704) $generated@@161) (< 0 ($generated ($generated@@102 $generated@@701 $generated@@704)))) ($generated@@306 $generated@@704 $generated@@702 $generated@@703))
 :pattern ( ($generated@@102 $generated@@701 $generated@@704))
))))
 :pattern ( ($generated@@95 $generated@@701 ($generated@@205 $generated@@702) $generated@@703))
)))
(assert (= $generated@@84 ($generated@@296 $generated@@84)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) $generated@@161) (= (type $generated@@706) $generated@@161)) (and ($generated@@409 $generated@@706) (<= ($generated@@182 $generated@@706) ($generated@@182 $generated@@705)))) (or (and (= $generated@@706 ($generated@@181 0)) (= ($generated@@180 $generated@@705 $generated@@706) $generated@@705)) (and (not (= $generated@@706 ($generated@@181 0))) ($generated@@160 ($generated@@180 $generated@@705 $generated@@706) $generated@@705))))
 :pattern ( ($generated@@180 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) $generated@@86) (= (type $generated@@708) $generated@@70)) (= (type $generated@@709) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@709) (and ($generated@@189 $generated@@707) (exists (($generated@@710 T@U) ) (!  (and (= (type $generated@@710) $generated@@70) ($generated@@95 $generated@@707 ($generated@@190 $generated@@708 $generated@@710) $generated@@709))
 :pattern ( ($generated@@95 $generated@@707 ($generated@@190 $generated@@708 $generated@@710) $generated@@709))
))))) ($generated@@306 ($generated@@197 $generated@@707) $generated@@708 $generated@@709))
 :pattern ( ($generated@@306 ($generated@@197 $generated@@707) $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) $generated@@86) (= (type $generated@@712) $generated@@70)) (= (type $generated@@713) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@713) (and ($generated@@189 $generated@@711) (exists (($generated@@714 T@U) ) (!  (and (= (type $generated@@714) $generated@@70) ($generated@@95 $generated@@711 ($generated@@190 $generated@@714 $generated@@712) $generated@@713))
 :pattern ( ($generated@@95 $generated@@711 ($generated@@190 $generated@@714 $generated@@712) $generated@@713))
))))) ($generated@@306 ($generated@@198 $generated@@711) $generated@@712 $generated@@713))
 :pattern ( ($generated@@306 ($generated@@198 $generated@@711) $generated@@712 $generated@@713))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@81) (= (type $generated@@716) $generated@@86)) (or ($generated@@170 ($generated@@296 $generated@@716)) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@716 $generated@@155)))) (and (=> ($generated@@0 ($generated@@296 ($generated@@11 ($generated@@313 ($generated@@296 $generated@@716))))) (let (($generated@@717 ($generated@@296 ($generated@@341 ($generated@@296 $generated@@716)))))
($generated@@170 $generated@@717))) (= ($generated@@169 ($generated@@80 $generated@@715) ($generated@@296 $generated@@716)) (ite ($generated@@313 ($generated@@296 $generated@@716)) ($generated@@0 (let (($generated@@718 ($generated@@296 ($generated@@341 ($generated@@296 $generated@@716)))))
($generated@@296 ($generated@@11 ($generated@@169 ($generated@@80 $generated@@715) $generated@@718))))) true))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@80 $generated@@715) ($generated@@296 $generated@@716)))
))))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@86) (= (type $generated@@720) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@274 $generated@@720) (and ($generated@@313 $generated@@719) ($generated@@95 $generated@@719 $generated@@155 $generated@@720)))) ($generated@@95 ($generated@@341 $generated@@719) $generated@@155 $generated@@720))
 :pattern ( ($generated@@95 ($generated@@341 $generated@@719) $generated@@155 $generated@@720))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@81) (= (type $generated@@722) $generated@@86)) (or ($generated@@170 $generated@@722) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@722 $generated@@155)))) (and (=> ($generated@@313 $generated@@722) (let (($generated@@723 ($generated@@341 $generated@@722)))
($generated@@170 $generated@@723))) (= ($generated@@169 ($generated@@80 $generated@@721) $generated@@722) (ite ($generated@@313 $generated@@722) (let (($generated@@724 ($generated@@341 $generated@@722)))
($generated@@169 $generated@@721 $generated@@724)) true))))
 :pattern ( ($generated@@169 ($generated@@80 $generated@@721) $generated@@722))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@725) $generated@@81) (= (type $generated@@726) $generated@@86)) (or ($generated@@174 $generated@@726) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@726 $generated@@155)))) (and (=> ($generated@@313 $generated@@726) (let (($generated@@727 ($generated@@341 $generated@@726)))
($generated@@174 $generated@@727))) (= ($generated@@173 ($generated@@80 $generated@@725) $generated@@726) (ite ($generated@@313 $generated@@726) (let (($generated@@728 ($generated@@341 $generated@@726)))
($generated@@173 $generated@@725 $generated@@728)) true))))
 :pattern ( ($generated@@173 ($generated@@80 $generated@@725) $generated@@726))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@81) (= (type $generated@@730) $generated@@86)) (or ($generated@@177 $generated@@730) (and (not (= 1 $generated@@78)) ($generated@@154 $generated@@730 $generated@@155)))) (and (=> ($generated@@313 $generated@@730) (let (($generated@@731 ($generated@@341 $generated@@730)))
($generated@@177 $generated@@731))) (= ($generated@@153 ($generated@@80 $generated@@729) $generated@@730) (ite ($generated@@313 $generated@@730) (let (($generated@@732 ($generated@@341 $generated@@730)))
($generated@@153 $generated@@729 $generated@@732)) true))))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@729) $generated@@730))
))))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@161) (= (type $generated@@734) $generated@@161)) (= ($generated@@266 ($generated@@296 $generated@@733) ($generated@@296 $generated@@734)) ($generated@@296 ($generated@@266 $generated@@733 $generated@@734))))
 :pattern ( ($generated@@266 ($generated@@296 $generated@@733) ($generated@@296 $generated@@734)))
)))
(assert (forall (($generated@@735 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@83 $generated@@735))) ($generated@@296 ($generated@@357 ($generated@@8 $generated@@735))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@83 $generated@@735))))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@86) (= ($generated@@85 ($generated@@296 $generated@@736)) ($generated@@296 ($generated@@85 $generated@@736))))
 :pattern ( ($generated@@85 ($generated@@296 $generated@@736)))
)))
(assert (forall (($generated@@737 T@U) ) (! (= ($generated@@357 ($generated@@296 $generated@@737)) ($generated@@296 ($generated@@357 $generated@@737)))
 :pattern ( ($generated@@357 ($generated@@296 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@331 (type $generated@@738))))
 (=> (and (= (type $generated@@738) ($generated@@330 $generated@@739)) (= ($generated@@329 $generated@@738) 0)) (= $generated@@738 ($generated@@328 $generated@@739))))
 :pattern ( ($generated@@329 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (! (let (($generated@@743 (type $generated@@741)))
 (=> (and (and (= (type $generated@@740) ($generated@@97 $generated@@743 $generated@@2)) (= (type $generated@@742) $generated@@2)) (<= 0 ($generated $generated@@742))) (= ($generated@@367 ($generated@@103 $generated@@740 $generated@@741 $generated@@742)) (+ (- ($generated@@367 $generated@@740) ($generated ($generated@@102 $generated@@740 $generated@@741))) ($generated $generated@@742)))))
 :pattern ( ($generated@@367 ($generated@@103 $generated@@740 $generated@@741 $generated@@742)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@745) $generated@@2)) ($generated@@95 $generated@@745 $generated@@46 $generated@@744))
 :pattern ( ($generated@@95 $generated@@745 $generated@@46 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@747) $generated@@3)) ($generated@@95 $generated@@747 $generated@@47 $generated@@746))
 :pattern ( ($generated@@95 $generated@@747 $generated@@47 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@749) $generated@@4)) ($generated@@95 $generated@@749 $generated@@44 $generated@@748))
 :pattern ( ($generated@@95 $generated@@749 $generated@@44 $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@751) $generated@@563)) ($generated@@95 $generated@@751 $generated@@45 $generated@@750))
 :pattern ( ($generated@@95 $generated@@751 $generated@@45 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@753) $generated@@161)) ($generated@@95 $generated@@753 $generated@@48 $generated@@752))
 :pattern ( ($generated@@95 $generated@@753 $generated@@48 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) ($generated@@330 $generated@@161)) (= (type $generated@@755) $generated@@70)) (= ($generated@@154 $generated@@754 ($generated@@614 $generated@@755)) (forall (($generated@@756 Int) ) (!  (=> (and (<= 0 $generated@@756) (< $generated@@756 ($generated@@329 $generated@@754))) ($generated@@267 ($generated@@615 $generated@@754 $generated@@756) $generated@@755))
 :pattern ( ($generated@@615 $generated@@754 $generated@@756))
))))
 :pattern ( ($generated@@154 $generated@@754 ($generated@@614 $generated@@755)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@757) $generated@@81) (= (type $generated@@758) $generated@@86)) (and ($generated@@154 $generated@@758 $generated@@155) (forall (($generated@@759 Int) ) (!  (=> (<= ($generated@@83 0) $generated@@759) ($generated@@156 ($generated@@80 $generated@@757) $generated@@759 $generated@@758))
 :pattern ( ($generated@@156 ($generated@@80 $generated@@757) $generated@@759 $generated@@758))
)))) ($generated@@153 ($generated@@80 $generated@@757) $generated@@758))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@757) $generated@@758))
))))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) $generated@@81) (= (type $generated@@761) $generated@@161)) (= (type $generated@@762) $generated@@86)) (= ($generated@@318 $generated@@760 $generated@@761 $generated@@762) ($generated@@318 $generated@@515 $generated@@761 $generated@@762)))
 :pattern ( ($generated@@318 ($generated@@514 $generated@@760) $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 Int) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@81) (= (type $generated@@765) $generated@@86)) (= ($generated@@156 $generated@@763 $generated@@764 $generated@@765) ($generated@@156 $generated@@515 $generated@@764 $generated@@765)))
 :pattern ( ($generated@@156 ($generated@@514 $generated@@763) $generated@@764 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 Int) ) (!  (=> (= (type $generated@@767) ($generated@@330 $generated@@161)) (=> (and (<= 0 $generated@@768) (< $generated@@768 ($generated@@329 $generated@@767))) (< ($generated@@657 ($generated@@416 $generated@@86 ($generated@@615 $generated@@767 $generated@@768))) ($generated@@766 $generated@@767))))
 :pattern ( ($generated@@657 ($generated@@416 $generated@@86 ($generated@@615 $generated@@767 $generated@@768))))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (and (= (type $generated@@769) ($generated@@375 $generated@@161 $generated@@161)) (= (type $generated@@770) $generated@@70)) (= (type $generated@@771) $generated@@70)) ($generated@@154 $generated@@769 ($generated@@498 $generated@@770 $generated@@771))) (and (and ($generated@@154 ($generated@@373 $generated@@769) ($generated@@285 $generated@@770)) ($generated@@154 ($generated@@431 $generated@@769) ($generated@@285 $generated@@771))) ($generated@@154 ($generated@@472 $generated@@769) ($generated@@285 ($generated@@190 $generated@@770 $generated@@771)))))
 :pattern ( ($generated@@154 $generated@@769 ($generated@@498 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (and (= (type $generated@@772) ($generated@@393 $generated@@161 $generated@@161)) (= (type $generated@@773) $generated@@70)) (= (type $generated@@774) $generated@@70)) ($generated@@154 $generated@@772 ($generated@@506 $generated@@773 $generated@@774))) (and (and ($generated@@154 ($generated@@391 $generated@@772) ($generated@@290 $generated@@773)) ($generated@@154 ($generated@@442 $generated@@772) ($generated@@290 $generated@@774))) ($generated@@154 ($generated@@480 $generated@@772) ($generated@@290 ($generated@@190 $generated@@773 $generated@@774)))))
 :pattern ( ($generated@@154 $generated@@772 ($generated@@506 $generated@@773 $generated@@774)))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@2) ($generated@@154 $generated@@775 $generated@@46))
 :pattern ( ($generated@@154 $generated@@775 $generated@@46))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@3) ($generated@@154 $generated@@776 $generated@@47))
 :pattern ( ($generated@@154 $generated@@776 $generated@@47))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@4) ($generated@@154 $generated@@777 $generated@@44))
 :pattern ( ($generated@@154 $generated@@777 $generated@@44))
)))
(assert (forall (($generated@@778 T@U) ) (!  (=> (= (type $generated@@778) $generated@@563) ($generated@@154 $generated@@778 $generated@@45))
 :pattern ( ($generated@@154 $generated@@778 $generated@@45))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@161) ($generated@@154 $generated@@779 $generated@@48))
 :pattern ( ($generated@@154 $generated@@779 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () Int)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 (T@U) Bool)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@782) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@783) $generated@@86)) (= (type $generated@@785) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@786) $generated@@86)) (= (type $generated@@788) ($generated@@212 $generated@@98 $generated@@4))) (= (type $generated@@789) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@790  (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165)) (=> ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165) (=> (and (and (and (= $generated@@781 (ite (< $generated@@780 0) 0 $generated@@780)) ($generated@@95 ($generated@@8 $generated@@781) $generated@@165 $generated@@782)) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) (= $generated@@783 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))))) (and (and ($generated@@95 $generated@@783 $generated@@155 $generated@@782) ($generated@@177 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) ($generated@@177 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@177 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (or ($generated@@153 ($generated@@80 $generated@@515) ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (=> ($generated@@313 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (let (($generated@@791 ($generated@@341 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@515)) (ite (< $generated@@780 0) 0 $generated@@780)))))
($generated@@153 ($generated@@80 ($generated@@80 $generated@@515)) $generated@@791)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@177 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (or ($generated@@153 ($generated@@80 $generated@@515) ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))) (=> (not ($generated@@313 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780)))) ($generated@@0 ($generated@@296 ($generated@@11 true)))))))))))))
(let (($generated@@792  (=> (and (<= 0 $generated@@780) (= (ControlFlow 0 6) 2)) $generated@@790)))
(let (($generated@@793  (=> (and (< $generated@@780 0) (= (ControlFlow 0 5) 2)) $generated@@790)))
(let (($generated@@794  (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165)) (=> ($generated@@154 ($generated@@8 (ite (< $generated@@780 0) 0 $generated@@780)) $generated@@165) (=> (= $generated@@784 (ite (< $generated@@780 0) 0 $generated@@780)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@784) $generated@@165 $generated@@785) ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780))) (and ($generated@@82 (ite (< $generated@@780 0) 0 $generated@@780)) (= $generated@@786 ($generated@@79 ($generated@@80 $generated@@515) (ite (< $generated@@780 0) 0 $generated@@780))))) (=> (and (and (and (and ($generated@@274 $generated@@782) ($generated@@787 $generated@@782)) ($generated@@170 $generated@@786)) (and (and ($generated@@170 $generated@@786) (and ($generated@@169 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@795 ($generated@@341 $generated@@786)))
($generated@@169 ($generated@@80 $generated@@515) $generated@@795)) true))) ($generated@@174 $generated@@786))) (and (and (and ($generated@@174 $generated@@786) (and ($generated@@173 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@796 ($generated@@341 $generated@@786)))
($generated@@173 ($generated@@80 $generated@@515) $generated@@796)) true))) ($generated@@177 $generated@@786)) (and (and ($generated@@177 $generated@@786) (and ($generated@@153 ($generated@@80 $generated@@515) $generated@@786) (ite ($generated@@313 $generated@@786) (let (($generated@@797 ($generated@@341 $generated@@786)))
($generated@@153 ($generated@@80 $generated@@515) $generated@@797)) true))) (= $generated@@785 $generated@@782)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@793) (=> (= (ControlFlow 0 7) 6) $generated@@792)))))))))
(let (($generated@@798  (=> (and (<= 0 $generated@@780) (= (ControlFlow 0 10) 7)) $generated@@794)))
(let (($generated@@799  (=> (and (< $generated@@780 0) (= (ControlFlow 0 9) 7)) $generated@@794)))
(let (($generated@@800  (=> (= $generated@@788 ($generated@@211 $generated@@789 $generated@@785 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@799) (=> (= (ControlFlow 0 11) 10) $generated@@798)))))
(let (($generated@@801  (=> (and (and ($generated@@274 $generated@@785) ($generated@@787 $generated@@785)) (and (= 3 $generated@@78) (= (ControlFlow 0 12) 11))) $generated@@800)))
$generated@@801)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U Int T@U) Bool)
(declare-fun $generated@@154 (Int T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@260 (T@U Int T@U) Bool)
(declare-fun $generated@@261 (Int T@U) Bool)
(declare-fun $generated@@265 (Int T@U) Bool)
(declare-fun $generated@@266 (Int T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 () T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@680 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert  (and (= (type $generated@@156) $generated@@70) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@86)
 :pattern ( ($generated@@158 $generated@@159))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@160 T@U) ($generated@@161 Int) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@162) $generated@@86)) (or ($generated@@154 $generated@@161 $generated@@162) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@161) ($generated@@155 $generated@@162 $generated@@156))))) (and (=> (not (= $generated@@161 ($generated@@83 0))) (=> ($generated@@157 $generated@@162) (let (($generated@@163 ($generated@@158 $generated@@162)))
($generated@@154 (- $generated@@161 1) $generated@@163)))) (= ($generated@@153 ($generated@@80 $generated@@160) $generated@@161 $generated@@162) (ite (= $generated@@161 ($generated@@83 0)) true (ite ($generated@@157 $generated@@162) (let (($generated@@164 ($generated@@158 $generated@@162)))
($generated@@153 $generated@@160 (- $generated@@161 1) $generated@@164)) true)))))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@160) $generated@@161 $generated@@162))
))))
(assert (= (type $generated@@165) $generated@@70))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@155 $generated@@168 ($generated@@96 0)))
 :pattern ( ($generated@@155 $generated@@168 ($generated@@96 0)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@86)) ($generated@@155 $generated@@175 ($generated@@170 $generated@@173 $generated@@174))) ($generated@@169 $generated@@175))
 :pattern ( ($generated@@169 $generated@@175) ($generated@@155 $generated@@175 ($generated@@170 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 16) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@86) (= (type $generated@@183) $generated@@86)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@74)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (= ($generated@@184 $generated@@84) $generated@@66))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@155 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@155 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@98 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@98) (= (type $generated@@241) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@98)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@86)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@70) (= (type $generated@@252) $generated@@70)) (= (type $generated@@253) $generated@@179)) (= (type $generated@@254) $generated@@179)) (= ($generated@@155 ($generated@@247 $generated@@253 $generated@@254) ($generated@@170 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@155 ($generated@@247 $generated@@253 $generated@@254) ($generated@@170 $generated@@251 $generated@@252)))
)))
(assert ($generated@@155 $generated@@84 $generated@@156))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@255 $generated@@256)) ($generated@@95 $generated@@84 $generated@@156 $generated@@256))
 :pattern ( ($generated@@95 $generated@@84 $generated@@156 $generated@@256))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@81) (= (type $generated@@259) $generated@@86)) (or ($generated@@154 $generated@@258 $generated@@259) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@258) ($generated@@155 $generated@@259 $generated@@156))))) true)
 :pattern ( ($generated@@153 $generated@@257 $generated@@258 $generated@@259))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@81) (= (type $generated@@264) $generated@@86)) (or ($generated@@261 $generated@@263 $generated@@264) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@263) ($generated@@155 $generated@@264 $generated@@156))))) true)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263 $generated@@264))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@267 Int) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@86) (or ($generated@@266 $generated@@267 $generated@@268) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@267) ($generated@@155 $generated@@268 $generated@@156))))) true)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@81) (= (type $generated@@274) $generated@@86)) (or ($generated@@154 ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@273) ($generated@@155 $generated@@274 $generated@@156))))) (and (=> (not (= ($generated@@83 $generated@@273) ($generated@@83 0))) (=> ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@157 ($generated@@269 $generated@@274))))) (let (($generated@@275 ($generated@@269 ($generated@@158 ($generated@@269 $generated@@274)))))
($generated@@154 ($generated@@83 (- $generated@@273 1)) $generated@@275)))) (= ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)) (ite (= ($generated@@83 $generated@@273) ($generated@@83 0)) true (ite ($generated@@157 ($generated@@269 $generated@@274)) ($generated@@0 (let (($generated@@276 ($generated@@269 ($generated@@158 ($generated@@269 $generated@@274)))))
($generated@@269 ($generated@@11 ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 (- $generated@@273 1)) $generated@@276))))) true)))))
 :weight 3
 :pattern ( ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@86) (= (type $generated@@278) $generated@@86)) (= ($generated@@176 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@176 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (= ($generated@@279 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@70)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@285) $generated@@70)) (= ($generated@@155 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@179) ($generated@@0 ($generated@@102 $generated@@284 $generated@@286))) ($generated@@248 $generated@@286 $generated@@285))
 :pattern ( ($generated@@102 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@155 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@70)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@290) $generated@@70)) (= ($generated@@155 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@179) ($generated@@0 ($generated@@102 $generated@@289 $generated@@291))) ($generated@@248 $generated@@291 $generated@@290))
 :pattern ( ($generated@@102 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@155 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@83 $generated@@292) $generated@@292)
 :pattern ( ($generated@@83 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@269 $generated@@293) $generated@@293)
 :pattern ( ($generated@@269 $generated@@293))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 Int) ) (!  (=> (and (and (= (type $generated@@294) $generated@@81) (= (type $generated@@295) $generated@@86)) (and ($generated@@155 $generated@@295 $generated@@156) (= $generated@@296 0))) ($generated@@260 $generated@@294 $generated@@296 $generated@@295))
 :pattern ( ($generated@@260 $generated@@294 $generated@@296 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@86) (= (type $generated@@299) $generated@@86)) (and ($generated@@297 $generated@@298) ($generated@@297 $generated@@299))) (= ($generated@@279 $generated@@298 $generated@@299) true))
 :pattern ( ($generated@@279 $generated@@298 $generated@@299) ($generated@@297 $generated@@298))
 :pattern ( ($generated@@279 $generated@@298 $generated@@299) ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) $generated@@70)) (= (type $generated@@303) $generated@@179)) (= (type $generated@@304) $generated@@179)) (= (type $generated@@305) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@255 $generated@@305)) (= ($generated@@95 ($generated@@247 $generated@@303 $generated@@304) ($generated@@170 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@95 ($generated@@247 $generated@@303 $generated@@304) ($generated@@170 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@86) (= ($generated@@169 $generated@@306) (= ($generated@@184 $generated@@306) $generated@@62)))
 :pattern ( ($generated@@169 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@86) (= ($generated@@157 $generated@@307) (= ($generated@@184 $generated@@307) $generated@@64)))
 :pattern ( ($generated@@157 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@86) (= ($generated@@297 $generated@@308) (= ($generated@@184 $generated@@308) $generated@@66)))
 :pattern ( ($generated@@297 $generated@@308))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@309 T@U) ($generated@@310 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@310)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@310)))) (and (=> (not (= ($generated@@83 $generated@@310) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@310 1)))) (= ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 $generated@@310)) (ite (= ($generated@@83 $generated@@310) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@269 ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 (- $generated@@310 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 $generated@@310)))
))))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@86) ($generated@@169 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@179) (= (type $generated@@313) $generated@@179)) (= $generated@@311 ($generated@@247 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@169 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@86) ($generated@@297 $generated@@322)) (= $generated@@322 $generated@@84))
 :pattern ( ($generated@@297 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@86) ($generated@@157 $generated@@323)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@86) (= $generated@@323 ($generated@@85 $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@157 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@2) (= ($generated@@155 $generated@@325 $generated@@165) (<= ($generated@@83 0) ($generated $generated@@325))))
 :pattern ( ($generated@@155 $generated@@325 $generated@@165))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@81) (= (type $generated@@328) $generated@@86)) (= ($generated@@260 ($generated@@80 $generated@@326) $generated@@327 $generated@@328) ($generated@@260 $generated@@326 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@260 ($generated@@80 $generated@@326) $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 Int) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@81) (= (type $generated@@331) $generated@@86)) (= ($generated@@153 ($generated@@80 $generated@@329) $generated@@330 $generated@@331) ($generated@@153 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@179)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@70) (= (type $generated@@336) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@300 ($generated@@332 $generated@@334) $generated@@335 $generated@@336) ($generated@@95 $generated@@334 $generated@@335 $generated@@336)))
 :pattern ( ($generated@@300 ($generated@@332 $generated@@334) $generated@@335 $generated@@336))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@337 T@U) ($generated@@338 Int) ) (!  (=> (and (= (type $generated@@337) $generated@@81) (or ($generated@@82 $generated@@338) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@338)))) ($generated@@155 ($generated@@79 $generated@@337 $generated@@338) $generated@@156))
 :pattern ( ($generated@@79 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@97 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@100 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@97 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@102 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@97 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@102 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@102 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@97 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@102 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@102 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@100 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@97 $generated@@382 $generated@@2)) (= ($generated@@187 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@102 $generated@@381 $generated@@383))) (<= ($generated ($generated@@102 $generated@@381 $generated@@383)) ($generated@@339 $generated@@381))))
 :pattern ( ($generated@@102 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@187 $generated@@381))
)))
(assert (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@179) ($generated@@248 $generated@@387 $generated@@165)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@387)) $generated@@387) ($generated@@155 ($generated@@384 $generated@@2 $generated@@387) $generated@@165)))
 :pattern ( ($generated@@248 $generated@@387 $generated@@165))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@179) ($generated@@248 $generated@@388 $generated@@156)) (and (= ($generated@@332 ($generated@@384 $generated@@86 $generated@@388)) $generated@@388) ($generated@@155 ($generated@@384 $generated@@86 $generated@@388) $generated@@156)))
 :pattern ( ($generated@@248 $generated@@388 $generated@@156))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@86) (= ($generated@@155 ($generated@@85 $generated@@389) $generated@@156) ($generated@@155 $generated@@389 $generated@@156)))
 :pattern ( ($generated@@155 ($generated@@85 $generated@@389) $generated@@156))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) $generated@@86) (= (type $generated@@391) $generated@@86)) (and ($generated@@157 $generated@@390) ($generated@@157 $generated@@391))) (= ($generated@@279 $generated@@390 $generated@@391) ($generated@@279 ($generated@@158 $generated@@390) ($generated@@158 $generated@@391))))
 :pattern ( ($generated@@279 $generated@@390 $generated@@391) ($generated@@157 $generated@@390))
 :pattern ( ($generated@@279 $generated@@390 $generated@@391) ($generated@@157 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@349 (type $generated@@392))))
(let (($generated@@394 ($generated@@348 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@347 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@346 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@345 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@349 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@97 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@349 (type $generated@@399))))
(let (($generated@@401 ($generated@@348 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@347 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@346 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@102 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@367 (type $generated@@403))))
(let (($generated@@405 ($generated@@366 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@365 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@364 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@363 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@367 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@97 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@367 (type $generated@@410))))
(let (($generated@@412 ($generated@@366 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@365 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@364 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@102 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@415) $generated@@70)) (= ($generated@@155 $generated@@414 ($generated@@186 $generated@@415)) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@179) (< 0 ($generated ($generated@@102 $generated@@414 $generated@@416)))) ($generated@@248 $generated@@416 $generated@@415))
 :pattern ( ($generated@@102 $generated@@414 $generated@@416))
))))
 :pattern ( ($generated@@155 $generated@@414 ($generated@@186 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@417 ($generated@@282 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@179) ($generated@@0 ($generated@@102 $generated@@417 $generated@@420))) ($generated@@300 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@102 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@95 $generated@@417 ($generated@@282 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@421 ($generated@@287 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@179) ($generated@@0 ($generated@@102 $generated@@421 $generated@@424))) ($generated@@300 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@102 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@95 $generated@@421 ($generated@@287 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(= ($generated ($generated@@102 ($generated@@340 $generated@@426) $generated@@425)) 0))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@102 ($generated@@340 $generated@@426) $generated@@425)))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@97 $generated@@179 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@349 (type $generated@@430))))
(let (($generated@@432 ($generated@@348 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@97 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@434) $generated@@179)) (= ($generated@@0 ($generated@@102 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@102 ($generated@@345 $generated@@433) ($generated@@177 ($generated@@384 $generated@@86 $generated@@434)))) (= ($generated@@102 ($generated@@428 $generated@@433) ($generated@@177 ($generated@@384 $generated@@86 $generated@@434))) ($generated@@178 ($generated@@384 $generated@@86 $generated@@434))))))
 :pattern ( ($generated@@102 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@97 $generated@@179 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@367 (type $generated@@438))))
(let (($generated@@440 ($generated@@366 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@97 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@442) $generated@@179)) (= ($generated@@0 ($generated@@102 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@102 ($generated@@363 $generated@@441) ($generated@@177 ($generated@@384 $generated@@86 $generated@@442)))) (= ($generated@@102 ($generated@@436 $generated@@441) ($generated@@177 ($generated@@384 $generated@@86 $generated@@442))) ($generated@@178 ($generated@@384 $generated@@86 $generated@@442))))))
 :pattern ( ($generated@@102 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(let (($generated@@446 ($generated@@348 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@347 $generated@@446 $generated@@445)) (= ($generated@@0 ($generated@@102 ($generated@@396 $generated@@443) $generated@@444)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) (and ($generated@@0 ($generated@@102 ($generated@@345 $generated@@443) $generated@@447)) (= $generated@@444 ($generated@@102 ($generated@@428 $generated@@443) $generated@@447))))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@443) $generated@@447))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@443) $generated@@447))
))))))
 :pattern ( ($generated@@102 ($generated@@396 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(let (($generated@@451 ($generated@@366 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@365 $generated@@451 $generated@@450)) (= ($generated@@0 ($generated@@102 ($generated@@407 $generated@@448) $generated@@449)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) (and ($generated@@0 ($generated@@102 ($generated@@363 $generated@@448) $generated@@452)) (= $generated@@449 ($generated@@102 ($generated@@436 $generated@@448) $generated@@452))))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@448) $generated@@452))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@448) $generated@@452))
))))))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@456) $generated@@460))) (and ($generated@@300 ($generated@@102 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@300 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@95 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@464) $generated@@468))) (and ($generated@@300 ($generated@@102 ($generated@@436 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@300 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@464) $generated@@468))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@95 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@469) $generated@@86) (= (type $generated@@470) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@255 $generated@@470)) (= ($generated@@95 ($generated@@85 $generated@@469) $generated@@156 $generated@@470) ($generated@@95 $generated@@469 $generated@@156 $generated@@470)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@469) $generated@@156 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@86) ($generated@@155 $generated@@471 $generated@@156)) (or ($generated@@157 $generated@@471) ($generated@@297 $generated@@471)))
 :pattern ( ($generated@@297 $generated@@471) ($generated@@155 $generated@@471 $generated@@156))
 :pattern ( ($generated@@157 $generated@@471) ($generated@@155 $generated@@471 $generated@@156))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@472 T@U) ($generated@@473 Int) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) $generated@@81) (= (type $generated@@474) $generated@@86)) (or ($generated@@261 ($generated@@83 $generated@@473) $generated@@474) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@473) ($generated@@155 $generated@@474 $generated@@156))))) (and (=> (< 0 $generated@@473) (=> ($generated@@157 $generated@@474) (let (($generated@@475 ($generated@@158 $generated@@474)))
($generated@@261 (- $generated@@473 1) $generated@@475)))) (= ($generated@@260 ($generated@@80 $generated@@472) ($generated@@83 $generated@@473) $generated@@474)  (=> (< 0 $generated@@473) (ite ($generated@@157 $generated@@474) (let (($generated@@476 ($generated@@158 $generated@@474)))
($generated@@260 ($generated@@80 $generated@@472) (- $generated@@473 1) $generated@@476)) true)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@80 $generated@@472) ($generated@@83 $generated@@473) $generated@@474))
))))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@97 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@367 (type $generated@@479))))
(let (($generated@@481 ($generated@@366 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@365 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@364 $generated@@481 $generated@@480)) (= ($generated@@363 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@363 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@367 (type $generated@@482))))
(let (($generated@@484 ($generated@@366 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@365 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@364 $generated@@484 $generated@@483)) (= ($generated@@407 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@407 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@367 (type $generated@@485))))
(let (($generated@@487 ($generated@@366 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@365 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@364 $generated@@487 $generated@@486)) (= ($generated@@435 $generated@@485) ($generated@@477 $generated@@179))))))
 :pattern ( ($generated@@435 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@179) (= (type $generated@@492) $generated@@179)) ($generated@@0 ($generated@@102 ($generated@@427 $generated@@488) ($generated@@332 ($generated@@247 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@427 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@367 (type $generated@@493))))
(let (($generated@@495 ($generated@@366 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@365 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@364 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@179) (= (type $generated@@497) $generated@@179)) ($generated@@0 ($generated@@102 ($generated@@435 $generated@@493) ($generated@@332 ($generated@@247 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@435 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@179) ($generated@@248 $generated@@498 $generated@@46)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@498)) $generated@@498) ($generated@@155 ($generated@@384 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@179) ($generated@@248 $generated@@499 $generated@@47)) (and (= ($generated@@332 ($generated@@384 $generated@@3 $generated@@499)) $generated@@499) ($generated@@155 ($generated@@384 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@179) ($generated@@248 $generated@@500 $generated@@44)) (and (= ($generated@@332 ($generated@@384 $generated@@4 $generated@@500)) $generated@@500) ($generated@@155 ($generated@@384 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 21))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@179) ($generated@@248 $generated@@502 $generated@@45)) (and (= ($generated@@332 ($generated@@384 $generated@@501 $generated@@502)) $generated@@502) ($generated@@155 ($generated@@384 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@248 ($generated@@332 $generated@@503) $generated@@504) ($generated@@155 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@248 ($generated@@332 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@100 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@97 $generated@@506 $generated@@2)) (<= 0 ($generated@@339 $generated@@505))))
 :pattern ( ($generated@@339 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@317 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@316 $generated@@508)) (<= 0 ($generated@@315 $generated@@507))))
 :pattern ( ($generated@@315 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@453 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@93 ($generated@@453 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@453 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@70) (= (type $generated@@522) $generated@@70)) (= ($generated@@519 ($generated@@461 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@461 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@523 ($generated@@461 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@461 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@93 ($generated@@461 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@461 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@179) (= (type $generated@@530) $generated@@179)) (= ($generated@@184 ($generated@@247 $generated@@529 $generated@@530)) $generated@@62))
 :pattern ( ($generated@@247 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@70) (= (type $generated@@534) $generated@@70)) (= ($generated@@531 ($generated@@170 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@170 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= ($generated@@535 ($generated@@170 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@170 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@179) (= (type $generated@@540) $generated@@179)) (= ($generated@@177 ($generated@@247 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@247 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@179) (= (type $generated@@542) $generated@@179)) (= ($generated@@178 ($generated@@247 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@247 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@81)
 :pattern ( ($generated@@543 $generated@@545))
)) (= (type $generated@@544) $generated@@81)))
(assert (forall (($generated@@546 T@U) ($generated@@547 Int) ) (!  (=> (= (type $generated@@546) $generated@@81) (= ($generated@@79 $generated@@546 $generated@@547) ($generated@@79 $generated@@544 $generated@@547)))
 :pattern ( ($generated@@79 ($generated@@543 $generated@@546) $generated@@547))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (! (let (($generated@@553 ($generated@@317 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@551 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@316 $generated@@179)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@554 ($generated@@548 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@315 $generated@@554))) ($generated@@300 ($generated@@549 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@549 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@95 $generated@@554 ($generated@@548 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@96 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@96 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@282 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@282 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@93 ($generated@@282 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@287 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@287 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@93 ($generated@@287 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@568 ($generated@@186 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@186 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@93 ($generated@@186 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@70)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@70) (= ($generated@@572 ($generated@@548 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@548 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@93 ($generated@@548 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@548 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@86) (= ($generated@@184 ($generated@@85 $generated@@576)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@86) (= ($generated@@158 ($generated@@85 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@85 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@384 $generated@@579 ($generated@@332 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@332 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) (= ($generated@@155 $generated@@580 ($generated@@453 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@580) $generated@@583))) (and ($generated@@248 ($generated@@102 ($generated@@428 $generated@@580) $generated@@583) $generated@@582) ($generated@@248 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@580) $generated@@583))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@155 $generated@@580 ($generated@@453 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) $generated@@70)) (= ($generated@@155 $generated@@584 ($generated@@461 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@584) $generated@@587))) (and ($generated@@248 ($generated@@102 ($generated@@436 $generated@@584) $generated@@587) $generated@@586) ($generated@@248 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@584) $generated@@587))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@155 $generated@@584 ($generated@@461 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@179) (= (type $generated@@591) $generated@@179)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@247 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@247 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@179) (= (type $generated@@593) $generated@@179)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@247 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@247 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@594) $generated@@595) ($generated@@79 $generated@@594 $generated@@595)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@594) $generated@@595))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@596 T@U) ($generated@@597 Int) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@81) (= (type $generated@@598) $generated@@86)) (or ($generated@@261 ($generated@@83 $generated@@597) ($generated@@269 $generated@@598)) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@597) ($generated@@155 $generated@@598 $generated@@156))))) (and (=> (< 0 $generated@@597) (=> ($generated@@157 $generated@@598) (let (($generated@@599 ($generated@@158 $generated@@598)))
($generated@@261 (- $generated@@597 1) $generated@@599)))) (= ($generated@@260 ($generated@@80 $generated@@596) ($generated@@83 $generated@@597) ($generated@@269 $generated@@598))  (=> (< 0 $generated@@597) (ite ($generated@@157 $generated@@598) (let (($generated@@600 ($generated@@158 $generated@@598)))
($generated@@260 ($generated@@80 $generated@@596) (- $generated@@597 1) $generated@@600)) true)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@80 $generated@@596) ($generated@@83 $generated@@597) ($generated@@269 $generated@@598)))
))))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@179) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@248 $generated@@601 ($generated@@453 $generated@@602 $generated@@603))) (and (= ($generated@@332 ($generated@@384 ($generated@@347 $generated@@179 $generated@@179) $generated@@601)) $generated@@601) ($generated@@155 ($generated@@384 ($generated@@347 $generated@@179 $generated@@179) $generated@@601) ($generated@@453 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@601 ($generated@@453 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@179) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@248 $generated@@604 ($generated@@461 $generated@@605 $generated@@606))) (and (= ($generated@@332 ($generated@@384 ($generated@@365 $generated@@179 $generated@@179) $generated@@604)) $generated@@604) ($generated@@155 ($generated@@384 ($generated@@365 $generated@@179 $generated@@179) $generated@@604) ($generated@@461 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@248 $generated@@604 ($generated@@461 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@70) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@179)) ($generated@@248 $generated@@609 ($generated@@170 $generated@@607 $generated@@608))) (and (= ($generated@@332 ($generated@@384 $generated@@86 $generated@@609)) $generated@@609) ($generated@@155 ($generated@@384 $generated@@86 $generated@@609) ($generated@@170 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@248 $generated@@609 ($generated@@170 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@86) (< ($generated@@589 $generated@@610) ($generated@@589 ($generated@@85 $generated@@610))))
 :pattern ( ($generated@@85 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@102 ($generated@@477 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@102 ($generated@@477 $generated@@612) $generated@@611)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@613 T@U) ($generated@@614 Int) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@615) $generated@@86)) (or ($generated@@261 $generated@@614 $generated@@615) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@614) ($generated@@155 $generated@@615 $generated@@156))))) (and (=> (< 0 $generated@@614) (=> ($generated@@157 $generated@@615) (let (($generated@@616 ($generated@@158 $generated@@615)))
($generated@@261 (- $generated@@614 1) $generated@@616)))) (= ($generated@@260 ($generated@@80 $generated@@613) $generated@@614 $generated@@615)  (=> (< 0 $generated@@614) (ite ($generated@@157 $generated@@615) (let (($generated@@617 ($generated@@158 $generated@@615)))
($generated@@260 $generated@@613 (- $generated@@614 1) $generated@@617)) true)))))
 :pattern ( ($generated@@260 ($generated@@80 $generated@@613) $generated@@614 $generated@@615))
))))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@75)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@70) (= (type $generated@@621) $generated@@70)) (and (= ($generated@@93 ($generated@@170 $generated@@620 $generated@@621)) $generated@@63) (= ($generated@@618 ($generated@@170 $generated@@620 $generated@@621)) $generated@@68)))
 :pattern ( ($generated@@170 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@86) (= ($generated@@588 ($generated@@332 $generated@@622)) ($generated@@589 $generated@@622)))
 :pattern ( ($generated@@588 ($generated@@332 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@179) ($generated@@248 $generated@@623 ($generated@@96 0))) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@623)) $generated@@623) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@623) ($generated@@96 0))))
 :pattern ( ($generated@@248 $generated@@623 ($generated@@96 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@179) (= (type $generated@@625) $generated@@70)) ($generated@@248 $generated@@624 ($generated@@282 $generated@@625))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@624)) $generated@@624) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@624) ($generated@@282 $generated@@625))))
 :pattern ( ($generated@@248 $generated@@624 ($generated@@282 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@179) (= (type $generated@@627) $generated@@70)) ($generated@@248 $generated@@626 ($generated@@287 $generated@@627))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@626)) $generated@@626) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@626) ($generated@@287 $generated@@627))))
 :pattern ( ($generated@@248 $generated@@626 ($generated@@287 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@179) (= (type $generated@@629) $generated@@70)) ($generated@@248 $generated@@628 ($generated@@186 $generated@@629))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@2) $generated@@628)) $generated@@628) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@2) $generated@@628) ($generated@@186 $generated@@629))))
 :pattern ( ($generated@@248 $generated@@628 ($generated@@186 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@179) (= (type $generated@@631) $generated@@70)) ($generated@@248 $generated@@630 ($generated@@548 $generated@@631))) (and (= ($generated@@332 ($generated@@384 ($generated@@316 $generated@@179) $generated@@630)) $generated@@630) ($generated@@155 ($generated@@384 ($generated@@316 $generated@@179) $generated@@630) ($generated@@548 $generated@@631))))
 :pattern ( ($generated@@248 $generated@@630 ($generated@@548 $generated@@631)))
)))
(assert (= ($generated@@93 $generated@@165) $generated@@61))
(assert (= ($generated@@618 $generated@@165) $generated@@67))
(assert (= ($generated@@93 $generated@@156) $generated@@65))
(assert (= ($generated@@618 $generated@@156) $generated@@69))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@632 ($generated@@186 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@179) (< 0 ($generated ($generated@@102 $generated@@632 $generated@@635)))) ($generated@@300 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@102 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@95 $generated@@632 ($generated@@186 $generated@@633) $generated@@634))
)))
(assert (= $generated@@84 ($generated@@269 $generated@@84)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@86) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@638) (and ($generated@@169 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@70) ($generated@@95 $generated@@636 ($generated@@170 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@95 $generated@@636 ($generated@@170 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@300 ($generated@@177 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@300 ($generated@@177 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@86) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@642) (and ($generated@@169 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@70) ($generated@@95 $generated@@640 ($generated@@170 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@95 $generated@@640 ($generated@@170 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@300 ($generated@@178 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@300 ($generated@@178 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@86) (= (type $generated@@645) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@645) (and ($generated@@157 $generated@@644) ($generated@@95 $generated@@644 $generated@@156 $generated@@645)))) ($generated@@95 ($generated@@158 $generated@@644) $generated@@156 $generated@@645))
 :pattern ( ($generated@@95 ($generated@@158 $generated@@644) $generated@@156 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@179) (= (type $generated@@647) $generated@@179)) (= ($generated@@247 ($generated@@269 $generated@@646) ($generated@@269 $generated@@647)) ($generated@@269 ($generated@@247 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@247 ($generated@@269 $generated@@646) ($generated@@269 $generated@@647)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@83 $generated@@648))) ($generated@@269 ($generated@@332 ($generated@@8 $generated@@648))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@83 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@86) (= ($generated@@85 ($generated@@269 $generated@@649)) ($generated@@269 ($generated@@85 $generated@@649))))
 :pattern ( ($generated@@85 ($generated@@269 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (= ($generated@@332 ($generated@@269 $generated@@650)) ($generated@@269 ($generated@@332 $generated@@650)))
 :pattern ( ($generated@@332 ($generated@@269 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@317 (type $generated@@651))))
 (=> (and (= (type $generated@@651) ($generated@@316 $generated@@652)) (= ($generated@@315 $generated@@651) 0)) (= $generated@@651 ($generated@@314 $generated@@652))))
 :pattern ( ($generated@@315 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@654)))
 (=> (and (and (= (type $generated@@653) ($generated@@97 $generated@@656 $generated@@2)) (= (type $generated@@655) $generated@@2)) (<= 0 ($generated $generated@@655))) (= ($generated@@339 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)) (+ (- ($generated@@339 $generated@@653) ($generated ($generated@@102 $generated@@653 $generated@@654))) ($generated $generated@@655)))))
 :pattern ( ($generated@@339 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@657 Int) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@86) (or ($generated@@266 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@657) ($generated@@155 $generated@@658 $generated@@156))))) (and ($generated@@261 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) (= ($generated@@265 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@260 ($generated@@80 $generated@@544) ($generated@@83 $generated@@657) ($generated@@269 $generated@@658))))))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)))
))))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@660) $generated@@2)) ($generated@@95 $generated@@660 $generated@@46 $generated@@659))
 :pattern ( ($generated@@95 $generated@@660 $generated@@46 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@662) $generated@@3)) ($generated@@95 $generated@@662 $generated@@47 $generated@@661))
 :pattern ( ($generated@@95 $generated@@662 $generated@@47 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@664) $generated@@4)) ($generated@@95 $generated@@664 $generated@@44 $generated@@663))
 :pattern ( ($generated@@95 $generated@@664 $generated@@44 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@666) $generated@@501)) ($generated@@95 $generated@@666 $generated@@45 $generated@@665))
 :pattern ( ($generated@@95 $generated@@666 $generated@@45 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@668) $generated@@179)) ($generated@@95 $generated@@668 $generated@@48 $generated@@667))
 :pattern ( ($generated@@95 $generated@@668 $generated@@48 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@316 $generated@@179)) (= (type $generated@@670) $generated@@70)) (= ($generated@@155 $generated@@669 ($generated@@548 $generated@@670)) (forall (($generated@@671 Int) ) (!  (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@315 $generated@@669))) ($generated@@248 ($generated@@549 $generated@@669 $generated@@671) $generated@@670))
 :pattern ( ($generated@@549 $generated@@669 $generated@@671))
))))
 :pattern ( ($generated@@155 $generated@@669 ($generated@@548 $generated@@670)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@672 Int) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@86) (or ($generated@@266 $generated@@672 $generated@@673) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@672) ($generated@@155 $generated@@673 $generated@@156))))) (and ($generated@@261 $generated@@672 $generated@@673) (= ($generated@@265 $generated@@672 $generated@@673) ($generated@@260 ($generated@@80 $generated@@544) $generated@@672 $generated@@673))))
 :pattern ( ($generated@@265 $generated@@672 $generated@@673))
))))
(assert (forall (($generated@@674 T@U) ($generated@@675 Int) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@81) (= (type $generated@@676) $generated@@86)) (= ($generated@@260 $generated@@674 $generated@@675 $generated@@676) ($generated@@260 $generated@@544 $generated@@675 $generated@@676)))
 :pattern ( ($generated@@260 ($generated@@543 $generated@@674) $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 Int) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@81) (= (type $generated@@679) $generated@@86)) (= ($generated@@153 $generated@@677 $generated@@678 $generated@@679) ($generated@@153 $generated@@544 $generated@@678 $generated@@679)))
 :pattern ( ($generated@@153 ($generated@@543 $generated@@677) $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (!  (=> (= (type $generated@@681) ($generated@@316 $generated@@179)) (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@315 $generated@@681))) (< ($generated@@589 ($generated@@384 $generated@@86 ($generated@@549 $generated@@681 $generated@@682))) ($generated@@680 $generated@@681))))
 :pattern ( ($generated@@589 ($generated@@384 $generated@@86 ($generated@@549 $generated@@681 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@684) $generated@@70)) (= (type $generated@@685) $generated@@70)) ($generated@@155 $generated@@683 ($generated@@453 $generated@@684 $generated@@685))) (and (and ($generated@@155 ($generated@@345 $generated@@683) ($generated@@282 $generated@@684)) ($generated@@155 ($generated@@396 $generated@@683) ($generated@@282 $generated@@685))) ($generated@@155 ($generated@@427 $generated@@683) ($generated@@282 ($generated@@170 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@155 $generated@@683 ($generated@@453 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@687) $generated@@70)) (= (type $generated@@688) $generated@@70)) ($generated@@155 $generated@@686 ($generated@@461 $generated@@687 $generated@@688))) (and (and ($generated@@155 ($generated@@363 $generated@@686) ($generated@@287 $generated@@687)) ($generated@@155 ($generated@@407 $generated@@686) ($generated@@287 $generated@@688))) ($generated@@155 ($generated@@435 $generated@@686) ($generated@@287 ($generated@@170 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@155 $generated@@686 ($generated@@461 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@2) ($generated@@155 $generated@@689 $generated@@46))
 :pattern ( ($generated@@155 $generated@@689 $generated@@46))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@3) ($generated@@155 $generated@@690 $generated@@47))
 :pattern ( ($generated@@155 $generated@@690 $generated@@47))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@4) ($generated@@155 $generated@@691 $generated@@44))
 :pattern ( ($generated@@155 $generated@@691 $generated@@44))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@501) ($generated@@155 $generated@@692 $generated@@45))
 :pattern ( ($generated@@155 $generated@@692 $generated@@45))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@179) ($generated@@155 $generated@@693 $generated@@48))
 :pattern ( ($generated@@155 $generated@@693 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 (T@U) Bool)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@696) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@698) $generated@@86)) (= (type $generated@@700) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@701) $generated@@86)) (= (type $generated@@703) ($generated@@193 $generated@@98 $generated@@4))) (= (type $generated@@704) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@705  (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165)) (=> ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165) (=> (= $generated@@695 (ite (< $generated@@694 0) 0 $generated@@694)) (=> (and (and (and ($generated@@95 ($generated@@8 $generated@@695) $generated@@165 $generated@@696) ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694))) (and ($generated@@95 ($generated@@8 $generated@@697) $generated@@165 $generated@@696) (= $generated@@698 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))))) (and (and ($generated@@95 $generated@@698 $generated@@156 $generated@@696) ($generated@@261 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))) (and ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694)) ($generated@@261 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@261 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (< 0 $generated@@697) (=> ($generated@@157 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (let (($generated@@706 ($generated@@158 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@544)) (ite (< $generated@@694 0) 0 $generated@@694)))))
($generated@@260 ($generated@@80 ($generated@@80 $generated@@544)) (- $generated@@697 1) $generated@@706))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@261 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (< 0 $generated@@697) (=> (not ($generated@@157 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))) ($generated@@0 ($generated@@269 ($generated@@11 true)))))))))))))))
(let (($generated@@707  (=> (and (<= 0 $generated@@694) (= (ControlFlow 0 6) 2)) $generated@@705)))
(let (($generated@@708  (=> (and (< $generated@@694 0) (= (ControlFlow 0 5) 2)) $generated@@705)))
(let (($generated@@709  (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165)) (=> ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165) (=> (= $generated@@699 (ite (< $generated@@694 0) 0 $generated@@694)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@699) $generated@@165 $generated@@700) ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694))) (and ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694)) (= $generated@@701 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))))) (=> (and (and (and (and ($generated@@255 $generated@@696) ($generated@@702 $generated@@696)) ($generated@@261 $generated@@697 $generated@@701)) (and (and ($generated@@261 $generated@@697 $generated@@701) (and ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 $generated@@701) (=> (< 0 $generated@@697) (ite ($generated@@157 $generated@@701) (let (($generated@@710 ($generated@@158 $generated@@701)))
($generated@@260 ($generated@@80 $generated@@544) (- $generated@@697 1) $generated@@710)) true)))) ($generated@@154 $generated@@697 $generated@@701))) (and (and (and ($generated@@154 $generated@@697 $generated@@701) (and ($generated@@153 ($generated@@80 $generated@@544) $generated@@697 $generated@@701) (ite (= $generated@@697 ($generated@@83 0)) true (ite ($generated@@157 $generated@@701) (let (($generated@@711 ($generated@@158 $generated@@701)))
($generated@@153 ($generated@@80 $generated@@544) (- $generated@@697 1) $generated@@711)) true)))) ($generated@@266 $generated@@697 $generated@@701)) (and (and ($generated@@266 $generated@@697 $generated@@701) (and (and (and ($generated@@265 $generated@@697 $generated@@701) (<= ($generated@@83 0) $generated@@697)) ($generated@@155 $generated@@701 $generated@@156)) ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 $generated@@701))) (= $generated@@700 $generated@@696)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@708) (=> (= (ControlFlow 0 7) 6) $generated@@707)))))))))
(let (($generated@@712  (=> (and (<= 0 $generated@@694) (= (ControlFlow 0 10) 7)) $generated@@709)))
(let (($generated@@713  (=> (and (< $generated@@694 0) (= (ControlFlow 0 9) 7)) $generated@@709)))
(let (($generated@@714  (=> (= $generated@@703 ($generated@@192 $generated@@704 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@713) (=> (= (ControlFlow 0 11) 10) $generated@@712)))))
(let (($generated@@715  (=> (and (and (and ($generated@@255 $generated@@700) ($generated@@702 $generated@@700)) (<= ($generated@@83 0) $generated@@697)) (and (= 5 $generated@@78) (= (ControlFlow 0 12) 11))) $generated@@714)))
$generated@@715)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 (Int) T@U)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 () T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) Bool)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@367 () Int)
(declare-fun $generated@@368 (T@U T@U) Bool)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@527 (T@U Int) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@654 (T@U) T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@660 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@137) 14))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (and (= (type $generated@@138) $generated@@137) (= (type $generated@@139) $generated@@137)) (= (type $generated@@140) $generated@@137)) (and ($generated@@136 $generated@@138 $generated@@139) ($generated@@136 $generated@@139 $generated@@140))) ($generated@@136 $generated@@138 $generated@@140))
 :pattern ( ($generated@@136 $generated@@138 $generated@@139) ($generated@@136 $generated@@139 $generated@@140))
 :pattern ( ($generated@@136 $generated@@138 $generated@@139) ($generated@@136 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@79 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@79 0)))
)))
(assert  (and (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@143 $generated@@146 $generated@@147)) $generated@@137)
 :pattern ( ($generated@@143 $generated@@146 $generated@@147))
)) (forall (($generated@@148 Int) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@137)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 Int) ($generated@@151 Int) ) (!  (=> (= (type $generated@@149) $generated@@137) (=> (and (and (<= 0 $generated@@150) (<= 0 $generated@@151)) (<= (+ $generated@@150 $generated@@151) ($generated@@145 $generated@@149))) (= ($generated@@143 ($generated@@143 $generated@@149 ($generated@@144 $generated@@150)) ($generated@@144 $generated@@151)) ($generated@@143 $generated@@149 ($generated@@144 (+ $generated@@150 $generated@@151))))))
 :pattern ( ($generated@@143 ($generated@@143 $generated@@149 ($generated@@144 $generated@@150)) ($generated@@144 $generated@@151)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@154)) ($generated@@141 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@141 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@137)
 :pattern ( ($generated@@161 $generated@@163))
)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@137)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@154) (= (type $generated@@166) $generated@@154)) true) (= ($generated@@160 $generated@@165 $generated@@166)  (and (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166)))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@72)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@154)))
(assert (= ($generated@@167 $generated@@168) $generated@@65))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@68)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@80 $generated@@137 $generated@@2)) (= (type $generated@@174) $generated@@68)) ($generated@@141 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@141 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 16)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@71 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@81) (= (type $generated@@225) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@226) ($generated@@70 $generated@@4))) (= (type $generated@@228) $generated@@81)) (= (type $generated@@229) ($generated@@70 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@177 $generated@@81 $generated@@4))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@81) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@81)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@68) (= (type $generated@@248) $generated@@68)) (= (type $generated@@249) $generated@@137)) (= (type $generated@@250) $generated@@137)) (= ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@153 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@153 $generated@@247 $generated@@248)))
)))
(assert (= (type $generated@@251) $generated@@68))
(assert ($generated@@141 $generated@@168 $generated@@251))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@252 $generated@@253)) ($generated@@78 $generated@@168 $generated@@251 $generated@@253))
 :pattern ( ($generated@@78 $generated@@168 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@154) (= (type $generated@@255) $generated@@154)) (= ($generated@@160 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@160 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= ($generated@@256 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@141 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@137) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@244 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@141 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@141 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@137) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@244 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@141 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@154) (= (type $generated@@275) $generated@@154)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@256 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@256 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@256 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@68) (= (type $generated@@278) $generated@@68)) (= (type $generated@@279) $generated@@137)) (= (type $generated@@280) $generated@@137)) (= (type $generated@@281) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@281)) (= ($generated@@78 ($generated@@243 $generated@@279 $generated@@280) ($generated@@153 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@78 ($generated@@243 $generated@@279 $generated@@280) ($generated@@153 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@154) (= ($generated@@152 $generated@@282) (= ($generated@@167 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@154) (= ($generated@@283 $generated@@284) (= ($generated@@167 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@154) (= ($generated@@273 $generated@@285) (= ($generated@@167 $generated@@285) $generated@@65)))
 :pattern ( ($generated@@273 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@154) ($generated@@152 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@137) (= (type $generated@@288) $generated@@137)) (= $generated@@286 ($generated@@243 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@152 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@154) ($generated@@273 $generated@@297)) (= $generated@@297 $generated@@168))
 :pattern ( ($generated@@273 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@154)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@154) ($generated@@283 $generated@@300)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@154) (= $generated@@300 ($generated@@298 $generated@@301)))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@283 $generated@@300))
)))
(assert  (and (= ($generated@@1 $generated@@304) 18) (forall (($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@303 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@304) (= (type $generated@@307) $generated@@137)) (= (type $generated@@308) $generated@@154)) (= ($generated@@302 ($generated@@303 $generated@@306) $generated@@307 $generated@@308) ($generated@@302 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@302 ($generated@@303 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@137)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@68) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@276 ($generated@@309 $generated@@311) $generated@@312 $generated@@313) ($generated@@78 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@276 ($generated@@309 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@80 $generated@@316 $generated@@2))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@83 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@80 $generated@@318 $generated@@2)) (and (= (= ($generated@@314 $generated@@317) 0) (= $generated@@317 ($generated@@315 $generated@@318))) (=> (not (= ($generated@@314 $generated@@317) 0)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319))))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 20)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@80 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@85 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@85 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@357) $generated@@137) (= (type $generated@@358) $generated@@137)) (and ($generated@@356 $generated@@358) (<= ($generated@@145 $generated@@358) ($generated@@145 $generated@@357)))) (and (= ($generated@@356 ($generated@@143 $generated@@357 $generated@@358)) ($generated@@356 $generated@@357)) (= ($generated@@145 ($generated@@143 $generated@@357 $generated@@358)) (- ($generated@@145 $generated@@357) ($generated@@145 $generated@@358)))))
 :pattern ( ($generated@@143 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 Int) ) (!  (=> (<= 0 $generated@@359) (and ($generated@@356 ($generated@@144 $generated@@359)) (= ($generated@@145 ($generated@@144 $generated@@359)) $generated@@359)))
 :pattern ( ($generated@@144 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@83 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@80 $generated@@361 $generated@@2)) (= ($generated@@171 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@85 $generated@@360 $generated@@362))) (<= ($generated ($generated@@85 $generated@@360 $generated@@362)) ($generated@@314 $generated@@360))))
 :pattern ( ($generated@@85 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@171 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@137) ($generated@@244 $generated@@366 $generated@@251)) (and (= ($generated@@309 ($generated@@363 $generated@@154 $generated@@366)) $generated@@366) ($generated@@141 ($generated@@363 $generated@@154 $generated@@366) $generated@@251)))
 :pattern ( ($generated@@244 $generated@@366 $generated@@251))
)))
(assert  (=> (<= 1 $generated@@367) (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) $generated@@304) (= (type $generated@@370) $generated@@137)) (= (type $generated@@371) $generated@@154)) (or ($generated@@368 $generated@@370 $generated@@371) (and (not (= 1 $generated@@367)) ($generated@@141 $generated@@371 $generated@@251)))) true)
 :pattern ( ($generated@@302 $generated@@369 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@154) (= ($generated@@141 ($generated@@298 $generated@@372) $generated@@251) ($generated@@141 $generated@@372 $generated@@251)))
 :pattern ( ($generated@@141 ($generated@@298 $generated@@372) $generated@@251))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@154)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@154) (= (type $generated@@376) $generated@@154)) (and ($generated@@283 $generated@@375) ($generated@@283 $generated@@376))) (= ($generated@@256 $generated@@375 $generated@@376) ($generated@@256 ($generated@@373 $generated@@375) ($generated@@373 $generated@@376))))
 :pattern ( ($generated@@256 $generated@@375 $generated@@376) ($generated@@283 $generated@@375))
 :pattern ( ($generated@@256 $generated@@375 $generated@@376) ($generated@@283 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@324 (type $generated@@377))))
(let (($generated@@379 ($generated@@323 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@322 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@321 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@320 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@324 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@324 (type $generated@@384))))
(let (($generated@@386 ($generated@@323 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@322 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@321 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@342 (type $generated@@388))))
(let (($generated@@390 ($generated@@341 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@340 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@339 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@338 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@342 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@80 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@342 (type $generated@@395))))
(let (($generated@@397 ($generated@@341 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@340 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@339 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@80 $generated@@137 $generated@@2)) (= (type $generated@@400) $generated@@68)) (= ($generated@@141 $generated@@399 ($generated@@170 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@137) (< 0 ($generated ($generated@@85 $generated@@399 $generated@@401)))) ($generated@@244 $generated@@401 $generated@@400))
 :pattern ( ($generated@@85 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@141 $generated@@399 ($generated@@170 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@137) (= (type $generated@@403) $generated@@137)) (or (or ($generated@@136 $generated@@402 $generated@@403) (= $generated@@402 $generated@@403)) ($generated@@136 $generated@@403 $generated@@402)))
 :pattern ( ($generated@@136 $generated@@402 $generated@@403) ($generated@@136 $generated@@403 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@404 ($generated@@259 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@137) ($generated@@0 ($generated@@85 $generated@@404 $generated@@407))) ($generated@@276 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@85 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@78 $generated@@404 ($generated@@259 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@80 $generated@@137 $generated@@4)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@408 ($generated@@264 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@137) ($generated@@0 ($generated@@85 $generated@@408 $generated@@411))) ($generated@@276 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@85 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@408 ($generated@@264 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@85 ($generated@@315 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@85 ($generated@@315 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@80 $generated@@137 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@324 (type $generated@@417))))
(let (($generated@@419 ($generated@@323 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@80 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@322 $generated@@137 $generated@@137)) (= (type $generated@@421) $generated@@137)) (= ($generated@@0 ($generated@@85 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@420) ($generated@@161 ($generated@@363 $generated@@154 $generated@@421)))) (= ($generated@@85 ($generated@@415 $generated@@420) ($generated@@161 ($generated@@363 $generated@@154 $generated@@421))) ($generated@@162 ($generated@@363 $generated@@154 $generated@@421))))))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@137 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@342 (type $generated@@425))))
(let (($generated@@427 ($generated@@341 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@80 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@340 $generated@@137 $generated@@137)) (= (type $generated@@429) $generated@@137)) (= ($generated@@0 ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@85 ($generated@@338 $generated@@428) ($generated@@161 ($generated@@363 $generated@@154 $generated@@429)))) (= ($generated@@85 ($generated@@423 $generated@@428) ($generated@@161 ($generated@@363 $generated@@154 $generated@@429))) ($generated@@162 ($generated@@363 $generated@@154 $generated@@429))))))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@323 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@322 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@85 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@341 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@340 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@85 ($generated@@338 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@85 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@435) $generated@@439))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@322 $generated@@137 $generated@@137)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) $generated@@68)) (= (type $generated@@446) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@443) $generated@@447))) (and ($generated@@276 ($generated@@85 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@276 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@78 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@340 $generated@@137 $generated@@137)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) $generated@@68)) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@451) $generated@@455))) (and ($generated@@276 ($generated@@85 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@276 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@78 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@457)) (= ($generated@@78 ($generated@@298 $generated@@456) $generated@@251 $generated@@457) ($generated@@78 $generated@@456 $generated@@251 $generated@@457)))
 :pattern ( ($generated@@78 ($generated@@298 $generated@@456) $generated@@251 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@141 $generated@@458 $generated@@251)) (or ($generated@@283 $generated@@458) ($generated@@273 $generated@@458)))
 :pattern ( ($generated@@273 $generated@@458) ($generated@@141 $generated@@458 $generated@@251))
 :pattern ( ($generated@@283 $generated@@458) ($generated@@141 $generated@@458 $generated@@251))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@80 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@342 (type $generated@@461))))
(let (($generated@@463 ($generated@@341 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@340 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@339 $generated@@463 $generated@@462)) (= ($generated@@338 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@338 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@342 (type $generated@@464))))
(let (($generated@@466 ($generated@@341 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@340 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@339 $generated@@466 $generated@@465)) (= ($generated@@392 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@392 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@342 (type $generated@@467))))
(let (($generated@@469 ($generated@@341 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@340 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@339 $generated@@469 $generated@@468)) (= ($generated@@422 $generated@@467) ($generated@@459 $generated@@137))))))
 :pattern ( ($generated@@422 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@324 (type $generated@@470))))
(let (($generated@@472 ($generated@@323 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@322 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@321 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@137) (= (type $generated@@474) $generated@@137)) ($generated@@0 ($generated@@85 ($generated@@414 $generated@@470) ($generated@@309 ($generated@@243 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@414 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@342 (type $generated@@475))))
(let (($generated@@477 ($generated@@341 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@340 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@339 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@137) (= (type $generated@@479) $generated@@137)) ($generated@@0 ($generated@@85 ($generated@@422 $generated@@475) ($generated@@309 ($generated@@243 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@422 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@137) ($generated@@244 $generated@@480 $generated@@46)) (and (= ($generated@@309 ($generated@@363 $generated@@2 $generated@@480)) $generated@@480) ($generated@@141 ($generated@@363 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@137) ($generated@@244 $generated@@481 $generated@@47)) (and (= ($generated@@309 ($generated@@363 $generated@@3 $generated@@481)) $generated@@481) ($generated@@141 ($generated@@363 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@137) ($generated@@244 $generated@@482 $generated@@44)) (and (= ($generated@@309 ($generated@@363 $generated@@4 $generated@@482)) $generated@@482) ($generated@@141 ($generated@@363 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 21))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@137) ($generated@@244 $generated@@484 $generated@@45)) (and (= ($generated@@309 ($generated@@363 $generated@@483 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@363 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@68) (= ($generated@@244 ($generated@@309 $generated@@485) $generated@@486) ($generated@@141 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@244 ($generated@@309 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@137) (<= 0 ($generated@@145 $generated@@487)))
 :pattern ( ($generated@@145 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@83 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@80 $generated@@489 $generated@@2)) (<= 0 ($generated@@314 $generated@@488))))
 :pattern ( ($generated@@314 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@292 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@291 $generated@@491)) (<= 0 ($generated@@290 $generated@@490))))
 :pattern ( ($generated@@290 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@440 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@440 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@440 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@440 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@76 ($generated@@440 $generated@@500 $generated@@501)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@448 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@448 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@448 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@448 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@76 ($generated@@448 $generated@@510 $generated@@511)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@137) (= (type $generated@@513) $generated@@137)) (= ($generated@@167 ($generated@@243 $generated@@512 $generated@@513)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@153 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@153 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@153 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@153 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@137) (= (type $generated@@523) $generated@@137)) (= ($generated@@161 ($generated@@243 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@243 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@137) (= (type $generated@@525) $generated@@137)) (= ($generated@@162 ($generated@@243 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@243 $generated@@524 $generated@@525))
)))
(assert  (and (forall (($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@528))
)) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (! (let (($generated@@531 ($generated@@292 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@527 $generated@@529 $generated@@530))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@291 $generated@@137)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@532 ($generated@@526 $generated@@533) $generated@@534) (forall (($generated@@535 Int) ) (!  (=> (and (<= 0 $generated@@535) (< $generated@@535 ($generated@@290 $generated@@532))) ($generated@@276 ($generated@@527 $generated@@532 $generated@@535) $generated@@533 $generated@@534))
 :pattern ( ($generated@@527 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@78 $generated@@532 ($generated@@526 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@79 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@79 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@259 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@259 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@541)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@264 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@264 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@545)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@170 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@170 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@170 $generated@@549)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@68)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@550 ($generated@@526 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@526 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@76 ($generated@@526 $generated@@553)) $generated@@57))
 :pattern ( ($generated@@526 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@154) (= ($generated@@167 ($generated@@298 $generated@@554)) $generated@@63))
 :pattern ( ($generated@@298 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@154) (= ($generated@@373 ($generated@@298 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@298 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@363 $generated@@557 ($generated@@309 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@309 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@322 $generated@@137 $generated@@137)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) (= ($generated@@141 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@558) $generated@@561))) (and ($generated@@244 ($generated@@85 ($generated@@415 $generated@@558) $generated@@561) $generated@@560) ($generated@@244 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@558) $generated@@561))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@141 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@340 $generated@@137 $generated@@137)) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) (= ($generated@@141 $generated@@562 ($generated@@448 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@137) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@562) $generated@@565))) (and ($generated@@244 ($generated@@85 ($generated@@423 $generated@@562) $generated@@565) $generated@@564) ($generated@@244 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@562) $generated@@565))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@141 $generated@@562 ($generated@@448 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@137) (= (type $generated@@567) $generated@@137)) (and (and (and (=> ($generated@@136 $generated@@566 $generated@@567) (not (= $generated@@566 $generated@@567))) (=> (and ($generated@@356 $generated@@566) (not ($generated@@356 $generated@@567))) ($generated@@136 $generated@@566 $generated@@567))) (=> (and ($generated@@356 $generated@@566) ($generated@@356 $generated@@567)) (= ($generated@@136 $generated@@566 $generated@@567) (< ($generated@@145 $generated@@566) ($generated@@145 $generated@@567))))) (=> (and ($generated@@136 $generated@@566 $generated@@567) ($generated@@356 $generated@@567)) ($generated@@356 $generated@@566))))
 :pattern ( ($generated@@136 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@137) (= (type $generated@@571) $generated@@137)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@243 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@243 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@137) (= (type $generated@@573) $generated@@137)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@243 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@243 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@137) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@244 $generated@@574 ($generated@@440 $generated@@575 $generated@@576))) (and (= ($generated@@309 ($generated@@363 ($generated@@322 $generated@@137 $generated@@137) $generated@@574)) $generated@@574) ($generated@@141 ($generated@@363 ($generated@@322 $generated@@137 $generated@@137) $generated@@574) ($generated@@440 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@440 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@137) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@244 $generated@@577 ($generated@@448 $generated@@578 $generated@@579))) (and (= ($generated@@309 ($generated@@363 ($generated@@340 $generated@@137 $generated@@137) $generated@@577)) $generated@@577) ($generated@@141 ($generated@@363 ($generated@@340 $generated@@137 $generated@@137) $generated@@577) ($generated@@448 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@448 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@137)) ($generated@@244 $generated@@582 ($generated@@153 $generated@@580 $generated@@581))) (and (= ($generated@@309 ($generated@@363 $generated@@154 $generated@@582)) $generated@@582) ($generated@@141 ($generated@@363 $generated@@154 $generated@@582) ($generated@@153 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@244 $generated@@582 ($generated@@153 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@154) (< ($generated@@569 $generated@@583) ($generated@@569 ($generated@@298 $generated@@583))))
 :pattern ( ($generated@@298 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (not ($generated@@0 ($generated@@85 ($generated@@459 $generated@@585) $generated@@584))))
 :pattern ( (let (($generated@@585 (type $generated@@584)))
($generated@@85 ($generated@@459 $generated@@585) $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@73)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@68) (= (type $generated@@589) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@588 $generated@@589)) $generated@@62) (= ($generated@@586 ($generated@@153 $generated@@588 $generated@@589)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@154) (= ($generated@@568 ($generated@@309 $generated@@590)) ($generated@@569 $generated@@590)))
 :pattern ( ($generated@@568 ($generated@@309 $generated@@590)))
)))
(assert  (=> (<= 1 $generated@@367) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@304) (= (type $generated@@592) $generated@@137)) (= (type $generated@@593) $generated@@154)) (or ($generated@@368 ($generated@@269 $generated@@592) ($generated@@269 $generated@@593)) (and (not (= 1 $generated@@367)) ($generated@@141 $generated@@593 $generated@@251)))) (and (=> (not (= ($generated@@269 $generated@@592) ($generated@@269 ($generated@@144 0)))) (and (=> ($generated@@0 ($generated@@269 ($generated@@11 (< 0 ($generated@@145 ($generated@@269 $generated@@592)))))) (=> ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@283 ($generated@@269 $generated@@593))))) (let (($generated@@594 ($generated@@269 ($generated@@373 ($generated@@269 $generated@@593)))))
($generated@@368 ($generated@@269 ($generated@@143 $generated@@592 ($generated@@144 1))) $generated@@594)))) (=> (not ($generated@@0 ($generated@@269 ($generated@@11 (< 0 ($generated@@145 ($generated@@269 $generated@@592))))))) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@137) ($generated@@136 $generated@@595 $generated@@592)) ($generated@@368 $generated@@595 ($generated@@269 $generated@@593)))
 :pattern ( ($generated@@302 ($generated@@303 $generated@@591) $generated@@595 $generated@@593))
 :pattern ( ($generated@@136 $generated@@595 $generated@@592))
))))) (= ($generated@@302 ($generated@@303 $generated@@591) ($generated@@269 $generated@@592) ($generated@@269 $generated@@593)) (ite (= ($generated@@269 $generated@@592) ($generated@@269 ($generated@@144 0))) true (ite (< 0 ($generated@@145 ($generated@@269 $generated@@592))) (ite ($generated@@283 ($generated@@269 $generated@@593)) ($generated@@0 (let (($generated@@596 ($generated@@269 ($generated@@373 ($generated@@269 $generated@@593)))))
($generated@@269 ($generated@@11 ($generated@@302 ($generated@@303 $generated@@591) ($generated@@269 ($generated@@143 $generated@@592 ($generated@@144 1))) $generated@@596))))) true) (forall (($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@137) true) ($generated@@136 $generated@@597 $generated@@592)) ($generated@@302 ($generated@@303 $generated@@591) $generated@@597 ($generated@@269 $generated@@593)))
 :pattern ( ($generated@@302 ($generated@@303 $generated@@591) $generated@@597 $generated@@593))
 :pattern ( ($generated@@136 $generated@@597 $generated@@592))
)))))))
 :weight 3
 :pattern ( ($generated@@302 ($generated@@303 $generated@@591) ($generated@@269 $generated@@592) ($generated@@269 $generated@@593)))
))))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@137) ($generated@@244 $generated@@598 ($generated@@79 0))) (and (= ($generated@@309 ($generated@@363 $generated@@2 $generated@@598)) $generated@@598) ($generated@@141 ($generated@@363 ($generated@@80 $generated@@137 $generated@@4) $generated@@598) ($generated@@79 0))))
 :pattern ( ($generated@@244 $generated@@598 ($generated@@79 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@137) (= (type $generated@@600) $generated@@68)) ($generated@@244 $generated@@599 ($generated@@259 $generated@@600))) (and (= ($generated@@309 ($generated@@363 ($generated@@80 $generated@@137 $generated@@4) $generated@@599)) $generated@@599) ($generated@@141 ($generated@@363 ($generated@@80 $generated@@137 $generated@@4) $generated@@599) ($generated@@259 $generated@@600))))
 :pattern ( ($generated@@244 $generated@@599 ($generated@@259 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@137) (= (type $generated@@602) $generated@@68)) ($generated@@244 $generated@@601 ($generated@@264 $generated@@602))) (and (= ($generated@@309 ($generated@@363 ($generated@@80 $generated@@137 $generated@@4) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@363 ($generated@@80 $generated@@137 $generated@@4) $generated@@601) ($generated@@264 $generated@@602))))
 :pattern ( ($generated@@244 $generated@@601 ($generated@@264 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@137) (= (type $generated@@604) $generated@@68)) ($generated@@244 $generated@@603 ($generated@@170 $generated@@604))) (and (= ($generated@@309 ($generated@@363 ($generated@@80 $generated@@137 $generated@@2) $generated@@603)) $generated@@603) ($generated@@141 ($generated@@363 ($generated@@80 $generated@@137 $generated@@2) $generated@@603) ($generated@@170 $generated@@604))))
 :pattern ( ($generated@@244 $generated@@603 ($generated@@170 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@137) (= (type $generated@@606) $generated@@68)) ($generated@@244 $generated@@605 ($generated@@526 $generated@@606))) (and (= ($generated@@309 ($generated@@363 ($generated@@291 $generated@@137) $generated@@605)) $generated@@605) ($generated@@141 ($generated@@363 ($generated@@291 $generated@@137) $generated@@605) ($generated@@526 $generated@@606))))
 :pattern ( ($generated@@244 $generated@@605 ($generated@@526 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@137) ($generated@@356 $generated@@607)) (= $generated@@607 ($generated@@144 ($generated@@145 $generated@@607))))
 :pattern ( ($generated@@145 $generated@@607))
 :pattern ( ($generated@@356 $generated@@607))
)))
(assert (= ($generated@@76 $generated@@251) $generated@@64))
(assert (= ($generated@@586 $generated@@251) $generated@@67))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@137 $generated@@2)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@170 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@137) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@276 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@170 $generated@@609) $generated@@610))
)))
(assert (= $generated@@168 ($generated@@269 $generated@@168)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@137) (= (type $generated@@613) $generated@@137)) (and ($generated@@356 $generated@@613) (<= ($generated@@145 $generated@@613) ($generated@@145 $generated@@612)))) (or (and (= $generated@@613 ($generated@@144 0)) (= ($generated@@143 $generated@@612 $generated@@613) $generated@@612)) (and (not (= $generated@@613 ($generated@@144 0))) ($generated@@136 ($generated@@143 $generated@@612 $generated@@613) $generated@@612))))
 :pattern ( ($generated@@143 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@154) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@616) (and ($generated@@152 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@68) ($generated@@78 $generated@@614 ($generated@@153 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@153 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@276 ($generated@@161 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@276 ($generated@@161 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@154) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@620) (and ($generated@@152 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@68) ($generated@@78 $generated@@618 ($generated@@153 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 $generated@@618 ($generated@@153 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@276 ($generated@@162 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@276 ($generated@@162 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@154) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@623) (and ($generated@@283 $generated@@622) ($generated@@78 $generated@@622 $generated@@251 $generated@@623)))) ($generated@@78 ($generated@@373 $generated@@622) $generated@@251 $generated@@623))
 :pattern ( ($generated@@78 ($generated@@373 $generated@@622) $generated@@251 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@137) (= (type $generated@@625) $generated@@137)) (= ($generated@@243 ($generated@@269 $generated@@624) ($generated@@269 $generated@@625)) ($generated@@269 ($generated@@243 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@243 ($generated@@269 $generated@@624) ($generated@@269 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@154) (= ($generated@@298 ($generated@@269 $generated@@626)) ($generated@@269 ($generated@@298 $generated@@626))))
 :pattern ( ($generated@@298 ($generated@@269 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@309 ($generated@@269 $generated@@627)) ($generated@@269 ($generated@@309 $generated@@627)))
 :pattern ( ($generated@@309 ($generated@@269 $generated@@627)))
)))
(assert  (=> (<= 1 $generated@@367) (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@304) (= (type $generated@@629) $generated@@137)) (= (type $generated@@630) $generated@@154)) (or ($generated@@368 $generated@@629 $generated@@630) (and (not (= 1 $generated@@367)) ($generated@@141 $generated@@630 $generated@@251)))) (and (=> (not (= $generated@@629 ($generated@@269 ($generated@@144 0)))) (and (=> (< 0 ($generated@@145 $generated@@629)) (=> ($generated@@283 $generated@@630) (let (($generated@@631 ($generated@@373 $generated@@630)))
($generated@@368 ($generated@@143 $generated@@629 ($generated@@144 1)) $generated@@631)))) (=> (not (< 0 ($generated@@145 $generated@@629))) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@137) ($generated@@136 $generated@@632 $generated@@629)) ($generated@@368 $generated@@632 $generated@@630))
 :pattern ( ($generated@@302 $generated@@628 $generated@@632 $generated@@630))
 :pattern ( ($generated@@136 $generated@@632 $generated@@629))
))))) (= ($generated@@302 ($generated@@303 $generated@@628) $generated@@629 $generated@@630) (ite (= $generated@@629 ($generated@@269 ($generated@@144 0))) true (ite (< 0 ($generated@@145 $generated@@629)) (ite ($generated@@283 $generated@@630) (let (($generated@@633 ($generated@@373 $generated@@630)))
($generated@@302 $generated@@628 ($generated@@143 $generated@@629 ($generated@@144 1)) $generated@@633)) true) (forall (($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@137) true) ($generated@@136 $generated@@634 $generated@@629)) ($generated@@302 $generated@@628 $generated@@634 $generated@@630))
 :pattern ( ($generated@@302 $generated@@628 $generated@@634 $generated@@630))
 :pattern ( ($generated@@136 $generated@@634 $generated@@629))
)))))))
 :pattern ( ($generated@@302 ($generated@@303 $generated@@628) $generated@@629 $generated@@630))
))))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@292 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@291 $generated@@636)) (= ($generated@@290 $generated@@635) 0)) (= $generated@@635 ($generated@@289 $generated@@636))))
 :pattern ( ($generated@@290 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@638)))
 (=> (and (and (= (type $generated@@637) ($generated@@80 $generated@@640 $generated@@2)) (= (type $generated@@639) $generated@@2)) (<= 0 ($generated $generated@@639))) (= ($generated@@314 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)) (+ (- ($generated@@314 $generated@@637) ($generated ($generated@@85 $generated@@637 $generated@@638))) ($generated $generated@@639)))))
 :pattern ( ($generated@@314 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@2)) ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@3)) ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@4)) ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@483)) ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@137)) ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@291 $generated@@137)) (= (type $generated@@652) $generated@@68)) (= ($generated@@141 $generated@@651 ($generated@@526 $generated@@652)) (forall (($generated@@653 Int) ) (!  (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@290 $generated@@651))) ($generated@@244 ($generated@@527 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@527 $generated@@651 $generated@@653))
))))
 :pattern ( ($generated@@141 $generated@@651 ($generated@@526 $generated@@652)))
)))
(assert  (and (forall (($generated@@656 T@U) ) (! (= (type ($generated@@654 $generated@@656)) $generated@@304)
 :pattern ( ($generated@@654 $generated@@656))
)) (= (type $generated@@655) $generated@@304)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@304) (= (type $generated@@658) $generated@@137)) (= (type $generated@@659) $generated@@154)) (= ($generated@@302 $generated@@657 $generated@@658 $generated@@659) ($generated@@302 $generated@@655 $generated@@658 $generated@@659)))
 :pattern ( ($generated@@302 ($generated@@654 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 Int) ) (!  (=> (= (type $generated@@661) ($generated@@291 $generated@@137)) (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@290 $generated@@661))) (< ($generated@@569 ($generated@@363 $generated@@154 ($generated@@527 $generated@@661 $generated@@662))) ($generated@@660 $generated@@661))))
 :pattern ( ($generated@@569 ($generated@@363 $generated@@154 ($generated@@527 $generated@@661 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@322 $generated@@137 $generated@@137)) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) $generated@@68)) ($generated@@141 $generated@@663 ($generated@@440 $generated@@664 $generated@@665))) (and (and ($generated@@141 ($generated@@320 $generated@@663) ($generated@@259 $generated@@664)) ($generated@@141 ($generated@@381 $generated@@663) ($generated@@259 $generated@@665))) ($generated@@141 ($generated@@414 $generated@@663) ($generated@@259 ($generated@@153 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@141 $generated@@663 ($generated@@440 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@340 $generated@@137 $generated@@137)) (= (type $generated@@667) $generated@@68)) (= (type $generated@@668) $generated@@68)) ($generated@@141 $generated@@666 ($generated@@448 $generated@@667 $generated@@668))) (and (and ($generated@@141 ($generated@@338 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@141 ($generated@@392 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@141 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@153 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@141 $generated@@666 ($generated@@448 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@2) ($generated@@141 $generated@@669 $generated@@46))
 :pattern ( ($generated@@141 $generated@@669 $generated@@46))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@3) ($generated@@141 $generated@@670 $generated@@47))
 :pattern ( ($generated@@141 $generated@@670 $generated@@47))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@4) ($generated@@141 $generated@@671 $generated@@44))
 :pattern ( ($generated@@141 $generated@@671 $generated@@44))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@483) ($generated@@141 $generated@@672 $generated@@45))
 :pattern ( ($generated@@141 $generated@@672 $generated@@45))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@137) ($generated@@141 $generated@@673 $generated@@48))
 :pattern ( ($generated@@141 $generated@@673 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@681) $generated@@137) (= (type $generated@@679) $generated@@137)) (= (type $generated@@677) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@674) $generated@@154)) (= (type $generated@@675) $generated@@154)) (= (type $generated@@676) $generated@@154)) (= (type $generated@@678) $generated@@154)) (= (type $generated@@680) $generated@@137)) (= (type $generated@@682) ($generated@@177 $generated@@81 $generated@@4))) (= (type $generated@@683) $generated@@81)) (= (type $generated@@684) ($generated@@177 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@686 true))
(let (($generated@@687 true))
(let (($generated@@688  (=> (not (= $generated@@674 ($generated@@298 $generated@@675))) (and (=> (= (ControlFlow 0 16) 14) $generated@@687) (=> (= (ControlFlow 0 16) 15) $generated@@686)))))
(let (($generated@@689  (=> (and (= $generated@@674 ($generated@@298 $generated@@675)) ($generated@@141 $generated@@675 $generated@@251)) (=> (and (and (and ($generated@@141 $generated@@676 $generated@@251) ($generated@@78 $generated@@676 $generated@@251 $generated@@677)) (= $generated@@678 $generated@@675)) (and ($generated@@141 $generated@@678 $generated@@251) (= $generated@@676 $generated@@678))) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@356 ($generated@@269 ($generated@@144 1)))) (=> ($generated@@356 ($generated@@269 ($generated@@144 1))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (<= ($generated@@145 ($generated@@269 ($generated@@144 1))) ($generated@@145 $generated@@679))) (=> (<= ($generated@@145 ($generated@@269 ($generated@@144 1))) ($generated@@145 $generated@@679)) (=> (and (and (= $generated@@680 ($generated@@143 $generated@@679 ($generated@@144 1))) ($generated@@78 $generated@@680 $generated@@48 $generated@@677)) (and ($generated@@78 $generated@@676 $generated@@251 $generated@@677) (= (ControlFlow 0 11) (- 0 10)))) (or ($generated@@136 $generated@@680 $generated@@679) (and (= $generated@@680 $generated@@679) (< ($generated@@569 $generated@@676) ($generated@@569 $generated@@674)))))))))))))
(let (($generated@@690  (=> (< 0 ($generated@@145 $generated@@679)) (and (=> (= (ControlFlow 0 17) 11) $generated@@689) (=> (= (ControlFlow 0 17) 16) $generated@@688)))))
(let (($generated@@691 true))
(let (($generated@@692  (=> (and (not ($generated@@136 $generated@@681 $generated@@679)) (= (ControlFlow 0 7) 4)) $generated@@691)))
(let (($generated@@693  (=> ($generated@@136 $generated@@681 $generated@@679) (=> (and ($generated@@78 $generated@@681 $generated@@48 $generated@@677) ($generated@@78 $generated@@674 $generated@@251 $generated@@677)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or ($generated@@136 $generated@@681 $generated@@679) (and (= $generated@@681 $generated@@679) (< ($generated@@569 $generated@@674) ($generated@@569 $generated@@674))))) (=> (or ($generated@@136 $generated@@681 $generated@@679) (and (= $generated@@681 $generated@@679) (< ($generated@@569 $generated@@674) ($generated@@569 $generated@@674)))) (=> (and ($generated@@368 $generated@@681 $generated@@674) (= (ControlFlow 0 5) 4)) $generated@@691)))))))
(let (($generated@@694  (and (=> (= (ControlFlow 0 8) 5) $generated@@693) (=> (= (ControlFlow 0 8) 7) $generated@@692))))
(let (($generated@@695 true))
(let (($generated@@696  (=> (not (< 0 ($generated@@145 $generated@@679))) (and (=> (= (ControlFlow 0 9) 8) $generated@@694) (=> (= (ControlFlow 0 9) 3) $generated@@695)))))
(let (($generated@@697  (=> (not (= $generated@@679 ($generated@@269 ($generated@@144 0)))) (and (=> (= (ControlFlow 0 18) 17) $generated@@690) (=> (= (ControlFlow 0 18) 9) $generated@@696)))))
(let (($generated@@698 true))
(let (($generated@@699  (=> (= $generated@@682 ($generated@@231 $generated@@683 $generated@@677 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 2) $generated@@698) (=> (= (ControlFlow 0 19) 18) $generated@@697)))))
(let (($generated@@700 true))
(let (($generated@@701  (=> (= $generated@@684 ($generated@@176 $generated@@683 $generated@@677 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) 1) $generated@@700) (=> (= (ControlFlow 0 20) 19) $generated@@699)))))
(let (($generated@@702  (=> (and (and (and ($generated@@252 $generated@@677) ($generated@@685 $generated@@677)) ($generated@@141 $generated@@674 $generated@@251)) (and (= 1 $generated@@367) (= (ControlFlow 0 21) 20))) $generated@@701)))
$generated@@702))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (Int) T@U)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@335 (T@U T@U T@U) Bool)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) Bool)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@510 (T@T) T@U)
(declare-fun $generated@@534 () T@T)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U Int) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@718 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= ($generated@@1 $generated@@154) 16))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@154) (= (type $generated@@156) $generated@@154)) (= (type $generated@@157) $generated@@154)) (and ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@156 $generated@@157))) ($generated@@153 $generated@@155 $generated@@157))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@156 $generated@@157))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@155 $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@96 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@96 0)))
)))
(assert  (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@166 $generated@@167)) $generated@@154)
 :pattern ( ($generated@@163 $generated@@166 $generated@@167))
)) (forall (($generated@@168 Int) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@154)
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 Int) ) (!  (=> (= (type $generated@@169) $generated@@154) (=> (and (and (<= 0 $generated@@170) (<= 0 $generated@@171)) (<= (+ $generated@@170 $generated@@171) ($generated@@165 $generated@@169))) (= ($generated@@163 ($generated@@163 $generated@@169 ($generated@@164 $generated@@170)) ($generated@@164 $generated@@171)) ($generated@@163 $generated@@169 ($generated@@164 (+ $generated@@170 $generated@@171))))))
 :pattern ( ($generated@@163 ($generated@@163 $generated@@169 ($generated@@164 $generated@@170)) ($generated@@164 $generated@@171)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@86)) ($generated@@161 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@161 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@154)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@154)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@86) (= (type $generated@@185) $generated@@86)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@186 $generated@@187)) $generated@@74)
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert (= ($generated@@186 $generated@@84) $generated@@66))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@70)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@192) $generated@@70)) ($generated@@161 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@161 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@98 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@73 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@98) (= (type $generated@@243) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@244) ($generated@@72 $generated@@4))) (= (type $generated@@246) $generated@@98)) (= (type $generated@@247) ($generated@@72 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@86)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@154)) (= (type $generated@@256) $generated@@154)) (= ($generated@@161 ($generated@@249 $generated@@255 $generated@@256) ($generated@@173 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@161 ($generated@@249 $generated@@255 $generated@@256) ($generated@@173 $generated@@253 $generated@@254)))
)))
(assert (= (type $generated@@257) $generated@@70))
(assert ($generated@@161 $generated@@84 $generated@@257))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@258 $generated@@259)) ($generated@@95 $generated@@84 $generated@@257 $generated@@259))
 :pattern ( ($generated@@95 $generated@@84 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@86) (= (type $generated@@261) $generated@@86)) (= ($generated@@179 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@179 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@86) (= (type $generated@@264) $generated@@86)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert  (and (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@266 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@266 $generated@@271))
)) (= (type $generated@@270) $generated@@81)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@154) (= (type $generated@@274) $generated@@86)) (or ($generated@@267 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@274 $generated@@257)))) (and ($generated@@268 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) (= ($generated@@265 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@269 ($generated@@80 $generated@@270) ($generated@@266 $generated@@273) ($generated@@266 $generated@@274))))))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@70)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@278) $generated@@70)) (= ($generated@@161 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@154) ($generated@@0 ($generated@@102 $generated@@277 $generated@@279))) ($generated@@250 $generated@@279 $generated@@278))
 :pattern ( ($generated@@102 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@161 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@70)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@283) $generated@@70)) (= ($generated@@161 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@154) ($generated@@0 ($generated@@102 $generated@@282 $generated@@284))) ($generated@@250 $generated@@284 $generated@@283))
 :pattern ( ($generated@@102 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@161 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@83 $generated@@285) $generated@@285)
 :pattern ( ($generated@@83 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (= ($generated@@266 $generated@@286) $generated@@286)
 :pattern ( ($generated@@266 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@86) (= (type $generated@@289) $generated@@86)) (and ($generated@@287 $generated@@288) ($generated@@287 $generated@@289))) (= ($generated@@262 $generated@@288 $generated@@289) true))
 :pattern ( ($generated@@262 $generated@@288 $generated@@289) ($generated@@287 $generated@@288))
 :pattern ( ($generated@@262 $generated@@288 $generated@@289) ($generated@@287 $generated@@289))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@154) (= (type $generated@@291) $generated@@86)) (or ($generated@@267 $generated@@290 $generated@@291) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@291 $generated@@257)))) (and ($generated@@268 $generated@@290 $generated@@291) (= ($generated@@265 $generated@@290 $generated@@291) ($generated@@269 ($generated@@80 $generated@@270) $generated@@290 $generated@@291))))
 :pattern ( ($generated@@265 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@154)) (= (type $generated@@296) $generated@@154)) (= (type $generated@@297) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@258 $generated@@297)) (= ($generated@@95 ($generated@@249 $generated@@295 $generated@@296) ($generated@@173 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@95 ($generated@@249 $generated@@295 $generated@@296) ($generated@@173 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@86) (= ($generated@@172 $generated@@298) (= ($generated@@186 $generated@@298) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@86) (= ($generated@@299 $generated@@300) (= ($generated@@186 $generated@@300) $generated@@64)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@86) (= ($generated@@287 $generated@@301) (= ($generated@@186 $generated@@301) $generated@@66)))
 :pattern ( ($generated@@287 $generated@@301))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@302 T@U) ($generated@@303 Int) ) (!  (=> (and (= (type $generated@@302) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@303)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@303)))) (and (=> (not (= ($generated@@83 $generated@@303) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@303 1)))) (= ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 $generated@@303)) (ite (= ($generated@@83 $generated@@303) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@266 ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 (- $generated@@303 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 $generated@@303)))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@81) (= (type $generated@@305) $generated@@86)) (= (type $generated@@306) $generated@@154)) (and ($generated@@161 $generated@@305 $generated@@257) (= $generated@@306 ($generated@@164 0)))) ($generated@@269 $generated@@304 $generated@@306 $generated@@305))
 :pattern ( ($generated@@269 $generated@@304 $generated@@306 $generated@@305))
))))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@86) ($generated@@172 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@154) (= (type $generated@@309) $generated@@154)) (= $generated@@307 ($generated@@249 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@172 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@86) ($generated@@287 $generated@@318)) (= $generated@@318 $generated@@84))
 :pattern ( ($generated@@287 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@86) ($generated@@299 $generated@@319)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@86) (= $generated@@319 ($generated@@85 $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@299 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@2) (= ($generated@@161 $generated@@321 $generated@@158) (<= ($generated@@83 0) ($generated $generated@@321))))
 :pattern ( ($generated@@161 $generated@@321 $generated@@158))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@86)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@324) $generated@@81) (= (type $generated@@325) $generated@@154)) (= (type $generated@@326) $generated@@86)) (or ($generated@@268 ($generated@@266 $generated@@325) $generated@@326) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@326 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@325)) (=> ($generated@@299 $generated@@326) (let (($generated@@327 ($generated@@322 $generated@@326)))
($generated@@268 ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@327)))) (=> (=> (< 0 ($generated@@165 $generated@@325)) (ite ($generated@@299 $generated@@326) (let (($generated@@328 ($generated@@322 $generated@@326)))
($generated@@269 ($generated@@80 $generated@@324) ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@328)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@325)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@153 $generated@@329 $generated@@325)) ($generated@@268 $generated@@329 $generated@@326))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) $generated@@329 $generated@@326))
))))) (= ($generated@@269 ($generated@@80 $generated@@324) ($generated@@266 $generated@@325) $generated@@326)  (and (=> (< 0 ($generated@@165 $generated@@325)) (ite ($generated@@299 $generated@@326) (let (($generated@@330 ($generated@@322 $generated@@326)))
($generated@@269 ($generated@@80 $generated@@324) ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@330)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@325)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@154) ($generated@@153 $generated@@331 $generated@@325)) ($generated@@269 ($generated@@80 $generated@@324) $generated@@331 $generated@@326))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) $generated@@331 $generated@@326))
)))))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) ($generated@@266 $generated@@325) $generated@@326))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@81) (= (type $generated@@333) $generated@@154)) (= (type $generated@@334) $generated@@86)) (= ($generated@@269 ($generated@@80 $generated@@332) $generated@@333 $generated@@334) ($generated@@269 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) $generated@@81) (= (type $generated@@337) $generated@@154)) (= (type $generated@@338) $generated@@86)) (= ($generated@@335 ($generated@@80 $generated@@336) $generated@@337 $generated@@338) ($generated@@335 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@154)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@70) (= (type $generated@@343) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@292 ($generated@@339 $generated@@341) $generated@@342 $generated@@343) ($generated@@95 $generated@@341 $generated@@342 $generated@@343)))
 :pattern ( ($generated@@292 ($generated@@339 $generated@@341) $generated@@342 $generated@@343))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@344 T@U) ($generated@@345 Int) ) (!  (=> (and (= (type $generated@@344) $generated@@81) (or ($generated@@82 $generated@@345) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@345)))) ($generated@@161 ($generated@@79 $generated@@344 $generated@@345) $generated@@257))
 :pattern ( ($generated@@79 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@97 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@100 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@97 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@102 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@97 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@102 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@102 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@97 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@102 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@102 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@154) (= (type $generated@@390) $generated@@154)) (and ($generated@@388 $generated@@390) (<= ($generated@@165 $generated@@390) ($generated@@165 $generated@@389)))) (and (= ($generated@@388 ($generated@@163 $generated@@389 $generated@@390)) ($generated@@388 $generated@@389)) (= ($generated@@165 ($generated@@163 $generated@@389 $generated@@390)) (- ($generated@@165 $generated@@389) ($generated@@165 $generated@@390)))))
 :pattern ( ($generated@@163 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 Int) ) (!  (=> (<= 0 $generated@@391) (and ($generated@@388 ($generated@@164 $generated@@391)) (= ($generated@@165 ($generated@@164 $generated@@391)) $generated@@391)))
 :pattern ( ($generated@@164 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@100 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@97 $generated@@393 $generated@@2)) (= ($generated@@189 $generated@@392) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@393) (and (<= 0 ($generated ($generated@@102 $generated@@392 $generated@@394))) (<= ($generated ($generated@@102 $generated@@392 $generated@@394)) ($generated@@346 $generated@@392))))
 :pattern ( ($generated@@102 $generated@@392 $generated@@394))
)))))
 :pattern ( ($generated@@189 $generated@@392))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@250 $generated@@398 $generated@@158)) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@398)) $generated@@398) ($generated@@161 ($generated@@395 $generated@@2 $generated@@398) $generated@@158)))
 :pattern ( ($generated@@250 $generated@@398 $generated@@158))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@154) ($generated@@250 $generated@@399 $generated@@257)) (and (= ($generated@@339 ($generated@@395 $generated@@86 $generated@@399)) $generated@@399) ($generated@@161 ($generated@@395 $generated@@86 $generated@@399) $generated@@257)))
 :pattern ( ($generated@@250 $generated@@399 $generated@@257))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) $generated@@81) (= (type $generated@@402) $generated@@154)) (= (type $generated@@403) $generated@@86)) (or ($generated@@400 $generated@@402 $generated@@403) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@403 $generated@@257)))) true)
 :pattern ( ($generated@@335 $generated@@401 $generated@@402 $generated@@403))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) $generated@@81) (= (type $generated@@405) $generated@@154)) (= (type $generated@@406) $generated@@86)) (or ($generated@@268 $generated@@405 $generated@@406) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@406 $generated@@257)))) true)
 :pattern ( ($generated@@269 $generated@@404 $generated@@405 $generated@@406))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@407) $generated@@154) (= (type $generated@@408) $generated@@86)) (or ($generated@@267 $generated@@407 $generated@@408) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@408 $generated@@257)))) true)
 :pattern ( ($generated@@265 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@86) (= ($generated@@161 ($generated@@85 $generated@@409) $generated@@257) ($generated@@161 $generated@@409 $generated@@257)))
 :pattern ( ($generated@@161 ($generated@@85 $generated@@409) $generated@@257))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@86) (= (type $generated@@411) $generated@@86)) (and ($generated@@299 $generated@@410) ($generated@@299 $generated@@411))) (= ($generated@@262 $generated@@410 $generated@@411) ($generated@@262 ($generated@@322 $generated@@410) ($generated@@322 $generated@@411))))
 :pattern ( ($generated@@262 $generated@@410 $generated@@411) ($generated@@299 $generated@@410))
 :pattern ( ($generated@@262 $generated@@410 $generated@@411) ($generated@@299 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@356 (type $generated@@412))))
(let (($generated@@414 ($generated@@355 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@354 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@353 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@352 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@356 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417)) ($generated@@97 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@356 (type $generated@@419))))
(let (($generated@@421 ($generated@@355 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@354 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@353 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@420) ($generated@@0 ($generated@@102 ($generated@@416 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@416 $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@374 (type $generated@@423))))
(let (($generated@@425 ($generated@@373 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@372 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@371 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@374 (type $generated@@428))))
(= (type ($generated@@427 $generated@@428)) ($generated@@97 $generated@@429 $generated@@4)))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@374 (type $generated@@430))))
(let (($generated@@432 ($generated@@373 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@372 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@371 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@431) ($generated@@0 ($generated@@102 ($generated@@427 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@427 $generated@@430))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) $generated@@81) (= (type $generated@@435) $generated@@154)) (= (type $generated@@436) $generated@@86)) (or ($generated@@268 ($generated@@266 $generated@@435) ($generated@@266 $generated@@436)) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@436 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@435)) (=> ($generated@@299 $generated@@436) (let (($generated@@437 ($generated@@322 $generated@@436)))
($generated@@268 ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@437)))) (=> (=> (< 0 ($generated@@165 $generated@@435)) (ite ($generated@@299 $generated@@436) (let (($generated@@438 ($generated@@322 $generated@@436)))
($generated@@269 ($generated@@80 $generated@@434) ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@438)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@435)) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@153 $generated@@439 $generated@@435)) ($generated@@268 $generated@@439 $generated@@436))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) $generated@@439 $generated@@436))
))))) (= ($generated@@269 ($generated@@80 $generated@@434) ($generated@@266 $generated@@435) ($generated@@266 $generated@@436))  (and (=> (< 0 ($generated@@165 $generated@@435)) (ite ($generated@@299 $generated@@436) (let (($generated@@440 ($generated@@322 $generated@@436)))
($generated@@269 ($generated@@80 $generated@@434) ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@440)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@435)) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@154) ($generated@@153 $generated@@441 $generated@@435)) ($generated@@269 ($generated@@80 $generated@@434) $generated@@441 $generated@@436))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) $generated@@441 $generated@@436))
)))))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) ($generated@@266 $generated@@435) ($generated@@266 $generated@@436)))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@443) $generated@@70)) (= ($generated@@161 $generated@@442 ($generated@@188 $generated@@443)) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@154) (< 0 ($generated ($generated@@102 $generated@@442 $generated@@444)))) ($generated@@250 $generated@@444 $generated@@443))
 :pattern ( ($generated@@102 $generated@@442 $generated@@444))
))))
 :pattern ( ($generated@@161 $generated@@442 ($generated@@188 $generated@@443)))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@154) (= (type $generated@@446) $generated@@154)) (or (or ($generated@@153 $generated@@445 $generated@@446) (= $generated@@445 $generated@@446)) ($generated@@153 $generated@@446 $generated@@445)))
 :pattern ( ($generated@@153 $generated@@445 $generated@@446) ($generated@@153 $generated@@446 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@448) $generated@@70)) (= (type $generated@@449) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@447 ($generated@@275 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@102 $generated@@447 $generated@@450))) ($generated@@292 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@102 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@95 $generated@@447 ($generated@@275 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (= (type $generated@@451) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@452) $generated@@70)) (= (type $generated@@453) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@451 ($generated@@280 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@154) ($generated@@0 ($generated@@102 $generated@@451 $generated@@454))) ($generated@@292 $generated@@454 $generated@@452 $generated@@453))
 :pattern ( ($generated@@102 $generated@@451 $generated@@454))
))))
 :pattern ( ($generated@@95 $generated@@451 ($generated@@280 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(= ($generated ($generated@@102 ($generated@@347 $generated@@456) $generated@@455)) 0))
 :pattern ( (let (($generated@@456 (type $generated@@455)))
($generated@@102 ($generated@@347 $generated@@456) $generated@@455)))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) ($generated@@97 $generated@@154 $generated@@4))
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@356 (type $generated@@460))))
(let (($generated@@462 ($generated@@355 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460)) ($generated@@97 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@458 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@464) $generated@@154)) (= ($generated@@0 ($generated@@102 ($generated@@457 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@102 ($generated@@352 $generated@@463) ($generated@@180 ($generated@@395 $generated@@86 $generated@@464)))) (= ($generated@@102 ($generated@@458 $generated@@463) ($generated@@180 ($generated@@395 $generated@@86 $generated@@464))) ($generated@@181 ($generated@@395 $generated@@86 $generated@@464))))))
 :pattern ( ($generated@@102 ($generated@@457 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@97 $generated@@154 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@374 (type $generated@@468))))
(let (($generated@@470 ($generated@@373 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@97 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@472) $generated@@154)) (= ($generated@@0 ($generated@@102 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@102 ($generated@@370 $generated@@471) ($generated@@180 ($generated@@395 $generated@@86 $generated@@472)))) (= ($generated@@102 ($generated@@466 $generated@@471) ($generated@@180 ($generated@@395 $generated@@86 $generated@@472))) ($generated@@181 ($generated@@395 $generated@@86 $generated@@472))))))
 :pattern ( ($generated@@102 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@355 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@354 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@102 ($generated@@416 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@102 ($generated@@352 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@102 ($generated@@458 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@473) $generated@@477))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@102 ($generated@@416 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@373 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@372 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@102 ($generated@@427 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@102 ($generated@@370 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@102 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@478) $generated@@482))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@102 ($generated@@427 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= (type $generated@@489) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@486) $generated@@490))) (and ($generated@@292 ($generated@@102 ($generated@@458 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@292 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@486) $generated@@490))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@95 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@494) $generated@@498))) (and ($generated@@292 ($generated@@102 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@292 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@95 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@499) $generated@@86) (= (type $generated@@500) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@258 $generated@@500)) (= ($generated@@95 ($generated@@85 $generated@@499) $generated@@257 $generated@@500) ($generated@@95 $generated@@499 $generated@@257 $generated@@500)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@499) $generated@@257 $generated@@500))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@81) (= (type $generated@@502) $generated@@154)) (= (type $generated@@503) $generated@@86)) (or ($generated@@268 $generated@@502 $generated@@503) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@503 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@502)) (=> ($generated@@299 $generated@@503) (let (($generated@@504 ($generated@@322 $generated@@503)))
($generated@@268 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@504)))) (=> (=> (< 0 ($generated@@165 $generated@@502)) (ite ($generated@@299 $generated@@503) (let (($generated@@505 ($generated@@322 $generated@@503)))
($generated@@269 $generated@@501 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@505)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@502)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@154) ($generated@@153 $generated@@506 $generated@@502)) ($generated@@268 $generated@@506 $generated@@503))
 :pattern ( ($generated@@269 $generated@@501 $generated@@506 $generated@@503))
))))) (= ($generated@@269 ($generated@@80 $generated@@501) $generated@@502 $generated@@503)  (and (=> (< 0 ($generated@@165 $generated@@502)) (ite ($generated@@299 $generated@@503) (let (($generated@@507 ($generated@@322 $generated@@503)))
($generated@@269 $generated@@501 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@507)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@502)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@153 $generated@@508 $generated@@502)) ($generated@@269 $generated@@501 $generated@@508 $generated@@503))
 :pattern ( ($generated@@269 $generated@@501 $generated@@508 $generated@@503))
)))))))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@501) $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@86) ($generated@@161 $generated@@509 $generated@@257)) (or ($generated@@299 $generated@@509) ($generated@@287 $generated@@509)))
 :pattern ( ($generated@@287 $generated@@509) ($generated@@161 $generated@@509 $generated@@257))
 :pattern ( ($generated@@299 $generated@@509) ($generated@@161 $generated@@509 $generated@@257))
)))
(assert (forall (($generated@@511 T@T) ) (! (= (type ($generated@@510 $generated@@511)) ($generated@@97 $generated@@511 $generated@@4))
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@374 (type $generated@@512))))
(let (($generated@@514 ($generated@@373 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@372 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@371 $generated@@514 $generated@@513)) (= ($generated@@370 $generated@@512) ($generated@@510 $generated@@514))))))
 :pattern ( ($generated@@370 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@374 (type $generated@@515))))
(let (($generated@@517 ($generated@@373 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@372 $generated@@517 $generated@@516)) (= (= $generated@@515 ($generated@@371 $generated@@517 $generated@@516)) (= ($generated@@427 $generated@@515) ($generated@@510 $generated@@516))))))
 :pattern ( ($generated@@427 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@374 (type $generated@@518))))
(let (($generated@@520 ($generated@@373 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@372 $generated@@520 $generated@@519)) (= (= $generated@@518 ($generated@@371 $generated@@520 $generated@@519)) (= ($generated@@465 $generated@@518) ($generated@@510 $generated@@154))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@356 (type $generated@@521))))
(let (($generated@@523 ($generated@@355 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@354 $generated@@523 $generated@@522)) (or (= $generated@@521 ($generated@@353 $generated@@523 $generated@@522)) (exists (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (and (and (= (type $generated@@524) $generated@@154) (= (type $generated@@525) $generated@@154)) ($generated@@0 ($generated@@102 ($generated@@457 $generated@@521) ($generated@@339 ($generated@@249 $generated@@524 $generated@@525)))))
 :no-pattern (type $generated@@524)
 :no-pattern (type $generated@@525)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
))))))
 :pattern ( ($generated@@457 $generated@@521))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@374 (type $generated@@526))))
(let (($generated@@528 ($generated@@373 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@372 $generated@@528 $generated@@527)) (or (= $generated@@526 ($generated@@371 $generated@@528 $generated@@527)) (exists (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (and (and (= (type $generated@@529) $generated@@154) (= (type $generated@@530) $generated@@154)) ($generated@@0 ($generated@@102 ($generated@@465 $generated@@526) ($generated@@339 ($generated@@249 $generated@@529 $generated@@530)))))
 :no-pattern (type $generated@@529)
 :no-pattern (type $generated@@530)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
))))))
 :pattern ( ($generated@@465 $generated@@526))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@154) ($generated@@250 $generated@@531 $generated@@46)) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@531)) $generated@@531) ($generated@@161 ($generated@@395 $generated@@2 $generated@@531) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@531 $generated@@46))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@154) ($generated@@250 $generated@@532 $generated@@47)) (and (= ($generated@@339 ($generated@@395 $generated@@3 $generated@@532)) $generated@@532) ($generated@@161 ($generated@@395 $generated@@3 $generated@@532) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@532 $generated@@47))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@250 $generated@@533 $generated@@44)) (and (= ($generated@@339 ($generated@@395 $generated@@4 $generated@@533)) $generated@@533) ($generated@@161 ($generated@@395 $generated@@4 $generated@@533) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@533 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@534) 21))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@250 $generated@@535 $generated@@45)) (and (= ($generated@@339 ($generated@@395 $generated@@534 $generated@@535)) $generated@@535) ($generated@@161 ($generated@@395 $generated@@534 $generated@@535) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@535 $generated@@45))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@250 ($generated@@339 $generated@@536) $generated@@537) ($generated@@161 $generated@@536 $generated@@537)))
 :pattern ( ($generated@@250 ($generated@@339 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@154) (<= 0 ($generated@@165 $generated@@538)))
 :pattern ( ($generated@@165 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@100 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@97 $generated@@540 $generated@@2)) (<= 0 ($generated@@346 $generated@@539))))
 :pattern ( ($generated@@346 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@313 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@312 $generated@@542)) (<= 0 ($generated@@311 $generated@@541))))
 :pattern ( ($generated@@311 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (= ($generated@@543 ($generated@@483 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@483 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= ($generated@@547 ($generated@@483 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@483 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= ($generated@@93 ($generated@@483 $generated@@551 $generated@@552)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@70) (= (type $generated@@556) $generated@@70)) (= ($generated@@553 ($generated@@491 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@491 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@70) (= (type $generated@@560) $generated@@70)) (= ($generated@@557 ($generated@@491 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@491 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@70) (= (type $generated@@562) $generated@@70)) (= ($generated@@93 ($generated@@491 $generated@@561 $generated@@562)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (= ($generated@@186 ($generated@@249 $generated@@563 $generated@@564)) $generated@@62))
 :pattern ( ($generated@@249 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= ($generated@@565 ($generated@@173 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@173 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@70)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (= ($generated@@569 ($generated@@173 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@173 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@154)) (= ($generated@@180 ($generated@@249 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@249 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@154)) (= ($generated@@181 ($generated@@249 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@249 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@81)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) $generated@@81) (= ($generated@@79 $generated@@579 $generated@@580) ($generated@@79 $generated@@270 $generated@@580)))
 :pattern ( ($generated@@79 ($generated@@577 $generated@@579) $generated@@580))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) $generated@@70)
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ($generated@@585 Int) ) (! (let (($generated@@586 ($generated@@313 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584 $generated@@585)) $generated@@586))
 :pattern ( ($generated@@582 $generated@@584 $generated@@585))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@312 $generated@@154)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@587 ($generated@@581 $generated@@588) $generated@@589) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@311 $generated@@587))) ($generated@@292 ($generated@@582 $generated@@587 $generated@@590) $generated@@588 $generated@@589))
 :pattern ( ($generated@@582 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@95 $generated@@587 ($generated@@581 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@591 ($generated@@96 $generated@@592)) $generated@@592)
 :pattern ( ($generated@@96 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@70)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@70) (= ($generated@@593 ($generated@@275 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@275 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@70) (= ($generated@@93 ($generated@@275 $generated@@596)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@70) (= ($generated@@597 ($generated@@280 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@280 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@70) (= ($generated@@93 ($generated@@280 $generated@@600)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@70)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@70) (= ($generated@@601 ($generated@@188 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@188 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@70) (= ($generated@@93 ($generated@@188 $generated@@604)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@70)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@70) (= ($generated@@605 ($generated@@581 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@581 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@70) (= ($generated@@93 ($generated@@581 $generated@@608)) $generated@@57))
 :pattern ( ($generated@@581 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@86) (= ($generated@@186 ($generated@@85 $generated@@609)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@86) (= ($generated@@322 ($generated@@85 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@85 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
(= ($generated@@395 $generated@@612 ($generated@@339 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@339 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) $generated@@70)) (= ($generated@@161 $generated@@613 ($generated@@483 $generated@@614 $generated@@615)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@613) $generated@@616))) (and ($generated@@250 ($generated@@102 ($generated@@458 $generated@@613) $generated@@616) $generated@@615) ($generated@@250 $generated@@616 $generated@@614)))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@613) $generated@@616))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@613) $generated@@616))
))))
 :pattern ( ($generated@@161 $generated@@613 ($generated@@483 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) (= ($generated@@161 $generated@@617 ($generated@@491 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@617) $generated@@620))) (and ($generated@@250 ($generated@@102 ($generated@@466 $generated@@617) $generated@@620) $generated@@619) ($generated@@250 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@617) $generated@@620))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@161 $generated@@617 ($generated@@491 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@154) (= (type $generated@@622) $generated@@154)) (and (and (and (=> ($generated@@153 $generated@@621 $generated@@622) (not (= $generated@@621 $generated@@622))) (=> (and ($generated@@388 $generated@@621) (not ($generated@@388 $generated@@622))) ($generated@@153 $generated@@621 $generated@@622))) (=> (and ($generated@@388 $generated@@621) ($generated@@388 $generated@@622)) (= ($generated@@153 $generated@@621 $generated@@622) (< ($generated@@165 $generated@@621) ($generated@@165 $generated@@622))))) (=> (and ($generated@@153 $generated@@621 $generated@@622) ($generated@@388 $generated@@622)) ($generated@@388 $generated@@621))))
 :pattern ( ($generated@@153 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@154) (= (type $generated@@626) $generated@@154)) (< ($generated@@623 $generated@@625) ($generated@@624 ($generated@@249 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@249 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@154) (= (type $generated@@628) $generated@@154)) (< ($generated@@623 $generated@@628) ($generated@@624 ($generated@@249 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@249 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@629) $generated@@630) ($generated@@79 $generated@@629 $generated@@630)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@154) (= (type $generated@@632) $generated@@70)) (= (type $generated@@633) $generated@@70)) ($generated@@250 $generated@@631 ($generated@@483 $generated@@632 $generated@@633))) (and (= ($generated@@339 ($generated@@395 ($generated@@354 $generated@@154 $generated@@154) $generated@@631)) $generated@@631) ($generated@@161 ($generated@@395 ($generated@@354 $generated@@154 $generated@@154) $generated@@631) ($generated@@483 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@250 $generated@@631 ($generated@@483 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@154) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) $generated@@70)) ($generated@@250 $generated@@634 ($generated@@491 $generated@@635 $generated@@636))) (and (= ($generated@@339 ($generated@@395 ($generated@@372 $generated@@154 $generated@@154) $generated@@634)) $generated@@634) ($generated@@161 ($generated@@395 ($generated@@372 $generated@@154 $generated@@154) $generated@@634) ($generated@@491 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@250 $generated@@634 ($generated@@491 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@70) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@154)) ($generated@@250 $generated@@639 ($generated@@173 $generated@@637 $generated@@638))) (and (= ($generated@@339 ($generated@@395 $generated@@86 $generated@@639)) $generated@@639) ($generated@@161 ($generated@@395 $generated@@86 $generated@@639) ($generated@@173 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@250 $generated@@639 ($generated@@173 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@86) (< ($generated@@624 $generated@@640) ($generated@@624 ($generated@@85 $generated@@640))))
 :pattern ( ($generated@@85 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (not ($generated@@0 ($generated@@102 ($generated@@510 $generated@@642) $generated@@641))))
 :pattern ( (let (($generated@@642 (type $generated@@641)))
($generated@@102 ($generated@@510 $generated@@642) $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@75)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@70) (= (type $generated@@646) $generated@@70)) (and (= ($generated@@93 ($generated@@173 $generated@@645 $generated@@646)) $generated@@63) (= ($generated@@643 ($generated@@173 $generated@@645 $generated@@646)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@86) (= ($generated@@623 ($generated@@339 $generated@@647)) ($generated@@624 $generated@@647)))
 :pattern ( ($generated@@623 ($generated@@339 $generated@@647)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@81) (= (type $generated@@649) $generated@@154)) (= (type $generated@@650) $generated@@86)) (or ($generated@@400 ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@650 $generated@@257)))) (and (=> (not (= ($generated@@266 $generated@@649) ($generated@@266 ($generated@@164 0)))) (and (=> ($generated@@0 ($generated@@266 ($generated@@11 (< 0 ($generated@@165 ($generated@@266 $generated@@649)))))) (=> ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@299 ($generated@@266 $generated@@650))))) (let (($generated@@651 ($generated@@266 ($generated@@322 ($generated@@266 $generated@@650)))))
($generated@@400 ($generated@@266 ($generated@@163 $generated@@649 ($generated@@164 1))) $generated@@651)))) (=> (not ($generated@@0 ($generated@@266 ($generated@@11 (< 0 ($generated@@165 ($generated@@266 $generated@@649))))))) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@154) ($generated@@153 $generated@@652 $generated@@649)) ($generated@@400 $generated@@652 ($generated@@266 $generated@@650)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) $generated@@652 $generated@@650))
 :pattern ( ($generated@@153 $generated@@652 $generated@@649))
))))) (= ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)) (ite (= ($generated@@266 $generated@@649) ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 ($generated@@266 $generated@@649))) (ite ($generated@@299 ($generated@@266 $generated@@650)) ($generated@@0 (let (($generated@@653 ($generated@@266 ($generated@@322 ($generated@@266 $generated@@650)))))
($generated@@266 ($generated@@11 ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 ($generated@@163 $generated@@649 ($generated@@164 1))) $generated@@653))))) true) (forall (($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@154) true) ($generated@@153 $generated@@654 $generated@@649)) ($generated@@335 ($generated@@80 $generated@@648) $generated@@654 ($generated@@266 $generated@@650)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) $generated@@654 $generated@@650))
 :pattern ( ($generated@@153 $generated@@654 $generated@@649))
)))))))
 :weight 3
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)))
))))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@154) ($generated@@250 $generated@@655 ($generated@@96 0))) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@655)) $generated@@655) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@655) ($generated@@96 0))))
 :pattern ( ($generated@@250 $generated@@655 ($generated@@96 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@154) (= (type $generated@@657) $generated@@70)) ($generated@@250 $generated@@656 ($generated@@275 $generated@@657))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@656)) $generated@@656) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@656) ($generated@@275 $generated@@657))))
 :pattern ( ($generated@@250 $generated@@656 ($generated@@275 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@154) (= (type $generated@@659) $generated@@70)) ($generated@@250 $generated@@658 ($generated@@280 $generated@@659))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@658)) $generated@@658) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@658) ($generated@@280 $generated@@659))))
 :pattern ( ($generated@@250 $generated@@658 ($generated@@280 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@154) (= (type $generated@@661) $generated@@70)) ($generated@@250 $generated@@660 ($generated@@188 $generated@@661))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@2) $generated@@660)) $generated@@660) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@2) $generated@@660) ($generated@@188 $generated@@661))))
 :pattern ( ($generated@@250 $generated@@660 ($generated@@188 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@154) (= (type $generated@@663) $generated@@70)) ($generated@@250 $generated@@662 ($generated@@581 $generated@@663))) (and (= ($generated@@339 ($generated@@395 ($generated@@312 $generated@@154) $generated@@662)) $generated@@662) ($generated@@161 ($generated@@395 ($generated@@312 $generated@@154) $generated@@662) ($generated@@581 $generated@@663))))
 :pattern ( ($generated@@250 $generated@@662 ($generated@@581 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@154) ($generated@@388 $generated@@664)) (= $generated@@664 ($generated@@164 ($generated@@165 $generated@@664))))
 :pattern ( ($generated@@165 $generated@@664))
 :pattern ( ($generated@@388 $generated@@664))
)))
(assert (= ($generated@@93 $generated@@158) $generated@@61))
(assert (= ($generated@@643 $generated@@158) $generated@@67))
(assert (= ($generated@@93 $generated@@257) $generated@@65))
(assert (= ($generated@@643 $generated@@257) $generated@@69))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@666) $generated@@70)) (= (type $generated@@667) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@665 ($generated@@188 $generated@@666) $generated@@667) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@154) (< 0 ($generated ($generated@@102 $generated@@665 $generated@@668)))) ($generated@@292 $generated@@668 $generated@@666 $generated@@667))
 :pattern ( ($generated@@102 $generated@@665 $generated@@668))
))))
 :pattern ( ($generated@@95 $generated@@665 ($generated@@188 $generated@@666) $generated@@667))
)))
(assert (= $generated@@84 ($generated@@266 $generated@@84)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@669) $generated@@154) (= (type $generated@@670) $generated@@154)) (and ($generated@@388 $generated@@670) (<= ($generated@@165 $generated@@670) ($generated@@165 $generated@@669)))) (or (and (= $generated@@670 ($generated@@164 0)) (= ($generated@@163 $generated@@669 $generated@@670) $generated@@669)) (and (not (= $generated@@670 ($generated@@164 0))) ($generated@@153 ($generated@@163 $generated@@669 $generated@@670) $generated@@669))))
 :pattern ( ($generated@@163 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@86) (= (type $generated@@672) $generated@@70)) (= (type $generated@@673) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@673) (and ($generated@@172 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@70) ($generated@@95 $generated@@671 ($generated@@173 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@95 $generated@@671 ($generated@@173 $generated@@672 $generated@@674) $generated@@673))
))))) ($generated@@292 ($generated@@180 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@292 ($generated@@180 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@86) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@677) (and ($generated@@172 $generated@@675) (exists (($generated@@678 T@U) ) (!  (and (= (type $generated@@678) $generated@@70) ($generated@@95 $generated@@675 ($generated@@173 $generated@@678 $generated@@676) $generated@@677))
 :pattern ( ($generated@@95 $generated@@675 ($generated@@173 $generated@@678 $generated@@676) $generated@@677))
))))) ($generated@@292 ($generated@@181 $generated@@675) $generated@@676 $generated@@677))
 :pattern ( ($generated@@292 ($generated@@181 $generated@@675) $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@86) (= (type $generated@@680) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@680) (and ($generated@@299 $generated@@679) ($generated@@95 $generated@@679 $generated@@257 $generated@@680)))) ($generated@@95 ($generated@@322 $generated@@679) $generated@@257 $generated@@680))
 :pattern ( ($generated@@95 ($generated@@322 $generated@@679) $generated@@257 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@154) (= (type $generated@@682) $generated@@154)) (= ($generated@@249 ($generated@@266 $generated@@681) ($generated@@266 $generated@@682)) ($generated@@266 ($generated@@249 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@249 ($generated@@266 $generated@@681) ($generated@@266 $generated@@682)))
)))
(assert (forall (($generated@@683 Int) ) (! (= ($generated@@339 ($generated@@8 ($generated@@83 $generated@@683))) ($generated@@266 ($generated@@339 ($generated@@8 $generated@@683))))
 :pattern ( ($generated@@339 ($generated@@8 ($generated@@83 $generated@@683))))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@86) (= ($generated@@85 ($generated@@266 $generated@@684)) ($generated@@266 ($generated@@85 $generated@@684))))
 :pattern ( ($generated@@85 ($generated@@266 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (! (= ($generated@@339 ($generated@@266 $generated@@685)) ($generated@@266 ($generated@@339 $generated@@685)))
 :pattern ( ($generated@@339 ($generated@@266 $generated@@685)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@81) (= (type $generated@@687) $generated@@154)) (= (type $generated@@688) $generated@@86)) (or ($generated@@400 $generated@@687 $generated@@688) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@688 $generated@@257)))) (and (=> (not (= $generated@@687 ($generated@@266 ($generated@@164 0)))) (and (=> (< 0 ($generated@@165 $generated@@687)) (=> ($generated@@299 $generated@@688) (let (($generated@@689 ($generated@@322 $generated@@688)))
($generated@@400 ($generated@@163 $generated@@687 ($generated@@164 1)) $generated@@689)))) (=> (not (< 0 ($generated@@165 $generated@@687))) (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@154) ($generated@@153 $generated@@690 $generated@@687)) ($generated@@400 $generated@@690 $generated@@688))
 :pattern ( ($generated@@335 $generated@@686 $generated@@690 $generated@@688))
 :pattern ( ($generated@@153 $generated@@690 $generated@@687))
))))) (= ($generated@@335 ($generated@@80 $generated@@686) $generated@@687 $generated@@688) (ite (= $generated@@687 ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 $generated@@687)) (ite ($generated@@299 $generated@@688) (let (($generated@@691 ($generated@@322 $generated@@688)))
($generated@@335 $generated@@686 ($generated@@163 $generated@@687 ($generated@@164 1)) $generated@@691)) true) (forall (($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@154) true) ($generated@@153 $generated@@692 $generated@@687)) ($generated@@335 $generated@@686 $generated@@692 $generated@@688))
 :pattern ( ($generated@@335 $generated@@686 $generated@@692 $generated@@688))
 :pattern ( ($generated@@153 $generated@@692 $generated@@687))
)))))))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@686) $generated@@687 $generated@@688))
))))
(assert (forall (($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@313 (type $generated@@693))))
 (=> (and (= (type $generated@@693) ($generated@@312 $generated@@694)) (= ($generated@@311 $generated@@693) 0)) (= $generated@@693 ($generated@@310 $generated@@694))))
 :pattern ( ($generated@@311 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 (type $generated@@696)))
 (=> (and (and (= (type $generated@@695) ($generated@@97 $generated@@698 $generated@@2)) (= (type $generated@@697) $generated@@2)) (<= 0 ($generated $generated@@697))) (= ($generated@@346 ($generated@@103 $generated@@695 $generated@@696 $generated@@697)) (+ (- ($generated@@346 $generated@@695) ($generated ($generated@@102 $generated@@695 $generated@@696))) ($generated $generated@@697)))))
 :pattern ( ($generated@@346 ($generated@@103 $generated@@695 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@700) $generated@@2)) ($generated@@95 $generated@@700 $generated@@46 $generated@@699))
 :pattern ( ($generated@@95 $generated@@700 $generated@@46 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@702) $generated@@3)) ($generated@@95 $generated@@702 $generated@@47 $generated@@701))
 :pattern ( ($generated@@95 $generated@@702 $generated@@47 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@704) $generated@@4)) ($generated@@95 $generated@@704 $generated@@44 $generated@@703))
 :pattern ( ($generated@@95 $generated@@704 $generated@@44 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@706) $generated@@534)) ($generated@@95 $generated@@706 $generated@@45 $generated@@705))
 :pattern ( ($generated@@95 $generated@@706 $generated@@45 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@708) $generated@@154)) ($generated@@95 $generated@@708 $generated@@48 $generated@@707))
 :pattern ( ($generated@@95 $generated@@708 $generated@@48 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@312 $generated@@154)) (= (type $generated@@710) $generated@@70)) (= ($generated@@161 $generated@@709 ($generated@@581 $generated@@710)) (forall (($generated@@711 Int) ) (!  (=> (and (<= 0 $generated@@711) (< $generated@@711 ($generated@@311 $generated@@709))) ($generated@@250 ($generated@@582 $generated@@709 $generated@@711) $generated@@710))
 :pattern ( ($generated@@582 $generated@@709 $generated@@711))
))))
 :pattern ( ($generated@@161 $generated@@709 ($generated@@581 $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@81) (= (type $generated@@713) $generated@@154)) (= (type $generated@@714) $generated@@86)) (= ($generated@@269 $generated@@712 $generated@@713 $generated@@714) ($generated@@269 $generated@@270 $generated@@713 $generated@@714)))
 :pattern ( ($generated@@269 ($generated@@577 $generated@@712) $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@81) (= (type $generated@@716) $generated@@154)) (= (type $generated@@717) $generated@@86)) (= ($generated@@335 $generated@@715 $generated@@716 $generated@@717) ($generated@@335 $generated@@270 $generated@@716 $generated@@717)))
 :pattern ( ($generated@@335 ($generated@@577 $generated@@715) $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 Int) ) (!  (=> (= (type $generated@@719) ($generated@@312 $generated@@154)) (=> (and (<= 0 $generated@@720) (< $generated@@720 ($generated@@311 $generated@@719))) (< ($generated@@624 ($generated@@395 $generated@@86 ($generated@@582 $generated@@719 $generated@@720))) ($generated@@718 $generated@@719))))
 :pattern ( ($generated@@624 ($generated@@395 $generated@@86 ($generated@@582 $generated@@719 $generated@@720))))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (and (= (type $generated@@721) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@722) $generated@@70)) (= (type $generated@@723) $generated@@70)) ($generated@@161 $generated@@721 ($generated@@483 $generated@@722 $generated@@723))) (and (and ($generated@@161 ($generated@@352 $generated@@721) ($generated@@275 $generated@@722)) ($generated@@161 ($generated@@416 $generated@@721) ($generated@@275 $generated@@723))) ($generated@@161 ($generated@@457 $generated@@721) ($generated@@275 ($generated@@173 $generated@@722 $generated@@723)))))
 :pattern ( ($generated@@161 $generated@@721 ($generated@@483 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@725) $generated@@70)) (= (type $generated@@726) $generated@@70)) ($generated@@161 $generated@@724 ($generated@@491 $generated@@725 $generated@@726))) (and (and ($generated@@161 ($generated@@370 $generated@@724) ($generated@@280 $generated@@725)) ($generated@@161 ($generated@@427 $generated@@724) ($generated@@280 $generated@@726))) ($generated@@161 ($generated@@465 $generated@@724) ($generated@@280 ($generated@@173 $generated@@725 $generated@@726)))))
 :pattern ( ($generated@@161 $generated@@724 ($generated@@491 $generated@@725 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@2) ($generated@@161 $generated@@727 $generated@@46))
 :pattern ( ($generated@@161 $generated@@727 $generated@@46))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@3) ($generated@@161 $generated@@728 $generated@@47))
 :pattern ( ($generated@@161 $generated@@728 $generated@@47))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@4) ($generated@@161 $generated@@729 $generated@@44))
 :pattern ( ($generated@@161 $generated@@729 $generated@@44))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@534) ($generated@@161 $generated@@730 $generated@@45))
 :pattern ( ($generated@@161 $generated@@730 $generated@@45))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@154) ($generated@@161 $generated@@731 $generated@@48))
 :pattern ( ($generated@@161 $generated@@731 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@732 () Int)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 (T@U) Bool)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@734) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@735) $generated@@154)) (= (type $generated@@736) $generated@@86)) (= (type $generated@@738) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@739) $generated@@86)) (= (type $generated@@741) ($generated@@195 $generated@@98 $generated@@4))) (= (type $generated@@742) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@743  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158) (=> (= $generated@@733 (ite (< $generated@@732 0) 0 $generated@@732)) (=> (and ($generated@@95 ($generated@@8 $generated@@733) $generated@@158 $generated@@734) ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732))) (=> (and (and ($generated@@95 $generated@@735 $generated@@48 $generated@@734) (= $generated@@736 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (and ($generated@@95 $generated@@736 $generated@@257 $generated@@734) ($generated@@400 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))))) (=> (and (and (and ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732)) ($generated@@400 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@400 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) ($generated@@335 ($generated@@80 $generated@@270) $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))))))))))
(let (($generated@@744  (=> (and (<= 0 $generated@@732) (= (ControlFlow 0 5) 2)) $generated@@743)))
(let (($generated@@745  (=> (and (< $generated@@732 0) (= (ControlFlow 0 4) 2)) $generated@@743)))
(let (($generated@@746  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158) (=> (= $generated@@737 (ite (< $generated@@732 0) 0 $generated@@732)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@737) $generated@@158 $generated@@738) ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732))) (and ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732)) (= $generated@@739 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))))) (=> (and (and (and (and ($generated@@258 $generated@@734) ($generated@@740 $generated@@734)) ($generated@@268 $generated@@735 $generated@@739)) (and (and ($generated@@268 $generated@@735 $generated@@739) (and ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 $generated@@739) (and (=> (< 0 ($generated@@165 $generated@@735)) (ite ($generated@@299 $generated@@739) (let (($generated@@747 ($generated@@322 $generated@@739)))
($generated@@269 ($generated@@80 $generated@@270) ($generated@@163 $generated@@735 ($generated@@164 1)) $generated@@747)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@735)) (forall (($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@748) $generated@@154) ($generated@@153 $generated@@748 $generated@@735)) ($generated@@269 ($generated@@80 $generated@@270) $generated@@748 $generated@@739))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@270) $generated@@748 $generated@@739))
)))))) ($generated@@400 $generated@@735 $generated@@739))) (and (and (and ($generated@@400 $generated@@735 $generated@@739) (and ($generated@@335 ($generated@@80 $generated@@270) $generated@@735 $generated@@739) (ite (= $generated@@735 ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 $generated@@735)) (ite ($generated@@299 $generated@@739) (let (($generated@@749 ($generated@@322 $generated@@739)))
($generated@@335 ($generated@@80 $generated@@270) ($generated@@163 $generated@@735 ($generated@@164 1)) $generated@@749)) true) (forall (($generated@@750 T@U) ) (!  (=> (and (and (= (type $generated@@750) $generated@@154) true) ($generated@@153 $generated@@750 $generated@@735)) ($generated@@335 ($generated@@80 $generated@@270) $generated@@750 $generated@@739))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@270) $generated@@750 $generated@@739))
 :pattern ( ($generated@@153 $generated@@750 $generated@@735))
)))))) ($generated@@267 $generated@@735 $generated@@739)) (and (and ($generated@@267 $generated@@735 $generated@@739) (and (and ($generated@@265 $generated@@735 $generated@@739) ($generated@@161 $generated@@739 $generated@@257)) ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 $generated@@739))) (= $generated@@738 $generated@@734)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@745) (=> (= (ControlFlow 0 6) 5) $generated@@744)))))))))
(let (($generated@@751  (=> (and (<= 0 $generated@@732) (= (ControlFlow 0 9) 6)) $generated@@746)))
(let (($generated@@752  (=> (and (< $generated@@732 0) (= (ControlFlow 0 8) 6)) $generated@@746)))
(let (($generated@@753  (=> (= $generated@@741 ($generated@@194 $generated@@742 $generated@@738 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@752) (=> (= (ControlFlow 0 10) 9) $generated@@751)))))
(let (($generated@@754  (=> (and (and ($generated@@258 $generated@@738) ($generated@@740 $generated@@738)) (and (= 5 $generated@@78) (= (ControlFlow 0 11) 10))) $generated@@753)))
$generated@@754)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U Int T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (Int T@U) Bool)
(declare-fun $generated@@144 (Int) Int)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@T) T@U)
(declare-fun $generated@@352 (T@T T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@641 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@141) 14) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@140 $generated@@149)) $generated@@141)
 :pattern ( ($generated@@140 $generated@@149))
))) (= (type $generated@@146) $generated@@70)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@150)) $generated@@142)
 :pattern ( ($generated@@148 $generated@@150))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@151 T@U) ($generated@@152 Int) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@141) (= (type $generated@@153) $generated@@142)) (or ($generated@@143 $generated@@152 $generated@@153) (and (not (= 1 $generated@@138)) (and (<= ($generated@@144 0) $generated@@152) ($generated@@145 $generated@@153 $generated@@146))))) (and (=> (not (= $generated@@152 ($generated@@144 0))) (=> ($generated@@147 $generated@@153) (let (($generated@@154 ($generated@@148 $generated@@153)))
($generated@@143 (- $generated@@152 1) $generated@@154)))) (= ($generated@@139 ($generated@@140 $generated@@151) $generated@@152 $generated@@153) (ite (= $generated@@152 ($generated@@144 0)) true (ite ($generated@@147 $generated@@153) (let (($generated@@155 ($generated@@148 $generated@@153)))
($generated@@139 $generated@@151 (- $generated@@152 1) $generated@@155)) true)))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@151) $generated@@152 $generated@@153))
))))
(assert (= (type $generated@@156) $generated@@70))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@157 $generated@@156 $generated@@158))
 :pattern ( ($generated@@80 $generated@@157 $generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@145 $generated@@159 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@159 ($generated@@81 0)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@142)) ($generated@@145 $generated@@166 ($generated@@161 $generated@@164 $generated@@165))) ($generated@@160 $generated@@166))
 :pattern ( ($generated@@160 $generated@@166) ($generated@@145 $generated@@166 ($generated@@161 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 16) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@142) (= (type $generated@@174) $generated@@142)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@74)
 :pattern ( ($generated@@175 $generated@@177))
)) (= (type $generated@@176) $generated@@142)))
(assert (= ($generated@@175 $generated@@176) $generated@@66))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@182) $generated@@70)) ($generated@@145 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@145 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 17)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@73 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@234) ($generated@@72 $generated@@4))) (= (type $generated@@236) $generated@@83)) (= (type $generated@@237) ($generated@@72 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@73 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@246) ($generated@@72 $generated@@4))) (= (type $generated@@248) $generated@@83)) (= (type $generated@@249) ($generated@@72 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@142)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@70) (= (type $generated@@256) $generated@@70)) (= (type $generated@@257) $generated@@170)) (= (type $generated@@258) $generated@@170)) (= ($generated@@145 ($generated@@251 $generated@@257 $generated@@258) ($generated@@161 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@145 ($generated@@251 $generated@@257 $generated@@258) ($generated@@161 $generated@@255 $generated@@256)))
)))
(assert ($generated@@145 $generated@@176 $generated@@146))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@259 $generated@@260)) ($generated@@80 $generated@@176 $generated@@146 $generated@@260))
 :pattern ( ($generated@@80 $generated@@176 $generated@@146 $generated@@260))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@261 T@U) ($generated@@262 Int) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@141) (= (type $generated@@263) $generated@@142)) (or ($generated@@143 $generated@@262 $generated@@263) (and (not (= 1 $generated@@138)) (and (<= ($generated@@144 0) $generated@@262) ($generated@@145 $generated@@263 $generated@@146))))) true)
 :pattern ( ($generated@@139 $generated@@261 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@267 T@U) ($generated@@268 Int) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@141) (= (type $generated@@269) $generated@@142)) (or ($generated@@143 ($generated@@144 $generated@@268) ($generated@@264 $generated@@269)) (and (not (= 1 $generated@@138)) (and (<= ($generated@@144 0) $generated@@268) ($generated@@145 $generated@@269 $generated@@146))))) (and (=> (not (= ($generated@@144 $generated@@268) ($generated@@144 0))) (=> ($generated@@0 ($generated@@264 ($generated@@11 ($generated@@147 ($generated@@264 $generated@@269))))) (let (($generated@@270 ($generated@@264 ($generated@@148 ($generated@@264 $generated@@269)))))
($generated@@143 ($generated@@144 (- $generated@@268 1)) $generated@@270)))) (= ($generated@@139 ($generated@@140 $generated@@267) ($generated@@144 $generated@@268) ($generated@@264 $generated@@269)) (ite (= ($generated@@144 $generated@@268) ($generated@@144 0)) true (ite ($generated@@147 ($generated@@264 $generated@@269)) ($generated@@0 (let (($generated@@271 ($generated@@264 ($generated@@148 ($generated@@264 $generated@@269)))))
($generated@@264 ($generated@@11 ($generated@@139 ($generated@@140 $generated@@267) ($generated@@144 (- $generated@@268 1)) $generated@@271))))) true)))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@140 $generated@@267) ($generated@@144 $generated@@268) ($generated@@264 $generated@@269)))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@142) (= (type $generated@@273) $generated@@142)) (= ($generated@@167 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@167 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@142) (= (type $generated@@276) $generated@@142)) (= ($generated@@274 $generated@@275 $generated@@276) (= $generated@@275 $generated@@276)))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@280) $generated@@70)) (= ($generated@@145 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@170) ($generated@@0 ($generated@@87 $generated@@279 $generated@@281))) ($generated@@252 $generated@@281 $generated@@280))
 :pattern ( ($generated@@87 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@145 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@70)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@285) $generated@@70)) (= ($generated@@145 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@170) ($generated@@0 ($generated@@87 $generated@@284 $generated@@286))) ($generated@@252 $generated@@286 $generated@@285))
 :pattern ( ($generated@@87 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@145 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@144 $generated@@287) $generated@@287)
 :pattern ( ($generated@@144 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@264 $generated@@288) $generated@@288)
 :pattern ( ($generated@@264 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@142) (= (type $generated@@291) $generated@@142)) (and ($generated@@289 $generated@@290) ($generated@@289 $generated@@291))) (= ($generated@@274 $generated@@290 $generated@@291) true))
 :pattern ( ($generated@@274 $generated@@290 $generated@@291) ($generated@@289 $generated@@290))
 :pattern ( ($generated@@274 $generated@@290 $generated@@291) ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@170)) (= (type $generated@@296) $generated@@170)) (= (type $generated@@297) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@259 $generated@@297)) (= ($generated@@80 ($generated@@251 $generated@@295 $generated@@296) ($generated@@161 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@80 ($generated@@251 $generated@@295 $generated@@296) ($generated@@161 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@142) (= ($generated@@160 $generated@@298) (= ($generated@@175 $generated@@298) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@142) (= ($generated@@147 $generated@@299) (= ($generated@@175 $generated@@299) $generated@@64)))
 :pattern ( ($generated@@147 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@142) (= ($generated@@289 $generated@@300) (= ($generated@@175 $generated@@300) $generated@@66)))
 :pattern ( ($generated@@289 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@142) ($generated@@160 $generated@@301)) (exists (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (and (and (= (type $generated@@302) $generated@@170) (= (type $generated@@303) $generated@@170)) (= $generated@@301 ($generated@@251 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@302)
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@160 $generated@@301))
)))
(assert  (and (and (forall (($generated@@308 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@308)) 18)) (forall (($generated@@309 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
))) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@304 $generated@@310)) ($generated@@306 $generated@@310))
 :pattern ( ($generated@@304 $generated@@310))
))))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@311)) 0)
 :pattern ( ($generated@@304 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@142) ($generated@@289 $generated@@312)) (= $generated@@312 $generated@@176))
 :pattern ( ($generated@@289 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@142)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@142) ($generated@@147 $generated@@315)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@142) (= $generated@@315 ($generated@@313 $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@147 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@2) (= ($generated@@145 $generated@@317 $generated@@156) (<= ($generated@@144 0) ($generated $generated@@317))))
 :pattern ( ($generated@@145 $generated@@317 $generated@@156))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 Int) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@141) (= (type $generated@@320) $generated@@142)) (= ($generated@@139 ($generated@@140 $generated@@318) $generated@@319 $generated@@320) ($generated@@139 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@170)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@70) (= (type $generated@@325) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@292 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@80 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@292 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@82 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@87 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@82 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert  (and (and (and (and (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (= ($generated@@1 ($generated@@352 $generated@@355 $generated@@356)) 20)) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@353 ($generated@@352 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@352 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@352 $generated@@359 $generated@@360)) $generated@@360)
 :pattern ( ($generated@@352 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@353 (type $generated@@361))))
(= (type ($generated@@350 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@361))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= (type ($generated@@351 $generated@@363 $generated@@364)) ($generated@@352 $generated@@363 $generated@@364))
 :pattern ( ($generated@@351 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@T) ) (! (let (($generated@@367 (type $generated@@365)))
 (not ($generated@@0 ($generated@@87 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365))))
 :pattern ( (let (($generated@@367 (type $generated@@365)))
($generated@@87 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365)))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@85 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@82 $generated@@369 $generated@@2)) (= ($generated@@179 $generated@@368) (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@369) (and (<= 0 ($generated ($generated@@87 $generated@@368 $generated@@370))) (<= ($generated ($generated@@87 $generated@@368 $generated@@370)) ($generated@@326 $generated@@368))))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
)))))
 :pattern ( ($generated@@179 $generated@@368))
)))
(assert (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@371 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@170) ($generated@@252 $generated@@374 $generated@@156)) (and (= ($generated@@321 ($generated@@371 $generated@@2 $generated@@374)) $generated@@374) ($generated@@145 ($generated@@371 $generated@@2 $generated@@374) $generated@@156)))
 :pattern ( ($generated@@252 $generated@@374 $generated@@156))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@170) ($generated@@252 $generated@@375 $generated@@146)) (and (= ($generated@@321 ($generated@@371 $generated@@142 $generated@@375)) $generated@@375) ($generated@@145 ($generated@@371 $generated@@142 $generated@@375) $generated@@146)))
 :pattern ( ($generated@@252 $generated@@375 $generated@@146))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@142) (= ($generated@@145 ($generated@@313 $generated@@376) $generated@@146) ($generated@@145 $generated@@376 $generated@@146)))
 :pattern ( ($generated@@145 ($generated@@313 $generated@@376) $generated@@146))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) $generated@@142) (= (type $generated@@378) $generated@@142)) (and ($generated@@147 $generated@@377) ($generated@@147 $generated@@378))) (= ($generated@@274 $generated@@377 $generated@@378) ($generated@@274 ($generated@@148 $generated@@377) ($generated@@148 $generated@@378))))
 :pattern ( ($generated@@274 $generated@@377 $generated@@378) ($generated@@147 $generated@@377))
 :pattern ( ($generated@@274 $generated@@377 $generated@@378) ($generated@@147 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@336 (type $generated@@379))))
(let (($generated@@381 ($generated@@335 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@334 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@333 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@332 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@336 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@82 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@336 (type $generated@@386))))
(let (($generated@@388 ($generated@@335 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@334 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@333 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@354 (type $generated@@390))))
(let (($generated@@392 ($generated@@353 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@352 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@351 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@350 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@354 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@82 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@354 (type $generated@@397))))
(let (($generated@@399 ($generated@@353 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@352 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@351 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@402) $generated@@70)) (= ($generated@@145 $generated@@401 ($generated@@178 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@170) (< 0 ($generated ($generated@@87 $generated@@401 $generated@@403)))) ($generated@@252 $generated@@403 $generated@@402))
 :pattern ( ($generated@@87 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@145 $generated@@401 ($generated@@178 $generated@@402)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@405) $generated@@70)) (= (type $generated@@406) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@404 ($generated@@277 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@170) ($generated@@0 ($generated@@87 $generated@@404 $generated@@407))) ($generated@@292 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@87 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@80 $generated@@404 ($generated@@277 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@409) $generated@@70)) (= (type $generated@@410) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@408 ($generated@@282 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@0 ($generated@@87 $generated@@408 $generated@@411))) ($generated@@292 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@87 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@80 $generated@@408 ($generated@@282 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@87 ($generated@@327 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@87 ($generated@@327 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@82 $generated@@170 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@336 (type $generated@@417))))
(let (($generated@@419 ($generated@@335 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@82 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@421) $generated@@170)) (= ($generated@@0 ($generated@@87 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@420) ($generated@@168 ($generated@@371 $generated@@142 $generated@@421)))) (= ($generated@@87 ($generated@@415 $generated@@420) ($generated@@168 ($generated@@371 $generated@@142 $generated@@421))) ($generated@@169 ($generated@@371 $generated@@142 $generated@@421))))))
 :pattern ( ($generated@@87 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@82 $generated@@170 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@354 (type $generated@@425))))
(let (($generated@@427 ($generated@@353 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@82 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@352 $generated@@170 $generated@@170)) (= (type $generated@@429) $generated@@170)) (= ($generated@@0 ($generated@@87 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@87 ($generated@@350 $generated@@428) ($generated@@168 ($generated@@371 $generated@@142 $generated@@429)))) (= ($generated@@87 ($generated@@423 $generated@@428) ($generated@@168 ($generated@@371 $generated@@142 $generated@@429))) ($generated@@169 ($generated@@371 $generated@@142 $generated@@429))))))
 :pattern ( ($generated@@87 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@335 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@334 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@87 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@353 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@352 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@87 ($generated@@350 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@87 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@435) $generated@@439))
 :pattern ( ($generated@@87 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@443) $generated@@447))) (and ($generated@@292 ($generated@@87 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@292 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@80 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@352 $generated@@170 $generated@@170)) (= (type $generated@@452) $generated@@70)) (= (type $generated@@453) $generated@@70)) (= (type $generated@@454) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@451) $generated@@455))) (and ($generated@@292 ($generated@@87 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@292 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@87 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@80 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@456) $generated@@142) (= (type $generated@@457) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@259 $generated@@457)) (= ($generated@@80 ($generated@@313 $generated@@456) $generated@@146 $generated@@457) ($generated@@80 $generated@@456 $generated@@146 $generated@@457)))
 :pattern ( ($generated@@80 ($generated@@313 $generated@@456) $generated@@146 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@142) ($generated@@145 $generated@@458 $generated@@146)) (or ($generated@@147 $generated@@458) ($generated@@289 $generated@@458)))
 :pattern ( ($generated@@289 $generated@@458) ($generated@@145 $generated@@458 $generated@@146))
 :pattern ( ($generated@@147 $generated@@458) ($generated@@145 $generated@@458 $generated@@146))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@82 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@354 (type $generated@@461))))
(let (($generated@@463 ($generated@@353 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@352 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@351 $generated@@463 $generated@@462)) (= ($generated@@350 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@350 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@354 (type $generated@@464))))
(let (($generated@@466 ($generated@@353 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@352 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@351 $generated@@466 $generated@@465)) (= ($generated@@394 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@394 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@354 (type $generated@@467))))
(let (($generated@@469 ($generated@@353 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@352 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@351 $generated@@469 $generated@@468)) (= ($generated@@422 $generated@@467) ($generated@@459 $generated@@170))))))
 :pattern ( ($generated@@422 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@336 (type $generated@@470))))
(let (($generated@@472 ($generated@@335 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@334 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@333 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@170) (= (type $generated@@474) $generated@@170)) ($generated@@0 ($generated@@87 ($generated@@414 $generated@@470) ($generated@@321 ($generated@@251 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@414 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@354 (type $generated@@475))))
(let (($generated@@477 ($generated@@353 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@352 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@351 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@170) (= (type $generated@@479) $generated@@170)) ($generated@@0 ($generated@@87 ($generated@@422 $generated@@475) ($generated@@321 ($generated@@251 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@422 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@170) ($generated@@252 $generated@@480 $generated@@46)) (and (= ($generated@@321 ($generated@@371 $generated@@2 $generated@@480)) $generated@@480) ($generated@@145 ($generated@@371 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@170) ($generated@@252 $generated@@481 $generated@@47)) (and (= ($generated@@321 ($generated@@371 $generated@@3 $generated@@481)) $generated@@481) ($generated@@145 ($generated@@371 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@170) ($generated@@252 $generated@@482 $generated@@44)) (and (= ($generated@@321 ($generated@@371 $generated@@4 $generated@@482)) $generated@@482) ($generated@@145 ($generated@@371 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 21))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@170) ($generated@@252 $generated@@484 $generated@@45)) (and (= ($generated@@321 ($generated@@371 $generated@@483 $generated@@484)) $generated@@484) ($generated@@145 ($generated@@371 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@70) (= ($generated@@252 ($generated@@321 $generated@@485) $generated@@486) ($generated@@145 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@252 ($generated@@321 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@85 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@82 $generated@@488 $generated@@2)) (<= 0 ($generated@@326 $generated@@487))))
 :pattern ( ($generated@@326 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@307 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@306 $generated@@490)) (<= 0 ($generated@@305 $generated@@489))))
 :pattern ( ($generated@@305 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@440 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@440 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@440 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@440 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@78 ($generated@@440 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@448 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@448 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@505 ($generated@@448 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@448 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@70) (= (type $generated@@510) $generated@@70)) (= ($generated@@78 ($generated@@448 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@170) (= (type $generated@@512) $generated@@170)) (= ($generated@@175 ($generated@@251 $generated@@511 $generated@@512)) $generated@@62))
 :pattern ( ($generated@@251 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@161 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@161 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@70) (= (type $generated@@520) $generated@@70)) (= ($generated@@517 ($generated@@161 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@161 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@170) (= (type $generated@@522) $generated@@170)) (= ($generated@@168 ($generated@@251 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@251 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@170) (= (type $generated@@524) $generated@@170)) (= ($generated@@169 ($generated@@251 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@251 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@307 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@306 $generated@@170)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@305 $generated@@531))) ($generated@@292 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@80 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@81 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@81 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@277 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@277 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@78 ($generated@@277 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@277 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@541 ($generated@@282 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@282 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@78 ($generated@@282 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@545 ($generated@@178 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@178 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@78 ($generated@@178 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@70) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@78 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@142) (= ($generated@@175 ($generated@@313 $generated@@553)) $generated@@64))
 :pattern ( ($generated@@313 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@142) (= ($generated@@148 ($generated@@313 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@313 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(= ($generated@@371 $generated@@556 ($generated@@321 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@321 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) (= ($generated@@145 $generated@@557 ($generated@@440 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@557) $generated@@560))) (and ($generated@@252 ($generated@@87 ($generated@@415 $generated@@557) $generated@@560) $generated@@559) ($generated@@252 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@557) $generated@@560))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@145 $generated@@557 ($generated@@440 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@352 $generated@@170 $generated@@170)) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) (= ($generated@@145 $generated@@561 ($generated@@448 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@561) $generated@@564))) (and ($generated@@252 ($generated@@87 ($generated@@423 $generated@@561) $generated@@564) $generated@@563) ($generated@@252 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@87 ($generated@@423 $generated@@561) $generated@@564))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@145 $generated@@561 ($generated@@448 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@170) (= (type $generated@@568) $generated@@170)) (< ($generated@@565 $generated@@567) ($generated@@566 ($generated@@251 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@251 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@170) (= (type $generated@@570) $generated@@170)) (< ($generated@@565 $generated@@570) ($generated@@566 ($generated@@251 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@251 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@170) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) $generated@@70)) ($generated@@252 $generated@@571 ($generated@@440 $generated@@572 $generated@@573))) (and (= ($generated@@321 ($generated@@371 ($generated@@334 $generated@@170 $generated@@170) $generated@@571)) $generated@@571) ($generated@@145 ($generated@@371 ($generated@@334 $generated@@170 $generated@@170) $generated@@571) ($generated@@440 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@252 $generated@@571 ($generated@@440 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@170) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@70)) ($generated@@252 $generated@@574 ($generated@@448 $generated@@575 $generated@@576))) (and (= ($generated@@321 ($generated@@371 ($generated@@352 $generated@@170 $generated@@170) $generated@@574)) $generated@@574) ($generated@@145 ($generated@@371 ($generated@@352 $generated@@170 $generated@@170) $generated@@574) ($generated@@448 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@574 ($generated@@448 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@70) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@170)) ($generated@@252 $generated@@579 ($generated@@161 $generated@@577 $generated@@578))) (and (= ($generated@@321 ($generated@@371 $generated@@142 $generated@@579)) $generated@@579) ($generated@@145 ($generated@@371 $generated@@142 $generated@@579) ($generated@@161 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@579 ($generated@@161 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@142) (< ($generated@@566 $generated@@580) ($generated@@566 ($generated@@313 $generated@@580))))
 :pattern ( ($generated@@313 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@87 ($generated@@459 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@87 ($generated@@459 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@75)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (and (= ($generated@@78 ($generated@@161 $generated@@585 $generated@@586)) $generated@@63) (= ($generated@@583 ($generated@@161 $generated@@585 $generated@@586)) $generated@@68)))
 :pattern ( ($generated@@161 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@142) (= ($generated@@565 ($generated@@321 $generated@@587)) ($generated@@566 $generated@@587)))
 :pattern ( ($generated@@565 ($generated@@321 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@170) ($generated@@252 $generated@@588 ($generated@@81 0))) (and (= ($generated@@321 ($generated@@371 $generated@@2 $generated@@588)) $generated@@588) ($generated@@145 ($generated@@371 ($generated@@82 $generated@@170 $generated@@4) $generated@@588) ($generated@@81 0))))
 :pattern ( ($generated@@252 $generated@@588 ($generated@@81 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@170) (= (type $generated@@590) $generated@@70)) ($generated@@252 $generated@@589 ($generated@@277 $generated@@590))) (and (= ($generated@@321 ($generated@@371 ($generated@@82 $generated@@170 $generated@@4) $generated@@589)) $generated@@589) ($generated@@145 ($generated@@371 ($generated@@82 $generated@@170 $generated@@4) $generated@@589) ($generated@@277 $generated@@590))))
 :pattern ( ($generated@@252 $generated@@589 ($generated@@277 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@170) (= (type $generated@@592) $generated@@70)) ($generated@@252 $generated@@591 ($generated@@282 $generated@@592))) (and (= ($generated@@321 ($generated@@371 ($generated@@82 $generated@@170 $generated@@4) $generated@@591)) $generated@@591) ($generated@@145 ($generated@@371 ($generated@@82 $generated@@170 $generated@@4) $generated@@591) ($generated@@282 $generated@@592))))
 :pattern ( ($generated@@252 $generated@@591 ($generated@@282 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@70)) ($generated@@252 $generated@@593 ($generated@@178 $generated@@594))) (and (= ($generated@@321 ($generated@@371 ($generated@@82 $generated@@170 $generated@@2) $generated@@593)) $generated@@593) ($generated@@145 ($generated@@371 ($generated@@82 $generated@@170 $generated@@2) $generated@@593) ($generated@@178 $generated@@594))))
 :pattern ( ($generated@@252 $generated@@593 ($generated@@178 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@70)) ($generated@@252 $generated@@595 ($generated@@525 $generated@@596))) (and (= ($generated@@321 ($generated@@371 ($generated@@306 $generated@@170) $generated@@595)) $generated@@595) ($generated@@145 ($generated@@371 ($generated@@306 $generated@@170) $generated@@595) ($generated@@525 $generated@@596))))
 :pattern ( ($generated@@252 $generated@@595 ($generated@@525 $generated@@596)))
)))
(assert (= ($generated@@78 $generated@@156) $generated@@61))
(assert (= ($generated@@583 $generated@@156) $generated@@67))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@583 $generated@@146) $generated@@69))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@597 ($generated@@178 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@170) (< 0 ($generated ($generated@@87 $generated@@597 $generated@@600)))) ($generated@@292 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@87 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@178 $generated@@598) $generated@@599))
)))
(assert (= $generated@@176 ($generated@@264 $generated@@176)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@142) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@603) (and ($generated@@160 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@70) ($generated@@80 $generated@@601 ($generated@@161 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@80 $generated@@601 ($generated@@161 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@292 ($generated@@168 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@292 ($generated@@168 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@142) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@607) (and ($generated@@160 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@70) ($generated@@80 $generated@@605 ($generated@@161 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@80 $generated@@605 ($generated@@161 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@292 ($generated@@169 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@292 ($generated@@169 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@142) (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@259 $generated@@610) (and ($generated@@147 $generated@@609) ($generated@@80 $generated@@609 $generated@@146 $generated@@610)))) ($generated@@80 ($generated@@148 $generated@@609) $generated@@146 $generated@@610))
 :pattern ( ($generated@@80 ($generated@@148 $generated@@609) $generated@@146 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@170) (= (type $generated@@612) $generated@@170)) (= ($generated@@251 ($generated@@264 $generated@@611) ($generated@@264 $generated@@612)) ($generated@@264 ($generated@@251 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@251 ($generated@@264 $generated@@611) ($generated@@264 $generated@@612)))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@144 $generated@@613))) ($generated@@264 ($generated@@321 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@144 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@142) (= ($generated@@313 ($generated@@264 $generated@@614)) ($generated@@264 ($generated@@313 $generated@@614))))
 :pattern ( ($generated@@313 ($generated@@264 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@321 ($generated@@264 $generated@@615)) ($generated@@264 ($generated@@321 $generated@@615)))
 :pattern ( ($generated@@321 ($generated@@264 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@307 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@306 $generated@@617)) (= ($generated@@305 $generated@@616) 0)) (= $generated@@616 ($generated@@304 $generated@@617))))
 :pattern ( ($generated@@305 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@82 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@326 ($generated@@88 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@326 $generated@@618) ($generated ($generated@@87 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@326 ($generated@@88 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@2)) ($generated@@80 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@625) $generated@@3)) ($generated@@80 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@80 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@627) $generated@@4)) ($generated@@80 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@80 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@629) $generated@@483)) ($generated@@80 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@80 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@631) $generated@@170)) ($generated@@80 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@80 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@306 $generated@@170)) (= (type $generated@@633) $generated@@70)) (= ($generated@@145 $generated@@632 ($generated@@525 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@305 $generated@@632))) ($generated@@252 ($generated@@526 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@526 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@145 $generated@@632 ($generated@@525 $generated@@633)))
)))
(assert  (and (forall (($generated@@637 T@U) ) (! (= (type ($generated@@635 $generated@@637)) $generated@@141)
 :pattern ( ($generated@@635 $generated@@637))
)) (= (type $generated@@636) $generated@@141)))
(assert (forall (($generated@@638 T@U) ($generated@@639 Int) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@141) (= (type $generated@@640) $generated@@142)) (= ($generated@@139 $generated@@638 $generated@@639 $generated@@640) ($generated@@139 $generated@@636 $generated@@639 $generated@@640)))
 :pattern ( ($generated@@139 ($generated@@635 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (!  (=> (= (type $generated@@642) ($generated@@306 $generated@@170)) (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@305 $generated@@642))) (< ($generated@@566 ($generated@@371 $generated@@142 ($generated@@526 $generated@@642 $generated@@643))) ($generated@@641 $generated@@642))))
 :pattern ( ($generated@@566 ($generated@@371 $generated@@142 ($generated@@526 $generated@@642 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) $generated@@70)) ($generated@@145 $generated@@644 ($generated@@440 $generated@@645 $generated@@646))) (and (and ($generated@@145 ($generated@@332 $generated@@644) ($generated@@277 $generated@@645)) ($generated@@145 ($generated@@383 $generated@@644) ($generated@@277 $generated@@646))) ($generated@@145 ($generated@@414 $generated@@644) ($generated@@277 ($generated@@161 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@145 $generated@@644 ($generated@@440 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@352 $generated@@170 $generated@@170)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@145 $generated@@647 ($generated@@448 $generated@@648 $generated@@649))) (and (and ($generated@@145 ($generated@@350 $generated@@647) ($generated@@282 $generated@@648)) ($generated@@145 ($generated@@394 $generated@@647) ($generated@@282 $generated@@649))) ($generated@@145 ($generated@@422 $generated@@647) ($generated@@282 ($generated@@161 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@145 $generated@@647 ($generated@@448 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@2) ($generated@@145 $generated@@650 $generated@@46))
 :pattern ( ($generated@@145 $generated@@650 $generated@@46))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@3) ($generated@@145 $generated@@651 $generated@@47))
 :pattern ( ($generated@@145 $generated@@651 $generated@@47))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@4) ($generated@@145 $generated@@652 $generated@@44))
 :pattern ( ($generated@@145 $generated@@652 $generated@@44))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@483) ($generated@@145 $generated@@653 $generated@@45))
 :pattern ( ($generated@@145 $generated@@653 $generated@@45))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@170) ($generated@@145 $generated@@654 $generated@@48))
 :pattern ( ($generated@@145 $generated@@654 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@655) $generated@@142) (= (type $generated@@656) $generated@@142)) (= (type $generated@@657) $generated@@142)) (= (type $generated@@658) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@659) $generated@@142)) (= (type $generated@@662) ($generated@@185 $generated@@83 $generated@@4))) (= (type $generated@@663) $generated@@83)) (= (type $generated@@664) ($generated@@185 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@666 true))
(let (($generated@@667 true))
(let (($generated@@668  (=> (not (= $generated@@655 ($generated@@313 $generated@@656))) (and (=> (= (ControlFlow 0 9) 7) $generated@@667) (=> (= (ControlFlow 0 9) 8) $generated@@666)))))
(let (($generated@@669  (=> (and (= $generated@@655 ($generated@@313 $generated@@656)) ($generated@@145 $generated@@656 $generated@@146)) (=> (and (and (and ($generated@@145 $generated@@657 $generated@@146) ($generated@@80 $generated@@657 $generated@@146 $generated@@658)) (= $generated@@659 $generated@@656)) (and ($generated@@145 $generated@@659 $generated@@146) (= $generated@@657 $generated@@659))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@145 ($generated@@8 (- $generated@@660 1)) $generated@@156)) (=> ($generated@@145 ($generated@@8 (- $generated@@660 1)) $generated@@156) (=> (= $generated@@661 (- $generated@@660 1)) (=> (and ($generated@@80 ($generated@@8 $generated@@661) $generated@@156 $generated@@658) ($generated@@80 $generated@@657 $generated@@146 $generated@@658)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@660) (= $generated@@661 $generated@@660))) (=> (or (<= 0 $generated@@660) (= $generated@@661 $generated@@660)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@661 $generated@@660) (and (= $generated@@661 $generated@@660) (< ($generated@@566 $generated@@657) ($generated@@566 $generated@@655)))))))))))))))
(let (($generated@@670  (=> (not (= $generated@@660 ($generated@@144 0))) (and (=> (= (ControlFlow 0 10) 4) $generated@@669) (=> (= (ControlFlow 0 10) 9) $generated@@668)))))
(let (($generated@@671 true))
(let (($generated@@672  (=> (= $generated@@662 ($generated@@239 $generated@@663 $generated@@658 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@671) (=> (= (ControlFlow 0 11) 10) $generated@@670)))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (= $generated@@664 ($generated@@184 $generated@@663 $generated@@658 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@673) (=> (= (ControlFlow 0 12) 11) $generated@@672)))))
(let (($generated@@675  (=> (and ($generated@@259 $generated@@658) ($generated@@665 $generated@@658)) (=> (and (and (<= ($generated@@144 0) $generated@@660) ($generated@@145 $generated@@655 $generated@@146)) (and (= 1 $generated@@138) (= (ControlFlow 0 13) 12))) $generated@@674))))
$generated@@675)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U Int T@U) Bool)
(declare-fun $generated@@154 (Int T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@260 (T@U Int T@U) Bool)
(declare-fun $generated@@261 (Int T@U) Bool)
(declare-fun $generated@@265 (Int T@U) Bool)
(declare-fun $generated@@266 (Int T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 () T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@680 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert  (and (= (type $generated@@156) $generated@@70) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@86)
 :pattern ( ($generated@@158 $generated@@159))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@160 T@U) ($generated@@161 Int) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@162) $generated@@86)) (or ($generated@@154 $generated@@161 $generated@@162) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@161) ($generated@@155 $generated@@162 $generated@@156))))) (and (=> (not (= $generated@@161 ($generated@@83 0))) (=> ($generated@@157 $generated@@162) (let (($generated@@163 ($generated@@158 $generated@@162)))
($generated@@154 (- $generated@@161 1) $generated@@163)))) (= ($generated@@153 ($generated@@80 $generated@@160) $generated@@161 $generated@@162) (ite (= $generated@@161 ($generated@@83 0)) true (ite ($generated@@157 $generated@@162) (let (($generated@@164 ($generated@@158 $generated@@162)))
($generated@@153 $generated@@160 (- $generated@@161 1) $generated@@164)) true)))))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@160) $generated@@161 $generated@@162))
))))
(assert (= (type $generated@@165) $generated@@70))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@155 $generated@@168 ($generated@@96 0)))
 :pattern ( ($generated@@155 $generated@@168 ($generated@@96 0)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@86)) ($generated@@155 $generated@@175 ($generated@@170 $generated@@173 $generated@@174))) ($generated@@169 $generated@@175))
 :pattern ( ($generated@@169 $generated@@175) ($generated@@155 $generated@@175 ($generated@@170 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 16) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@86) (= (type $generated@@183) $generated@@86)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@74)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (= ($generated@@184 $generated@@84) $generated@@66))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@155 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@155 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@98 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@98) (= (type $generated@@241) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@98)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@86)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@70) (= (type $generated@@252) $generated@@70)) (= (type $generated@@253) $generated@@179)) (= (type $generated@@254) $generated@@179)) (= ($generated@@155 ($generated@@247 $generated@@253 $generated@@254) ($generated@@170 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@155 ($generated@@247 $generated@@253 $generated@@254) ($generated@@170 $generated@@251 $generated@@252)))
)))
(assert ($generated@@155 $generated@@84 $generated@@156))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@255 $generated@@256)) ($generated@@95 $generated@@84 $generated@@156 $generated@@256))
 :pattern ( ($generated@@95 $generated@@84 $generated@@156 $generated@@256))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@81) (= (type $generated@@259) $generated@@86)) (or ($generated@@154 $generated@@258 $generated@@259) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@258) ($generated@@155 $generated@@259 $generated@@156))))) true)
 :pattern ( ($generated@@153 $generated@@257 $generated@@258 $generated@@259))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@81) (= (type $generated@@264) $generated@@86)) (or ($generated@@261 $generated@@263 $generated@@264) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@263) ($generated@@155 $generated@@264 $generated@@156))))) true)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263 $generated@@264))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@267 Int) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@86) (or ($generated@@266 $generated@@267 $generated@@268) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@267) ($generated@@155 $generated@@268 $generated@@156))))) true)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@81) (= (type $generated@@274) $generated@@86)) (or ($generated@@154 ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@273) ($generated@@155 $generated@@274 $generated@@156))))) (and (=> (not (= ($generated@@83 $generated@@273) ($generated@@83 0))) (=> ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@157 ($generated@@269 $generated@@274))))) (let (($generated@@275 ($generated@@269 ($generated@@158 ($generated@@269 $generated@@274)))))
($generated@@154 ($generated@@83 (- $generated@@273 1)) $generated@@275)))) (= ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)) (ite (= ($generated@@83 $generated@@273) ($generated@@83 0)) true (ite ($generated@@157 ($generated@@269 $generated@@274)) ($generated@@0 (let (($generated@@276 ($generated@@269 ($generated@@158 ($generated@@269 $generated@@274)))))
($generated@@269 ($generated@@11 ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 (- $generated@@273 1)) $generated@@276))))) true)))))
 :weight 3
 :pattern ( ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@86) (= (type $generated@@278) $generated@@86)) (= ($generated@@176 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@176 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (= ($generated@@279 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@70)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@285) $generated@@70)) (= ($generated@@155 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@179) ($generated@@0 ($generated@@102 $generated@@284 $generated@@286))) ($generated@@248 $generated@@286 $generated@@285))
 :pattern ( ($generated@@102 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@155 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@70)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@290) $generated@@70)) (= ($generated@@155 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@179) ($generated@@0 ($generated@@102 $generated@@289 $generated@@291))) ($generated@@248 $generated@@291 $generated@@290))
 :pattern ( ($generated@@102 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@155 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@83 $generated@@292) $generated@@292)
 :pattern ( ($generated@@83 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@269 $generated@@293) $generated@@293)
 :pattern ( ($generated@@269 $generated@@293))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 Int) ) (!  (=> (and (and (= (type $generated@@294) $generated@@81) (= (type $generated@@295) $generated@@86)) (and ($generated@@155 $generated@@295 $generated@@156) (= $generated@@296 0))) ($generated@@260 $generated@@294 $generated@@296 $generated@@295))
 :pattern ( ($generated@@260 $generated@@294 $generated@@296 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@86) (= (type $generated@@299) $generated@@86)) (and ($generated@@297 $generated@@298) ($generated@@297 $generated@@299))) (= ($generated@@279 $generated@@298 $generated@@299) true))
 :pattern ( ($generated@@279 $generated@@298 $generated@@299) ($generated@@297 $generated@@298))
 :pattern ( ($generated@@279 $generated@@298 $generated@@299) ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) $generated@@70)) (= (type $generated@@303) $generated@@179)) (= (type $generated@@304) $generated@@179)) (= (type $generated@@305) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@255 $generated@@305)) (= ($generated@@95 ($generated@@247 $generated@@303 $generated@@304) ($generated@@170 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@95 ($generated@@247 $generated@@303 $generated@@304) ($generated@@170 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@86) (= ($generated@@169 $generated@@306) (= ($generated@@184 $generated@@306) $generated@@62)))
 :pattern ( ($generated@@169 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@86) (= ($generated@@157 $generated@@307) (= ($generated@@184 $generated@@307) $generated@@64)))
 :pattern ( ($generated@@157 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@86) (= ($generated@@297 $generated@@308) (= ($generated@@184 $generated@@308) $generated@@66)))
 :pattern ( ($generated@@297 $generated@@308))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@309 T@U) ($generated@@310 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@310)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@310)))) (and (=> (not (= ($generated@@83 $generated@@310) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@310 1)))) (= ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 $generated@@310)) (ite (= ($generated@@83 $generated@@310) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@269 ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 (- $generated@@310 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 $generated@@310)))
))))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@86) ($generated@@169 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@179) (= (type $generated@@313) $generated@@179)) (= $generated@@311 ($generated@@247 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@169 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@86) ($generated@@297 $generated@@322)) (= $generated@@322 $generated@@84))
 :pattern ( ($generated@@297 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@86) ($generated@@157 $generated@@323)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@86) (= $generated@@323 ($generated@@85 $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@157 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@2) (= ($generated@@155 $generated@@325 $generated@@165) (<= ($generated@@83 0) ($generated $generated@@325))))
 :pattern ( ($generated@@155 $generated@@325 $generated@@165))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@81) (= (type $generated@@328) $generated@@86)) (= ($generated@@260 ($generated@@80 $generated@@326) $generated@@327 $generated@@328) ($generated@@260 $generated@@326 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@260 ($generated@@80 $generated@@326) $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 Int) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@81) (= (type $generated@@331) $generated@@86)) (= ($generated@@153 ($generated@@80 $generated@@329) $generated@@330 $generated@@331) ($generated@@153 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@179)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@70) (= (type $generated@@336) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@300 ($generated@@332 $generated@@334) $generated@@335 $generated@@336) ($generated@@95 $generated@@334 $generated@@335 $generated@@336)))
 :pattern ( ($generated@@300 ($generated@@332 $generated@@334) $generated@@335 $generated@@336))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@337 T@U) ($generated@@338 Int) ) (!  (=> (and (= (type $generated@@337) $generated@@81) (or ($generated@@82 $generated@@338) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@338)))) ($generated@@155 ($generated@@79 $generated@@337 $generated@@338) $generated@@156))
 :pattern ( ($generated@@79 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@97 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@100 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@97 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@102 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@97 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@102 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@102 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@97 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@102 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@102 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@100 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@97 $generated@@382 $generated@@2)) (= ($generated@@187 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@102 $generated@@381 $generated@@383))) (<= ($generated ($generated@@102 $generated@@381 $generated@@383)) ($generated@@339 $generated@@381))))
 :pattern ( ($generated@@102 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@187 $generated@@381))
)))
(assert (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@179) ($generated@@248 $generated@@387 $generated@@165)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@387)) $generated@@387) ($generated@@155 ($generated@@384 $generated@@2 $generated@@387) $generated@@165)))
 :pattern ( ($generated@@248 $generated@@387 $generated@@165))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@179) ($generated@@248 $generated@@388 $generated@@156)) (and (= ($generated@@332 ($generated@@384 $generated@@86 $generated@@388)) $generated@@388) ($generated@@155 ($generated@@384 $generated@@86 $generated@@388) $generated@@156)))
 :pattern ( ($generated@@248 $generated@@388 $generated@@156))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@86) (= ($generated@@155 ($generated@@85 $generated@@389) $generated@@156) ($generated@@155 $generated@@389 $generated@@156)))
 :pattern ( ($generated@@155 ($generated@@85 $generated@@389) $generated@@156))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) $generated@@86) (= (type $generated@@391) $generated@@86)) (and ($generated@@157 $generated@@390) ($generated@@157 $generated@@391))) (= ($generated@@279 $generated@@390 $generated@@391) ($generated@@279 ($generated@@158 $generated@@390) ($generated@@158 $generated@@391))))
 :pattern ( ($generated@@279 $generated@@390 $generated@@391) ($generated@@157 $generated@@390))
 :pattern ( ($generated@@279 $generated@@390 $generated@@391) ($generated@@157 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@349 (type $generated@@392))))
(let (($generated@@394 ($generated@@348 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@347 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@346 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@345 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@349 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@97 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@349 (type $generated@@399))))
(let (($generated@@401 ($generated@@348 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@347 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@346 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@102 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@367 (type $generated@@403))))
(let (($generated@@405 ($generated@@366 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@365 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@364 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@363 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@367 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@97 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@367 (type $generated@@410))))
(let (($generated@@412 ($generated@@366 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@365 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@364 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@102 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@415) $generated@@70)) (= ($generated@@155 $generated@@414 ($generated@@186 $generated@@415)) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@179) (< 0 ($generated ($generated@@102 $generated@@414 $generated@@416)))) ($generated@@248 $generated@@416 $generated@@415))
 :pattern ( ($generated@@102 $generated@@414 $generated@@416))
))))
 :pattern ( ($generated@@155 $generated@@414 ($generated@@186 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@417 ($generated@@282 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@179) ($generated@@0 ($generated@@102 $generated@@417 $generated@@420))) ($generated@@300 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@102 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@95 $generated@@417 ($generated@@282 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@421 ($generated@@287 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@179) ($generated@@0 ($generated@@102 $generated@@421 $generated@@424))) ($generated@@300 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@102 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@95 $generated@@421 ($generated@@287 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(= ($generated ($generated@@102 ($generated@@340 $generated@@426) $generated@@425)) 0))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@102 ($generated@@340 $generated@@426) $generated@@425)))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@97 $generated@@179 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@349 (type $generated@@430))))
(let (($generated@@432 ($generated@@348 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@97 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@434) $generated@@179)) (= ($generated@@0 ($generated@@102 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@102 ($generated@@345 $generated@@433) ($generated@@177 ($generated@@384 $generated@@86 $generated@@434)))) (= ($generated@@102 ($generated@@428 $generated@@433) ($generated@@177 ($generated@@384 $generated@@86 $generated@@434))) ($generated@@178 ($generated@@384 $generated@@86 $generated@@434))))))
 :pattern ( ($generated@@102 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@97 $generated@@179 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@367 (type $generated@@438))))
(let (($generated@@440 ($generated@@366 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@97 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@442) $generated@@179)) (= ($generated@@0 ($generated@@102 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@102 ($generated@@363 $generated@@441) ($generated@@177 ($generated@@384 $generated@@86 $generated@@442)))) (= ($generated@@102 ($generated@@436 $generated@@441) ($generated@@177 ($generated@@384 $generated@@86 $generated@@442))) ($generated@@178 ($generated@@384 $generated@@86 $generated@@442))))))
 :pattern ( ($generated@@102 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(let (($generated@@446 ($generated@@348 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@347 $generated@@446 $generated@@445)) (= ($generated@@0 ($generated@@102 ($generated@@396 $generated@@443) $generated@@444)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) (and ($generated@@0 ($generated@@102 ($generated@@345 $generated@@443) $generated@@447)) (= $generated@@444 ($generated@@102 ($generated@@428 $generated@@443) $generated@@447))))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@443) $generated@@447))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@443) $generated@@447))
))))))
 :pattern ( ($generated@@102 ($generated@@396 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(let (($generated@@451 ($generated@@366 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@365 $generated@@451 $generated@@450)) (= ($generated@@0 ($generated@@102 ($generated@@407 $generated@@448) $generated@@449)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) (and ($generated@@0 ($generated@@102 ($generated@@363 $generated@@448) $generated@@452)) (= $generated@@449 ($generated@@102 ($generated@@436 $generated@@448) $generated@@452))))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@448) $generated@@452))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@448) $generated@@452))
))))))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@456) $generated@@460))) (and ($generated@@300 ($generated@@102 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@300 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@95 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@464) $generated@@468))) (and ($generated@@300 ($generated@@102 ($generated@@436 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@300 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@464) $generated@@468))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@95 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@469) $generated@@86) (= (type $generated@@470) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@255 $generated@@470)) (= ($generated@@95 ($generated@@85 $generated@@469) $generated@@156 $generated@@470) ($generated@@95 $generated@@469 $generated@@156 $generated@@470)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@469) $generated@@156 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@86) ($generated@@155 $generated@@471 $generated@@156)) (or ($generated@@157 $generated@@471) ($generated@@297 $generated@@471)))
 :pattern ( ($generated@@297 $generated@@471) ($generated@@155 $generated@@471 $generated@@156))
 :pattern ( ($generated@@157 $generated@@471) ($generated@@155 $generated@@471 $generated@@156))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@472 T@U) ($generated@@473 Int) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) $generated@@81) (= (type $generated@@474) $generated@@86)) (or ($generated@@261 ($generated@@83 $generated@@473) $generated@@474) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@473) ($generated@@155 $generated@@474 $generated@@156))))) (and (=> (< 0 $generated@@473) (=> ($generated@@157 $generated@@474) (let (($generated@@475 ($generated@@158 $generated@@474)))
($generated@@261 (- $generated@@473 1) $generated@@475)))) (= ($generated@@260 ($generated@@80 $generated@@472) ($generated@@83 $generated@@473) $generated@@474)  (=> (< 0 $generated@@473) (ite ($generated@@157 $generated@@474) (let (($generated@@476 ($generated@@158 $generated@@474)))
($generated@@260 ($generated@@80 $generated@@472) (- $generated@@473 1) $generated@@476)) true)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@80 $generated@@472) ($generated@@83 $generated@@473) $generated@@474))
))))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@97 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@367 (type $generated@@479))))
(let (($generated@@481 ($generated@@366 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@365 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@364 $generated@@481 $generated@@480)) (= ($generated@@363 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@363 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@367 (type $generated@@482))))
(let (($generated@@484 ($generated@@366 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@365 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@364 $generated@@484 $generated@@483)) (= ($generated@@407 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@407 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@367 (type $generated@@485))))
(let (($generated@@487 ($generated@@366 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@365 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@364 $generated@@487 $generated@@486)) (= ($generated@@435 $generated@@485) ($generated@@477 $generated@@179))))))
 :pattern ( ($generated@@435 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@179) (= (type $generated@@492) $generated@@179)) ($generated@@0 ($generated@@102 ($generated@@427 $generated@@488) ($generated@@332 ($generated@@247 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@427 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@367 (type $generated@@493))))
(let (($generated@@495 ($generated@@366 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@365 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@364 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@179) (= (type $generated@@497) $generated@@179)) ($generated@@0 ($generated@@102 ($generated@@435 $generated@@493) ($generated@@332 ($generated@@247 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@435 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@179) ($generated@@248 $generated@@498 $generated@@46)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@498)) $generated@@498) ($generated@@155 ($generated@@384 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@179) ($generated@@248 $generated@@499 $generated@@47)) (and (= ($generated@@332 ($generated@@384 $generated@@3 $generated@@499)) $generated@@499) ($generated@@155 ($generated@@384 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@179) ($generated@@248 $generated@@500 $generated@@44)) (and (= ($generated@@332 ($generated@@384 $generated@@4 $generated@@500)) $generated@@500) ($generated@@155 ($generated@@384 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 21))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@179) ($generated@@248 $generated@@502 $generated@@45)) (and (= ($generated@@332 ($generated@@384 $generated@@501 $generated@@502)) $generated@@502) ($generated@@155 ($generated@@384 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@248 ($generated@@332 $generated@@503) $generated@@504) ($generated@@155 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@248 ($generated@@332 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@100 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@97 $generated@@506 $generated@@2)) (<= 0 ($generated@@339 $generated@@505))))
 :pattern ( ($generated@@339 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@317 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@316 $generated@@508)) (<= 0 ($generated@@315 $generated@@507))))
 :pattern ( ($generated@@315 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@453 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@93 ($generated@@453 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@453 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@70) (= (type $generated@@522) $generated@@70)) (= ($generated@@519 ($generated@@461 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@461 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@523 ($generated@@461 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@461 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@93 ($generated@@461 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@461 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@179) (= (type $generated@@530) $generated@@179)) (= ($generated@@184 ($generated@@247 $generated@@529 $generated@@530)) $generated@@62))
 :pattern ( ($generated@@247 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@70) (= (type $generated@@534) $generated@@70)) (= ($generated@@531 ($generated@@170 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@170 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= ($generated@@535 ($generated@@170 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@170 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@179) (= (type $generated@@540) $generated@@179)) (= ($generated@@177 ($generated@@247 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@247 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@179) (= (type $generated@@542) $generated@@179)) (= ($generated@@178 ($generated@@247 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@247 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@81)
 :pattern ( ($generated@@543 $generated@@545))
)) (= (type $generated@@544) $generated@@81)))
(assert (forall (($generated@@546 T@U) ($generated@@547 Int) ) (!  (=> (= (type $generated@@546) $generated@@81) (= ($generated@@79 $generated@@546 $generated@@547) ($generated@@79 $generated@@544 $generated@@547)))
 :pattern ( ($generated@@79 ($generated@@543 $generated@@546) $generated@@547))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (! (let (($generated@@553 ($generated@@317 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@551 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@316 $generated@@179)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@554 ($generated@@548 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@315 $generated@@554))) ($generated@@300 ($generated@@549 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@549 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@95 $generated@@554 ($generated@@548 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@96 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@96 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@282 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@282 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@93 ($generated@@282 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@287 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@287 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@93 ($generated@@287 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@568 ($generated@@186 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@186 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@93 ($generated@@186 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@70)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@70) (= ($generated@@572 ($generated@@548 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@548 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@93 ($generated@@548 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@548 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@86) (= ($generated@@184 ($generated@@85 $generated@@576)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@86) (= ($generated@@158 ($generated@@85 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@85 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@384 $generated@@579 ($generated@@332 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@332 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) (= ($generated@@155 $generated@@580 ($generated@@453 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@580) $generated@@583))) (and ($generated@@248 ($generated@@102 ($generated@@428 $generated@@580) $generated@@583) $generated@@582) ($generated@@248 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@580) $generated@@583))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@155 $generated@@580 ($generated@@453 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) $generated@@70)) (= ($generated@@155 $generated@@584 ($generated@@461 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@584) $generated@@587))) (and ($generated@@248 ($generated@@102 ($generated@@436 $generated@@584) $generated@@587) $generated@@586) ($generated@@248 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@584) $generated@@587))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@155 $generated@@584 ($generated@@461 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@179) (= (type $generated@@591) $generated@@179)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@247 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@247 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@179) (= (type $generated@@593) $generated@@179)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@247 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@247 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@594) $generated@@595) ($generated@@79 $generated@@594 $generated@@595)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@594) $generated@@595))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@596 T@U) ($generated@@597 Int) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@81) (= (type $generated@@598) $generated@@86)) (or ($generated@@261 ($generated@@83 $generated@@597) ($generated@@269 $generated@@598)) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@597) ($generated@@155 $generated@@598 $generated@@156))))) (and (=> (< 0 $generated@@597) (=> ($generated@@157 $generated@@598) (let (($generated@@599 ($generated@@158 $generated@@598)))
($generated@@261 (- $generated@@597 1) $generated@@599)))) (= ($generated@@260 ($generated@@80 $generated@@596) ($generated@@83 $generated@@597) ($generated@@269 $generated@@598))  (=> (< 0 $generated@@597) (ite ($generated@@157 $generated@@598) (let (($generated@@600 ($generated@@158 $generated@@598)))
($generated@@260 ($generated@@80 $generated@@596) (- $generated@@597 1) $generated@@600)) true)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@80 $generated@@596) ($generated@@83 $generated@@597) ($generated@@269 $generated@@598)))
))))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@179) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@248 $generated@@601 ($generated@@453 $generated@@602 $generated@@603))) (and (= ($generated@@332 ($generated@@384 ($generated@@347 $generated@@179 $generated@@179) $generated@@601)) $generated@@601) ($generated@@155 ($generated@@384 ($generated@@347 $generated@@179 $generated@@179) $generated@@601) ($generated@@453 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@601 ($generated@@453 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@179) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@248 $generated@@604 ($generated@@461 $generated@@605 $generated@@606))) (and (= ($generated@@332 ($generated@@384 ($generated@@365 $generated@@179 $generated@@179) $generated@@604)) $generated@@604) ($generated@@155 ($generated@@384 ($generated@@365 $generated@@179 $generated@@179) $generated@@604) ($generated@@461 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@248 $generated@@604 ($generated@@461 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@70) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@179)) ($generated@@248 $generated@@609 ($generated@@170 $generated@@607 $generated@@608))) (and (= ($generated@@332 ($generated@@384 $generated@@86 $generated@@609)) $generated@@609) ($generated@@155 ($generated@@384 $generated@@86 $generated@@609) ($generated@@170 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@248 $generated@@609 ($generated@@170 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@86) (< ($generated@@589 $generated@@610) ($generated@@589 ($generated@@85 $generated@@610))))
 :pattern ( ($generated@@85 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@102 ($generated@@477 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@102 ($generated@@477 $generated@@612) $generated@@611)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@613 T@U) ($generated@@614 Int) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@615) $generated@@86)) (or ($generated@@261 $generated@@614 $generated@@615) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@614) ($generated@@155 $generated@@615 $generated@@156))))) (and (=> (< 0 $generated@@614) (=> ($generated@@157 $generated@@615) (let (($generated@@616 ($generated@@158 $generated@@615)))
($generated@@261 (- $generated@@614 1) $generated@@616)))) (= ($generated@@260 ($generated@@80 $generated@@613) $generated@@614 $generated@@615)  (=> (< 0 $generated@@614) (ite ($generated@@157 $generated@@615) (let (($generated@@617 ($generated@@158 $generated@@615)))
($generated@@260 $generated@@613 (- $generated@@614 1) $generated@@617)) true)))))
 :pattern ( ($generated@@260 ($generated@@80 $generated@@613) $generated@@614 $generated@@615))
))))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@75)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@70) (= (type $generated@@621) $generated@@70)) (and (= ($generated@@93 ($generated@@170 $generated@@620 $generated@@621)) $generated@@63) (= ($generated@@618 ($generated@@170 $generated@@620 $generated@@621)) $generated@@68)))
 :pattern ( ($generated@@170 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@86) (= ($generated@@588 ($generated@@332 $generated@@622)) ($generated@@589 $generated@@622)))
 :pattern ( ($generated@@588 ($generated@@332 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@179) ($generated@@248 $generated@@623 ($generated@@96 0))) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@623)) $generated@@623) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@623) ($generated@@96 0))))
 :pattern ( ($generated@@248 $generated@@623 ($generated@@96 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@179) (= (type $generated@@625) $generated@@70)) ($generated@@248 $generated@@624 ($generated@@282 $generated@@625))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@624)) $generated@@624) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@624) ($generated@@282 $generated@@625))))
 :pattern ( ($generated@@248 $generated@@624 ($generated@@282 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@179) (= (type $generated@@627) $generated@@70)) ($generated@@248 $generated@@626 ($generated@@287 $generated@@627))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@626)) $generated@@626) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@626) ($generated@@287 $generated@@627))))
 :pattern ( ($generated@@248 $generated@@626 ($generated@@287 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@179) (= (type $generated@@629) $generated@@70)) ($generated@@248 $generated@@628 ($generated@@186 $generated@@629))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@2) $generated@@628)) $generated@@628) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@2) $generated@@628) ($generated@@186 $generated@@629))))
 :pattern ( ($generated@@248 $generated@@628 ($generated@@186 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@179) (= (type $generated@@631) $generated@@70)) ($generated@@248 $generated@@630 ($generated@@548 $generated@@631))) (and (= ($generated@@332 ($generated@@384 ($generated@@316 $generated@@179) $generated@@630)) $generated@@630) ($generated@@155 ($generated@@384 ($generated@@316 $generated@@179) $generated@@630) ($generated@@548 $generated@@631))))
 :pattern ( ($generated@@248 $generated@@630 ($generated@@548 $generated@@631)))
)))
(assert (= ($generated@@93 $generated@@165) $generated@@61))
(assert (= ($generated@@618 $generated@@165) $generated@@67))
(assert (= ($generated@@93 $generated@@156) $generated@@65))
(assert (= ($generated@@618 $generated@@156) $generated@@69))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@632 ($generated@@186 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@179) (< 0 ($generated ($generated@@102 $generated@@632 $generated@@635)))) ($generated@@300 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@102 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@95 $generated@@632 ($generated@@186 $generated@@633) $generated@@634))
)))
(assert (= $generated@@84 ($generated@@269 $generated@@84)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@86) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@638) (and ($generated@@169 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@70) ($generated@@95 $generated@@636 ($generated@@170 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@95 $generated@@636 ($generated@@170 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@300 ($generated@@177 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@300 ($generated@@177 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@86) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@642) (and ($generated@@169 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@70) ($generated@@95 $generated@@640 ($generated@@170 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@95 $generated@@640 ($generated@@170 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@300 ($generated@@178 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@300 ($generated@@178 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@86) (= (type $generated@@645) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@645) (and ($generated@@157 $generated@@644) ($generated@@95 $generated@@644 $generated@@156 $generated@@645)))) ($generated@@95 ($generated@@158 $generated@@644) $generated@@156 $generated@@645))
 :pattern ( ($generated@@95 ($generated@@158 $generated@@644) $generated@@156 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@179) (= (type $generated@@647) $generated@@179)) (= ($generated@@247 ($generated@@269 $generated@@646) ($generated@@269 $generated@@647)) ($generated@@269 ($generated@@247 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@247 ($generated@@269 $generated@@646) ($generated@@269 $generated@@647)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@83 $generated@@648))) ($generated@@269 ($generated@@332 ($generated@@8 $generated@@648))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@83 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@86) (= ($generated@@85 ($generated@@269 $generated@@649)) ($generated@@269 ($generated@@85 $generated@@649))))
 :pattern ( ($generated@@85 ($generated@@269 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (= ($generated@@332 ($generated@@269 $generated@@650)) ($generated@@269 ($generated@@332 $generated@@650)))
 :pattern ( ($generated@@332 ($generated@@269 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@317 (type $generated@@651))))
 (=> (and (= (type $generated@@651) ($generated@@316 $generated@@652)) (= ($generated@@315 $generated@@651) 0)) (= $generated@@651 ($generated@@314 $generated@@652))))
 :pattern ( ($generated@@315 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@654)))
 (=> (and (and (= (type $generated@@653) ($generated@@97 $generated@@656 $generated@@2)) (= (type $generated@@655) $generated@@2)) (<= 0 ($generated $generated@@655))) (= ($generated@@339 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)) (+ (- ($generated@@339 $generated@@653) ($generated ($generated@@102 $generated@@653 $generated@@654))) ($generated $generated@@655)))))
 :pattern ( ($generated@@339 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@657 Int) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@86) (or ($generated@@266 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@657) ($generated@@155 $generated@@658 $generated@@156))))) (and ($generated@@261 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) (= ($generated@@265 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@260 ($generated@@80 $generated@@544) ($generated@@83 $generated@@657) ($generated@@269 $generated@@658))))))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)))
))))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@660) $generated@@2)) ($generated@@95 $generated@@660 $generated@@46 $generated@@659))
 :pattern ( ($generated@@95 $generated@@660 $generated@@46 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@662) $generated@@3)) ($generated@@95 $generated@@662 $generated@@47 $generated@@661))
 :pattern ( ($generated@@95 $generated@@662 $generated@@47 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@664) $generated@@4)) ($generated@@95 $generated@@664 $generated@@44 $generated@@663))
 :pattern ( ($generated@@95 $generated@@664 $generated@@44 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@666) $generated@@501)) ($generated@@95 $generated@@666 $generated@@45 $generated@@665))
 :pattern ( ($generated@@95 $generated@@666 $generated@@45 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@668) $generated@@179)) ($generated@@95 $generated@@668 $generated@@48 $generated@@667))
 :pattern ( ($generated@@95 $generated@@668 $generated@@48 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@316 $generated@@179)) (= (type $generated@@670) $generated@@70)) (= ($generated@@155 $generated@@669 ($generated@@548 $generated@@670)) (forall (($generated@@671 Int) ) (!  (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@315 $generated@@669))) ($generated@@248 ($generated@@549 $generated@@669 $generated@@671) $generated@@670))
 :pattern ( ($generated@@549 $generated@@669 $generated@@671))
))))
 :pattern ( ($generated@@155 $generated@@669 ($generated@@548 $generated@@670)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@672 Int) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@86) (or ($generated@@266 $generated@@672 $generated@@673) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@672) ($generated@@155 $generated@@673 $generated@@156))))) (and ($generated@@261 $generated@@672 $generated@@673) (= ($generated@@265 $generated@@672 $generated@@673) ($generated@@260 ($generated@@80 $generated@@544) $generated@@672 $generated@@673))))
 :pattern ( ($generated@@265 $generated@@672 $generated@@673))
))))
(assert (forall (($generated@@674 T@U) ($generated@@675 Int) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@81) (= (type $generated@@676) $generated@@86)) (= ($generated@@260 $generated@@674 $generated@@675 $generated@@676) ($generated@@260 $generated@@544 $generated@@675 $generated@@676)))
 :pattern ( ($generated@@260 ($generated@@543 $generated@@674) $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 Int) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@81) (= (type $generated@@679) $generated@@86)) (= ($generated@@153 $generated@@677 $generated@@678 $generated@@679) ($generated@@153 $generated@@544 $generated@@678 $generated@@679)))
 :pattern ( ($generated@@153 ($generated@@543 $generated@@677) $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (!  (=> (= (type $generated@@681) ($generated@@316 $generated@@179)) (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@315 $generated@@681))) (< ($generated@@589 ($generated@@384 $generated@@86 ($generated@@549 $generated@@681 $generated@@682))) ($generated@@680 $generated@@681))))
 :pattern ( ($generated@@589 ($generated@@384 $generated@@86 ($generated@@549 $generated@@681 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@684) $generated@@70)) (= (type $generated@@685) $generated@@70)) ($generated@@155 $generated@@683 ($generated@@453 $generated@@684 $generated@@685))) (and (and ($generated@@155 ($generated@@345 $generated@@683) ($generated@@282 $generated@@684)) ($generated@@155 ($generated@@396 $generated@@683) ($generated@@282 $generated@@685))) ($generated@@155 ($generated@@427 $generated@@683) ($generated@@282 ($generated@@170 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@155 $generated@@683 ($generated@@453 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@687) $generated@@70)) (= (type $generated@@688) $generated@@70)) ($generated@@155 $generated@@686 ($generated@@461 $generated@@687 $generated@@688))) (and (and ($generated@@155 ($generated@@363 $generated@@686) ($generated@@287 $generated@@687)) ($generated@@155 ($generated@@407 $generated@@686) ($generated@@287 $generated@@688))) ($generated@@155 ($generated@@435 $generated@@686) ($generated@@287 ($generated@@170 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@155 $generated@@686 ($generated@@461 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@2) ($generated@@155 $generated@@689 $generated@@46))
 :pattern ( ($generated@@155 $generated@@689 $generated@@46))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@3) ($generated@@155 $generated@@690 $generated@@47))
 :pattern ( ($generated@@155 $generated@@690 $generated@@47))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@4) ($generated@@155 $generated@@691 $generated@@44))
 :pattern ( ($generated@@155 $generated@@691 $generated@@44))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@501) ($generated@@155 $generated@@692 $generated@@45))
 :pattern ( ($generated@@155 $generated@@692 $generated@@45))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@179) ($generated@@155 $generated@@693 $generated@@48))
 :pattern ( ($generated@@155 $generated@@693 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 (T@U) Bool)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@696) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@698) $generated@@86)) (= (type $generated@@700) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@701) $generated@@86)) (= (type $generated@@703) ($generated@@193 $generated@@98 $generated@@4))) (= (type $generated@@704) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@705  (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165)) (=> ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165) (=> (= $generated@@695 (ite (< $generated@@694 0) 0 $generated@@694)) (=> (and (and (and ($generated@@95 ($generated@@8 $generated@@695) $generated@@165 $generated@@696) ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694))) (and ($generated@@95 ($generated@@8 $generated@@697) $generated@@165 $generated@@696) (= $generated@@698 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))))) (and (and ($generated@@95 $generated@@698 $generated@@156 $generated@@696) ($generated@@154 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))) (and ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694)) ($generated@@154 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@154 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@153 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (= $generated@@697 ($generated@@83 0)) ($generated@@0 ($generated@@269 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@154 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@153 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (not (= $generated@@697 ($generated@@83 0))) (=> ($generated@@157 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (let (($generated@@706 ($generated@@158 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@544)) (ite (< $generated@@694 0) 0 $generated@@694)))))
($generated@@153 ($generated@@80 ($generated@@80 $generated@@544)) (- $generated@@697 1) $generated@@706))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@154 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@153 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (not (= $generated@@697 ($generated@@83 0))) (=> (not ($generated@@157 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))) ($generated@@0 ($generated@@269 ($generated@@11 true))))))))))))))))
(let (($generated@@707  (=> (and (<= 0 $generated@@694) (= (ControlFlow 0 7) 2)) $generated@@705)))
(let (($generated@@708  (=> (and (< $generated@@694 0) (= (ControlFlow 0 6) 2)) $generated@@705)))
(let (($generated@@709  (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165)) (=> ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165) (=> (= $generated@@699 (ite (< $generated@@694 0) 0 $generated@@694)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@699) $generated@@165 $generated@@700) ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694))) (and ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694)) (= $generated@@701 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))))) (=> (and (and (and (and ($generated@@255 $generated@@696) ($generated@@702 $generated@@696)) ($generated@@261 $generated@@697 $generated@@701)) (and (and ($generated@@261 $generated@@697 $generated@@701) (and ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 $generated@@701) (=> (< 0 $generated@@697) (ite ($generated@@157 $generated@@701) (let (($generated@@710 ($generated@@158 $generated@@701)))
($generated@@260 ($generated@@80 $generated@@544) (- $generated@@697 1) $generated@@710)) true)))) ($generated@@154 $generated@@697 $generated@@701))) (and (and (and ($generated@@154 $generated@@697 $generated@@701) (and ($generated@@153 ($generated@@80 $generated@@544) $generated@@697 $generated@@701) (ite (= $generated@@697 ($generated@@83 0)) true (ite ($generated@@157 $generated@@701) (let (($generated@@711 ($generated@@158 $generated@@701)))
($generated@@153 ($generated@@80 $generated@@544) (- $generated@@697 1) $generated@@711)) true)))) ($generated@@266 $generated@@697 $generated@@701)) (and (and ($generated@@266 $generated@@697 $generated@@701) (and (and (and ($generated@@265 $generated@@697 $generated@@701) (<= ($generated@@83 0) $generated@@697)) ($generated@@155 $generated@@701 $generated@@156)) ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 $generated@@701))) (= $generated@@700 $generated@@696)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@708) (=> (= (ControlFlow 0 8) 7) $generated@@707)))))))))
(let (($generated@@712  (=> (and (<= 0 $generated@@694) (= (ControlFlow 0 11) 8)) $generated@@709)))
(let (($generated@@713  (=> (and (< $generated@@694 0) (= (ControlFlow 0 10) 8)) $generated@@709)))
(let (($generated@@714  (=> (= $generated@@703 ($generated@@192 $generated@@704 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 10) $generated@@713) (=> (= (ControlFlow 0 12) 11) $generated@@712)))))
(let (($generated@@715  (=> (and (and (and ($generated@@255 $generated@@700) ($generated@@702 $generated@@700)) (<= ($generated@@83 0) $generated@@697)) (and (= 5 $generated@@78) (= (ControlFlow 0 13) 12))) $generated@@714)))
$generated@@715)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (Int) T@U)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@335 (T@U T@U T@U) Bool)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) Bool)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@510 (T@T) T@U)
(declare-fun $generated@@534 () T@T)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U Int) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@718 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (= ($generated@@1 $generated@@154) 16))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@154) (= (type $generated@@156) $generated@@154)) (= (type $generated@@157) $generated@@154)) (and ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@156 $generated@@157))) ($generated@@153 $generated@@155 $generated@@157))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@156 $generated@@157))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@153 $generated@@155 $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@96 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@96 0)))
)))
(assert  (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@166 $generated@@167)) $generated@@154)
 :pattern ( ($generated@@163 $generated@@166 $generated@@167))
)) (forall (($generated@@168 Int) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@154)
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 Int) ) (!  (=> (= (type $generated@@169) $generated@@154) (=> (and (and (<= 0 $generated@@170) (<= 0 $generated@@171)) (<= (+ $generated@@170 $generated@@171) ($generated@@165 $generated@@169))) (= ($generated@@163 ($generated@@163 $generated@@169 ($generated@@164 $generated@@170)) ($generated@@164 $generated@@171)) ($generated@@163 $generated@@169 ($generated@@164 (+ $generated@@170 $generated@@171))))))
 :pattern ( ($generated@@163 ($generated@@163 $generated@@169 ($generated@@164 $generated@@170)) ($generated@@164 $generated@@171)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@86)) ($generated@@161 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@161 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@154)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@154)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@86) (= (type $generated@@185) $generated@@86)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@186 $generated@@187)) $generated@@74)
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert (= ($generated@@186 $generated@@84) $generated@@66))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@70)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@192) $generated@@70)) ($generated@@161 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@161 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@98 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@73 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@98) (= (type $generated@@243) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@244) ($generated@@72 $generated@@4))) (= (type $generated@@246) $generated@@98)) (= (type $generated@@247) ($generated@@72 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@86)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@154)) (= (type $generated@@256) $generated@@154)) (= ($generated@@161 ($generated@@249 $generated@@255 $generated@@256) ($generated@@173 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@161 ($generated@@249 $generated@@255 $generated@@256) ($generated@@173 $generated@@253 $generated@@254)))
)))
(assert (= (type $generated@@257) $generated@@70))
(assert ($generated@@161 $generated@@84 $generated@@257))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@258 $generated@@259)) ($generated@@95 $generated@@84 $generated@@257 $generated@@259))
 :pattern ( ($generated@@95 $generated@@84 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@86) (= (type $generated@@261) $generated@@86)) (= ($generated@@179 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@179 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@86) (= (type $generated@@264) $generated@@86)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert  (and (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@266 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@266 $generated@@271))
)) (= (type $generated@@270) $generated@@81)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@154) (= (type $generated@@274) $generated@@86)) (or ($generated@@267 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@274 $generated@@257)))) (and ($generated@@268 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) (= ($generated@@265 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)) ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@269 ($generated@@80 $generated@@270) ($generated@@266 $generated@@273) ($generated@@266 $generated@@274))))))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@266 $generated@@273) ($generated@@266 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@70)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@278) $generated@@70)) (= ($generated@@161 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@154) ($generated@@0 ($generated@@102 $generated@@277 $generated@@279))) ($generated@@250 $generated@@279 $generated@@278))
 :pattern ( ($generated@@102 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@161 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@70)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@283) $generated@@70)) (= ($generated@@161 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@154) ($generated@@0 ($generated@@102 $generated@@282 $generated@@284))) ($generated@@250 $generated@@284 $generated@@283))
 :pattern ( ($generated@@102 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@161 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@83 $generated@@285) $generated@@285)
 :pattern ( ($generated@@83 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (= ($generated@@266 $generated@@286) $generated@@286)
 :pattern ( ($generated@@266 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@86) (= (type $generated@@289) $generated@@86)) (and ($generated@@287 $generated@@288) ($generated@@287 $generated@@289))) (= ($generated@@262 $generated@@288 $generated@@289) true))
 :pattern ( ($generated@@262 $generated@@288 $generated@@289) ($generated@@287 $generated@@288))
 :pattern ( ($generated@@262 $generated@@288 $generated@@289) ($generated@@287 $generated@@289))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@154) (= (type $generated@@291) $generated@@86)) (or ($generated@@267 $generated@@290 $generated@@291) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@291 $generated@@257)))) (and ($generated@@268 $generated@@290 $generated@@291) (= ($generated@@265 $generated@@290 $generated@@291) ($generated@@269 ($generated@@80 $generated@@270) $generated@@290 $generated@@291))))
 :pattern ( ($generated@@265 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@154)) (= (type $generated@@296) $generated@@154)) (= (type $generated@@297) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@258 $generated@@297)) (= ($generated@@95 ($generated@@249 $generated@@295 $generated@@296) ($generated@@173 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@95 ($generated@@249 $generated@@295 $generated@@296) ($generated@@173 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@86) (= ($generated@@172 $generated@@298) (= ($generated@@186 $generated@@298) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@86) (= ($generated@@299 $generated@@300) (= ($generated@@186 $generated@@300) $generated@@64)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@86) (= ($generated@@287 $generated@@301) (= ($generated@@186 $generated@@301) $generated@@66)))
 :pattern ( ($generated@@287 $generated@@301))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@302 T@U) ($generated@@303 Int) ) (!  (=> (and (= (type $generated@@302) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@303)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@303)))) (and (=> (not (= ($generated@@83 $generated@@303) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@303 1)))) (= ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 $generated@@303)) (ite (= ($generated@@83 $generated@@303) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@266 ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 (- $generated@@303 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@302) ($generated@@83 $generated@@303)))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (= (type $generated@@304) $generated@@81) (= (type $generated@@305) $generated@@86)) (= (type $generated@@306) $generated@@154)) (and ($generated@@161 $generated@@305 $generated@@257) (= $generated@@306 ($generated@@164 0)))) ($generated@@269 $generated@@304 $generated@@306 $generated@@305))
 :pattern ( ($generated@@269 $generated@@304 $generated@@306 $generated@@305))
))))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@86) ($generated@@172 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@154) (= (type $generated@@309) $generated@@154)) (= $generated@@307 ($generated@@249 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@172 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@86) ($generated@@287 $generated@@318)) (= $generated@@318 $generated@@84))
 :pattern ( ($generated@@287 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@86) ($generated@@299 $generated@@319)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@86) (= $generated@@319 ($generated@@85 $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@299 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@2) (= ($generated@@161 $generated@@321 $generated@@158) (<= ($generated@@83 0) ($generated $generated@@321))))
 :pattern ( ($generated@@161 $generated@@321 $generated@@158))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@86)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@324) $generated@@81) (= (type $generated@@325) $generated@@154)) (= (type $generated@@326) $generated@@86)) (or ($generated@@268 ($generated@@266 $generated@@325) $generated@@326) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@326 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@325)) (=> ($generated@@299 $generated@@326) (let (($generated@@327 ($generated@@322 $generated@@326)))
($generated@@268 ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@327)))) (=> (=> (< 0 ($generated@@165 $generated@@325)) (ite ($generated@@299 $generated@@326) (let (($generated@@328 ($generated@@322 $generated@@326)))
($generated@@269 ($generated@@80 $generated@@324) ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@328)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@325)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@153 $generated@@329 $generated@@325)) ($generated@@268 $generated@@329 $generated@@326))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) $generated@@329 $generated@@326))
))))) (= ($generated@@269 ($generated@@80 $generated@@324) ($generated@@266 $generated@@325) $generated@@326)  (and (=> (< 0 ($generated@@165 $generated@@325)) (ite ($generated@@299 $generated@@326) (let (($generated@@330 ($generated@@322 $generated@@326)))
($generated@@269 ($generated@@80 $generated@@324) ($generated@@163 $generated@@325 ($generated@@164 1)) $generated@@330)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@325)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@154) ($generated@@153 $generated@@331 $generated@@325)) ($generated@@269 ($generated@@80 $generated@@324) $generated@@331 $generated@@326))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) $generated@@331 $generated@@326))
)))))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@80 $generated@@324) ($generated@@266 $generated@@325) $generated@@326))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@81) (= (type $generated@@333) $generated@@154)) (= (type $generated@@334) $generated@@86)) (= ($generated@@269 ($generated@@80 $generated@@332) $generated@@333 $generated@@334) ($generated@@269 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) $generated@@81) (= (type $generated@@337) $generated@@154)) (= (type $generated@@338) $generated@@86)) (= ($generated@@335 ($generated@@80 $generated@@336) $generated@@337 $generated@@338) ($generated@@335 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@154)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@70) (= (type $generated@@343) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@292 ($generated@@339 $generated@@341) $generated@@342 $generated@@343) ($generated@@95 $generated@@341 $generated@@342 $generated@@343)))
 :pattern ( ($generated@@292 ($generated@@339 $generated@@341) $generated@@342 $generated@@343))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@344 T@U) ($generated@@345 Int) ) (!  (=> (and (= (type $generated@@344) $generated@@81) (or ($generated@@82 $generated@@345) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@345)))) ($generated@@161 ($generated@@79 $generated@@344 $generated@@345) $generated@@257))
 :pattern ( ($generated@@79 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@348 T@T) ) (! (= (type ($generated@@347 $generated@@348)) ($generated@@97 $generated@@348 $generated@@2))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@100 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@97 $generated@@350 $generated@@2)) (and (= (= ($generated@@346 $generated@@349) 0) (= $generated@@349 ($generated@@347 $generated@@350))) (=> (not (= ($generated@@346 $generated@@349) 0)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) (< 0 ($generated ($generated@@102 $generated@@349 $generated@@351))))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@97 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@102 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@102 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@97 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@102 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@102 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@154) (= (type $generated@@390) $generated@@154)) (and ($generated@@388 $generated@@390) (<= ($generated@@165 $generated@@390) ($generated@@165 $generated@@389)))) (and (= ($generated@@388 ($generated@@163 $generated@@389 $generated@@390)) ($generated@@388 $generated@@389)) (= ($generated@@165 ($generated@@163 $generated@@389 $generated@@390)) (- ($generated@@165 $generated@@389) ($generated@@165 $generated@@390)))))
 :pattern ( ($generated@@163 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 Int) ) (!  (=> (<= 0 $generated@@391) (and ($generated@@388 ($generated@@164 $generated@@391)) (= ($generated@@165 ($generated@@164 $generated@@391)) $generated@@391)))
 :pattern ( ($generated@@164 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@100 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@97 $generated@@393 $generated@@2)) (= ($generated@@189 $generated@@392) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@393) (and (<= 0 ($generated ($generated@@102 $generated@@392 $generated@@394))) (<= ($generated ($generated@@102 $generated@@392 $generated@@394)) ($generated@@346 $generated@@392))))
 :pattern ( ($generated@@102 $generated@@392 $generated@@394))
)))))
 :pattern ( ($generated@@189 $generated@@392))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@250 $generated@@398 $generated@@158)) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@398)) $generated@@398) ($generated@@161 ($generated@@395 $generated@@2 $generated@@398) $generated@@158)))
 :pattern ( ($generated@@250 $generated@@398 $generated@@158))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@154) ($generated@@250 $generated@@399 $generated@@257)) (and (= ($generated@@339 ($generated@@395 $generated@@86 $generated@@399)) $generated@@399) ($generated@@161 ($generated@@395 $generated@@86 $generated@@399) $generated@@257)))
 :pattern ( ($generated@@250 $generated@@399 $generated@@257))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) $generated@@81) (= (type $generated@@402) $generated@@154)) (= (type $generated@@403) $generated@@86)) (or ($generated@@400 $generated@@402 $generated@@403) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@403 $generated@@257)))) true)
 :pattern ( ($generated@@335 $generated@@401 $generated@@402 $generated@@403))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) $generated@@81) (= (type $generated@@405) $generated@@154)) (= (type $generated@@406) $generated@@86)) (or ($generated@@268 $generated@@405 $generated@@406) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@406 $generated@@257)))) true)
 :pattern ( ($generated@@269 $generated@@404 $generated@@405 $generated@@406))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@407) $generated@@154) (= (type $generated@@408) $generated@@86)) (or ($generated@@267 $generated@@407 $generated@@408) (and (not (= 3 $generated@@78)) ($generated@@161 $generated@@408 $generated@@257)))) true)
 :pattern ( ($generated@@265 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@86) (= ($generated@@161 ($generated@@85 $generated@@409) $generated@@257) ($generated@@161 $generated@@409 $generated@@257)))
 :pattern ( ($generated@@161 ($generated@@85 $generated@@409) $generated@@257))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@410) $generated@@86) (= (type $generated@@411) $generated@@86)) (and ($generated@@299 $generated@@410) ($generated@@299 $generated@@411))) (= ($generated@@262 $generated@@410 $generated@@411) ($generated@@262 ($generated@@322 $generated@@410) ($generated@@322 $generated@@411))))
 :pattern ( ($generated@@262 $generated@@410 $generated@@411) ($generated@@299 $generated@@410))
 :pattern ( ($generated@@262 $generated@@410 $generated@@411) ($generated@@299 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@356 (type $generated@@412))))
(let (($generated@@414 ($generated@@355 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@354 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@353 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@352 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@356 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417)) ($generated@@97 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@356 (type $generated@@419))))
(let (($generated@@421 ($generated@@355 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@354 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@353 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@420) ($generated@@0 ($generated@@102 ($generated@@416 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@416 $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@374 (type $generated@@423))))
(let (($generated@@425 ($generated@@373 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@372 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@371 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@374 (type $generated@@428))))
(= (type ($generated@@427 $generated@@428)) ($generated@@97 $generated@@429 $generated@@4)))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@374 (type $generated@@430))))
(let (($generated@@432 ($generated@@373 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@372 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@371 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@431) ($generated@@0 ($generated@@102 ($generated@@427 $generated@@430) $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@427 $generated@@430))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) $generated@@81) (= (type $generated@@435) $generated@@154)) (= (type $generated@@436) $generated@@86)) (or ($generated@@268 ($generated@@266 $generated@@435) ($generated@@266 $generated@@436)) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@436 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@435)) (=> ($generated@@299 $generated@@436) (let (($generated@@437 ($generated@@322 $generated@@436)))
($generated@@268 ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@437)))) (=> (=> (< 0 ($generated@@165 $generated@@435)) (ite ($generated@@299 $generated@@436) (let (($generated@@438 ($generated@@322 $generated@@436)))
($generated@@269 ($generated@@80 $generated@@434) ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@438)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@435)) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@153 $generated@@439 $generated@@435)) ($generated@@268 $generated@@439 $generated@@436))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) $generated@@439 $generated@@436))
))))) (= ($generated@@269 ($generated@@80 $generated@@434) ($generated@@266 $generated@@435) ($generated@@266 $generated@@436))  (and (=> (< 0 ($generated@@165 $generated@@435)) (ite ($generated@@299 $generated@@436) (let (($generated@@440 ($generated@@322 $generated@@436)))
($generated@@269 ($generated@@80 $generated@@434) ($generated@@163 $generated@@435 ($generated@@164 1)) $generated@@440)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@435)) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@154) ($generated@@153 $generated@@441 $generated@@435)) ($generated@@269 ($generated@@80 $generated@@434) $generated@@441 $generated@@436))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) $generated@@441 $generated@@436))
)))))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@80 $generated@@434) ($generated@@266 $generated@@435) ($generated@@266 $generated@@436)))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@443) $generated@@70)) (= ($generated@@161 $generated@@442 ($generated@@188 $generated@@443)) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@154) (< 0 ($generated ($generated@@102 $generated@@442 $generated@@444)))) ($generated@@250 $generated@@444 $generated@@443))
 :pattern ( ($generated@@102 $generated@@442 $generated@@444))
))))
 :pattern ( ($generated@@161 $generated@@442 ($generated@@188 $generated@@443)))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@154) (= (type $generated@@446) $generated@@154)) (or (or ($generated@@153 $generated@@445 $generated@@446) (= $generated@@445 $generated@@446)) ($generated@@153 $generated@@446 $generated@@445)))
 :pattern ( ($generated@@153 $generated@@445 $generated@@446) ($generated@@153 $generated@@446 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@448) $generated@@70)) (= (type $generated@@449) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@447 ($generated@@275 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@102 $generated@@447 $generated@@450))) ($generated@@292 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@102 $generated@@447 $generated@@450))
))))
 :pattern ( ($generated@@95 $generated@@447 ($generated@@275 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (= (type $generated@@451) ($generated@@97 $generated@@154 $generated@@4)) (= (type $generated@@452) $generated@@70)) (= (type $generated@@453) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@451 ($generated@@280 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@154) ($generated@@0 ($generated@@102 $generated@@451 $generated@@454))) ($generated@@292 $generated@@454 $generated@@452 $generated@@453))
 :pattern ( ($generated@@102 $generated@@451 $generated@@454))
))))
 :pattern ( ($generated@@95 $generated@@451 ($generated@@280 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(= ($generated ($generated@@102 ($generated@@347 $generated@@456) $generated@@455)) 0))
 :pattern ( (let (($generated@@456 (type $generated@@455)))
($generated@@102 ($generated@@347 $generated@@456) $generated@@455)))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) ($generated@@97 $generated@@154 $generated@@4))
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@356 (type $generated@@460))))
(let (($generated@@462 ($generated@@355 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460)) ($generated@@97 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@458 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@464) $generated@@154)) (= ($generated@@0 ($generated@@102 ($generated@@457 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@102 ($generated@@352 $generated@@463) ($generated@@180 ($generated@@395 $generated@@86 $generated@@464)))) (= ($generated@@102 ($generated@@458 $generated@@463) ($generated@@180 ($generated@@395 $generated@@86 $generated@@464))) ($generated@@181 ($generated@@395 $generated@@86 $generated@@464))))))
 :pattern ( ($generated@@102 ($generated@@457 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@97 $generated@@154 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@374 (type $generated@@468))))
(let (($generated@@470 ($generated@@373 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@97 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@472) $generated@@154)) (= ($generated@@0 ($generated@@102 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@102 ($generated@@370 $generated@@471) ($generated@@180 ($generated@@395 $generated@@86 $generated@@472)))) (= ($generated@@102 ($generated@@466 $generated@@471) ($generated@@180 ($generated@@395 $generated@@86 $generated@@472))) ($generated@@181 ($generated@@395 $generated@@86 $generated@@472))))))
 :pattern ( ($generated@@102 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@355 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@354 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@102 ($generated@@416 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@102 ($generated@@352 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@102 ($generated@@458 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@473) $generated@@477))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@102 ($generated@@416 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(let (($generated@@481 ($generated@@373 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@372 $generated@@481 $generated@@480)) (= ($generated@@0 ($generated@@102 ($generated@@427 $generated@@478) $generated@@479)) (exists (($generated@@482 T@U) ) (!  (and (= (type $generated@@482) $generated@@481) (and ($generated@@0 ($generated@@102 ($generated@@370 $generated@@478) $generated@@482)) (= $generated@@479 ($generated@@102 ($generated@@466 $generated@@478) $generated@@482))))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@478) $generated@@482))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@478) $generated@@482))
))))))
 :pattern ( ($generated@@102 ($generated@@427 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= (type $generated@@489) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@486) $generated@@490))) (and ($generated@@292 ($generated@@102 ($generated@@458 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@292 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@486) $generated@@490))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@95 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@494) $generated@@498))) (and ($generated@@292 ($generated@@102 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@292 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@95 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@499) $generated@@86) (= (type $generated@@500) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@258 $generated@@500)) (= ($generated@@95 ($generated@@85 $generated@@499) $generated@@257 $generated@@500) ($generated@@95 $generated@@499 $generated@@257 $generated@@500)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@499) $generated@@257 $generated@@500))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@81) (= (type $generated@@502) $generated@@154)) (= (type $generated@@503) $generated@@86)) (or ($generated@@268 $generated@@502 $generated@@503) (and (not (= 2 $generated@@78)) ($generated@@161 $generated@@503 $generated@@257)))) (and (and (=> (< 0 ($generated@@165 $generated@@502)) (=> ($generated@@299 $generated@@503) (let (($generated@@504 ($generated@@322 $generated@@503)))
($generated@@268 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@504)))) (=> (=> (< 0 ($generated@@165 $generated@@502)) (ite ($generated@@299 $generated@@503) (let (($generated@@505 ($generated@@322 $generated@@503)))
($generated@@269 $generated@@501 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@505)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@502)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@154) ($generated@@153 $generated@@506 $generated@@502)) ($generated@@268 $generated@@506 $generated@@503))
 :pattern ( ($generated@@269 $generated@@501 $generated@@506 $generated@@503))
))))) (= ($generated@@269 ($generated@@80 $generated@@501) $generated@@502 $generated@@503)  (and (=> (< 0 ($generated@@165 $generated@@502)) (ite ($generated@@299 $generated@@503) (let (($generated@@507 ($generated@@322 $generated@@503)))
($generated@@269 $generated@@501 ($generated@@163 $generated@@502 ($generated@@164 1)) $generated@@507)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@502)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@153 $generated@@508 $generated@@502)) ($generated@@269 $generated@@501 $generated@@508 $generated@@503))
 :pattern ( ($generated@@269 $generated@@501 $generated@@508 $generated@@503))
)))))))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@501) $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@86) ($generated@@161 $generated@@509 $generated@@257)) (or ($generated@@299 $generated@@509) ($generated@@287 $generated@@509)))
 :pattern ( ($generated@@287 $generated@@509) ($generated@@161 $generated@@509 $generated@@257))
 :pattern ( ($generated@@299 $generated@@509) ($generated@@161 $generated@@509 $generated@@257))
)))
(assert (forall (($generated@@511 T@T) ) (! (= (type ($generated@@510 $generated@@511)) ($generated@@97 $generated@@511 $generated@@4))
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@374 (type $generated@@512))))
(let (($generated@@514 ($generated@@373 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@372 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@371 $generated@@514 $generated@@513)) (= ($generated@@370 $generated@@512) ($generated@@510 $generated@@514))))))
 :pattern ( ($generated@@370 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@374 (type $generated@@515))))
(let (($generated@@517 ($generated@@373 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@372 $generated@@517 $generated@@516)) (= (= $generated@@515 ($generated@@371 $generated@@517 $generated@@516)) (= ($generated@@427 $generated@@515) ($generated@@510 $generated@@516))))))
 :pattern ( ($generated@@427 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@374 (type $generated@@518))))
(let (($generated@@520 ($generated@@373 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@372 $generated@@520 $generated@@519)) (= (= $generated@@518 ($generated@@371 $generated@@520 $generated@@519)) (= ($generated@@465 $generated@@518) ($generated@@510 $generated@@154))))))
 :pattern ( ($generated@@465 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@356 (type $generated@@521))))
(let (($generated@@523 ($generated@@355 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@354 $generated@@523 $generated@@522)) (or (= $generated@@521 ($generated@@353 $generated@@523 $generated@@522)) (exists (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (and (and (= (type $generated@@524) $generated@@154) (= (type $generated@@525) $generated@@154)) ($generated@@0 ($generated@@102 ($generated@@457 $generated@@521) ($generated@@339 ($generated@@249 $generated@@524 $generated@@525)))))
 :no-pattern (type $generated@@524)
 :no-pattern (type $generated@@525)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
))))))
 :pattern ( ($generated@@457 $generated@@521))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@374 (type $generated@@526))))
(let (($generated@@528 ($generated@@373 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@372 $generated@@528 $generated@@527)) (or (= $generated@@526 ($generated@@371 $generated@@528 $generated@@527)) (exists (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (and (and (= (type $generated@@529) $generated@@154) (= (type $generated@@530) $generated@@154)) ($generated@@0 ($generated@@102 ($generated@@465 $generated@@526) ($generated@@339 ($generated@@249 $generated@@529 $generated@@530)))))
 :no-pattern (type $generated@@529)
 :no-pattern (type $generated@@530)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
))))))
 :pattern ( ($generated@@465 $generated@@526))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@154) ($generated@@250 $generated@@531 $generated@@46)) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@531)) $generated@@531) ($generated@@161 ($generated@@395 $generated@@2 $generated@@531) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@531 $generated@@46))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@154) ($generated@@250 $generated@@532 $generated@@47)) (and (= ($generated@@339 ($generated@@395 $generated@@3 $generated@@532)) $generated@@532) ($generated@@161 ($generated@@395 $generated@@3 $generated@@532) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@532 $generated@@47))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@154) ($generated@@250 $generated@@533 $generated@@44)) (and (= ($generated@@339 ($generated@@395 $generated@@4 $generated@@533)) $generated@@533) ($generated@@161 ($generated@@395 $generated@@4 $generated@@533) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@533 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@534) 21))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) ($generated@@250 $generated@@535 $generated@@45)) (and (= ($generated@@339 ($generated@@395 $generated@@534 $generated@@535)) $generated@@535) ($generated@@161 ($generated@@395 $generated@@534 $generated@@535) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@535 $generated@@45))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@250 ($generated@@339 $generated@@536) $generated@@537) ($generated@@161 $generated@@536 $generated@@537)))
 :pattern ( ($generated@@250 ($generated@@339 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@154) (<= 0 ($generated@@165 $generated@@538)))
 :pattern ( ($generated@@165 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@100 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@97 $generated@@540 $generated@@2)) (<= 0 ($generated@@346 $generated@@539))))
 :pattern ( ($generated@@346 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@313 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@312 $generated@@542)) (<= 0 ($generated@@311 $generated@@541))))
 :pattern ( ($generated@@311 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@70) (= (type $generated@@546) $generated@@70)) (= ($generated@@543 ($generated@@483 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@483 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= ($generated@@547 ($generated@@483 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@483 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= ($generated@@93 ($generated@@483 $generated@@551 $generated@@552)) $generated@@58))
 :pattern ( ($generated@@483 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@70) (= (type $generated@@556) $generated@@70)) (= ($generated@@553 ($generated@@491 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@491 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@70) (= (type $generated@@560) $generated@@70)) (= ($generated@@557 ($generated@@491 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@491 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@70) (= (type $generated@@562) $generated@@70)) (= ($generated@@93 ($generated@@491 $generated@@561 $generated@@562)) $generated@@59))
 :pattern ( ($generated@@491 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (= ($generated@@186 ($generated@@249 $generated@@563 $generated@@564)) $generated@@62))
 :pattern ( ($generated@@249 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= ($generated@@565 ($generated@@173 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@173 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@70)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (= ($generated@@569 ($generated@@173 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@173 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@154)) (= ($generated@@180 ($generated@@249 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@249 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@154)) (= ($generated@@181 ($generated@@249 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@249 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@81)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) $generated@@81) (= ($generated@@79 $generated@@579 $generated@@580) ($generated@@79 $generated@@270 $generated@@580)))
 :pattern ( ($generated@@79 ($generated@@577 $generated@@579) $generated@@580))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) $generated@@70)
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ($generated@@585 Int) ) (! (let (($generated@@586 ($generated@@313 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584 $generated@@585)) $generated@@586))
 :pattern ( ($generated@@582 $generated@@584 $generated@@585))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@312 $generated@@154)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@587 ($generated@@581 $generated@@588) $generated@@589) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@311 $generated@@587))) ($generated@@292 ($generated@@582 $generated@@587 $generated@@590) $generated@@588 $generated@@589))
 :pattern ( ($generated@@582 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@95 $generated@@587 ($generated@@581 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@591 ($generated@@96 $generated@@592)) $generated@@592)
 :pattern ( ($generated@@96 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@70)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@70) (= ($generated@@593 ($generated@@275 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@275 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@70) (= ($generated@@93 ($generated@@275 $generated@@596)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@70) (= ($generated@@597 ($generated@@280 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@280 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@70) (= ($generated@@93 ($generated@@280 $generated@@600)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@70)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@70) (= ($generated@@601 ($generated@@188 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@188 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@70) (= ($generated@@93 ($generated@@188 $generated@@604)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@70)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@70) (= ($generated@@605 ($generated@@581 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@581 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@70) (= ($generated@@93 ($generated@@581 $generated@@608)) $generated@@57))
 :pattern ( ($generated@@581 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@86) (= ($generated@@186 ($generated@@85 $generated@@609)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@86) (= ($generated@@322 ($generated@@85 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@85 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
(= ($generated@@395 $generated@@612 ($generated@@339 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@339 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) $generated@@70)) (= ($generated@@161 $generated@@613 ($generated@@483 $generated@@614 $generated@@615)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@352 $generated@@613) $generated@@616))) (and ($generated@@250 ($generated@@102 ($generated@@458 $generated@@613) $generated@@616) $generated@@615) ($generated@@250 $generated@@616 $generated@@614)))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@613) $generated@@616))
 :pattern ( ($generated@@102 ($generated@@352 $generated@@613) $generated@@616))
))))
 :pattern ( ($generated@@161 $generated@@613 ($generated@@483 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) (= ($generated@@161 $generated@@617 ($generated@@491 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@154) ($generated@@0 ($generated@@102 ($generated@@370 $generated@@617) $generated@@620))) (and ($generated@@250 ($generated@@102 ($generated@@466 $generated@@617) $generated@@620) $generated@@619) ($generated@@250 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@102 ($generated@@466 $generated@@617) $generated@@620))
 :pattern ( ($generated@@102 ($generated@@370 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@161 $generated@@617 ($generated@@491 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@154) (= (type $generated@@622) $generated@@154)) (and (and (and (=> ($generated@@153 $generated@@621 $generated@@622) (not (= $generated@@621 $generated@@622))) (=> (and ($generated@@388 $generated@@621) (not ($generated@@388 $generated@@622))) ($generated@@153 $generated@@621 $generated@@622))) (=> (and ($generated@@388 $generated@@621) ($generated@@388 $generated@@622)) (= ($generated@@153 $generated@@621 $generated@@622) (< ($generated@@165 $generated@@621) ($generated@@165 $generated@@622))))) (=> (and ($generated@@153 $generated@@621 $generated@@622) ($generated@@388 $generated@@622)) ($generated@@388 $generated@@621))))
 :pattern ( ($generated@@153 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@154) (= (type $generated@@626) $generated@@154)) (< ($generated@@623 $generated@@625) ($generated@@624 ($generated@@249 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@249 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@154) (= (type $generated@@628) $generated@@154)) (< ($generated@@623 $generated@@628) ($generated@@624 ($generated@@249 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@249 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@629) $generated@@630) ($generated@@79 $generated@@629 $generated@@630)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@154) (= (type $generated@@632) $generated@@70)) (= (type $generated@@633) $generated@@70)) ($generated@@250 $generated@@631 ($generated@@483 $generated@@632 $generated@@633))) (and (= ($generated@@339 ($generated@@395 ($generated@@354 $generated@@154 $generated@@154) $generated@@631)) $generated@@631) ($generated@@161 ($generated@@395 ($generated@@354 $generated@@154 $generated@@154) $generated@@631) ($generated@@483 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@250 $generated@@631 ($generated@@483 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@154) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) $generated@@70)) ($generated@@250 $generated@@634 ($generated@@491 $generated@@635 $generated@@636))) (and (= ($generated@@339 ($generated@@395 ($generated@@372 $generated@@154 $generated@@154) $generated@@634)) $generated@@634) ($generated@@161 ($generated@@395 ($generated@@372 $generated@@154 $generated@@154) $generated@@634) ($generated@@491 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@250 $generated@@634 ($generated@@491 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@70) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@154)) ($generated@@250 $generated@@639 ($generated@@173 $generated@@637 $generated@@638))) (and (= ($generated@@339 ($generated@@395 $generated@@86 $generated@@639)) $generated@@639) ($generated@@161 ($generated@@395 $generated@@86 $generated@@639) ($generated@@173 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@250 $generated@@639 ($generated@@173 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@86) (< ($generated@@624 $generated@@640) ($generated@@624 ($generated@@85 $generated@@640))))
 :pattern ( ($generated@@85 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (not ($generated@@0 ($generated@@102 ($generated@@510 $generated@@642) $generated@@641))))
 :pattern ( (let (($generated@@642 (type $generated@@641)))
($generated@@102 ($generated@@510 $generated@@642) $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@75)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@70) (= (type $generated@@646) $generated@@70)) (and (= ($generated@@93 ($generated@@173 $generated@@645 $generated@@646)) $generated@@63) (= ($generated@@643 ($generated@@173 $generated@@645 $generated@@646)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@86) (= ($generated@@623 ($generated@@339 $generated@@647)) ($generated@@624 $generated@@647)))
 :pattern ( ($generated@@623 ($generated@@339 $generated@@647)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@81) (= (type $generated@@649) $generated@@154)) (= (type $generated@@650) $generated@@86)) (or ($generated@@400 ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@650 $generated@@257)))) (and (=> (not (= ($generated@@266 $generated@@649) ($generated@@266 ($generated@@164 0)))) (and (=> ($generated@@0 ($generated@@266 ($generated@@11 (< 0 ($generated@@165 ($generated@@266 $generated@@649)))))) (=> ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@299 ($generated@@266 $generated@@650))))) (let (($generated@@651 ($generated@@266 ($generated@@322 ($generated@@266 $generated@@650)))))
($generated@@400 ($generated@@266 ($generated@@163 $generated@@649 ($generated@@164 1))) $generated@@651)))) (=> (not ($generated@@0 ($generated@@266 ($generated@@11 (< 0 ($generated@@165 ($generated@@266 $generated@@649))))))) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@154) ($generated@@153 $generated@@652 $generated@@649)) ($generated@@400 $generated@@652 ($generated@@266 $generated@@650)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) $generated@@652 $generated@@650))
 :pattern ( ($generated@@153 $generated@@652 $generated@@649))
))))) (= ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)) (ite (= ($generated@@266 $generated@@649) ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 ($generated@@266 $generated@@649))) (ite ($generated@@299 ($generated@@266 $generated@@650)) ($generated@@0 (let (($generated@@653 ($generated@@266 ($generated@@322 ($generated@@266 $generated@@650)))))
($generated@@266 ($generated@@11 ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 ($generated@@163 $generated@@649 ($generated@@164 1))) $generated@@653))))) true) (forall (($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@154) true) ($generated@@153 $generated@@654 $generated@@649)) ($generated@@335 ($generated@@80 $generated@@648) $generated@@654 ($generated@@266 $generated@@650)))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) $generated@@654 $generated@@650))
 :pattern ( ($generated@@153 $generated@@654 $generated@@649))
)))))))
 :weight 3
 :pattern ( ($generated@@335 ($generated@@80 $generated@@648) ($generated@@266 $generated@@649) ($generated@@266 $generated@@650)))
))))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@154) ($generated@@250 $generated@@655 ($generated@@96 0))) (and (= ($generated@@339 ($generated@@395 $generated@@2 $generated@@655)) $generated@@655) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@655) ($generated@@96 0))))
 :pattern ( ($generated@@250 $generated@@655 ($generated@@96 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@154) (= (type $generated@@657) $generated@@70)) ($generated@@250 $generated@@656 ($generated@@275 $generated@@657))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@656)) $generated@@656) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@656) ($generated@@275 $generated@@657))))
 :pattern ( ($generated@@250 $generated@@656 ($generated@@275 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@154) (= (type $generated@@659) $generated@@70)) ($generated@@250 $generated@@658 ($generated@@280 $generated@@659))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@658)) $generated@@658) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@4) $generated@@658) ($generated@@280 $generated@@659))))
 :pattern ( ($generated@@250 $generated@@658 ($generated@@280 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@154) (= (type $generated@@661) $generated@@70)) ($generated@@250 $generated@@660 ($generated@@188 $generated@@661))) (and (= ($generated@@339 ($generated@@395 ($generated@@97 $generated@@154 $generated@@2) $generated@@660)) $generated@@660) ($generated@@161 ($generated@@395 ($generated@@97 $generated@@154 $generated@@2) $generated@@660) ($generated@@188 $generated@@661))))
 :pattern ( ($generated@@250 $generated@@660 ($generated@@188 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@154) (= (type $generated@@663) $generated@@70)) ($generated@@250 $generated@@662 ($generated@@581 $generated@@663))) (and (= ($generated@@339 ($generated@@395 ($generated@@312 $generated@@154) $generated@@662)) $generated@@662) ($generated@@161 ($generated@@395 ($generated@@312 $generated@@154) $generated@@662) ($generated@@581 $generated@@663))))
 :pattern ( ($generated@@250 $generated@@662 ($generated@@581 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@154) ($generated@@388 $generated@@664)) (= $generated@@664 ($generated@@164 ($generated@@165 $generated@@664))))
 :pattern ( ($generated@@165 $generated@@664))
 :pattern ( ($generated@@388 $generated@@664))
)))
(assert (= ($generated@@93 $generated@@158) $generated@@61))
(assert (= ($generated@@643 $generated@@158) $generated@@67))
(assert (= ($generated@@93 $generated@@257) $generated@@65))
(assert (= ($generated@@643 $generated@@257) $generated@@69))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@97 $generated@@154 $generated@@2)) (= (type $generated@@666) $generated@@70)) (= (type $generated@@667) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@665 ($generated@@188 $generated@@666) $generated@@667) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@154) (< 0 ($generated ($generated@@102 $generated@@665 $generated@@668)))) ($generated@@292 $generated@@668 $generated@@666 $generated@@667))
 :pattern ( ($generated@@102 $generated@@665 $generated@@668))
))))
 :pattern ( ($generated@@95 $generated@@665 ($generated@@188 $generated@@666) $generated@@667))
)))
(assert (= $generated@@84 ($generated@@266 $generated@@84)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@669) $generated@@154) (= (type $generated@@670) $generated@@154)) (and ($generated@@388 $generated@@670) (<= ($generated@@165 $generated@@670) ($generated@@165 $generated@@669)))) (or (and (= $generated@@670 ($generated@@164 0)) (= ($generated@@163 $generated@@669 $generated@@670) $generated@@669)) (and (not (= $generated@@670 ($generated@@164 0))) ($generated@@153 ($generated@@163 $generated@@669 $generated@@670) $generated@@669))))
 :pattern ( ($generated@@163 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@86) (= (type $generated@@672) $generated@@70)) (= (type $generated@@673) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@673) (and ($generated@@172 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@70) ($generated@@95 $generated@@671 ($generated@@173 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@95 $generated@@671 ($generated@@173 $generated@@672 $generated@@674) $generated@@673))
))))) ($generated@@292 ($generated@@180 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@292 ($generated@@180 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@86) (= (type $generated@@676) $generated@@70)) (= (type $generated@@677) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@677) (and ($generated@@172 $generated@@675) (exists (($generated@@678 T@U) ) (!  (and (= (type $generated@@678) $generated@@70) ($generated@@95 $generated@@675 ($generated@@173 $generated@@678 $generated@@676) $generated@@677))
 :pattern ( ($generated@@95 $generated@@675 ($generated@@173 $generated@@678 $generated@@676) $generated@@677))
))))) ($generated@@292 ($generated@@181 $generated@@675) $generated@@676 $generated@@677))
 :pattern ( ($generated@@292 ($generated@@181 $generated@@675) $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@86) (= (type $generated@@680) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@258 $generated@@680) (and ($generated@@299 $generated@@679) ($generated@@95 $generated@@679 $generated@@257 $generated@@680)))) ($generated@@95 ($generated@@322 $generated@@679) $generated@@257 $generated@@680))
 :pattern ( ($generated@@95 ($generated@@322 $generated@@679) $generated@@257 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@154) (= (type $generated@@682) $generated@@154)) (= ($generated@@249 ($generated@@266 $generated@@681) ($generated@@266 $generated@@682)) ($generated@@266 ($generated@@249 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@249 ($generated@@266 $generated@@681) ($generated@@266 $generated@@682)))
)))
(assert (forall (($generated@@683 Int) ) (! (= ($generated@@339 ($generated@@8 ($generated@@83 $generated@@683))) ($generated@@266 ($generated@@339 ($generated@@8 $generated@@683))))
 :pattern ( ($generated@@339 ($generated@@8 ($generated@@83 $generated@@683))))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@86) (= ($generated@@85 ($generated@@266 $generated@@684)) ($generated@@266 ($generated@@85 $generated@@684))))
 :pattern ( ($generated@@85 ($generated@@266 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (! (= ($generated@@339 ($generated@@266 $generated@@685)) ($generated@@266 ($generated@@339 $generated@@685)))
 :pattern ( ($generated@@339 ($generated@@266 $generated@@685)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@81) (= (type $generated@@687) $generated@@154)) (= (type $generated@@688) $generated@@86)) (or ($generated@@400 $generated@@687 $generated@@688) (and (not (= 1 $generated@@78)) ($generated@@161 $generated@@688 $generated@@257)))) (and (=> (not (= $generated@@687 ($generated@@266 ($generated@@164 0)))) (and (=> (< 0 ($generated@@165 $generated@@687)) (=> ($generated@@299 $generated@@688) (let (($generated@@689 ($generated@@322 $generated@@688)))
($generated@@400 ($generated@@163 $generated@@687 ($generated@@164 1)) $generated@@689)))) (=> (not (< 0 ($generated@@165 $generated@@687))) (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@154) ($generated@@153 $generated@@690 $generated@@687)) ($generated@@400 $generated@@690 $generated@@688))
 :pattern ( ($generated@@335 $generated@@686 $generated@@690 $generated@@688))
 :pattern ( ($generated@@153 $generated@@690 $generated@@687))
))))) (= ($generated@@335 ($generated@@80 $generated@@686) $generated@@687 $generated@@688) (ite (= $generated@@687 ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 $generated@@687)) (ite ($generated@@299 $generated@@688) (let (($generated@@691 ($generated@@322 $generated@@688)))
($generated@@335 $generated@@686 ($generated@@163 $generated@@687 ($generated@@164 1)) $generated@@691)) true) (forall (($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@154) true) ($generated@@153 $generated@@692 $generated@@687)) ($generated@@335 $generated@@686 $generated@@692 $generated@@688))
 :pattern ( ($generated@@335 $generated@@686 $generated@@692 $generated@@688))
 :pattern ( ($generated@@153 $generated@@692 $generated@@687))
)))))))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@686) $generated@@687 $generated@@688))
))))
(assert (forall (($generated@@693 T@U) ) (! (let (($generated@@694 ($generated@@313 (type $generated@@693))))
 (=> (and (= (type $generated@@693) ($generated@@312 $generated@@694)) (= ($generated@@311 $generated@@693) 0)) (= $generated@@693 ($generated@@310 $generated@@694))))
 :pattern ( ($generated@@311 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 (type $generated@@696)))
 (=> (and (and (= (type $generated@@695) ($generated@@97 $generated@@698 $generated@@2)) (= (type $generated@@697) $generated@@2)) (<= 0 ($generated $generated@@697))) (= ($generated@@346 ($generated@@103 $generated@@695 $generated@@696 $generated@@697)) (+ (- ($generated@@346 $generated@@695) ($generated ($generated@@102 $generated@@695 $generated@@696))) ($generated $generated@@697)))))
 :pattern ( ($generated@@346 ($generated@@103 $generated@@695 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@700) $generated@@2)) ($generated@@95 $generated@@700 $generated@@46 $generated@@699))
 :pattern ( ($generated@@95 $generated@@700 $generated@@46 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@702) $generated@@3)) ($generated@@95 $generated@@702 $generated@@47 $generated@@701))
 :pattern ( ($generated@@95 $generated@@702 $generated@@47 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@704) $generated@@4)) ($generated@@95 $generated@@704 $generated@@44 $generated@@703))
 :pattern ( ($generated@@95 $generated@@704 $generated@@44 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@706) $generated@@534)) ($generated@@95 $generated@@706 $generated@@45 $generated@@705))
 :pattern ( ($generated@@95 $generated@@706 $generated@@45 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@708) $generated@@154)) ($generated@@95 $generated@@708 $generated@@48 $generated@@707))
 :pattern ( ($generated@@95 $generated@@708 $generated@@48 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@312 $generated@@154)) (= (type $generated@@710) $generated@@70)) (= ($generated@@161 $generated@@709 ($generated@@581 $generated@@710)) (forall (($generated@@711 Int) ) (!  (=> (and (<= 0 $generated@@711) (< $generated@@711 ($generated@@311 $generated@@709))) ($generated@@250 ($generated@@582 $generated@@709 $generated@@711) $generated@@710))
 :pattern ( ($generated@@582 $generated@@709 $generated@@711))
))))
 :pattern ( ($generated@@161 $generated@@709 ($generated@@581 $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@81) (= (type $generated@@713) $generated@@154)) (= (type $generated@@714) $generated@@86)) (= ($generated@@269 $generated@@712 $generated@@713 $generated@@714) ($generated@@269 $generated@@270 $generated@@713 $generated@@714)))
 :pattern ( ($generated@@269 ($generated@@577 $generated@@712) $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@81) (= (type $generated@@716) $generated@@154)) (= (type $generated@@717) $generated@@86)) (= ($generated@@335 $generated@@715 $generated@@716 $generated@@717) ($generated@@335 $generated@@270 $generated@@716 $generated@@717)))
 :pattern ( ($generated@@335 ($generated@@577 $generated@@715) $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 Int) ) (!  (=> (= (type $generated@@719) ($generated@@312 $generated@@154)) (=> (and (<= 0 $generated@@720) (< $generated@@720 ($generated@@311 $generated@@719))) (< ($generated@@624 ($generated@@395 $generated@@86 ($generated@@582 $generated@@719 $generated@@720))) ($generated@@718 $generated@@719))))
 :pattern ( ($generated@@624 ($generated@@395 $generated@@86 ($generated@@582 $generated@@719 $generated@@720))))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (and (= (type $generated@@721) ($generated@@354 $generated@@154 $generated@@154)) (= (type $generated@@722) $generated@@70)) (= (type $generated@@723) $generated@@70)) ($generated@@161 $generated@@721 ($generated@@483 $generated@@722 $generated@@723))) (and (and ($generated@@161 ($generated@@352 $generated@@721) ($generated@@275 $generated@@722)) ($generated@@161 ($generated@@416 $generated@@721) ($generated@@275 $generated@@723))) ($generated@@161 ($generated@@457 $generated@@721) ($generated@@275 ($generated@@173 $generated@@722 $generated@@723)))))
 :pattern ( ($generated@@161 $generated@@721 ($generated@@483 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) ($generated@@372 $generated@@154 $generated@@154)) (= (type $generated@@725) $generated@@70)) (= (type $generated@@726) $generated@@70)) ($generated@@161 $generated@@724 ($generated@@491 $generated@@725 $generated@@726))) (and (and ($generated@@161 ($generated@@370 $generated@@724) ($generated@@280 $generated@@725)) ($generated@@161 ($generated@@427 $generated@@724) ($generated@@280 $generated@@726))) ($generated@@161 ($generated@@465 $generated@@724) ($generated@@280 ($generated@@173 $generated@@725 $generated@@726)))))
 :pattern ( ($generated@@161 $generated@@724 ($generated@@491 $generated@@725 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@2) ($generated@@161 $generated@@727 $generated@@46))
 :pattern ( ($generated@@161 $generated@@727 $generated@@46))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@3) ($generated@@161 $generated@@728 $generated@@47))
 :pattern ( ($generated@@161 $generated@@728 $generated@@47))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@4) ($generated@@161 $generated@@729 $generated@@44))
 :pattern ( ($generated@@161 $generated@@729 $generated@@44))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@534) ($generated@@161 $generated@@730 $generated@@45))
 :pattern ( ($generated@@161 $generated@@730 $generated@@45))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@154) ($generated@@161 $generated@@731 $generated@@48))
 :pattern ( ($generated@@161 $generated@@731 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@732 () Int)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 (T@U) Bool)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@734) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@735) $generated@@154)) (= (type $generated@@736) $generated@@86)) (= (type $generated@@738) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@739) $generated@@86)) (= (type $generated@@741) ($generated@@195 $generated@@98 $generated@@4))) (= (type $generated@@742) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@743  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158) (=> (= $generated@@733 (ite (< $generated@@732 0) 0 $generated@@732)) (=> (and ($generated@@95 ($generated@@8 $generated@@733) $generated@@158 $generated@@734) ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732))) (=> (and (and ($generated@@95 $generated@@735 $generated@@48 $generated@@734) (= $generated@@736 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (and ($generated@@95 $generated@@736 $generated@@257 $generated@@734) ($generated@@267 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))))) (=> (and (and (and ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732)) ($generated@@267 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@267 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))) (or ($generated@@265 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))) (=> ($generated@@268 $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))) ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732)))))))))))))
(let (($generated@@744  (=> (and (<= 0 $generated@@732) (= (ControlFlow 0 5) 2)) $generated@@743)))
(let (($generated@@745  (=> (and (< $generated@@732 0) (= (ControlFlow 0 4) 2)) $generated@@743)))
(let (($generated@@746  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (ite (< $generated@@732 0) 0 $generated@@732)) $generated@@158) (=> (= $generated@@737 (ite (< $generated@@732 0) 0 $generated@@732)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@737) $generated@@158 $generated@@738) ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732))) (and ($generated@@82 (ite (< $generated@@732 0) 0 $generated@@732)) (= $generated@@739 ($generated@@79 ($generated@@80 $generated@@270) (ite (< $generated@@732 0) 0 $generated@@732))))) (=> (and (and (and (and ($generated@@258 $generated@@734) ($generated@@740 $generated@@734)) ($generated@@268 $generated@@735 $generated@@739)) (and (and ($generated@@268 $generated@@735 $generated@@739) (and ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 $generated@@739) (and (=> (< 0 ($generated@@165 $generated@@735)) (ite ($generated@@299 $generated@@739) (let (($generated@@747 ($generated@@322 $generated@@739)))
($generated@@269 ($generated@@80 $generated@@270) ($generated@@163 $generated@@735 ($generated@@164 1)) $generated@@747)) true)) (=> (= ($generated@@83 0) ($generated@@165 $generated@@735)) (forall (($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@748) $generated@@154) ($generated@@153 $generated@@748 $generated@@735)) ($generated@@269 ($generated@@80 $generated@@270) $generated@@748 $generated@@739))
 :pattern ( ($generated@@269 ($generated@@80 $generated@@270) $generated@@748 $generated@@739))
)))))) ($generated@@400 $generated@@735 $generated@@739))) (and (and (and ($generated@@400 $generated@@735 $generated@@739) (and ($generated@@335 ($generated@@80 $generated@@270) $generated@@735 $generated@@739) (ite (= $generated@@735 ($generated@@266 ($generated@@164 0))) true (ite (< 0 ($generated@@165 $generated@@735)) (ite ($generated@@299 $generated@@739) (let (($generated@@749 ($generated@@322 $generated@@739)))
($generated@@335 ($generated@@80 $generated@@270) ($generated@@163 $generated@@735 ($generated@@164 1)) $generated@@749)) true) (forall (($generated@@750 T@U) ) (!  (=> (and (and (= (type $generated@@750) $generated@@154) true) ($generated@@153 $generated@@750 $generated@@735)) ($generated@@335 ($generated@@80 $generated@@270) $generated@@750 $generated@@739))
 :pattern ( ($generated@@335 ($generated@@80 $generated@@270) $generated@@750 $generated@@739))
 :pattern ( ($generated@@153 $generated@@750 $generated@@735))
)))))) ($generated@@267 $generated@@735 $generated@@739)) (and (and ($generated@@267 $generated@@735 $generated@@739) (and (and ($generated@@265 $generated@@735 $generated@@739) ($generated@@161 $generated@@739 $generated@@257)) ($generated@@269 ($generated@@80 $generated@@270) $generated@@735 $generated@@739))) (= $generated@@738 $generated@@734)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@745) (=> (= (ControlFlow 0 6) 5) $generated@@744)))))))))
(let (($generated@@751  (=> (and (<= 0 $generated@@732) (= (ControlFlow 0 9) 6)) $generated@@746)))
(let (($generated@@752  (=> (and (< $generated@@732 0) (= (ControlFlow 0 8) 6)) $generated@@746)))
(let (($generated@@753  (=> (= $generated@@741 ($generated@@194 $generated@@742 $generated@@738 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@752) (=> (= (ControlFlow 0 10) 9) $generated@@751)))))
(let (($generated@@754  (=> (and (and ($generated@@258 $generated@@738) ($generated@@740 $generated@@738)) (and (= 5 $generated@@78) (= (ControlFlow 0 11) 10))) $generated@@753)))
$generated@@754)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (Int) Bool)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U Int T@U) Bool)
(declare-fun $generated@@154 (Int T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@260 (T@U Int T@U) Bool)
(declare-fun $generated@@261 (Int T@U) Bool)
(declare-fun $generated@@265 (Int T@U) Bool)
(declare-fun $generated@@266 (Int T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 () T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@680 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (! (= (type ($generated@@79 $generated@@87 $generated@@88)) $generated@@86)
 :pattern ( ($generated@@79 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@80 $generated@@89)) $generated@@81)
 :pattern ( ($generated@@80 $generated@@89))
))) (= (type $generated@@84) $generated@@86)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@85 $generated@@90)) $generated@@86)
 :pattern ( ($generated@@85 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (= (type $generated@@91) $generated@@81) (or ($generated@@82 $generated@@92) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@92)))) (and (=> (not (= $generated@@92 ($generated@@83 0))) ($generated@@82 (- $generated@@92 1))) (= ($generated@@79 ($generated@@80 $generated@@91) $generated@@92) (ite (= $generated@@92 ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@79 $generated@@91 (- $generated@@92 1)))))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@71)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@73 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert  (and (= (type $generated@@156) $generated@@70) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@86)
 :pattern ( ($generated@@158 $generated@@159))
))))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@160 T@U) ($generated@@161 Int) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@162) $generated@@86)) (or ($generated@@154 $generated@@161 $generated@@162) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@161) ($generated@@155 $generated@@162 $generated@@156))))) (and (=> (not (= $generated@@161 ($generated@@83 0))) (=> ($generated@@157 $generated@@162) (let (($generated@@163 ($generated@@158 $generated@@162)))
($generated@@154 (- $generated@@161 1) $generated@@163)))) (= ($generated@@153 ($generated@@80 $generated@@160) $generated@@161 $generated@@162) (ite (= $generated@@161 ($generated@@83 0)) true (ite ($generated@@157 $generated@@162) (let (($generated@@164 ($generated@@158 $generated@@162)))
($generated@@153 $generated@@160 (- $generated@@161 1) $generated@@164)) true)))))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@160) $generated@@161 $generated@@162))
))))
(assert (= (type $generated@@165) $generated@@70))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@155 $generated@@168 ($generated@@96 0)))
 :pattern ( ($generated@@155 $generated@@168 ($generated@@96 0)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@86)) ($generated@@155 $generated@@175 ($generated@@170 $generated@@173 $generated@@174))) ($generated@@169 $generated@@175))
 :pattern ( ($generated@@169 $generated@@175) ($generated@@155 $generated@@175 ($generated@@170 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 16) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@86) (= (type $generated@@183) $generated@@86)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@74)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (= ($generated@@184 $generated@@84) $generated@@66))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@155 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@155 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@98 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@98) (= (type $generated@@241) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@98)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@86)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@70) (= (type $generated@@252) $generated@@70)) (= (type $generated@@253) $generated@@179)) (= (type $generated@@254) $generated@@179)) (= ($generated@@155 ($generated@@247 $generated@@253 $generated@@254) ($generated@@170 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@155 ($generated@@247 $generated@@253 $generated@@254) ($generated@@170 $generated@@251 $generated@@252)))
)))
(assert ($generated@@155 $generated@@84 $generated@@156))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@97 $generated@@98 $generated@@99)) ($generated@@255 $generated@@256)) ($generated@@95 $generated@@84 $generated@@156 $generated@@256))
 :pattern ( ($generated@@95 $generated@@84 $generated@@156 $generated@@256))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@81) (= (type $generated@@259) $generated@@86)) (or ($generated@@154 $generated@@258 $generated@@259) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@258) ($generated@@155 $generated@@259 $generated@@156))))) true)
 :pattern ( ($generated@@153 $generated@@257 $generated@@258 $generated@@259))
))))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@81) (= (type $generated@@264) $generated@@86)) (or ($generated@@261 $generated@@263 $generated@@264) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@263) ($generated@@155 $generated@@264 $generated@@156))))) true)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263 $generated@@264))
))))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@267 Int) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@86) (or ($generated@@266 $generated@@267 $generated@@268) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@267) ($generated@@155 $generated@@268 $generated@@156))))) true)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@272 T@U) ($generated@@273 Int) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@81) (= (type $generated@@274) $generated@@86)) (or ($generated@@154 ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)) (and (not (= 1 $generated@@78)) (and (<= ($generated@@83 0) $generated@@273) ($generated@@155 $generated@@274 $generated@@156))))) (and (=> (not (= ($generated@@83 $generated@@273) ($generated@@83 0))) (=> ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@157 ($generated@@269 $generated@@274))))) (let (($generated@@275 ($generated@@269 ($generated@@158 ($generated@@269 $generated@@274)))))
($generated@@154 ($generated@@83 (- $generated@@273 1)) $generated@@275)))) (= ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)) (ite (= ($generated@@83 $generated@@273) ($generated@@83 0)) true (ite ($generated@@157 ($generated@@269 $generated@@274)) ($generated@@0 (let (($generated@@276 ($generated@@269 ($generated@@158 ($generated@@269 $generated@@274)))))
($generated@@269 ($generated@@11 ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 (- $generated@@273 1)) $generated@@276))))) true)))))
 :weight 3
 :pattern ( ($generated@@153 ($generated@@80 $generated@@272) ($generated@@83 $generated@@273) ($generated@@269 $generated@@274)))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@86) (= (type $generated@@278) $generated@@86)) (= ($generated@@176 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@176 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@86) (= (type $generated@@281) $generated@@86)) (= ($generated@@279 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@70)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@285) $generated@@70)) (= ($generated@@155 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@179) ($generated@@0 ($generated@@102 $generated@@284 $generated@@286))) ($generated@@248 $generated@@286 $generated@@285))
 :pattern ( ($generated@@102 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@155 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@70)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@290) $generated@@70)) (= ($generated@@155 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@179) ($generated@@0 ($generated@@102 $generated@@289 $generated@@291))) ($generated@@248 $generated@@291 $generated@@290))
 :pattern ( ($generated@@102 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@155 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@83 $generated@@292) $generated@@292)
 :pattern ( ($generated@@83 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@269 $generated@@293) $generated@@293)
 :pattern ( ($generated@@269 $generated@@293))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 Int) ) (!  (=> (and (and (= (type $generated@@294) $generated@@81) (= (type $generated@@295) $generated@@86)) (and ($generated@@155 $generated@@295 $generated@@156) (= $generated@@296 0))) ($generated@@260 $generated@@294 $generated@@296 $generated@@295))
 :pattern ( ($generated@@260 $generated@@294 $generated@@296 $generated@@295))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@86) (= (type $generated@@299) $generated@@86)) (and ($generated@@297 $generated@@298) ($generated@@297 $generated@@299))) (= ($generated@@279 $generated@@298 $generated@@299) true))
 :pattern ( ($generated@@279 $generated@@298 $generated@@299) ($generated@@297 $generated@@298))
 :pattern ( ($generated@@279 $generated@@298 $generated@@299) ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) $generated@@70)) (= (type $generated@@303) $generated@@179)) (= (type $generated@@304) $generated@@179)) (= (type $generated@@305) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@255 $generated@@305)) (= ($generated@@95 ($generated@@247 $generated@@303 $generated@@304) ($generated@@170 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@95 ($generated@@247 $generated@@303 $generated@@304) ($generated@@170 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@86) (= ($generated@@169 $generated@@306) (= ($generated@@184 $generated@@306) $generated@@62)))
 :pattern ( ($generated@@169 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@86) (= ($generated@@157 $generated@@307) (= ($generated@@184 $generated@@307) $generated@@64)))
 :pattern ( ($generated@@157 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@86) (= ($generated@@297 $generated@@308) (= ($generated@@184 $generated@@308) $generated@@66)))
 :pattern ( ($generated@@297 $generated@@308))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@309 T@U) ($generated@@310 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@81) (or ($generated@@82 ($generated@@83 $generated@@310)) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@310)))) (and (=> (not (= ($generated@@83 $generated@@310) ($generated@@83 0))) ($generated@@82 ($generated@@83 (- $generated@@310 1)))) (= ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 $generated@@310)) (ite (= ($generated@@83 $generated@@310) ($generated@@83 0)) $generated@@84 ($generated@@85 ($generated@@269 ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 (- $generated@@310 1)))))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@309) ($generated@@83 $generated@@310)))
))))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@86) ($generated@@169 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@179) (= (type $generated@@313) $generated@@179)) (= $generated@@311 ($generated@@247 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@169 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 18)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@86) ($generated@@297 $generated@@322)) (= $generated@@322 $generated@@84))
 :pattern ( ($generated@@297 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@86) ($generated@@157 $generated@@323)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@86) (= $generated@@323 ($generated@@85 $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@157 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@2) (= ($generated@@155 $generated@@325 $generated@@165) (<= ($generated@@83 0) ($generated $generated@@325))))
 :pattern ( ($generated@@155 $generated@@325 $generated@@165))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@81) (= (type $generated@@328) $generated@@86)) (= ($generated@@260 ($generated@@80 $generated@@326) $generated@@327 $generated@@328) ($generated@@260 $generated@@326 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@260 ($generated@@80 $generated@@326) $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 Int) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@81) (= (type $generated@@331) $generated@@86)) (= ($generated@@153 ($generated@@80 $generated@@329) $generated@@330 $generated@@331) ($generated@@153 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@153 ($generated@@80 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@179)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@70) (= (type $generated@@336) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@300 ($generated@@332 $generated@@334) $generated@@335 $generated@@336) ($generated@@95 $generated@@334 $generated@@335 $generated@@336)))
 :pattern ( ($generated@@300 ($generated@@332 $generated@@334) $generated@@335 $generated@@336))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@337 T@U) ($generated@@338 Int) ) (!  (=> (and (= (type $generated@@337) $generated@@81) (or ($generated@@82 $generated@@338) (and (not (= 1 $generated@@78)) (<= ($generated@@83 0) $generated@@338)))) ($generated@@155 ($generated@@79 $generated@@337 $generated@@338) $generated@@156))
 :pattern ( ($generated@@79 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@97 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@100 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@97 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@102 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@97 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@102 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@102 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@97 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@102 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@102 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@100 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@97 $generated@@382 $generated@@2)) (= ($generated@@187 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@102 $generated@@381 $generated@@383))) (<= ($generated ($generated@@102 $generated@@381 $generated@@383)) ($generated@@339 $generated@@381))))
 :pattern ( ($generated@@102 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@187 $generated@@381))
)))
(assert (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@179) ($generated@@248 $generated@@387 $generated@@165)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@387)) $generated@@387) ($generated@@155 ($generated@@384 $generated@@2 $generated@@387) $generated@@165)))
 :pattern ( ($generated@@248 $generated@@387 $generated@@165))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@179) ($generated@@248 $generated@@388 $generated@@156)) (and (= ($generated@@332 ($generated@@384 $generated@@86 $generated@@388)) $generated@@388) ($generated@@155 ($generated@@384 $generated@@86 $generated@@388) $generated@@156)))
 :pattern ( ($generated@@248 $generated@@388 $generated@@156))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@86) (= ($generated@@155 ($generated@@85 $generated@@389) $generated@@156) ($generated@@155 $generated@@389 $generated@@156)))
 :pattern ( ($generated@@155 ($generated@@85 $generated@@389) $generated@@156))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) $generated@@86) (= (type $generated@@391) $generated@@86)) (and ($generated@@157 $generated@@390) ($generated@@157 $generated@@391))) (= ($generated@@279 $generated@@390 $generated@@391) ($generated@@279 ($generated@@158 $generated@@390) ($generated@@158 $generated@@391))))
 :pattern ( ($generated@@279 $generated@@390 $generated@@391) ($generated@@157 $generated@@390))
 :pattern ( ($generated@@279 $generated@@390 $generated@@391) ($generated@@157 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@349 (type $generated@@392))))
(let (($generated@@394 ($generated@@348 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@347 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@346 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@345 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@349 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@97 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@349 (type $generated@@399))))
(let (($generated@@401 ($generated@@348 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@347 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@346 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@102 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@367 (type $generated@@403))))
(let (($generated@@405 ($generated@@366 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@365 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@364 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@363 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@367 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@97 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@367 (type $generated@@410))))
(let (($generated@@412 ($generated@@366 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@365 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@364 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@102 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@415) $generated@@70)) (= ($generated@@155 $generated@@414 ($generated@@186 $generated@@415)) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@179) (< 0 ($generated ($generated@@102 $generated@@414 $generated@@416)))) ($generated@@248 $generated@@416 $generated@@415))
 :pattern ( ($generated@@102 $generated@@414 $generated@@416))
))))
 :pattern ( ($generated@@155 $generated@@414 ($generated@@186 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@417 ($generated@@282 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@179) ($generated@@0 ($generated@@102 $generated@@417 $generated@@420))) ($generated@@300 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@102 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@95 $generated@@417 ($generated@@282 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@97 $generated@@179 $generated@@4)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@421 ($generated@@287 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@179) ($generated@@0 ($generated@@102 $generated@@421 $generated@@424))) ($generated@@300 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@102 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@95 $generated@@421 ($generated@@287 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(= ($generated ($generated@@102 ($generated@@340 $generated@@426) $generated@@425)) 0))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@102 ($generated@@340 $generated@@426) $generated@@425)))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@97 $generated@@179 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@349 (type $generated@@430))))
(let (($generated@@432 ($generated@@348 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@97 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@434) $generated@@179)) (= ($generated@@0 ($generated@@102 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@102 ($generated@@345 $generated@@433) ($generated@@177 ($generated@@384 $generated@@86 $generated@@434)))) (= ($generated@@102 ($generated@@428 $generated@@433) ($generated@@177 ($generated@@384 $generated@@86 $generated@@434))) ($generated@@178 ($generated@@384 $generated@@86 $generated@@434))))))
 :pattern ( ($generated@@102 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@97 $generated@@179 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@367 (type $generated@@438))))
(let (($generated@@440 ($generated@@366 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@97 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@442) $generated@@179)) (= ($generated@@0 ($generated@@102 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@102 ($generated@@363 $generated@@441) ($generated@@177 ($generated@@384 $generated@@86 $generated@@442)))) (= ($generated@@102 ($generated@@436 $generated@@441) ($generated@@177 ($generated@@384 $generated@@86 $generated@@442))) ($generated@@178 ($generated@@384 $generated@@86 $generated@@442))))))
 :pattern ( ($generated@@102 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(let (($generated@@446 ($generated@@348 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@347 $generated@@446 $generated@@445)) (= ($generated@@0 ($generated@@102 ($generated@@396 $generated@@443) $generated@@444)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) (and ($generated@@0 ($generated@@102 ($generated@@345 $generated@@443) $generated@@447)) (= $generated@@444 ($generated@@102 ($generated@@428 $generated@@443) $generated@@447))))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@443) $generated@@447))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@443) $generated@@447))
))))))
 :pattern ( ($generated@@102 ($generated@@396 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(let (($generated@@451 ($generated@@366 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@365 $generated@@451 $generated@@450)) (= ($generated@@0 ($generated@@102 ($generated@@407 $generated@@448) $generated@@449)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) (and ($generated@@0 ($generated@@102 ($generated@@363 $generated@@448) $generated@@452)) (= $generated@@449 ($generated@@102 ($generated@@436 $generated@@448) $generated@@452))))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@448) $generated@@452))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@448) $generated@@452))
))))))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@456) $generated@@460))) (and ($generated@@300 ($generated@@102 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@300 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@95 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@464) $generated@@468))) (and ($generated@@300 ($generated@@102 ($generated@@436 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@300 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@464) $generated@@468))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@95 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@469) $generated@@86) (= (type $generated@@470) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@255 $generated@@470)) (= ($generated@@95 ($generated@@85 $generated@@469) $generated@@156 $generated@@470) ($generated@@95 $generated@@469 $generated@@156 $generated@@470)))
 :pattern ( ($generated@@95 ($generated@@85 $generated@@469) $generated@@156 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@86) ($generated@@155 $generated@@471 $generated@@156)) (or ($generated@@157 $generated@@471) ($generated@@297 $generated@@471)))
 :pattern ( ($generated@@297 $generated@@471) ($generated@@155 $generated@@471 $generated@@156))
 :pattern ( ($generated@@157 $generated@@471) ($generated@@155 $generated@@471 $generated@@156))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@472 T@U) ($generated@@473 Int) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) $generated@@81) (= (type $generated@@474) $generated@@86)) (or ($generated@@261 ($generated@@83 $generated@@473) $generated@@474) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@473) ($generated@@155 $generated@@474 $generated@@156))))) (and (=> (< 0 $generated@@473) (=> ($generated@@157 $generated@@474) (let (($generated@@475 ($generated@@158 $generated@@474)))
($generated@@261 (- $generated@@473 1) $generated@@475)))) (= ($generated@@260 ($generated@@80 $generated@@472) ($generated@@83 $generated@@473) $generated@@474)  (=> (< 0 $generated@@473) (ite ($generated@@157 $generated@@474) (let (($generated@@476 ($generated@@158 $generated@@474)))
($generated@@260 ($generated@@80 $generated@@472) (- $generated@@473 1) $generated@@476)) true)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@80 $generated@@472) ($generated@@83 $generated@@473) $generated@@474))
))))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@97 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@367 (type $generated@@479))))
(let (($generated@@481 ($generated@@366 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@365 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@364 $generated@@481 $generated@@480)) (= ($generated@@363 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@363 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@367 (type $generated@@482))))
(let (($generated@@484 ($generated@@366 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@365 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@364 $generated@@484 $generated@@483)) (= ($generated@@407 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@407 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@367 (type $generated@@485))))
(let (($generated@@487 ($generated@@366 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@365 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@364 $generated@@487 $generated@@486)) (= ($generated@@435 $generated@@485) ($generated@@477 $generated@@179))))))
 :pattern ( ($generated@@435 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@179) (= (type $generated@@492) $generated@@179)) ($generated@@0 ($generated@@102 ($generated@@427 $generated@@488) ($generated@@332 ($generated@@247 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@427 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@367 (type $generated@@493))))
(let (($generated@@495 ($generated@@366 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@365 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@364 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@179) (= (type $generated@@497) $generated@@179)) ($generated@@0 ($generated@@102 ($generated@@435 $generated@@493) ($generated@@332 ($generated@@247 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@435 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@179) ($generated@@248 $generated@@498 $generated@@46)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@498)) $generated@@498) ($generated@@155 ($generated@@384 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@179) ($generated@@248 $generated@@499 $generated@@47)) (and (= ($generated@@332 ($generated@@384 $generated@@3 $generated@@499)) $generated@@499) ($generated@@155 ($generated@@384 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@179) ($generated@@248 $generated@@500 $generated@@44)) (and (= ($generated@@332 ($generated@@384 $generated@@4 $generated@@500)) $generated@@500) ($generated@@155 ($generated@@384 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 21))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@179) ($generated@@248 $generated@@502 $generated@@45)) (and (= ($generated@@332 ($generated@@384 $generated@@501 $generated@@502)) $generated@@502) ($generated@@155 ($generated@@384 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@248 ($generated@@332 $generated@@503) $generated@@504) ($generated@@155 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@248 ($generated@@332 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@100 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@97 $generated@@506 $generated@@2)) (<= 0 ($generated@@339 $generated@@505))))
 :pattern ( ($generated@@339 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@317 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@316 $generated@@508)) (<= 0 ($generated@@315 $generated@@507))))
 :pattern ( ($generated@@315 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@453 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@93 ($generated@@453 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@453 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@70) (= (type $generated@@522) $generated@@70)) (= ($generated@@519 ($generated@@461 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@461 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@523 ($generated@@461 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@461 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@93 ($generated@@461 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@461 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@179) (= (type $generated@@530) $generated@@179)) (= ($generated@@184 ($generated@@247 $generated@@529 $generated@@530)) $generated@@62))
 :pattern ( ($generated@@247 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@70) (= (type $generated@@534) $generated@@70)) (= ($generated@@531 ($generated@@170 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@170 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= ($generated@@535 ($generated@@170 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@170 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@179) (= (type $generated@@540) $generated@@179)) (= ($generated@@177 ($generated@@247 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@247 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@179) (= (type $generated@@542) $generated@@179)) (= ($generated@@178 ($generated@@247 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@247 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@81)
 :pattern ( ($generated@@543 $generated@@545))
)) (= (type $generated@@544) $generated@@81)))
(assert (forall (($generated@@546 T@U) ($generated@@547 Int) ) (!  (=> (= (type $generated@@546) $generated@@81) (= ($generated@@79 $generated@@546 $generated@@547) ($generated@@79 $generated@@544 $generated@@547)))
 :pattern ( ($generated@@79 ($generated@@543 $generated@@546) $generated@@547))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (! (let (($generated@@553 ($generated@@317 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@551 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@316 $generated@@179)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@554 ($generated@@548 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@315 $generated@@554))) ($generated@@300 ($generated@@549 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@549 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@95 $generated@@554 ($generated@@548 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@96 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@96 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@282 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@282 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@93 ($generated@@282 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@287 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@287 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@93 ($generated@@287 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@568 ($generated@@186 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@186 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@93 ($generated@@186 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@70)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@70) (= ($generated@@572 ($generated@@548 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@548 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@93 ($generated@@548 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@548 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@86) (= ($generated@@184 ($generated@@85 $generated@@576)) $generated@@64))
 :pattern ( ($generated@@85 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@86) (= ($generated@@158 ($generated@@85 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@85 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@384 $generated@@579 ($generated@@332 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@332 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) (= ($generated@@155 $generated@@580 ($generated@@453 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@345 $generated@@580) $generated@@583))) (and ($generated@@248 ($generated@@102 ($generated@@428 $generated@@580) $generated@@583) $generated@@582) ($generated@@248 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@102 ($generated@@428 $generated@@580) $generated@@583))
 :pattern ( ($generated@@102 ($generated@@345 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@155 $generated@@580 ($generated@@453 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) $generated@@70)) (= ($generated@@155 $generated@@584 ($generated@@461 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@179) ($generated@@0 ($generated@@102 ($generated@@363 $generated@@584) $generated@@587))) (and ($generated@@248 ($generated@@102 ($generated@@436 $generated@@584) $generated@@587) $generated@@586) ($generated@@248 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@102 ($generated@@436 $generated@@584) $generated@@587))
 :pattern ( ($generated@@102 ($generated@@363 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@155 $generated@@584 ($generated@@461 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@179) (= (type $generated@@591) $generated@@179)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@247 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@247 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@179) (= (type $generated@@593) $generated@@179)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@247 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@247 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) $generated@@81) (= ($generated@@79 ($generated@@80 $generated@@594) $generated@@595) ($generated@@79 $generated@@594 $generated@@595)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@594) $generated@@595))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@596 T@U) ($generated@@597 Int) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@81) (= (type $generated@@598) $generated@@86)) (or ($generated@@261 ($generated@@83 $generated@@597) ($generated@@269 $generated@@598)) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@597) ($generated@@155 $generated@@598 $generated@@156))))) (and (=> (< 0 $generated@@597) (=> ($generated@@157 $generated@@598) (let (($generated@@599 ($generated@@158 $generated@@598)))
($generated@@261 (- $generated@@597 1) $generated@@599)))) (= ($generated@@260 ($generated@@80 $generated@@596) ($generated@@83 $generated@@597) ($generated@@269 $generated@@598))  (=> (< 0 $generated@@597) (ite ($generated@@157 $generated@@598) (let (($generated@@600 ($generated@@158 $generated@@598)))
($generated@@260 ($generated@@80 $generated@@596) (- $generated@@597 1) $generated@@600)) true)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@80 $generated@@596) ($generated@@83 $generated@@597) ($generated@@269 $generated@@598)))
))))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@179) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@248 $generated@@601 ($generated@@453 $generated@@602 $generated@@603))) (and (= ($generated@@332 ($generated@@384 ($generated@@347 $generated@@179 $generated@@179) $generated@@601)) $generated@@601) ($generated@@155 ($generated@@384 ($generated@@347 $generated@@179 $generated@@179) $generated@@601) ($generated@@453 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@601 ($generated@@453 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@179) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@248 $generated@@604 ($generated@@461 $generated@@605 $generated@@606))) (and (= ($generated@@332 ($generated@@384 ($generated@@365 $generated@@179 $generated@@179) $generated@@604)) $generated@@604) ($generated@@155 ($generated@@384 ($generated@@365 $generated@@179 $generated@@179) $generated@@604) ($generated@@461 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@248 $generated@@604 ($generated@@461 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@70) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@179)) ($generated@@248 $generated@@609 ($generated@@170 $generated@@607 $generated@@608))) (and (= ($generated@@332 ($generated@@384 $generated@@86 $generated@@609)) $generated@@609) ($generated@@155 ($generated@@384 $generated@@86 $generated@@609) ($generated@@170 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@248 $generated@@609 ($generated@@170 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@86) (< ($generated@@589 $generated@@610) ($generated@@589 ($generated@@85 $generated@@610))))
 :pattern ( ($generated@@85 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@102 ($generated@@477 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@102 ($generated@@477 $generated@@612) $generated@@611)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@613 T@U) ($generated@@614 Int) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@615) $generated@@86)) (or ($generated@@261 $generated@@614 $generated@@615) (and (not (= 2 $generated@@78)) (and (<= ($generated@@83 0) $generated@@614) ($generated@@155 $generated@@615 $generated@@156))))) (and (=> (< 0 $generated@@614) (=> ($generated@@157 $generated@@615) (let (($generated@@616 ($generated@@158 $generated@@615)))
($generated@@261 (- $generated@@614 1) $generated@@616)))) (= ($generated@@260 ($generated@@80 $generated@@613) $generated@@614 $generated@@615)  (=> (< 0 $generated@@614) (ite ($generated@@157 $generated@@615) (let (($generated@@617 ($generated@@158 $generated@@615)))
($generated@@260 $generated@@613 (- $generated@@614 1) $generated@@617)) true)))))
 :pattern ( ($generated@@260 ($generated@@80 $generated@@613) $generated@@614 $generated@@615))
))))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@75)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@70) (= (type $generated@@621) $generated@@70)) (and (= ($generated@@93 ($generated@@170 $generated@@620 $generated@@621)) $generated@@63) (= ($generated@@618 ($generated@@170 $generated@@620 $generated@@621)) $generated@@68)))
 :pattern ( ($generated@@170 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@86) (= ($generated@@588 ($generated@@332 $generated@@622)) ($generated@@589 $generated@@622)))
 :pattern ( ($generated@@588 ($generated@@332 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@179) ($generated@@248 $generated@@623 ($generated@@96 0))) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@623)) $generated@@623) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@623) ($generated@@96 0))))
 :pattern ( ($generated@@248 $generated@@623 ($generated@@96 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@179) (= (type $generated@@625) $generated@@70)) ($generated@@248 $generated@@624 ($generated@@282 $generated@@625))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@624)) $generated@@624) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@624) ($generated@@282 $generated@@625))))
 :pattern ( ($generated@@248 $generated@@624 ($generated@@282 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@179) (= (type $generated@@627) $generated@@70)) ($generated@@248 $generated@@626 ($generated@@287 $generated@@627))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@626)) $generated@@626) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@4) $generated@@626) ($generated@@287 $generated@@627))))
 :pattern ( ($generated@@248 $generated@@626 ($generated@@287 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@179) (= (type $generated@@629) $generated@@70)) ($generated@@248 $generated@@628 ($generated@@186 $generated@@629))) (and (= ($generated@@332 ($generated@@384 ($generated@@97 $generated@@179 $generated@@2) $generated@@628)) $generated@@628) ($generated@@155 ($generated@@384 ($generated@@97 $generated@@179 $generated@@2) $generated@@628) ($generated@@186 $generated@@629))))
 :pattern ( ($generated@@248 $generated@@628 ($generated@@186 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@179) (= (type $generated@@631) $generated@@70)) ($generated@@248 $generated@@630 ($generated@@548 $generated@@631))) (and (= ($generated@@332 ($generated@@384 ($generated@@316 $generated@@179) $generated@@630)) $generated@@630) ($generated@@155 ($generated@@384 ($generated@@316 $generated@@179) $generated@@630) ($generated@@548 $generated@@631))))
 :pattern ( ($generated@@248 $generated@@630 ($generated@@548 $generated@@631)))
)))
(assert (= ($generated@@93 $generated@@165) $generated@@61))
(assert (= ($generated@@618 $generated@@165) $generated@@67))
(assert (= ($generated@@93 $generated@@156) $generated@@65))
(assert (= ($generated@@618 $generated@@156) $generated@@69))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@97 $generated@@179 $generated@@2)) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@632 ($generated@@186 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@179) (< 0 ($generated ($generated@@102 $generated@@632 $generated@@635)))) ($generated@@300 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@102 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@95 $generated@@632 ($generated@@186 $generated@@633) $generated@@634))
)))
(assert (= $generated@@84 ($generated@@269 $generated@@84)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@86) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@638) (and ($generated@@169 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@70) ($generated@@95 $generated@@636 ($generated@@170 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@95 $generated@@636 ($generated@@170 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@300 ($generated@@177 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@300 ($generated@@177 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@86) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@642) (and ($generated@@169 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@70) ($generated@@95 $generated@@640 ($generated@@170 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@95 $generated@@640 ($generated@@170 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@300 ($generated@@178 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@300 ($generated@@178 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@86) (= (type $generated@@645) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@255 $generated@@645) (and ($generated@@157 $generated@@644) ($generated@@95 $generated@@644 $generated@@156 $generated@@645)))) ($generated@@95 ($generated@@158 $generated@@644) $generated@@156 $generated@@645))
 :pattern ( ($generated@@95 ($generated@@158 $generated@@644) $generated@@156 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@179) (= (type $generated@@647) $generated@@179)) (= ($generated@@247 ($generated@@269 $generated@@646) ($generated@@269 $generated@@647)) ($generated@@269 ($generated@@247 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@247 ($generated@@269 $generated@@646) ($generated@@269 $generated@@647)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@83 $generated@@648))) ($generated@@269 ($generated@@332 ($generated@@8 $generated@@648))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@83 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@86) (= ($generated@@85 ($generated@@269 $generated@@649)) ($generated@@269 ($generated@@85 $generated@@649))))
 :pattern ( ($generated@@85 ($generated@@269 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (= ($generated@@332 ($generated@@269 $generated@@650)) ($generated@@269 ($generated@@332 $generated@@650)))
 :pattern ( ($generated@@332 ($generated@@269 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@317 (type $generated@@651))))
 (=> (and (= (type $generated@@651) ($generated@@316 $generated@@652)) (= ($generated@@315 $generated@@651) 0)) (= $generated@@651 ($generated@@314 $generated@@652))))
 :pattern ( ($generated@@315 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@654)))
 (=> (and (and (= (type $generated@@653) ($generated@@97 $generated@@656 $generated@@2)) (= (type $generated@@655) $generated@@2)) (<= 0 ($generated $generated@@655))) (= ($generated@@339 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)) (+ (- ($generated@@339 $generated@@653) ($generated ($generated@@102 $generated@@653 $generated@@654))) ($generated $generated@@655)))))
 :pattern ( ($generated@@339 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@657 Int) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@86) (or ($generated@@266 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@657) ($generated@@155 $generated@@658 $generated@@156))))) (and ($generated@@261 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) (= ($generated@@265 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)) ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@260 ($generated@@80 $generated@@544) ($generated@@83 $generated@@657) ($generated@@269 $generated@@658))))))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@83 $generated@@657) ($generated@@269 $generated@@658)))
))))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@660) $generated@@2)) ($generated@@95 $generated@@660 $generated@@46 $generated@@659))
 :pattern ( ($generated@@95 $generated@@660 $generated@@46 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@662) $generated@@3)) ($generated@@95 $generated@@662 $generated@@47 $generated@@661))
 :pattern ( ($generated@@95 $generated@@662 $generated@@47 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@664) $generated@@4)) ($generated@@95 $generated@@664 $generated@@44 $generated@@663))
 :pattern ( ($generated@@95 $generated@@664 $generated@@44 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@666) $generated@@501)) ($generated@@95 $generated@@666 $generated@@45 $generated@@665))
 :pattern ( ($generated@@95 $generated@@666 $generated@@45 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@668) $generated@@179)) ($generated@@95 $generated@@668 $generated@@48 $generated@@667))
 :pattern ( ($generated@@95 $generated@@668 $generated@@48 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@316 $generated@@179)) (= (type $generated@@670) $generated@@70)) (= ($generated@@155 $generated@@669 ($generated@@548 $generated@@670)) (forall (($generated@@671 Int) ) (!  (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@315 $generated@@669))) ($generated@@248 ($generated@@549 $generated@@669 $generated@@671) $generated@@670))
 :pattern ( ($generated@@549 $generated@@669 $generated@@671))
))))
 :pattern ( ($generated@@155 $generated@@669 ($generated@@548 $generated@@670)))
)))
(assert  (=> (<= 3 $generated@@78) (forall (($generated@@672 Int) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@86) (or ($generated@@266 $generated@@672 $generated@@673) (and (not (= 3 $generated@@78)) (and (<= ($generated@@83 0) $generated@@672) ($generated@@155 $generated@@673 $generated@@156))))) (and ($generated@@261 $generated@@672 $generated@@673) (= ($generated@@265 $generated@@672 $generated@@673) ($generated@@260 ($generated@@80 $generated@@544) $generated@@672 $generated@@673))))
 :pattern ( ($generated@@265 $generated@@672 $generated@@673))
))))
(assert (forall (($generated@@674 T@U) ($generated@@675 Int) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@81) (= (type $generated@@676) $generated@@86)) (= ($generated@@260 $generated@@674 $generated@@675 $generated@@676) ($generated@@260 $generated@@544 $generated@@675 $generated@@676)))
 :pattern ( ($generated@@260 ($generated@@543 $generated@@674) $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 Int) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@81) (= (type $generated@@679) $generated@@86)) (= ($generated@@153 $generated@@677 $generated@@678 $generated@@679) ($generated@@153 $generated@@544 $generated@@678 $generated@@679)))
 :pattern ( ($generated@@153 ($generated@@543 $generated@@677) $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (!  (=> (= (type $generated@@681) ($generated@@316 $generated@@179)) (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@315 $generated@@681))) (< ($generated@@589 ($generated@@384 $generated@@86 ($generated@@549 $generated@@681 $generated@@682))) ($generated@@680 $generated@@681))))
 :pattern ( ($generated@@589 ($generated@@384 $generated@@86 ($generated@@549 $generated@@681 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@347 $generated@@179 $generated@@179)) (= (type $generated@@684) $generated@@70)) (= (type $generated@@685) $generated@@70)) ($generated@@155 $generated@@683 ($generated@@453 $generated@@684 $generated@@685))) (and (and ($generated@@155 ($generated@@345 $generated@@683) ($generated@@282 $generated@@684)) ($generated@@155 ($generated@@396 $generated@@683) ($generated@@282 $generated@@685))) ($generated@@155 ($generated@@427 $generated@@683) ($generated@@282 ($generated@@170 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@155 $generated@@683 ($generated@@453 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@365 $generated@@179 $generated@@179)) (= (type $generated@@687) $generated@@70)) (= (type $generated@@688) $generated@@70)) ($generated@@155 $generated@@686 ($generated@@461 $generated@@687 $generated@@688))) (and (and ($generated@@155 ($generated@@363 $generated@@686) ($generated@@287 $generated@@687)) ($generated@@155 ($generated@@407 $generated@@686) ($generated@@287 $generated@@688))) ($generated@@155 ($generated@@435 $generated@@686) ($generated@@287 ($generated@@170 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@155 $generated@@686 ($generated@@461 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@2) ($generated@@155 $generated@@689 $generated@@46))
 :pattern ( ($generated@@155 $generated@@689 $generated@@46))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@3) ($generated@@155 $generated@@690 $generated@@47))
 :pattern ( ($generated@@155 $generated@@690 $generated@@47))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@4) ($generated@@155 $generated@@691 $generated@@44))
 :pattern ( ($generated@@155 $generated@@691 $generated@@44))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@501) ($generated@@155 $generated@@692 $generated@@45))
 :pattern ( ($generated@@155 $generated@@692 $generated@@45))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@179) ($generated@@155 $generated@@693 $generated@@48))
 :pattern ( ($generated@@155 $generated@@693 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 (T@U) Bool)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@696) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@698) $generated@@86)) (= (type $generated@@700) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@701) $generated@@86)) (= (type $generated@@703) ($generated@@193 $generated@@98 $generated@@4))) (= (type $generated@@704) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@705  (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165)) (=> ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165) (=> (= $generated@@695 (ite (< $generated@@694 0) 0 $generated@@694)) (=> (and (and (and ($generated@@95 ($generated@@8 $generated@@695) $generated@@165 $generated@@696) ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694))) (and ($generated@@95 ($generated@@8 $generated@@697) $generated@@165 $generated@@696) (= $generated@@698 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))))) (and (and ($generated@@95 $generated@@698 $generated@@156 $generated@@696) ($generated@@266 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))) (and ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694)) ($generated@@266 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@266 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@265 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> ($generated@@261 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (< 0 $generated@@697) (=> ($generated@@157 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (let (($generated@@706 ($generated@@158 ($generated@@79 ($generated@@80 ($generated@@80 $generated@@544)) (ite (< $generated@@694 0) 0 $generated@@694)))))
($generated@@260 ($generated@@80 ($generated@@80 $generated@@544)) (- $generated@@697 1) $generated@@706))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@266 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@265 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> ($generated@@261 $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (or ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))) (=> (< 0 $generated@@697) (=> (not ($generated@@157 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694)))) ($generated@@0 ($generated@@269 ($generated@@11 true)))))))))))))))))
(let (($generated@@707  (=> (and (<= 0 $generated@@694) (= (ControlFlow 0 6) 2)) $generated@@705)))
(let (($generated@@708  (=> (and (< $generated@@694 0) (= (ControlFlow 0 5) 2)) $generated@@705)))
(let (($generated@@709  (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165)) (=> ($generated@@155 ($generated@@8 (ite (< $generated@@694 0) 0 $generated@@694)) $generated@@165) (=> (= $generated@@699 (ite (< $generated@@694 0) 0 $generated@@694)) (=> (and (and ($generated@@95 ($generated@@8 $generated@@699) $generated@@165 $generated@@700) ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694))) (and ($generated@@82 (ite (< $generated@@694 0) 0 $generated@@694)) (= $generated@@701 ($generated@@79 ($generated@@80 $generated@@544) (ite (< $generated@@694 0) 0 $generated@@694))))) (=> (and (and (and (and ($generated@@255 $generated@@696) ($generated@@702 $generated@@696)) ($generated@@261 $generated@@697 $generated@@701)) (and (and ($generated@@261 $generated@@697 $generated@@701) (and ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 $generated@@701) (=> (< 0 $generated@@697) (ite ($generated@@157 $generated@@701) (let (($generated@@710 ($generated@@158 $generated@@701)))
($generated@@260 ($generated@@80 $generated@@544) (- $generated@@697 1) $generated@@710)) true)))) ($generated@@154 $generated@@697 $generated@@701))) (and (and (and ($generated@@154 $generated@@697 $generated@@701) (and ($generated@@153 ($generated@@80 $generated@@544) $generated@@697 $generated@@701) (ite (= $generated@@697 ($generated@@83 0)) true (ite ($generated@@157 $generated@@701) (let (($generated@@711 ($generated@@158 $generated@@701)))
($generated@@153 ($generated@@80 $generated@@544) (- $generated@@697 1) $generated@@711)) true)))) ($generated@@266 $generated@@697 $generated@@701)) (and (and ($generated@@266 $generated@@697 $generated@@701) (and (and (and ($generated@@265 $generated@@697 $generated@@701) (<= ($generated@@83 0) $generated@@697)) ($generated@@155 $generated@@701 $generated@@156)) ($generated@@260 ($generated@@80 $generated@@544) $generated@@697 $generated@@701))) (= $generated@@700 $generated@@696)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@708) (=> (= (ControlFlow 0 7) 6) $generated@@707)))))))))
(let (($generated@@712  (=> (and (<= 0 $generated@@694) (= (ControlFlow 0 10) 7)) $generated@@709)))
(let (($generated@@713  (=> (and (< $generated@@694 0) (= (ControlFlow 0 9) 7)) $generated@@709)))
(let (($generated@@714  (=> (= $generated@@703 ($generated@@192 $generated@@704 $generated@@700 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@713) (=> (= (ControlFlow 0 11) 10) $generated@@712)))))
(let (($generated@@715  (=> (and (and (and ($generated@@255 $generated@@700) ($generated@@702 $generated@@700)) (<= ($generated@@83 0) $generated@@697)) (and (= 5 $generated@@78) (= (ControlFlow 0 12) 11))) $generated@@714)))
$generated@@715)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
