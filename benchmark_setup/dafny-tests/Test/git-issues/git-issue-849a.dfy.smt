(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int Int) T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@U) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@83) 11) (forall (($generated@@84 Int) ($generated@@85 Int) ) (! (= (type ($generated@@80 $generated@@84 $generated@@85)) $generated@@83)
 :pattern ( ($generated@@80 $generated@@84 $generated@@85))
))) (= (type $generated@@81) $generated@@69)) (= (type $generated@@82) $generated@@69)))
(assert (forall (($generated@@86 Int) ($generated@@87 Int) ) (! (= ($generated@@79 ($generated@@80 $generated@@86 $generated@@87) $generated@@81)  (and ($generated@@79 ($generated@@8 $generated@@86) $generated@@82) ($generated@@79 ($generated@@8 $generated@@87) $generated@@82)))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@86 $generated@@87) $generated@@81))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@72 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@72 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@146 $generated@@82 $generated@@147))
 :pattern ( ($generated@@88 $generated@@146 $generated@@82 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@83) ($generated@@148 $generated@@150)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@148 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@79 $generated@@151 ($generated@@89 0)))
 :pattern ( ($generated@@79 $generated@@151 ($generated@@89 0)))
)))
(assert (forall (($generated@@153 Int) ($generated@@154 Int) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@152 $generated@@155)) (= ($generated@@88 ($generated@@80 $generated@@153 $generated@@154) $generated@@81 $generated@@155)  (and ($generated@@88 ($generated@@8 $generated@@153) $generated@@82 $generated@@155) ($generated@@88 ($generated@@8 $generated@@154) $generated@@82 $generated@@155))))
 :pattern ( ($generated@@88 ($generated@@80 $generated@@153 $generated@@154) $generated@@81 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@158 $generated@@159)) $generated@@69)
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@69) (= (type $generated@@161) $generated@@69)) (= (type $generated@@162) $generated@@83)) ($generated@@79 $generated@@162 ($generated@@157 $generated@@160 $generated@@161))) ($generated@@156 $generated@@162))
 :pattern ( ($generated@@156 $generated@@162) ($generated@@79 $generated@@162 ($generated@@157 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@83) (= (type $generated@@170) $generated@@83)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@83) (= (type $generated@@175) $generated@@83)) true) (= ($generated@@171 $generated@@174 $generated@@175)  (and (= ($generated@@172 $generated@@174) ($generated@@172 $generated@@175)) (= ($generated@@173 $generated@@174) ($generated@@173 $generated@@175)))))
 :pattern ( ($generated@@171 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@69)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@90 $generated@@166 $generated@@2)) (= (type $generated@@180) $generated@@69)) ($generated@@79 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@79 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@91 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@72 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@91) (= (type $generated@@231) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@232) ($generated@@71 $generated@@4))) (= (type $generated@@234) $generated@@91)) (= (type $generated@@235) ($generated@@71 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) ($generated@@79 $generated@@237 $generated@@81)) ($generated@@149 $generated@@237))
 :pattern ( ($generated@@149 $generated@@237) ($generated@@79 $generated@@237 $generated@@81))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@83)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@69) (= (type $generated@@243) $generated@@69)) (= (type $generated@@244) $generated@@166)) (= (type $generated@@245) $generated@@166)) (= ($generated@@79 ($generated@@238 $generated@@244 $generated@@245) ($generated@@157 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@79 ($generated@@238 $generated@@244 $generated@@245) ($generated@@157 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@83) (= (type $generated@@247) $generated@@83)) (= ($generated@@163 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@163 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@83) (= (type $generated@@249) $generated@@83)) (= ($generated@@171 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@171 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@69)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@90 $generated@@166 $generated@@4)) (= (type $generated@@253) $generated@@69)) (= ($generated@@79 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@166) ($generated@@0 ($generated@@95 $generated@@252 $generated@@254))) ($generated@@239 $generated@@254 $generated@@253))
 :pattern ( ($generated@@95 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@79 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@69)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@90 $generated@@166 $generated@@4)) (= (type $generated@@258) $generated@@69)) (= ($generated@@79 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@166) ($generated@@0 ($generated@@95 $generated@@257 $generated@@259))) ($generated@@239 $generated@@259 $generated@@258))
 :pattern ( ($generated@@95 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@79 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@69) (= (type $generated@@268) $generated@@69)) (= (type $generated@@269) $generated@@166)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@152 $generated@@271)) (= ($generated@@88 ($generated@@238 $generated@@269 $generated@@270) ($generated@@157 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@88 ($generated@@238 $generated@@269 $generated@@270) ($generated@@157 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@73)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@83) (= ($generated@@156 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@62)))
 :pattern ( ($generated@@156 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@83) (= ($generated@@149 $generated@@275) (= ($generated@@272 $generated@@275) $generated@@64)))
 :pattern ( ($generated@@149 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@83) ($generated@@156 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@166) (= (type $generated@@278) $generated@@166)) (= $generated@@276 ($generated@@238 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@156 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@83) ($generated@@149 $generated@@279)) (exists (($generated@@280 Int) ($generated@@281 Int) ) (= $generated@@279 ($generated@@80 $generated@@280 $generated@@281))))
 :pattern ( ($generated@@149 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@2) (= ($generated@@79 $generated@@290 $generated@@82) (<= ($generated@@260 0) ($generated $generated@@290))))
 :pattern ( ($generated@@79 $generated@@290 $generated@@82))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@166)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@69) (= (type $generated@@295) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@88 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@90 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@93 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@90 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@95 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@90 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@95 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@95 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@90 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@95 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@95 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@93 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@90 $generated@@339 $generated@@2)) (= ($generated@@177 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@95 $generated@@338 $generated@@340))) (<= ($generated ($generated@@95 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@95 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@177 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@239 $generated@@344 $generated@@82)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@344)) $generated@@344) ($generated@@79 ($generated@@341 $generated@@2 $generated@@344) $generated@@82)))
 :pattern ( ($generated@@239 $generated@@344 $generated@@82))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@239 $generated@@345 $generated@@81)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@345)) $generated@@345) ($generated@@79 ($generated@@341 $generated@@83 $generated@@345) $generated@@81)))
 :pattern ( ($generated@@239 $generated@@345 $generated@@81))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(let (($generated@@348 ($generated@@305 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@304 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@303 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@95 ($generated@@302 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@302 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@306 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@90 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@306 (type $generated@@353))))
(let (($generated@@355 ($generated@@305 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@304 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@303 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@95 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@324 (type $generated@@357))))
(let (($generated@@359 ($generated@@323 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@322 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@321 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@95 ($generated@@320 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@320 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@324 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@90 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@324 (type $generated@@364))))
(let (($generated@@366 ($generated@@323 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@322 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@321 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@95 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@90 $generated@@166 $generated@@2)) (= (type $generated@@369) $generated@@69)) (= ($generated@@79 $generated@@368 ($generated@@176 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@166) (< 0 ($generated ($generated@@95 $generated@@368 $generated@@370)))) ($generated@@239 $generated@@370 $generated@@369))
 :pattern ( ($generated@@95 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@79 $generated@@368 ($generated@@176 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@90 $generated@@166 $generated@@4)) (= (type $generated@@372) $generated@@69)) (= (type $generated@@373) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@371 ($generated@@250 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@166) ($generated@@0 ($generated@@95 $generated@@371 $generated@@374))) ($generated@@266 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@95 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@88 $generated@@371 ($generated@@250 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@90 $generated@@166 $generated@@4)) (= (type $generated@@376) $generated@@69)) (= (type $generated@@377) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@375 ($generated@@255 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@166) ($generated@@0 ($generated@@95 $generated@@375 $generated@@378))) ($generated@@266 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@95 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@88 $generated@@375 ($generated@@255 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@95 ($generated@@297 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@95 ($generated@@297 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@90 $generated@@166 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@306 (type $generated@@384))))
(let (($generated@@386 ($generated@@305 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@90 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@388) $generated@@166)) (= ($generated@@0 ($generated@@95 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@95 ($generated@@302 $generated@@387) ($generated@@164 ($generated@@341 $generated@@83 $generated@@388)))) (= ($generated@@95 ($generated@@382 $generated@@387) ($generated@@164 ($generated@@341 $generated@@83 $generated@@388))) ($generated@@165 ($generated@@341 $generated@@83 $generated@@388))))))
 :pattern ( ($generated@@95 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@90 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@324 (type $generated@@392))))
(let (($generated@@394 ($generated@@323 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@90 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@95 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@95 ($generated@@320 $generated@@395) ($generated@@164 ($generated@@341 $generated@@83 $generated@@396)))) (= ($generated@@95 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@341 $generated@@83 $generated@@396))) ($generated@@165 ($generated@@341 $generated@@83 $generated@@396))))))
 :pattern ( ($generated@@95 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@305 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@304 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@95 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@95 ($generated@@302 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@95 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@95 ($generated@@302 $generated@@397) $generated@@401))
 :pattern ( ($generated@@95 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@95 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@323 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@322 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@95 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@95 ($generated@@320 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@95 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@95 ($generated@@320 $generated@@402) $generated@@406))
 :pattern ( ($generated@@95 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@95 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@69)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@411) $generated@@69)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@166) ($generated@@0 ($generated@@95 ($generated@@302 $generated@@410) $generated@@414))) (and ($generated@@266 ($generated@@95 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@266 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@95 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@95 ($generated@@302 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@88 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@95 ($generated@@320 $generated@@418) $generated@@422))) (and ($generated@@266 ($generated@@95 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@266 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@95 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@95 ($generated@@320 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@88 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@90 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@324 (type $generated@@425))))
(let (($generated@@427 ($generated@@323 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@322 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@321 $generated@@427 $generated@@426)) (= ($generated@@320 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@320 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@324 (type $generated@@428))))
(let (($generated@@430 ($generated@@323 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@322 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@321 $generated@@430 $generated@@429)) (= ($generated@@361 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@361 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@324 (type $generated@@431))))
(let (($generated@@433 ($generated@@323 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@322 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@321 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@166))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@306 (type $generated@@434))))
(let (($generated@@436 ($generated@@305 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@304 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@303 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@166) (= (type $generated@@438) $generated@@166)) ($generated@@0 ($generated@@95 ($generated@@381 $generated@@434) ($generated@@291 ($generated@@238 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@324 (type $generated@@439))))
(let (($generated@@441 ($generated@@323 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@322 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@321 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@166) (= (type $generated@@443) $generated@@166)) ($generated@@0 ($generated@@95 ($generated@@389 $generated@@439) ($generated@@291 ($generated@@238 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@166) ($generated@@239 $generated@@444 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@444)) $generated@@444) ($generated@@79 ($generated@@341 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@166) ($generated@@239 $generated@@445 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@445)) $generated@@445) ($generated@@79 ($generated@@341 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@166) ($generated@@239 $generated@@446 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@446)) $generated@@446) ($generated@@79 ($generated@@341 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@166) ($generated@@239 $generated@@448 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@447 $generated@@448)) $generated@@448) ($generated@@79 ($generated@@341 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@69) (= ($generated@@239 ($generated@@291 $generated@@449) $generated@@450) ($generated@@79 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@239 ($generated@@291 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@93 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@90 $generated@@452 $generated@@2)) (<= 0 ($generated@@296 $generated@@451))))
 :pattern ( ($generated@@296 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@285 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@284 $generated@@454)) (<= 0 ($generated@@283 $generated@@453))))
 :pattern ( ($generated@@283 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@77 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@166) (= (type $generated@@476) $generated@@166)) (= ($generated@@272 ($generated@@238 $generated@@475 $generated@@476)) $generated@@62))
 :pattern ( ($generated@@238 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@157 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@157 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@69)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@481 ($generated@@157 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@157 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@164 ($generated@@238 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@238 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@166) (= (type $generated@@488) $generated@@166)) (= ($generated@@165 ($generated@@238 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 Int) ($generated@@490 Int) ) (! (= ($generated@@272 ($generated@@80 $generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@80 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 Int) ($generated@@492 Int) ) (! (= ($generated@@172 ($generated@@80 $generated@@491 $generated@@492)) $generated@@491)
 :pattern ( ($generated@@80 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 Int) ($generated@@494 Int) ) (! (= ($generated@@173 ($generated@@80 $generated@@493 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@80 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@285 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@284 $generated@@166)) (= (type $generated@@502) $generated@@69)) (= (type $generated@@503) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@283 $generated@@501))) ($generated@@266 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@88 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@89 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@89 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@250 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@250 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@77 ($generated@@250 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@255 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@255 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@255 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@176 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@176 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@176 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@341 $generated@@524 ($generated@@291 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@291 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@79 $generated@@525 ($generated@@407 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@166) ($generated@@0 ($generated@@95 ($generated@@302 $generated@@525) $generated@@528))) (and ($generated@@239 ($generated@@95 ($generated@@382 $generated@@525) $generated@@528) $generated@@527) ($generated@@239 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@95 ($generated@@382 $generated@@525) $generated@@528))
 :pattern ( ($generated@@95 ($generated@@302 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@79 $generated@@525 ($generated@@407 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@69)) (= ($generated@@79 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@95 ($generated@@320 $generated@@529) $generated@@532))) (and ($generated@@239 ($generated@@95 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@239 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@95 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@95 ($generated@@320 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@79 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@166) (= (type $generated@@536) $generated@@166)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@238 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@238 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@166) (= (type $generated@@538) $generated@@166)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@238 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@238 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@239 $generated@@539 ($generated@@407 $generated@@540 $generated@@541))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@539)) $generated@@539) ($generated@@79 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@539) ($generated@@407 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@239 $generated@@539 ($generated@@407 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@166) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@239 $generated@@542 ($generated@@415 $generated@@543 $generated@@544))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@542)) $generated@@542) ($generated@@79 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@542) ($generated@@415 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@239 $generated@@542 ($generated@@415 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@69) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@166)) ($generated@@239 $generated@@547 ($generated@@157 $generated@@545 $generated@@546))) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@547)) $generated@@547) ($generated@@79 ($generated@@341 $generated@@83 $generated@@547) ($generated@@157 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@239 $generated@@547 ($generated@@157 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@95 ($generated@@423 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@95 ($generated@@423 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@74)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (and (= ($generated@@77 ($generated@@157 $generated@@552 $generated@@553)) $generated@@63) (= ($generated@@550 ($generated@@157 $generated@@552 $generated@@553)) $generated@@67)))
 :pattern ( ($generated@@157 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@83) (= ($generated@@533 ($generated@@291 $generated@@554)) ($generated@@534 $generated@@554)))
 :pattern ( ($generated@@533 ($generated@@291 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@166) ($generated@@239 $generated@@555 ($generated@@89 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@555)) $generated@@555) ($generated@@79 ($generated@@341 ($generated@@90 $generated@@166 $generated@@4) $generated@@555) ($generated@@89 0))))
 :pattern ( ($generated@@239 $generated@@555 ($generated@@89 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@166) (= (type $generated@@557) $generated@@69)) ($generated@@239 $generated@@556 ($generated@@250 $generated@@557))) (and (= ($generated@@291 ($generated@@341 ($generated@@90 $generated@@166 $generated@@4) $generated@@556)) $generated@@556) ($generated@@79 ($generated@@341 ($generated@@90 $generated@@166 $generated@@4) $generated@@556) ($generated@@250 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@250 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@166) (= (type $generated@@559) $generated@@69)) ($generated@@239 $generated@@558 ($generated@@255 $generated@@559))) (and (= ($generated@@291 ($generated@@341 ($generated@@90 $generated@@166 $generated@@4) $generated@@558)) $generated@@558) ($generated@@79 ($generated@@341 ($generated@@90 $generated@@166 $generated@@4) $generated@@558) ($generated@@255 $generated@@559))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@255 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@166) (= (type $generated@@561) $generated@@69)) ($generated@@239 $generated@@560 ($generated@@176 $generated@@561))) (and (= ($generated@@291 ($generated@@341 ($generated@@90 $generated@@166 $generated@@2) $generated@@560)) $generated@@560) ($generated@@79 ($generated@@341 ($generated@@90 $generated@@166 $generated@@2) $generated@@560) ($generated@@176 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 ($generated@@176 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@69)) ($generated@@239 $generated@@562 ($generated@@495 $generated@@563))) (and (= ($generated@@291 ($generated@@341 ($generated@@284 $generated@@166) $generated@@562)) $generated@@562) ($generated@@79 ($generated@@341 ($generated@@284 $generated@@166) $generated@@562) ($generated@@495 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 ($generated@@495 $generated@@563)))
)))
(assert (= ($generated@@77 $generated@@82) $generated@@61))
(assert (= ($generated@@550 $generated@@82) $generated@@66))
(assert (= ($generated@@77 $generated@@81) $generated@@65))
(assert (= ($generated@@550 $generated@@81) $generated@@68))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@90 $generated@@166 $generated@@2)) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@564 ($generated@@176 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@166) (< 0 ($generated ($generated@@95 $generated@@564 $generated@@567)))) ($generated@@266 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@95 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@88 $generated@@564 ($generated@@176 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@83) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@152 $generated@@570) (and ($generated@@156 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@69) ($generated@@88 $generated@@568 ($generated@@157 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@88 $generated@@568 ($generated@@157 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@266 ($generated@@164 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@266 ($generated@@164 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@83) (= (type $generated@@573) $generated@@69)) (= (type $generated@@574) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@152 $generated@@574) (and ($generated@@156 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@69) ($generated@@88 $generated@@572 ($generated@@157 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@88 $generated@@572 ($generated@@157 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@266 ($generated@@165 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@266 ($generated@@165 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@83) (= (type $generated@@577) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@152 $generated@@577) (and ($generated@@149 $generated@@576) ($generated@@88 $generated@@576 $generated@@81 $generated@@577)))) ($generated@@88 ($generated@@8 ($generated@@172 $generated@@576)) $generated@@82 $generated@@577))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@172 $generated@@576)) $generated@@82 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@83) (= (type $generated@@579) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@152 $generated@@579) (and ($generated@@149 $generated@@578) ($generated@@88 $generated@@578 $generated@@81 $generated@@579)))) ($generated@@88 ($generated@@8 ($generated@@173 $generated@@578)) $generated@@82 $generated@@579))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@173 $generated@@578)) $generated@@82 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@166) (= (type $generated@@581) $generated@@166)) (= ($generated@@238 ($generated@@262 $generated@@580) ($generated@@262 $generated@@581)) ($generated@@262 ($generated@@238 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@238 ($generated@@262 $generated@@580) ($generated@@262 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ($generated@@583 Int) ) (! (= ($generated@@80 ($generated@@260 $generated@@582) ($generated@@260 $generated@@583)) ($generated@@262 ($generated@@80 $generated@@582 $generated@@583)))
 :pattern ( ($generated@@80 ($generated@@260 $generated@@582) ($generated@@260 $generated@@583)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@260 $generated@@584))) ($generated@@262 ($generated@@291 ($generated@@8 $generated@@584))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@260 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@291 ($generated@@262 $generated@@585)) ($generated@@262 ($generated@@291 $generated@@585)))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@285 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@284 $generated@@587)) (= ($generated@@283 $generated@@586) 0)) (= $generated@@586 ($generated@@282 $generated@@587))))
 :pattern ( ($generated@@283 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@90 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@296 ($generated@@96 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@296 $generated@@588) ($generated ($generated@@95 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@296 ($generated@@96 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@593) $generated@@2)) ($generated@@88 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@88 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@595) $generated@@3)) ($generated@@88 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@88 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@597) $generated@@4)) ($generated@@88 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@88 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@599) $generated@@447)) ($generated@@88 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@88 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@601) $generated@@166)) ($generated@@88 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@88 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@284 $generated@@166)) (= (type $generated@@603) $generated@@69)) (= ($generated@@79 $generated@@602 ($generated@@495 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@283 $generated@@602))) ($generated@@239 ($generated@@496 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@496 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@79 $generated@@602 ($generated@@495 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@284 $generated@@166)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@283 $generated@@606))) (< ($generated@@534 ($generated@@341 $generated@@83 ($generated@@496 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@534 ($generated@@341 $generated@@83 ($generated@@496 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@609) $generated@@69)) (= (type $generated@@610) $generated@@69)) ($generated@@79 $generated@@608 ($generated@@407 $generated@@609 $generated@@610))) (and (and ($generated@@79 ($generated@@302 $generated@@608) ($generated@@250 $generated@@609)) ($generated@@79 ($generated@@350 $generated@@608) ($generated@@250 $generated@@610))) ($generated@@79 ($generated@@381 $generated@@608) ($generated@@250 ($generated@@157 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@79 $generated@@608 ($generated@@407 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@69)) (= (type $generated@@613) $generated@@69)) ($generated@@79 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@79 ($generated@@320 $generated@@611) ($generated@@255 $generated@@612)) ($generated@@79 ($generated@@361 $generated@@611) ($generated@@255 $generated@@613))) ($generated@@79 ($generated@@389 $generated@@611) ($generated@@255 ($generated@@157 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@79 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@79 $generated@@614 $generated@@46))
 :pattern ( ($generated@@79 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@79 $generated@@615 $generated@@47))
 :pattern ( ($generated@@79 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@79 $generated@@616 $generated@@44))
 :pattern ( ($generated@@79 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@447) ($generated@@79 $generated@@617 $generated@@45))
 :pattern ( ($generated@@79 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@166) ($generated@@79 $generated@@618 $generated@@48))
 :pattern ( ($generated@@79 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@619) ($generated@@183 $generated@@91 $generated@@4)) (= (type $generated@@620) $generated@@91)) (= (type $generated@@621) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@622) $generated@@83)) (= (type $generated@@623) $generated@@83)) (= (type $generated@@624) $generated@@83)) (= (type $generated@@629) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@631  (=> (= $generated@@619 ($generated@@182 $generated@@620 $generated@@621 $generated@@60 false)) (=> (and ($generated@@79 $generated@@622 $generated@@81) ($generated@@88 $generated@@622 $generated@@81 $generated@@621)) (=> (and (and (= $generated@@623 $generated@@624) ($generated@@79 $generated@@623 $generated@@81)) (and (= $generated@@622 $generated@@623) (<= ($generated@@260 0) $generated@@625))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@79 ($generated@@8 ($generated@@260 2)) $generated@@82)) (=> ($generated@@79 ($generated@@8 ($generated@@260 2)) $generated@@82) (=> (= $generated@@626 ($generated@@260 2)) (=> (and (and ($generated@@79 ($generated@@8 $generated@@626) $generated@@82) (= $generated@@625 $generated@@626)) (and (<= ($generated@@260 0) $generated@@627) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@79 ($generated@@8 ($generated@@260 1)) $generated@@82))))))))))
(let (($generated@@632  (=> (and ($generated@@152 $generated@@621) ($generated@@628 $generated@@621)) (=> (and (and ($generated@@79 $generated@@624 $generated@@81) ($generated@@88 $generated@@624 $generated@@81 $generated@@621)) ($generated@@148 $generated@@624)) (=> (and (and (and ($generated@@79 $generated@@629 $generated@@81) ($generated@@88 $generated@@629 $generated@@81 $generated@@621)) true) (and (= 2 $generated@@630) (= (ControlFlow 0 4) 2))) $generated@@631)))))
$generated@@632)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
