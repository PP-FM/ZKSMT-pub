(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@271 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U T@U) Int)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@T T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@530 (T@U Int) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@647 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@79 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@79 0)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@152 $generated@@153)) $generated@@68)
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@68) (= (type $generated@@155) $generated@@68)) (= (type $generated@@156) $generated@@142)) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155))) ($generated@@150 $generated@@156))
 :pattern ( ($generated@@150 $generated@@156) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155)))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@144)
 :pattern ( ($generated@@158 $generated@@160))
)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@144)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@142) (= (type $generated@@163) $generated@@142)) true) (= ($generated@@157 $generated@@162 $generated@@163)  (and (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)) (= ($generated@@159 $generated@@162) ($generated@@159 $generated@@163)))))
 :pattern ( ($generated@@157 $generated@@162 $generated@@163))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@72)
 :pattern ( ($generated@@164 $generated@@166))
)) (= (type $generated@@165) $generated@@142)))
(assert (= ($generated@@164 $generated@@165) $generated@@65))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@171) $generated@@68)) ($generated@@148 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@148 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@81 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@71 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@81) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@223) ($generated@@70 $generated@@4))) (= (type $generated@@225) $generated@@81)) (= (type $generated@@226) ($generated@@70 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@68)
 :pattern ( ($generated@@228 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (= (type $generated@@231) $generated@@68) (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@229 $generated@@232)) ($generated@@78 $generated@@165 ($generated@@228 $generated@@231) $generated@@232))
 :pattern ( ($generated@@78 $generated@@165 ($generated@@228 $generated@@231) $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@142)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) $generated@@68)) (= (type $generated@@239) $generated@@144)) (= (type $generated@@240) $generated@@144)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@151 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> (= (type $generated@@241) $generated@@68) ($generated@@148 $generated@@165 ($generated@@228 $generated@@241)))
 :pattern ( ($generated@@148 $generated@@165 ($generated@@228 $generated@@241)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@142) (= (type $generated@@243) $generated@@142)) (= ($generated@@157 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@157 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@142) (= (type $generated@@245) $generated@@142)) (= ($generated@@140 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@140 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@148 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@144) ($generated@@0 ($generated@@85 $generated@@248 $generated@@250))) ($generated@@234 $generated@@250 $generated@@249))
 :pattern ( ($generated@@85 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@148 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@144) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@234 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@142) (= (type $generated@@264) $generated@@142)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@140 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@140 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@140 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@142)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert  (=> true (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@142)) (or ($generated@@266 $generated@@269 $generated@@270) ($generated@@148 $generated@@270 ($generated@@228 $generated@@269)))) (= ($generated@@265 $generated@@269 $generated@@270) $generated@@270))
 :pattern ( ($generated@@265 $generated@@269 $generated@@270))
))))
(assert  (=> true (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@68) (= (type $generated@@274) $generated@@142)) (or ($generated@@272 $generated@@273 $generated@@274) ($generated@@148 $generated@@274 ($generated@@228 $generated@@273)))) (= ($generated@@271 $generated@@273 $generated@@274) ($generated@@262 $generated@@274)))
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@144)) (= (type $generated@@279) $generated@@144)) (= (type $generated@@280) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@229 $generated@@280)) (= ($generated@@78 ($generated@@233 $generated@@278 $generated@@279) ($generated@@151 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@78 ($generated@@233 $generated@@278 $generated@@279) ($generated@@151 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@142) (= ($generated@@150 $generated@@281) (= ($generated@@164 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@142) (= ($generated@@141 $generated@@282) (= ($generated@@164 $generated@@282) $generated@@64)))
 :pattern ( ($generated@@141 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@142) (= ($generated@@262 $generated@@283) (= ($generated@@164 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@142) ($generated@@150 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@144) (= (type $generated@@286) $generated@@144)) (= $generated@@284 ($generated@@233 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@150 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@142) ($generated@@262 $generated@@295)) (= $generated@@295 $generated@@165))
 :pattern ( ($generated@@262 $generated@@295))
)))
(assert  (=> true (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) $generated@@142)) (or ($generated@@297 $generated@@298 $generated@@299) ($generated@@148 $generated@@299 ($generated@@228 $generated@@298)))) (= ($generated@@296 $generated@@298 $generated@@299) ($generated@@256 5)))
 :pattern ( ($generated@@296 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@142)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@142) ($generated@@141 $generated@@302)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@144) (= $generated@@302 ($generated@@300 $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@141 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@144)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@68) (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@275 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@78 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@275 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@311) $generated@@144)) (= (type $generated@@312) $generated@@68)) ($generated@@136 $generated@@309 $generated@@310)) ($generated@@275 $generated@@311 $generated@@312 $generated@@309)) ($generated@@275 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@136 $generated@@309 $generated@@310) ($generated@@275 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@314) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@316) $generated@@68)) ($generated@@136 $generated@@313 $generated@@314)) ($generated@@78 $generated@@315 $generated@@316 $generated@@313)) ($generated@@78 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@136 $generated@@313 $generated@@314) ($generated@@78 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@319 T@T) ) (! (= (type ($generated@@318 $generated@@319)) ($generated@@80 $generated@@319 $generated@@2))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@83 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@80 $generated@@321 $generated@@2)) (and (= (= ($generated@@317 $generated@@320) 0) (= $generated@@320 ($generated@@318 $generated@@321))) (=> (not (= ($generated@@317 $generated@@320) 0)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) (< 0 ($generated ($generated@@85 $generated@@320 $generated@@322))))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@73)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@68) (and (= ($generated@@76 ($generated@@228 $generated@@325)) $generated@@63) (= ($generated@@323 ($generated@@228 $generated@@325)) $generated@@67)))
 :pattern ( ($generated@@228 $generated@@325))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@80 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@85 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@85 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@80 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@85 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@85 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@83 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@80 $generated@@363 $generated@@2)) (= ($generated@@168 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@85 $generated@@362 $generated@@364))) (<= ($generated ($generated@@85 $generated@@362 $generated@@364)) ($generated@@317 $generated@@362))))
 :pattern ( ($generated@@85 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@168 $generated@@362))
)))
(assert  (=> true (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@365) $generated@@68) (= (type $generated@@366) $generated@@142)) (or ($generated@@266 $generated@@365 ($generated@@258 $generated@@366)) ($generated@@148 $generated@@366 ($generated@@228 $generated@@365)))) (= ($generated@@265 $generated@@365 ($generated@@258 $generated@@366)) ($generated@@258 $generated@@366)))
 :weight 3
 :pattern ( ($generated@@265 $generated@@365 ($generated@@258 $generated@@366)))
))))
(assert  (=> true (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@367) $generated@@68) (= (type $generated@@368) $generated@@142)) (or ($generated@@297 $generated@@367 ($generated@@258 $generated@@368)) ($generated@@148 $generated@@368 ($generated@@228 $generated@@367)))) (= ($generated@@296 $generated@@367 ($generated@@258 $generated@@368)) ($generated@@256 5)))
 :weight 3
 :pattern ( ($generated@@296 $generated@@367 ($generated@@258 $generated@@368)))
))))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@330 (type $generated@@369))))
(let (($generated@@371 ($generated@@329 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@328 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@327 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@85 ($generated@@326 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@326 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@330 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@80 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@330 (type $generated@@376))))
(let (($generated@@378 ($generated@@329 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@328 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@327 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@348 (type $generated@@380))))
(let (($generated@@382 ($generated@@347 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@346 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@345 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@85 ($generated@@344 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@344 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@348 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@348 (type $generated@@387))))
(let (($generated@@389 ($generated@@347 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@346 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@345 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@85 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@392) $generated@@68)) (= ($generated@@148 $generated@@391 ($generated@@167 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@391 $generated@@393)))) ($generated@@234 $generated@@393 $generated@@392))
 :pattern ( ($generated@@85 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@148 $generated@@391 ($generated@@167 $generated@@392)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) $generated@@68) (= (type $generated@@395) $generated@@144)) (= (type $generated@@396) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@229 $generated@@396)) (= ($generated@@78 ($generated@@300 $generated@@395) ($generated@@228 $generated@@394) $generated@@396) ($generated@@275 $generated@@395 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@78 ($generated@@300 $generated@@395) ($generated@@228 $generated@@394) $generated@@396))
)))
(assert  (=> true (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@397) $generated@@68) (= (type $generated@@398) $generated@@142)) (or ($generated@@272 $generated@@397 $generated@@398) ($generated@@148 $generated@@398 ($generated@@228 $generated@@397)))) true)
 :pattern ( ($generated@@271 $generated@@397 $generated@@398))
))))
(assert  (=> true (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@399) $generated@@68) (= (type $generated@@400) $generated@@142)) (or ($generated@@297 $generated@@399 $generated@@400) ($generated@@148 $generated@@400 ($generated@@228 $generated@@399)))) true)
 :pattern ( ($generated@@296 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@402) $generated@@68)) (= (type $generated@@403) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@401 ($generated@@246 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@144) ($generated@@0 ($generated@@85 $generated@@401 $generated@@404))) ($generated@@275 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@85 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@78 $generated@@401 ($generated@@246 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@406) $generated@@68)) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@405 ($generated@@251 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@144) ($generated@@0 ($generated@@85 $generated@@405 $generated@@408))) ($generated@@275 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@85 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@78 $generated@@405 ($generated@@251 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(= ($generated ($generated@@85 ($generated@@318 $generated@@410) $generated@@409)) 0))
 :pattern ( (let (($generated@@410 (type $generated@@409)))
($generated@@85 ($generated@@318 $generated@@410) $generated@@409)))
)))
(assert  (and (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@411 $generated@@414)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@411 $generated@@414))
)) (forall (($generated@@415 T@T) ($generated@@416 T@U) ) (! (= (type ($generated@@412 $generated@@415 $generated@@416)) $generated@@415)
 :pattern ( ($generated@@412 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@330 (type $generated@@417))))
(let (($generated@@419 ($generated@@329 (type $generated@@417))))
(= (type ($generated@@413 $generated@@417)) ($generated@@80 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@413 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@328 $generated@@144 $generated@@144)) (= (type $generated@@421) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@411 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@85 ($generated@@326 $generated@@420) ($generated@@158 ($generated@@412 $generated@@142 $generated@@421)))) (= ($generated@@85 ($generated@@413 $generated@@420) ($generated@@158 ($generated@@412 $generated@@142 $generated@@421))) ($generated@@159 ($generated@@412 $generated@@142 $generated@@421))))))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@348 (type $generated@@425))))
(let (($generated@@427 ($generated@@347 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@80 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@346 $generated@@144 $generated@@144)) (= (type $generated@@429) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@85 ($generated@@344 $generated@@428) ($generated@@158 ($generated@@412 $generated@@142 $generated@@429)))) (= ($generated@@85 ($generated@@423 $generated@@428) ($generated@@158 ($generated@@412 $generated@@142 $generated@@429))) ($generated@@159 ($generated@@412 $generated@@142 $generated@@429))))))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@329 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@328 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@85 ($generated@@373 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@85 ($generated@@326 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@85 ($generated@@413 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@85 ($generated@@326 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@347 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@346 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@85 ($generated@@384 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@85 ($generated@@344 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@85 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@85 ($generated@@344 $generated@@435) $generated@@439))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@435) $generated@@436))
)))
(assert  (=> true (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@440) $generated@@68) (= (type $generated@@441) $generated@@142)) (or ($generated@@272 $generated@@440 ($generated@@258 $generated@@441)) ($generated@@148 $generated@@441 ($generated@@228 $generated@@440)))) (= ($generated@@271 $generated@@440 ($generated@@258 $generated@@441)) ($generated@@0 ($generated@@258 ($generated@@11 ($generated@@262 ($generated@@258 $generated@@441)))))))
 :weight 3
 :pattern ( ($generated@@271 $generated@@440 ($generated@@258 $generated@@441)))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@328 $generated@@144 $generated@@144)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@326 $generated@@445) $generated@@449))) (and ($generated@@275 ($generated@@85 ($generated@@413 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@275 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@326 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@346 $generated@@144 $generated@@144)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) $generated@@68)) (= (type $generated@@456) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@344 $generated@@453) $generated@@457))) (and ($generated@@275 ($generated@@85 ($generated@@423 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@275 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@453) $generated@@457))
 :pattern ( ($generated@@85 ($generated@@344 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@78 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@142)) ($generated@@148 $generated@@459 ($generated@@228 $generated@@458))) (or ($generated@@141 $generated@@459) ($generated@@262 $generated@@459)))
 :pattern ( ($generated@@262 $generated@@459) ($generated@@148 $generated@@459 ($generated@@228 $generated@@458)))
 :pattern ( ($generated@@141 $generated@@459) ($generated@@148 $generated@@459 ($generated@@228 $generated@@458)))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@460 $generated@@462))) (and ($generated@@136 $generated@@460 $generated@@461) ($generated@@136 $generated@@461 $generated@@462))) ($generated@@136 $generated@@460 $generated@@462))
 :pattern ( ($generated@@136 $generated@@460 $generated@@461) ($generated@@136 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@80 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@348 (type $generated@@465))))
(let (($generated@@467 ($generated@@347 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@346 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@345 $generated@@467 $generated@@466)) (= ($generated@@344 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@344 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@348 (type $generated@@468))))
(let (($generated@@470 ($generated@@347 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@346 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@345 $generated@@470 $generated@@469)) (= ($generated@@384 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@384 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@348 (type $generated@@471))))
(let (($generated@@473 ($generated@@347 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@346 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@345 $generated@@473 $generated@@472)) (= ($generated@@422 $generated@@471) ($generated@@463 $generated@@144))))))
 :pattern ( ($generated@@422 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@330 (type $generated@@474))))
(let (($generated@@476 ($generated@@329 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@328 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@327 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@144) (= (type $generated@@478) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@411 $generated@@474) ($generated@@304 ($generated@@233 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@411 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@348 (type $generated@@479))))
(let (($generated@@481 ($generated@@347 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@346 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@345 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@144) (= (type $generated@@483) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@422 $generated@@479) ($generated@@304 ($generated@@233 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@422 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@144) ($generated@@234 $generated@@484 $generated@@46)) (and (= ($generated@@304 ($generated@@412 $generated@@2 $generated@@484)) $generated@@484) ($generated@@148 ($generated@@412 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@144) ($generated@@234 $generated@@485 $generated@@47)) (and (= ($generated@@304 ($generated@@412 $generated@@3 $generated@@485)) $generated@@485) ($generated@@148 ($generated@@412 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@144) ($generated@@234 $generated@@486 $generated@@44)) (and (= ($generated@@304 ($generated@@412 $generated@@4 $generated@@486)) $generated@@486) ($generated@@148 ($generated@@412 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 20))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@144) ($generated@@234 $generated@@488 $generated@@45)) (and (= ($generated@@304 ($generated@@412 $generated@@487 $generated@@488)) $generated@@488) ($generated@@148 ($generated@@412 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@234 ($generated@@304 $generated@@489) $generated@@490) ($generated@@148 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@234 ($generated@@304 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@83 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@80 $generated@@492 $generated@@2)) (<= 0 ($generated@@317 $generated@@491))))
 :pattern ( ($generated@@317 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@290 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@289 $generated@@494)) (<= 0 ($generated@@288 $generated@@493))))
 :pattern ( ($generated@@288 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@442 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@442 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@442 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@442 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@450 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@450 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@450 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@450 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@450 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@144) (= (type $generated@@516) $generated@@144)) (= ($generated@@164 ($generated@@233 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@151 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@151 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@151 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@151 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@144) (= (type $generated@@526) $generated@@144)) (= ($generated@@158 ($generated@@233 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@233 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@144) (= (type $generated@@528) $generated@@144)) (= ($generated@@159 ($generated@@233 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@233 $generated@@527 $generated@@528))
)))
(assert  (and (forall (($generated@@531 T@U) ) (! (= (type ($generated@@529 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@531))
)) (forall (($generated@@532 T@U) ($generated@@533 Int) ) (! (let (($generated@@534 ($generated@@290 (type $generated@@532))))
(= (type ($generated@@530 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@530 $generated@@532 $generated@@533))
))))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@289 $generated@@144)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@535 ($generated@@529 $generated@@536) $generated@@537) (forall (($generated@@538 Int) ) (!  (=> (and (<= 0 $generated@@538) (< $generated@@538 ($generated@@288 $generated@@535))) ($generated@@275 ($generated@@530 $generated@@535 $generated@@538) $generated@@536 $generated@@537))
 :pattern ( ($generated@@530 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@78 $generated@@535 ($generated@@529 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@539 ($generated@@79 $generated@@540)) $generated@@540)
 :pattern ( ($generated@@79 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@246 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@246 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@544)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@251 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@251 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@548)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@167 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@167 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@76 ($generated@@167 $generated@@552)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@553 ($generated@@529 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@529 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@76 ($generated@@529 $generated@@556)) $generated@@57))
 :pattern ( ($generated@@529 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@557 ($generated@@228 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@228 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@144) (= ($generated@@164 ($generated@@300 $generated@@560)) $generated@@64))
 :pattern ( ($generated@@300 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@144) (= ($generated@@143 ($generated@@300 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@300 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(= ($generated@@412 $generated@@563 ($generated@@304 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@304 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@328 $generated@@144 $generated@@144)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@148 $generated@@564 ($generated@@442 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@326 $generated@@564) $generated@@567))) (and ($generated@@234 ($generated@@85 ($generated@@413 $generated@@564) $generated@@567) $generated@@566) ($generated@@234 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@326 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@148 $generated@@564 ($generated@@442 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@346 $generated@@144 $generated@@144)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@148 $generated@@568 ($generated@@450 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@344 $generated@@568) $generated@@571))) (and ($generated@@234 ($generated@@85 ($generated@@423 $generated@@568) $generated@@571) $generated@@570) ($generated@@234 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@568) $generated@@571))
 :pattern ( ($generated@@85 ($generated@@344 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@148 $generated@@568 ($generated@@450 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@144)) (= ($generated@@148 ($generated@@300 $generated@@573) ($generated@@228 $generated@@572)) ($generated@@234 $generated@@573 $generated@@572)))
 :pattern ( ($generated@@148 ($generated@@300 $generated@@573) ($generated@@228 $generated@@572)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@144) (= (type $generated@@577) $generated@@144)) (< ($generated@@574 $generated@@576) ($generated@@575 ($generated@@233 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@233 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@144)) (< ($generated@@574 $generated@@579) ($generated@@575 ($generated@@233 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@233 $generated@@578 $generated@@579))
)))
(assert  (=> true (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@142)) (or ($generated@@266 $generated@@580 $generated@@581) ($generated@@148 $generated@@581 ($generated@@228 $generated@@580)))) ($generated@@148 ($generated@@265 $generated@@580 $generated@@581) ($generated@@228 $generated@@580)))
 :pattern ( ($generated@@265 $generated@@580 $generated@@581))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@144) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@234 $generated@@582 ($generated@@442 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@412 ($generated@@328 $generated@@144 $generated@@144) $generated@@582)) $generated@@582) ($generated@@148 ($generated@@412 ($generated@@328 $generated@@144 $generated@@144) $generated@@582) ($generated@@442 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@234 $generated@@582 ($generated@@442 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@144) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) ($generated@@234 $generated@@585 ($generated@@450 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@412 ($generated@@346 $generated@@144 $generated@@144) $generated@@585)) $generated@@585) ($generated@@148 ($generated@@412 ($generated@@346 $generated@@144 $generated@@144) $generated@@585) ($generated@@450 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@234 $generated@@585 ($generated@@450 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@68) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) $generated@@144)) ($generated@@234 $generated@@590 ($generated@@151 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@412 $generated@@142 $generated@@590)) $generated@@590) ($generated@@148 ($generated@@412 $generated@@142 $generated@@590) ($generated@@151 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@234 $generated@@590 ($generated@@151 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@144) (< ($generated@@574 $generated@@591) ($generated@@575 ($generated@@300 $generated@@591))))
 :pattern ( ($generated@@300 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@142) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@229 $generated@@594) (and ($generated@@141 $generated@@592) ($generated@@78 $generated@@592 ($generated@@228 $generated@@593) $generated@@594)))) ($generated@@275 ($generated@@143 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@275 ($generated@@143 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (not ($generated@@0 ($generated@@85 ($generated@@463 $generated@@596) $generated@@595))))
 :pattern ( (let (($generated@@596 (type $generated@@595)))
($generated@@85 ($generated@@463 $generated@@596) $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@68) (= (type $generated@@598) $generated@@68)) (and (= ($generated@@76 ($generated@@151 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@323 ($generated@@151 $generated@@597 $generated@@598)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@142) (= ($generated@@574 ($generated@@304 $generated@@599)) ($generated@@575 $generated@@599)))
 :pattern ( ($generated@@574 ($generated@@304 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@144) ($generated@@234 $generated@@600 ($generated@@79 0))) (and (= ($generated@@304 ($generated@@412 $generated@@2 $generated@@600)) $generated@@600) ($generated@@148 ($generated@@412 ($generated@@80 $generated@@144 $generated@@4) $generated@@600) ($generated@@79 0))))
 :pattern ( ($generated@@234 $generated@@600 ($generated@@79 0)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@144) (= (type $generated@@602) $generated@@68)) ($generated@@234 $generated@@601 ($generated@@246 $generated@@602))) (and (= ($generated@@304 ($generated@@412 ($generated@@80 $generated@@144 $generated@@4) $generated@@601)) $generated@@601) ($generated@@148 ($generated@@412 ($generated@@80 $generated@@144 $generated@@4) $generated@@601) ($generated@@246 $generated@@602))))
 :pattern ( ($generated@@234 $generated@@601 ($generated@@246 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@144) (= (type $generated@@604) $generated@@68)) ($generated@@234 $generated@@603 ($generated@@251 $generated@@604))) (and (= ($generated@@304 ($generated@@412 ($generated@@80 $generated@@144 $generated@@4) $generated@@603)) $generated@@603) ($generated@@148 ($generated@@412 ($generated@@80 $generated@@144 $generated@@4) $generated@@603) ($generated@@251 $generated@@604))))
 :pattern ( ($generated@@234 $generated@@603 ($generated@@251 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@144) (= (type $generated@@606) $generated@@68)) ($generated@@234 $generated@@605 ($generated@@167 $generated@@606))) (and (= ($generated@@304 ($generated@@412 ($generated@@80 $generated@@144 $generated@@2) $generated@@605)) $generated@@605) ($generated@@148 ($generated@@412 ($generated@@80 $generated@@144 $generated@@2) $generated@@605) ($generated@@167 $generated@@606))))
 :pattern ( ($generated@@234 $generated@@605 ($generated@@167 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@144) (= (type $generated@@608) $generated@@68)) ($generated@@234 $generated@@607 ($generated@@529 $generated@@608))) (and (= ($generated@@304 ($generated@@412 ($generated@@289 $generated@@144) $generated@@607)) $generated@@607) ($generated@@148 ($generated@@412 ($generated@@289 $generated@@144) $generated@@607) ($generated@@529 $generated@@608))))
 :pattern ( ($generated@@234 $generated@@607 ($generated@@529 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@144)) ($generated@@234 $generated@@610 ($generated@@228 $generated@@609))) (and (= ($generated@@304 ($generated@@412 $generated@@142 $generated@@610)) $generated@@610) ($generated@@148 ($generated@@412 $generated@@142 $generated@@610) ($generated@@228 $generated@@609))))
 :pattern ( ($generated@@234 $generated@@610 ($generated@@228 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@611 ($generated@@167 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@611 $generated@@614)))) ($generated@@275 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@85 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@78 $generated@@611 ($generated@@167 $generated@@612) $generated@@613))
)))
(assert (= $generated@@165 ($generated@@258 $generated@@165)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@142) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@229 $generated@@617) (and ($generated@@150 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@68) ($generated@@78 $generated@@615 ($generated@@151 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@78 $generated@@615 ($generated@@151 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@275 ($generated@@158 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@275 ($generated@@158 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@142) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@229 $generated@@621) (and ($generated@@150 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@68) ($generated@@78 $generated@@619 ($generated@@151 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@78 $generated@@619 ($generated@@151 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@275 ($generated@@159 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@275 ($generated@@159 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@144) (= (type $generated@@624) $generated@@144)) (= ($generated@@233 ($generated@@258 $generated@@623) ($generated@@258 $generated@@624)) ($generated@@258 ($generated@@233 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@233 ($generated@@258 $generated@@623) ($generated@@258 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@256 $generated@@625))) ($generated@@258 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@256 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@144) (= ($generated@@300 ($generated@@258 $generated@@626)) ($generated@@258 ($generated@@300 $generated@@626))))
 :pattern ( ($generated@@300 ($generated@@258 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@304 ($generated@@258 $generated@@627)) ($generated@@258 ($generated@@304 $generated@@627)))
 :pattern ( ($generated@@304 ($generated@@258 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@290 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@289 $generated@@629)) (= ($generated@@288 $generated@@628) 0)) (= $generated@@628 ($generated@@287 $generated@@629))))
 :pattern ( ($generated@@288 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@80 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@317 ($generated@@86 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@317 $generated@@630) ($generated ($generated@@85 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@317 ($generated@@86 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@2)) ($generated@@78 $generated@@635 $generated@@46 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@46 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@3)) ($generated@@78 $generated@@637 $generated@@47 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@47 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@4)) ($generated@@78 $generated@@639 $generated@@44 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@44 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@487)) ($generated@@78 $generated@@641 $generated@@45 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@45 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@144)) ($generated@@78 $generated@@643 $generated@@48 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@48 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@289 $generated@@144)) (= (type $generated@@645) $generated@@68)) (= ($generated@@148 $generated@@644 ($generated@@529 $generated@@645)) (forall (($generated@@646 Int) ) (!  (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@288 $generated@@644))) ($generated@@234 ($generated@@530 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@530 $generated@@644 $generated@@646))
))))
 :pattern ( ($generated@@148 $generated@@644 ($generated@@529 $generated@@645)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 Int) ) (!  (=> (= (type $generated@@648) ($generated@@289 $generated@@144)) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@288 $generated@@648))) (< ($generated@@575 ($generated@@412 $generated@@142 ($generated@@530 $generated@@648 $generated@@649))) ($generated@@647 $generated@@648))))
 :pattern ( ($generated@@575 ($generated@@412 $generated@@142 ($generated@@530 $generated@@648 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@328 $generated@@144 $generated@@144)) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) ($generated@@148 $generated@@650 ($generated@@442 $generated@@651 $generated@@652))) (and (and ($generated@@148 ($generated@@326 $generated@@650) ($generated@@246 $generated@@651)) ($generated@@148 ($generated@@373 $generated@@650) ($generated@@246 $generated@@652))) ($generated@@148 ($generated@@411 $generated@@650) ($generated@@246 ($generated@@151 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@148 $generated@@650 ($generated@@442 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@346 $generated@@144 $generated@@144)) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) $generated@@68)) ($generated@@148 $generated@@653 ($generated@@450 $generated@@654 $generated@@655))) (and (and ($generated@@148 ($generated@@344 $generated@@653) ($generated@@251 $generated@@654)) ($generated@@148 ($generated@@384 $generated@@653) ($generated@@251 $generated@@655))) ($generated@@148 ($generated@@422 $generated@@653) ($generated@@251 ($generated@@151 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@148 $generated@@653 ($generated@@450 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@2) ($generated@@148 $generated@@656 $generated@@46))
 :pattern ( ($generated@@148 $generated@@656 $generated@@46))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@3) ($generated@@148 $generated@@657 $generated@@47))
 :pattern ( ($generated@@148 $generated@@657 $generated@@47))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@4) ($generated@@148 $generated@@658 $generated@@44))
 :pattern ( ($generated@@148 $generated@@658 $generated@@44))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@487) ($generated@@148 $generated@@659 $generated@@45))
 :pattern ( ($generated@@148 $generated@@659 $generated@@45))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@144) ($generated@@148 $generated@@660 $generated@@48))
 :pattern ( ($generated@@148 $generated@@660 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
