(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@T) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@641 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert  (and (= (type $generated@@145) $generated@@73) (= (type $generated@@146) $generated@@86)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@86) (= (type $generated@@148) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@147 $generated@@145 $generated@@148)  (or (= $generated@@147 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@147 $generated@@145 $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@73))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@86) (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@150 $generated@@149 $generated@@151)  (or (= $generated@@150 $generated@@146) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@152 $generated@@153 ($generated@@84 0)))
 :pattern ( ($generated@@152 $generated@@153 ($generated@@84 0)))
)))
(assert ($generated@@154 $generated@@149))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@73)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@73) (= (type $generated@@161) $generated@@73)) (= (type $generated@@162) $generated@@157)) ($generated@@152 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@152 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@73))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@86) (=> (and (not (= $generated@@172 $generated@@146)) ($generated@@152 $generated@@172 $generated@@149)) ($generated@@152 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@152 $generated@@172 $generated@@149))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@73)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@85 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@73)) ($generated@@152 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@152 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@73)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@73) (= (type $generated@@182) $generated@@157)) ($generated@@152 $generated@@182 ($generated@@179 $generated@@181))) ($generated@@178 $generated@@182))
 :pattern ( ($generated@@178 $generated@@182) ($generated@@152 $generated@@182 ($generated@@179 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@73)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@86) (= ($generated@@152 $generated@@185 $generated@@149)  (or (= $generated@@185 $generated@@146) (= ($generated@@183 $generated@@185) $generated@@149))))
 :pattern ( ($generated@@152 $generated@@185 $generated@@149))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@86 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@76 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@86) (= (type $generated@@236) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@237) ($generated@@75 $generated@@4))) (= (type $generated@@239) $generated@@86)) (= (type $generated@@240) ($generated@@75 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@86) (= (type $generated@@243) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@242 $generated@@171 $generated@@243) ($generated@@83 $generated@@242 $generated@@145 $generated@@243)))
 :pattern ( ($generated@@83 $generated@@242 $generated@@171 $generated@@243))
)))
(assert (= (type $generated@@244) $generated@@73))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@86) (= (type $generated@@246) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@245 $generated@@244 $generated@@246) ($generated@@83 $generated@@245 $generated@@149 $generated@@246)))
 :pattern ( ($generated@@83 $generated@@245 $generated@@244 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@157)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@73) (= (type $generated@@252) $generated@@73)) (= (type $generated@@253) $generated@@166)) (= (type $generated@@254) $generated@@166)) (= ($generated@@152 ($generated@@247 $generated@@253 $generated@@254) ($generated@@156 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@152 ($generated@@247 $generated@@253 $generated@@254) ($generated@@156 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@157) (= (type $generated@@256) $generated@@157)) (= ($generated@@163 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@163 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@157) (= (type $generated@@259) $generated@@157)) (= ($generated@@257 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@73)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@85 $generated@@166 $generated@@4)) (= (type $generated@@263) $generated@@73)) (= ($generated@@152 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@166) ($generated@@0 ($generated@@90 $generated@@262 $generated@@264))) ($generated@@248 $generated@@264 $generated@@263))
 :pattern ( ($generated@@90 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@152 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@85 $generated@@166 $generated@@4)) (= (type $generated@@268) $generated@@73)) (= ($generated@@152 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@166) ($generated@@0 ($generated@@90 $generated@@267 $generated@@269))) ($generated@@248 $generated@@269 $generated@@268))
 :pattern ( ($generated@@90 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@152 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@73) (= (type $generated@@277) $generated@@73)) (= (type $generated@@278) $generated@@166)) (= (type $generated@@279) $generated@@166)) (= (type $generated@@280) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@274 $generated@@280)) (= ($generated@@83 ($generated@@247 $generated@@278 $generated@@279) ($generated@@156 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@83 ($generated@@247 $generated@@278 $generated@@279) ($generated@@156 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@77)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@157) (= ($generated@@155 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@157) (= ($generated@@178 $generated@@284) (= ($generated@@281 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@178 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@157) ($generated@@155 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@166) (= (type $generated@@287) $generated@@166)) (= $generated@@285 ($generated@@247 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@155 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 17)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@166)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@157) (= (type $generated@@299) $generated@@157)) true) (= ($generated@@257 $generated@@298 $generated@@299) (= ($generated@@296 $generated@@298) ($generated@@296 $generated@@299))))
 :pattern ( ($generated@@257 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@157)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@157) ($generated@@178 $generated@@302)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@166) (= $generated@@302 ($generated@@300 $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@178 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@166)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@73) (= (type $generated@@308) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@275 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@83 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@275 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@310) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@311) $generated@@166)) (= (type $generated@@312) $generated@@73)) ($generated@@141 $generated@@309 $generated@@310)) ($generated@@275 $generated@@311 $generated@@312 $generated@@309)) ($generated@@275 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@141 $generated@@309 $generated@@310) ($generated@@275 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@314) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@316) $generated@@73)) ($generated@@141 $generated@@313 $generated@@314)) ($generated@@83 $generated@@315 $generated@@316 $generated@@313)) ($generated@@83 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@141 $generated@@313 $generated@@314) ($generated@@83 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@319 T@T) ) (! (= (type ($generated@@318 $generated@@319)) ($generated@@85 $generated@@319 $generated@@2))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@88 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@85 $generated@@321 $generated@@2)) (and (= (= ($generated@@317 $generated@@320) 0) (= $generated@@320 ($generated@@318 $generated@@321))) (=> (not (= ($generated@@317 $generated@@320) 0)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) (< 0 ($generated ($generated@@90 $generated@@320 $generated@@322))))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@78)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@73) (and (= ($generated@@81 ($generated@@179 $generated@@325)) $generated@@64) (= ($generated@@323 ($generated@@179 $generated@@325)) $generated@@70)))
 :pattern ( ($generated@@179 $generated@@325))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@85 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@90 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@90 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@85 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@90 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@90 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@88 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@85 $generated@@363 $generated@@2)) (= ($generated@@174 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@90 $generated@@362 $generated@@364))) (<= ($generated ($generated@@90 $generated@@362 $generated@@364)) ($generated@@317 $generated@@362))))
 :pattern ( ($generated@@90 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@174 $generated@@362))
)))
(assert (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@166) ($generated@@248 $generated@@368 $generated@@145)) (and (= ($generated@@304 ($generated@@365 $generated@@86 $generated@@368)) $generated@@368) ($generated@@152 ($generated@@365 $generated@@86 $generated@@368) $generated@@145)))
 :pattern ( ($generated@@248 $generated@@368 $generated@@145))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) ($generated@@248 $generated@@369 $generated@@171)) (and (= ($generated@@304 ($generated@@365 $generated@@86 $generated@@369)) $generated@@369) ($generated@@152 ($generated@@365 $generated@@86 $generated@@369) $generated@@171)))
 :pattern ( ($generated@@248 $generated@@369 $generated@@171))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@166) ($generated@@248 $generated@@370 $generated@@149)) (and (= ($generated@@304 ($generated@@365 $generated@@86 $generated@@370)) $generated@@370) ($generated@@152 ($generated@@365 $generated@@86 $generated@@370) $generated@@149)))
 :pattern ( ($generated@@248 $generated@@370 $generated@@149))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@166) ($generated@@248 $generated@@371 $generated@@244)) (and (= ($generated@@304 ($generated@@365 $generated@@86 $generated@@371)) $generated@@371) ($generated@@152 ($generated@@365 $generated@@86 $generated@@371) $generated@@244)))
 :pattern ( ($generated@@248 $generated@@371 $generated@@244))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@86) (= ($generated@@152 $generated@@372 $generated@@171)  (and ($generated@@152 $generated@@372 $generated@@145) (not (= $generated@@372 $generated@@146)))))
 :pattern ( ($generated@@152 $generated@@372 $generated@@171))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@86) (= ($generated@@152 $generated@@373 $generated@@244)  (and ($generated@@152 $generated@@373 $generated@@149) (not (= $generated@@373 $generated@@146)))))
 :pattern ( ($generated@@152 $generated@@373 $generated@@244))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@330 (type $generated@@374))))
(let (($generated@@376 ($generated@@329 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@328 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@327 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@90 ($generated@@326 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@326 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@330 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@85 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@330 (type $generated@@381))))
(let (($generated@@383 ($generated@@329 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@328 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@327 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@90 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@348 (type $generated@@385))))
(let (($generated@@387 ($generated@@347 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@346 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@345 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@344 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@348 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@85 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@348 (type $generated@@392))))
(let (($generated@@394 ($generated@@347 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@346 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@345 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@90 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@85 $generated@@166 $generated@@2)) (= (type $generated@@397) $generated@@73)) (= ($generated@@152 $generated@@396 ($generated@@173 $generated@@397)) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@166) (< 0 ($generated ($generated@@90 $generated@@396 $generated@@398)))) ($generated@@248 $generated@@398 $generated@@397))
 :pattern ( ($generated@@90 $generated@@396 $generated@@398))
))))
 :pattern ( ($generated@@152 $generated@@396 ($generated@@173 $generated@@397)))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) $generated@@73) (= (type $generated@@400) $generated@@166)) (= (type $generated@@401) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@274 $generated@@401)) (= ($generated@@83 ($generated@@300 $generated@@400) ($generated@@179 $generated@@399) $generated@@401) ($generated@@275 $generated@@400 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@400) ($generated@@179 $generated@@399) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@85 $generated@@166 $generated@@4)) (= (type $generated@@403) $generated@@73)) (= (type $generated@@404) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@402 ($generated@@260 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@166) ($generated@@0 ($generated@@90 $generated@@402 $generated@@405))) ($generated@@275 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@90 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@260 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@85 $generated@@166 $generated@@4)) (= (type $generated@@407) $generated@@73)) (= (type $generated@@408) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@406 ($generated@@265 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@166) ($generated@@0 ($generated@@90 $generated@@406 $generated@@409))) ($generated@@275 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@90 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@83 $generated@@406 ($generated@@265 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@90 ($generated@@318 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@90 ($generated@@318 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@85 $generated@@166 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@330 (type $generated@@415))))
(let (($generated@@417 ($generated@@329 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@85 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@328 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@166)) (= ($generated@@0 ($generated@@90 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@90 ($generated@@326 $generated@@418) ($generated@@164 ($generated@@365 $generated@@157 $generated@@419)))) (= ($generated@@90 ($generated@@413 $generated@@418) ($generated@@164 ($generated@@365 $generated@@157 $generated@@419))) ($generated@@165 ($generated@@365 $generated@@157 $generated@@419))))))
 :pattern ( ($generated@@90 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@85 $generated@@166 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@348 (type $generated@@423))))
(let (($generated@@425 ($generated@@347 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@85 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@346 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@166)) (= ($generated@@0 ($generated@@90 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@90 ($generated@@344 $generated@@426) ($generated@@164 ($generated@@365 $generated@@157 $generated@@427)))) (= ($generated@@90 ($generated@@421 $generated@@426) ($generated@@164 ($generated@@365 $generated@@157 $generated@@427))) ($generated@@165 ($generated@@365 $generated@@157 $generated@@427))))))
 :pattern ( ($generated@@90 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@329 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@328 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@90 ($generated@@378 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@90 ($generated@@326 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@90 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@90 ($generated@@326 $generated@@428) $generated@@432))
 :pattern ( ($generated@@90 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@90 ($generated@@378 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@347 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@346 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@90 ($generated@@389 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@90 ($generated@@344 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@90 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@433) $generated@@437))
 :pattern ( ($generated@@90 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@73)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@328 $generated@@166 $generated@@166)) (= (type $generated@@442) $generated@@73)) (= (type $generated@@443) $generated@@73)) (= (type $generated@@444) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@326 $generated@@441) $generated@@445))) (and ($generated@@275 ($generated@@90 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@275 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@90 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@90 ($generated@@326 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@83 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@73)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@346 $generated@@166 $generated@@166)) (= (type $generated@@450) $generated@@73)) (= (type $generated@@451) $generated@@73)) (= (type $generated@@452) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@449) $generated@@453))) (and ($generated@@275 ($generated@@90 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@275 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@90 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@83 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@454) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@455) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@456) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@454 $generated@@456))) (and ($generated@@141 $generated@@454 $generated@@455) ($generated@@141 $generated@@455 $generated@@456))) ($generated@@141 $generated@@454 $generated@@456))
 :pattern ( ($generated@@141 $generated@@454 $generated@@455) ($generated@@141 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@T) ) (! (= (type ($generated@@457 $generated@@458)) ($generated@@85 $generated@@458 $generated@@4))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@348 (type $generated@@459))))
(let (($generated@@461 ($generated@@347 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@346 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@345 $generated@@461 $generated@@460)) (= ($generated@@344 $generated@@459) ($generated@@457 $generated@@461))))))
 :pattern ( ($generated@@344 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@348 (type $generated@@462))))
(let (($generated@@464 ($generated@@347 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@346 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@345 $generated@@464 $generated@@463)) (= ($generated@@389 $generated@@462) ($generated@@457 $generated@@463))))))
 :pattern ( ($generated@@389 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@348 (type $generated@@465))))
(let (($generated@@467 ($generated@@347 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@346 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@345 $generated@@467 $generated@@466)) (= ($generated@@420 $generated@@465) ($generated@@457 $generated@@166))))))
 :pattern ( ($generated@@420 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@330 (type $generated@@468))))
(let (($generated@@470 ($generated@@329 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@328 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@327 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@166) (= (type $generated@@472) $generated@@166)) ($generated@@0 ($generated@@90 ($generated@@412 $generated@@468) ($generated@@304 ($generated@@247 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@412 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@348 (type $generated@@473))))
(let (($generated@@475 ($generated@@347 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@346 $generated@@475 $generated@@474)) (or (= $generated@@473 ($generated@@345 $generated@@475 $generated@@474)) (exists (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (and (and (= (type $generated@@476) $generated@@166) (= (type $generated@@477) $generated@@166)) ($generated@@0 ($generated@@90 ($generated@@420 $generated@@473) ($generated@@304 ($generated@@247 $generated@@476 $generated@@477)))))
 :no-pattern (type $generated@@476)
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@420 $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@166) ($generated@@248 $generated@@478 $generated@@46)) (and (= ($generated@@304 ($generated@@365 $generated@@2 $generated@@478)) $generated@@478) ($generated@@152 ($generated@@365 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@166) ($generated@@248 $generated@@479 $generated@@47)) (and (= ($generated@@304 ($generated@@365 $generated@@3 $generated@@479)) $generated@@479) ($generated@@152 ($generated@@365 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@166) ($generated@@248 $generated@@480 $generated@@44)) (and (= ($generated@@304 ($generated@@365 $generated@@4 $generated@@480)) $generated@@480) ($generated@@152 ($generated@@365 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 20))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@166) ($generated@@248 $generated@@482 $generated@@45)) (and (= ($generated@@304 ($generated@@365 $generated@@481 $generated@@482)) $generated@@482) ($generated@@152 ($generated@@365 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@73) (= ($generated@@248 ($generated@@304 $generated@@483) $generated@@484) ($generated@@152 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@248 ($generated@@304 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@88 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@85 $generated@@486 $generated@@2)) (<= 0 ($generated@@317 $generated@@485))))
 :pattern ( ($generated@@317 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@291 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@290 $generated@@488)) (<= 0 ($generated@@289 $generated@@487))))
 :pattern ( ($generated@@289 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@73)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@73) (= (type $generated@@492) $generated@@73)) (= ($generated@@489 ($generated@@438 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@438 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@73)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@73) (= (type $generated@@496) $generated@@73)) (= ($generated@@493 ($generated@@438 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@438 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@81 ($generated@@438 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@73) (= (type $generated@@502) $generated@@73)) (= ($generated@@499 ($generated@@446 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@446 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@73)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@73) (= (type $generated@@506) $generated@@73)) (= ($generated@@503 ($generated@@446 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@446 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@81 ($generated@@446 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@166) (= (type $generated@@510) $generated@@166)) (= ($generated@@281 ($generated@@247 $generated@@509 $generated@@510)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@73) (= (type $generated@@514) $generated@@73)) (= ($generated@@511 ($generated@@156 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@156 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@73)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@73) (= (type $generated@@518) $generated@@73)) (= ($generated@@515 ($generated@@156 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@156 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@166) (= (type $generated@@520) $generated@@166)) (= ($generated@@164 ($generated@@247 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@247 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@166) (= (type $generated@@522) $generated@@166)) (= ($generated@@165 ($generated@@247 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@247 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@291 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@290 $generated@@166)) (= (type $generated@@530) $generated@@73)) (= (type $generated@@531) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@289 $generated@@529))) ($generated@@275 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@83 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@84 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@84 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@73) (= ($generated@@535 ($generated@@260 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@260 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@73) (= ($generated@@81 ($generated@@260 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@73)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@73) (= ($generated@@539 ($generated@@265 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@265 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@73) (= ($generated@@81 ($generated@@265 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@73)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@73) (= ($generated@@543 ($generated@@173 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@173 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@73) (= ($generated@@81 ($generated@@173 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@73)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@73) (= ($generated@@81 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@166) (= ($generated@@281 ($generated@@300 $generated@@551)) $generated@@63))
 :pattern ( ($generated@@300 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@73)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@73) (= ($generated@@552 ($generated@@179 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@179 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@166) (= ($generated@@296 ($generated@@300 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@300 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@365 $generated@@557 ($generated@@304 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@304 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@328 $generated@@166 $generated@@166)) (= (type $generated@@559) $generated@@73)) (= (type $generated@@560) $generated@@73)) (= ($generated@@152 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@326 $generated@@558) $generated@@561))) (and ($generated@@248 ($generated@@90 ($generated@@413 $generated@@558) $generated@@561) $generated@@560) ($generated@@248 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@90 ($generated@@413 $generated@@558) $generated@@561))
 :pattern ( ($generated@@90 ($generated@@326 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@152 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@346 $generated@@166 $generated@@166)) (= (type $generated@@563) $generated@@73)) (= (type $generated@@564) $generated@@73)) (= ($generated@@152 $generated@@562 ($generated@@446 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@562) $generated@@565))) (and ($generated@@248 ($generated@@90 ($generated@@421 $generated@@562) $generated@@565) $generated@@564) ($generated@@248 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@90 ($generated@@421 $generated@@562) $generated@@565))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@152 $generated@@562 ($generated@@446 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@73) (= (type $generated@@567) $generated@@166)) (= ($generated@@152 ($generated@@300 $generated@@567) ($generated@@179 $generated@@566)) ($generated@@248 $generated@@567 $generated@@566)))
 :pattern ( ($generated@@152 ($generated@@300 $generated@@567) ($generated@@179 $generated@@566)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@166) (= (type $generated@@571) $generated@@166)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@247 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@247 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@166) (= (type $generated@@573) $generated@@166)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@247 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@247 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@166) (= (type $generated@@575) $generated@@73)) (= (type $generated@@576) $generated@@73)) ($generated@@248 $generated@@574 ($generated@@438 $generated@@575 $generated@@576))) (and (= ($generated@@304 ($generated@@365 ($generated@@328 $generated@@166 $generated@@166) $generated@@574)) $generated@@574) ($generated@@152 ($generated@@365 ($generated@@328 $generated@@166 $generated@@166) $generated@@574) ($generated@@438 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@248 $generated@@574 ($generated@@438 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@166) (= (type $generated@@578) $generated@@73)) (= (type $generated@@579) $generated@@73)) ($generated@@248 $generated@@577 ($generated@@446 $generated@@578 $generated@@579))) (and (= ($generated@@304 ($generated@@365 ($generated@@346 $generated@@166 $generated@@166) $generated@@577)) $generated@@577) ($generated@@152 ($generated@@365 ($generated@@346 $generated@@166 $generated@@166) $generated@@577) ($generated@@446 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@248 $generated@@577 ($generated@@446 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@73) (= (type $generated@@581) $generated@@73)) (= (type $generated@@582) $generated@@166)) ($generated@@248 $generated@@582 ($generated@@156 $generated@@580 $generated@@581))) (and (= ($generated@@304 ($generated@@365 $generated@@157 $generated@@582)) $generated@@582) ($generated@@152 ($generated@@365 $generated@@157 $generated@@582) ($generated@@156 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@248 $generated@@582 ($generated@@156 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@166) (< ($generated@@568 $generated@@583) ($generated@@569 ($generated@@300 $generated@@583))))
 :pattern ( ($generated@@300 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@157) (= (type $generated@@585) $generated@@73)) (= (type $generated@@586) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@586) (and ($generated@@178 $generated@@584) ($generated@@83 $generated@@584 ($generated@@179 $generated@@585) $generated@@586)))) ($generated@@275 ($generated@@296 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@90 ($generated@@457 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@90 ($generated@@457 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@73) (= (type $generated@@590) $generated@@73)) (and (= ($generated@@81 ($generated@@156 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@323 ($generated@@156 $generated@@589 $generated@@590)) $generated@@69)))
 :pattern ( ($generated@@156 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@157) (= ($generated@@568 ($generated@@304 $generated@@591)) ($generated@@569 $generated@@591)))
 :pattern ( ($generated@@568 ($generated@@304 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@166) ($generated@@248 $generated@@592 ($generated@@84 0))) (and (= ($generated@@304 ($generated@@365 $generated@@2 $generated@@592)) $generated@@592) ($generated@@152 ($generated@@365 ($generated@@85 $generated@@166 $generated@@4) $generated@@592) ($generated@@84 0))))
 :pattern ( ($generated@@248 $generated@@592 ($generated@@84 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@166) (= (type $generated@@594) $generated@@73)) ($generated@@248 $generated@@593 ($generated@@260 $generated@@594))) (and (= ($generated@@304 ($generated@@365 ($generated@@85 $generated@@166 $generated@@4) $generated@@593)) $generated@@593) ($generated@@152 ($generated@@365 ($generated@@85 $generated@@166 $generated@@4) $generated@@593) ($generated@@260 $generated@@594))))
 :pattern ( ($generated@@248 $generated@@593 ($generated@@260 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@166) (= (type $generated@@596) $generated@@73)) ($generated@@248 $generated@@595 ($generated@@265 $generated@@596))) (and (= ($generated@@304 ($generated@@365 ($generated@@85 $generated@@166 $generated@@4) $generated@@595)) $generated@@595) ($generated@@152 ($generated@@365 ($generated@@85 $generated@@166 $generated@@4) $generated@@595) ($generated@@265 $generated@@596))))
 :pattern ( ($generated@@248 $generated@@595 ($generated@@265 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@166) (= (type $generated@@598) $generated@@73)) ($generated@@248 $generated@@597 ($generated@@173 $generated@@598))) (and (= ($generated@@304 ($generated@@365 ($generated@@85 $generated@@166 $generated@@2) $generated@@597)) $generated@@597) ($generated@@152 ($generated@@365 ($generated@@85 $generated@@166 $generated@@2) $generated@@597) ($generated@@173 $generated@@598))))
 :pattern ( ($generated@@248 $generated@@597 ($generated@@173 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@166) (= (type $generated@@600) $generated@@73)) ($generated@@248 $generated@@599 ($generated@@523 $generated@@600))) (and (= ($generated@@304 ($generated@@365 ($generated@@290 $generated@@166) $generated@@599)) $generated@@599) ($generated@@152 ($generated@@365 ($generated@@290 $generated@@166) $generated@@599) ($generated@@523 $generated@@600))))
 :pattern ( ($generated@@248 $generated@@599 ($generated@@523 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@73) (= (type $generated@@602) $generated@@166)) ($generated@@248 $generated@@602 ($generated@@179 $generated@@601))) (and (= ($generated@@304 ($generated@@365 $generated@@157 $generated@@602)) $generated@@602) ($generated@@152 ($generated@@365 $generated@@157 $generated@@602) ($generated@@179 $generated@@601))))
 :pattern ( ($generated@@248 $generated@@602 ($generated@@179 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@86) (= (type $generated@@604) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@603 $generated@@146)) ($generated@@83 $generated@@603 $generated@@149 $generated@@604))) ($generated@@83 $generated@@603 $generated@@171 $generated@@604))
 :pattern ( ($generated@@83 $generated@@603 $generated@@149 $generated@@604))
)))
(assert (= ($generated@@81 $generated@@145) $generated@@65))
(assert (= ($generated@@323 $generated@@145) $generated@@71))
(assert (= ($generated@@81 $generated@@171) $generated@@66))
(assert (= ($generated@@323 $generated@@171) $generated@@71))
(assert (= ($generated@@81 $generated@@149) $generated@@67))
(assert (= ($generated@@323 $generated@@149) $generated@@72))
(assert (= ($generated@@81 $generated@@244) $generated@@68))
(assert (= ($generated@@323 $generated@@244) $generated@@72))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@85 $generated@@166 $generated@@2)) (= (type $generated@@606) $generated@@73)) (= (type $generated@@607) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@605 ($generated@@173 $generated@@606) $generated@@607) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@166) (< 0 ($generated ($generated@@90 $generated@@605 $generated@@608)))) ($generated@@275 $generated@@608 $generated@@606 $generated@@607))
 :pattern ( ($generated@@90 $generated@@605 $generated@@608))
))))
 :pattern ( ($generated@@83 $generated@@605 ($generated@@173 $generated@@606) $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@86) (= ($generated@@152 $generated@@609 $generated@@145)  (or (= $generated@@609 $generated@@146) ($generated@@154 ($generated@@183 $generated@@609)))))
 :pattern ( ($generated@@152 $generated@@609 $generated@@145))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@157) (= (type $generated@@611) $generated@@73)) (= (type $generated@@612) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@612) (and ($generated@@155 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@73) ($generated@@83 $generated@@610 ($generated@@156 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@83 $generated@@610 ($generated@@156 $generated@@611 $generated@@613) $generated@@612))
))))) ($generated@@275 ($generated@@164 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@275 ($generated@@164 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@157) (= (type $generated@@615) $generated@@73)) (= (type $generated@@616) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@274 $generated@@616) (and ($generated@@155 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@73) ($generated@@83 $generated@@614 ($generated@@156 $generated@@617 $generated@@615) $generated@@616))
 :pattern ( ($generated@@83 $generated@@614 ($generated@@156 $generated@@617 $generated@@615) $generated@@616))
))))) ($generated@@275 ($generated@@165 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@275 ($generated@@165 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@166) (= (type $generated@@619) $generated@@166)) (= ($generated@@247 ($generated@@270 $generated@@618) ($generated@@270 $generated@@619)) ($generated@@270 ($generated@@247 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@247 ($generated@@270 $generated@@618) ($generated@@270 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@166) (= ($generated@@300 ($generated@@270 $generated@@620)) ($generated@@270 ($generated@@300 $generated@@620))))
 :pattern ( ($generated@@300 ($generated@@270 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (= ($generated@@304 ($generated@@270 $generated@@621)) ($generated@@270 ($generated@@304 $generated@@621)))
 :pattern ( ($generated@@304 ($generated@@270 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@291 (type $generated@@622))))
 (=> (and (= (type $generated@@622) ($generated@@290 $generated@@623)) (= ($generated@@289 $generated@@622) 0)) (= $generated@@622 ($generated@@288 $generated@@623))))
 :pattern ( ($generated@@289 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@625)))
 (=> (and (and (= (type $generated@@624) ($generated@@85 $generated@@627 $generated@@2)) (= (type $generated@@626) $generated@@2)) (<= 0 ($generated $generated@@626))) (= ($generated@@317 ($generated@@91 $generated@@624 $generated@@625 $generated@@626)) (+ (- ($generated@@317 $generated@@624) ($generated ($generated@@90 $generated@@624 $generated@@625))) ($generated $generated@@626)))))
 :pattern ( ($generated@@317 ($generated@@91 $generated@@624 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@629) $generated@@2)) ($generated@@83 $generated@@629 $generated@@46 $generated@@628))
 :pattern ( ($generated@@83 $generated@@629 $generated@@46 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@631) $generated@@3)) ($generated@@83 $generated@@631 $generated@@47 $generated@@630))
 :pattern ( ($generated@@83 $generated@@631 $generated@@47 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@633) $generated@@4)) ($generated@@83 $generated@@633 $generated@@44 $generated@@632))
 :pattern ( ($generated@@83 $generated@@633 $generated@@44 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@635) $generated@@481)) ($generated@@83 $generated@@635 $generated@@45 $generated@@634))
 :pattern ( ($generated@@83 $generated@@635 $generated@@45 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@637) $generated@@166)) ($generated@@83 $generated@@637 $generated@@48 $generated@@636))
 :pattern ( ($generated@@83 $generated@@637 $generated@@48 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@290 $generated@@166)) (= (type $generated@@639) $generated@@73)) (= ($generated@@152 $generated@@638 ($generated@@523 $generated@@639)) (forall (($generated@@640 Int) ) (!  (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@289 $generated@@638))) ($generated@@248 ($generated@@524 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@524 $generated@@638 $generated@@640))
))))
 :pattern ( ($generated@@152 $generated@@638 ($generated@@523 $generated@@639)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (!  (=> (= (type $generated@@642) ($generated@@290 $generated@@166)) (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@289 $generated@@642))) (< ($generated@@569 ($generated@@365 $generated@@157 ($generated@@524 $generated@@642 $generated@@643))) ($generated@@641 $generated@@642))))
 :pattern ( ($generated@@569 ($generated@@365 $generated@@157 ($generated@@524 $generated@@642 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@328 $generated@@166 $generated@@166)) (= (type $generated@@645) $generated@@73)) (= (type $generated@@646) $generated@@73)) ($generated@@152 $generated@@644 ($generated@@438 $generated@@645 $generated@@646))) (and (and ($generated@@152 ($generated@@326 $generated@@644) ($generated@@260 $generated@@645)) ($generated@@152 ($generated@@378 $generated@@644) ($generated@@260 $generated@@646))) ($generated@@152 ($generated@@412 $generated@@644) ($generated@@260 ($generated@@156 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@152 $generated@@644 ($generated@@438 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@346 $generated@@166 $generated@@166)) (= (type $generated@@648) $generated@@73)) (= (type $generated@@649) $generated@@73)) ($generated@@152 $generated@@647 ($generated@@446 $generated@@648 $generated@@649))) (and (and ($generated@@152 ($generated@@344 $generated@@647) ($generated@@265 $generated@@648)) ($generated@@152 ($generated@@389 $generated@@647) ($generated@@265 $generated@@649))) ($generated@@152 ($generated@@420 $generated@@647) ($generated@@265 ($generated@@156 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@152 $generated@@647 ($generated@@446 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@2) ($generated@@152 $generated@@650 $generated@@46))
 :pattern ( ($generated@@152 $generated@@650 $generated@@46))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@3) ($generated@@152 $generated@@651 $generated@@47))
 :pattern ( ($generated@@152 $generated@@651 $generated@@47))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@4) ($generated@@152 $generated@@652 $generated@@44))
 :pattern ( ($generated@@152 $generated@@652 $generated@@44))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@481) ($generated@@152 $generated@@653 $generated@@45))
 :pattern ( ($generated@@152 $generated@@653 $generated@@45))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@166) ($generated@@152 $generated@@654 $generated@@48))
 :pattern ( ($generated@@152 $generated@@654 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@655) ($generated@@188 $generated@@86 $generated@@4)) (= (type $generated@@656) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@657) $generated@@86)) (= (type $generated@@658) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@660) $generated@@86)) (= (type $generated@@661) $generated@@157)) (= (type $generated@@663) $generated@@86)) (= (type $generated@@665) $generated@@157)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@667 true))
(let (($generated@@668 true))
(let (($generated@@669  (=> (= $generated@@655 ($generated@@187 $generated@@146 $generated@@656 $generated@@60 false)) (=> (and (and (not (= $generated@@657 $generated@@146)) (and ($generated@@152 $generated@@657 $generated@@244) ($generated@@83 $generated@@657 $generated@@244 $generated@@656))) (and ($generated@@274 $generated@@658) ($generated@@659 $generated@@658))) (=> (and (and (and (not (= $generated@@660 $generated@@146)) (and ($generated@@152 $generated@@660 $generated@@244) ($generated@@83 $generated@@660 $generated@@244 $generated@@658))) (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@656 $generated@@660) $generated@@60)))) (and (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@86) (=> (and (not (= $generated@@670 $generated@@146)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@656 $generated@@670) $generated@@60))) (= ($generated@@90 $generated@@658 $generated@@670) ($generated@@90 $generated@@656 $generated@@670))))
 :pattern ( ($generated@@90 $generated@@658 $generated@@670))
)) ($generated@@141 $generated@@656 $generated@@658))) (and (=> (= (ControlFlow 0 3) (- 0 5)) true) (=> (= $generated@@661 ($generated@@300 ($generated@@304 $generated@@660))) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (and (=> (= (ControlFlow 0 3) 1) $generated@@668) (=> (= (ControlFlow 0 3) 2) $generated@@667))))))))))
(let (($generated@@671  (=> (and (and (and ($generated@@274 $generated@@656) ($generated@@659 $generated@@656)) (and (=> $generated@@662 (and ($generated@@152 $generated@@663 $generated@@244) ($generated@@83 $generated@@663 $generated@@244 $generated@@656))) true)) (and (and (=> $generated@@664 (and ($generated@@152 $generated@@665 ($generated@@179 $generated@@171)) ($generated@@83 $generated@@665 ($generated@@179 $generated@@171) $generated@@656))) true) (and (= 1 $generated@@666) (= (ControlFlow 0 6) 3)))) $generated@@669)))
$generated@@671)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
