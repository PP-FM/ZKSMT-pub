(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@376 (T@T T@U) T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@T) T@U)
(declare-fun $generated@@492 () T@T)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert  (and (and (= ($generated@@1 $generated@@146) 14) (= ($generated@@1 $generated@@148) 15)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@146) (= (type $generated@@151) $generated@@146)) (and ($generated@@145 $generated@@150) ($generated@@145 $generated@@151))) (= ($generated@@144 $generated@@150 $generated@@151) (= ($generated@@147 $generated@@150) ($generated@@147 $generated@@151))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151) ($generated@@145 $generated@@150))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151) ($generated@@145 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@152 $generated@@153 ($generated@@83 0)))
 :pattern ( ($generated@@152 $generated@@153 ($generated@@83 0)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@156 $generated@@157)) $generated@@72)
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@72) (= (type $generated@@159) $generated@@72)) (= (type $generated@@160) $generated@@146)) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159))) ($generated@@154 $generated@@160))
 :pattern ( ($generated@@154 $generated@@160) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@148)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@148)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@146) (= (type $generated@@167) $generated@@146)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@76)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@146)))
(assert (= ($generated@@168 $generated@@169) $generated@@67))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@84 $generated@@148 $generated@@2)) (= (type $generated@@175) $generated@@72)) ($generated@@152 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@152 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@85 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@75 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@85) (= (type $generated@@226) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@227) ($generated@@74 $generated@@4))) (= (type $generated@@229) $generated@@85)) (= (type $generated@@230) ($generated@@74 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@85 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@75 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@85) (= (type $generated@@238) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@239) ($generated@@74 $generated@@4))) (= (type $generated@@241) $generated@@85)) (= (type $generated@@242) ($generated@@74 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (= (type $generated@@245) $generated@@72))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@146) ($generated@@152 $generated@@246 $generated@@245)) ($generated@@244 $generated@@246))
 :pattern ( ($generated@@244 $generated@@246) ($generated@@152 $generated@@246 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@247 $generated@@249)) $generated@@72)
 :pattern ( ($generated@@247 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (= (type $generated@@250) $generated@@72) (= (type $generated@@251) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@248 $generated@@251)) ($generated@@82 $generated@@169 ($generated@@247 $generated@@250) $generated@@251))
 :pattern ( ($generated@@82 $generated@@169 ($generated@@247 $generated@@250) $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@146)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@72) (= (type $generated@@257) $generated@@72)) (= (type $generated@@258) $generated@@148)) (= (type $generated@@259) $generated@@148)) (= ($generated@@152 ($generated@@252 $generated@@258 $generated@@259) ($generated@@155 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@152 ($generated@@252 $generated@@258 $generated@@259) ($generated@@155 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@72) ($generated@@152 $generated@@169 ($generated@@247 $generated@@260)))
 :pattern ( ($generated@@152 $generated@@169 ($generated@@247 $generated@@260)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@146) (= (type $generated@@262) $generated@@146)) (= ($generated@@161 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@161 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@146) (= (type $generated@@265) $generated@@146)) (= ($generated@@263 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@146) (= (type $generated@@267) $generated@@146)) (= ($generated@@144 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@144 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@148 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@152 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@148) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@253 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@152 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@148 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@152 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@148) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@253 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@152 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@146) (= (type $generated@@284) $generated@@146)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@144 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@144 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@144 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) $generated@@72) (= (type $generated@@287) $generated@@72)) (= (type $generated@@288) $generated@@148)) (= (type $generated@@289) $generated@@148)) (= (type $generated@@290) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@248 $generated@@290)) (= ($generated@@82 ($generated@@252 $generated@@288 $generated@@289) ($generated@@155 $generated@@286 $generated@@287) $generated@@290)  (and ($generated@@285 $generated@@288 $generated@@286 $generated@@290) ($generated@@285 $generated@@289 $generated@@287 $generated@@290))))
 :pattern ( ($generated@@82 ($generated@@252 $generated@@288 $generated@@289) ($generated@@155 $generated@@286 $generated@@287) $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@146) (= ($generated@@154 $generated@@291) (= ($generated@@168 $generated@@291) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@146) (= ($generated@@244 $generated@@292) (= ($generated@@168 $generated@@292) $generated@@63)))
 :pattern ( ($generated@@244 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@146) (= ($generated@@282 $generated@@293) (= ($generated@@168 $generated@@293) $generated@@67)))
 :pattern ( ($generated@@282 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@146) (= ($generated@@145 $generated@@294) (= ($generated@@168 $generated@@294) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@146) ($generated@@154 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@148) (= (type $generated@@297) $generated@@148)) (= $generated@@295 ($generated@@252 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@154 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@146) ($generated@@282 $generated@@306)) (= $generated@@306 $generated@@169))
 :pattern ( ($generated@@282 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@146)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@146) ($generated@@244 $generated@@309)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@146) (= $generated@@309 ($generated@@307 $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@244 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@146)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@146) ($generated@@145 $generated@@313)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@148) (= $generated@@313 ($generated@@311 $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@145 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@148)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@72) (= (type $generated@@319) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@285 ($generated@@315 $generated@@317) $generated@@318 $generated@@319) ($generated@@82 $generated@@317 $generated@@318 $generated@@319)))
 :pattern ( ($generated@@285 ($generated@@315 $generated@@317) $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@320) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@321) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@322) $generated@@148)) (= (type $generated@@323) $generated@@72)) ($generated@@140 $generated@@320 $generated@@321)) ($generated@@285 $generated@@322 $generated@@323 $generated@@320)) ($generated@@285 $generated@@322 $generated@@323 $generated@@321))
 :pattern ( ($generated@@140 $generated@@320 $generated@@321) ($generated@@285 $generated@@322 $generated@@323 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@324) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@325) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@327) $generated@@72)) ($generated@@140 $generated@@324 $generated@@325)) ($generated@@82 $generated@@326 $generated@@327 $generated@@324)) ($generated@@82 $generated@@326 $generated@@327 $generated@@325))
 :pattern ( ($generated@@140 $generated@@324 $generated@@325) ($generated@@82 $generated@@326 $generated@@327 $generated@@324))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@84 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@87 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@84 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@89 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@77)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@72) (and (= ($generated@@80 ($generated@@247 $generated@@336)) $generated@@66) (= ($generated@@334 ($generated@@247 $generated@@336)) $generated@@71)))
 :pattern ( ($generated@@247 $generated@@336))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 18)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@84 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@89 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@89 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 19)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@84 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@89 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@89 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@87 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@84 $generated@@374 $generated@@2)) (= ($generated@@172 $generated@@373) (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@374) (and (<= 0 ($generated ($generated@@89 $generated@@373 $generated@@375))) (<= ($generated ($generated@@89 $generated@@373 $generated@@375)) ($generated@@328 $generated@@373))))
 :pattern ( ($generated@@89 $generated@@373 $generated@@375))
)))))
 :pattern ( ($generated@@172 $generated@@373))
)))
(assert (forall (($generated@@377 T@T) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@148) ($generated@@253 $generated@@379 $generated@@245)) (and (= ($generated@@315 ($generated@@376 $generated@@146 $generated@@379)) $generated@@379) ($generated@@152 ($generated@@376 $generated@@146 $generated@@379) $generated@@245)))
 :pattern ( ($generated@@253 $generated@@379 $generated@@245))
)))
(assert (= (type $generated@@380) $generated@@72))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@148) ($generated@@253 $generated@@381 $generated@@380)) (and (= ($generated@@315 ($generated@@376 $generated@@146 $generated@@381)) $generated@@381) ($generated@@152 ($generated@@376 $generated@@146 $generated@@381) $generated@@380)))
 :pattern ( ($generated@@253 $generated@@381 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@341 (type $generated@@382))))
(let (($generated@@384 ($generated@@340 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@339 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@338 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@89 ($generated@@337 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@337 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@341 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@84 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@341 (type $generated@@389))))
(let (($generated@@391 ($generated@@340 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@339 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@338 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@89 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@359 (type $generated@@393))))
(let (($generated@@395 ($generated@@358 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@357 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@356 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@355 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@359 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@84 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@359 (type $generated@@400))))
(let (($generated@@402 ($generated@@358 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@357 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@356 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@89 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@84 $generated@@148 $generated@@2)) (= (type $generated@@405) $generated@@72)) (= ($generated@@152 $generated@@404 ($generated@@171 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@148) (< 0 ($generated ($generated@@89 $generated@@404 $generated@@406)))) ($generated@@253 $generated@@406 $generated@@405))
 :pattern ( ($generated@@89 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@152 $generated@@404 ($generated@@171 $generated@@405)))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) $generated@@72) (= (type $generated@@408) $generated@@148)) (= (type $generated@@409) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@248 $generated@@409)) (= ($generated@@82 ($generated@@311 $generated@@408) ($generated@@247 $generated@@407) $generated@@409) ($generated@@285 $generated@@408 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@82 ($generated@@311 $generated@@408) ($generated@@247 $generated@@407) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@146) (= ($generated@@152 ($generated@@307 $generated@@410) $generated@@245) ($generated@@152 $generated@@410 ($generated@@247 $generated@@380))))
 :pattern ( ($generated@@152 ($generated@@307 $generated@@410) $generated@@245))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@84 $generated@@148 $generated@@4)) (= (type $generated@@412) $generated@@72)) (= (type $generated@@413) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@411 ($generated@@268 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@148) ($generated@@0 ($generated@@89 $generated@@411 $generated@@414))) ($generated@@285 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@89 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@82 $generated@@411 ($generated@@268 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@84 $generated@@148 $generated@@4)) (= (type $generated@@416) $generated@@72)) (= (type $generated@@417) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@415 ($generated@@273 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@148) ($generated@@0 ($generated@@89 $generated@@415 $generated@@418))) ($generated@@285 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@89 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@82 $generated@@415 ($generated@@273 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@89 ($generated@@329 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@89 ($generated@@329 $generated@@420) $generated@@419)))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@84 $generated@@148 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@341 (type $generated@@424))))
(let (($generated@@426 ($generated@@340 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@84 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@339 $generated@@148 $generated@@148)) (= (type $generated@@428) $generated@@148)) (= ($generated@@0 ($generated@@89 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@89 ($generated@@337 $generated@@427) ($generated@@162 ($generated@@376 $generated@@146 $generated@@428)))) (= ($generated@@89 ($generated@@422 $generated@@427) ($generated@@162 ($generated@@376 $generated@@146 $generated@@428))) ($generated@@163 ($generated@@376 $generated@@146 $generated@@428))))))
 :pattern ( ($generated@@89 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@84 $generated@@148 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@359 (type $generated@@432))))
(let (($generated@@434 ($generated@@358 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@84 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@357 $generated@@148 $generated@@148)) (= (type $generated@@436) $generated@@148)) (= ($generated@@0 ($generated@@89 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@89 ($generated@@355 $generated@@435) ($generated@@162 ($generated@@376 $generated@@146 $generated@@436)))) (= ($generated@@89 ($generated@@430 $generated@@435) ($generated@@162 ($generated@@376 $generated@@146 $generated@@436))) ($generated@@163 ($generated@@376 $generated@@146 $generated@@436))))))
 :pattern ( ($generated@@89 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@340 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@339 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@89 ($generated@@386 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@89 ($generated@@337 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@89 ($generated@@422 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@89 ($generated@@337 $generated@@437) $generated@@441))
 :pattern ( ($generated@@89 ($generated@@422 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@358 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@357 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@89 ($generated@@397 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@89 ($generated@@355 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@89 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@442) $generated@@446))
 :pattern ( ($generated@@89 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@89 ($generated@@397 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@72)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@339 $generated@@148 $generated@@148)) (= (type $generated@@451) $generated@@72)) (= (type $generated@@452) $generated@@72)) (= (type $generated@@453) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@148) ($generated@@0 ($generated@@89 ($generated@@337 $generated@@450) $generated@@454))) (and ($generated@@285 ($generated@@89 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@285 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@89 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@89 ($generated@@337 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@82 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@72)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@357 $generated@@148 $generated@@148)) (= (type $generated@@459) $generated@@72)) (= (type $generated@@460) $generated@@72)) (= (type $generated@@461) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@148) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@458) $generated@@462))) (and ($generated@@285 ($generated@@89 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@285 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@89 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@82 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@463) $generated@@72) (= (type $generated@@464) $generated@@146)) ($generated@@152 $generated@@464 ($generated@@247 $generated@@463))) (or ($generated@@282 $generated@@464) ($generated@@145 $generated@@464)))
 :pattern ( ($generated@@145 $generated@@464) ($generated@@152 $generated@@464 ($generated@@247 $generated@@463)))
 :pattern ( ($generated@@282 $generated@@464) ($generated@@152 $generated@@464 ($generated@@247 $generated@@463)))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@465) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@466) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@467) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@465 $generated@@467))) (and ($generated@@140 $generated@@465 $generated@@466) ($generated@@140 $generated@@466 $generated@@467))) ($generated@@140 $generated@@465 $generated@@467))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466) ($generated@@140 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@T) ) (! (= (type ($generated@@468 $generated@@469)) ($generated@@84 $generated@@469 $generated@@4))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@359 (type $generated@@470))))
(let (($generated@@472 ($generated@@358 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@357 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@356 $generated@@472 $generated@@471)) (= ($generated@@355 $generated@@470) ($generated@@468 $generated@@472))))))
 :pattern ( ($generated@@355 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@359 (type $generated@@473))))
(let (($generated@@475 ($generated@@358 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@357 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@356 $generated@@475 $generated@@474)) (= ($generated@@397 $generated@@473) ($generated@@468 $generated@@474))))))
 :pattern ( ($generated@@397 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@359 (type $generated@@476))))
(let (($generated@@478 ($generated@@358 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@357 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@356 $generated@@478 $generated@@477)) (= ($generated@@429 $generated@@476) ($generated@@468 $generated@@148))))))
 :pattern ( ($generated@@429 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@341 (type $generated@@479))))
(let (($generated@@481 ($generated@@340 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@339 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@338 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@148) (= (type $generated@@483) $generated@@148)) ($generated@@0 ($generated@@89 ($generated@@421 $generated@@479) ($generated@@315 ($generated@@252 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@421 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@359 (type $generated@@484))))
(let (($generated@@486 ($generated@@358 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@357 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@356 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@148) (= (type $generated@@488) $generated@@148)) ($generated@@0 ($generated@@89 ($generated@@429 $generated@@484) ($generated@@315 ($generated@@252 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@429 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@148) ($generated@@253 $generated@@489 $generated@@46)) (and (= ($generated@@315 ($generated@@376 $generated@@2 $generated@@489)) $generated@@489) ($generated@@152 ($generated@@376 $generated@@2 $generated@@489) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@489 $generated@@46))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@148) ($generated@@253 $generated@@490 $generated@@47)) (and (= ($generated@@315 ($generated@@376 $generated@@3 $generated@@490)) $generated@@490) ($generated@@152 ($generated@@376 $generated@@3 $generated@@490) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@490 $generated@@47))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@148) ($generated@@253 $generated@@491 $generated@@44)) (and (= ($generated@@315 ($generated@@376 $generated@@4 $generated@@491)) $generated@@491) ($generated@@152 ($generated@@376 $generated@@4 $generated@@491) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@491 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@492) 20))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) ($generated@@253 $generated@@493 $generated@@45)) (and (= ($generated@@315 ($generated@@376 $generated@@492 $generated@@493)) $generated@@493) ($generated@@152 ($generated@@376 $generated@@492 $generated@@493) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@493 $generated@@45))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@72) (= ($generated@@253 ($generated@@315 $generated@@494) $generated@@495) ($generated@@152 $generated@@494 $generated@@495)))
 :pattern ( ($generated@@253 ($generated@@315 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@87 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@84 $generated@@497 $generated@@2)) (<= 0 ($generated@@328 $generated@@496))))
 :pattern ( ($generated@@328 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@301 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@300 $generated@@499)) (<= 0 ($generated@@299 $generated@@498))))
 :pattern ( ($generated@@299 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@500) $generated@@146) (= (type $generated@@501) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@248 $generated@@501)) (= ($generated@@82 ($generated@@307 $generated@@500) $generated@@245 $generated@@501) ($generated@@82 $generated@@500 ($generated@@247 $generated@@380) $generated@@501)))
 :pattern ( ($generated@@82 ($generated@@307 $generated@@500) $generated@@245 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@72)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@72) (= (type $generated@@505) $generated@@72)) (= ($generated@@502 ($generated@@447 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@447 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@72)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@72) (= (type $generated@@509) $generated@@72)) (= ($generated@@506 ($generated@@447 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@447 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@72) (= (type $generated@@511) $generated@@72)) (= ($generated@@80 ($generated@@447 $generated@@510 $generated@@511)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@72) (= (type $generated@@515) $generated@@72)) (= ($generated@@512 ($generated@@455 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@455 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@72)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@72) (= (type $generated@@519) $generated@@72)) (= ($generated@@516 ($generated@@455 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@455 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@72) (= (type $generated@@521) $generated@@72)) (= ($generated@@80 ($generated@@455 $generated@@520 $generated@@521)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@148) (= (type $generated@@523) $generated@@148)) (= ($generated@@168 ($generated@@252 $generated@@522 $generated@@523)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@72) (= (type $generated@@527) $generated@@72)) (= ($generated@@524 ($generated@@155 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@155 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@72) (= (type $generated@@531) $generated@@72)) (= ($generated@@528 ($generated@@155 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@155 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@148) (= (type $generated@@533) $generated@@148)) (= ($generated@@162 ($generated@@252 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@252 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@148) (= (type $generated@@535) $generated@@148)) (= ($generated@@163 ($generated@@252 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@252 $generated@@534 $generated@@535))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@301 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@300 $generated@@148)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@299 $generated@@542))) ($generated@@285 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@82 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@546 ($generated@@83 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@83 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@72)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@72) (= ($generated@@548 ($generated@@268 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@268 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@551)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@72)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@72) (= ($generated@@552 ($generated@@273 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@273 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@555)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@72)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@72) (= ($generated@@556 ($generated@@171 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@171 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@72) (= ($generated@@80 ($generated@@171 $generated@@559)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@72)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@72) (= ($generated@@560 ($generated@@536 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@536 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@72) (= ($generated@@80 ($generated@@536 $generated@@563)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@146) (= ($generated@@168 ($generated@@307 $generated@@564)) $generated@@63))
 :pattern ( ($generated@@307 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@72)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@72) (= ($generated@@565 ($generated@@247 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@247 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@146)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@146) (= ($generated@@568 ($generated@@307 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@307 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@148) (= ($generated@@168 ($generated@@311 $generated@@571)) $generated@@68))
 :pattern ( ($generated@@311 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@148) (= ($generated@@147 ($generated@@311 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@311 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@376 $generated@@574 ($generated@@315 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@315 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@339 $generated@@148 $generated@@148)) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) $generated@@72)) (= ($generated@@152 $generated@@575 ($generated@@447 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@148) ($generated@@0 ($generated@@89 ($generated@@337 $generated@@575) $generated@@578))) (and ($generated@@253 ($generated@@89 ($generated@@422 $generated@@575) $generated@@578) $generated@@577) ($generated@@253 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@89 ($generated@@422 $generated@@575) $generated@@578))
 :pattern ( ($generated@@89 ($generated@@337 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@152 $generated@@575 ($generated@@447 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@357 $generated@@148 $generated@@148)) (= (type $generated@@580) $generated@@72)) (= (type $generated@@581) $generated@@72)) (= ($generated@@152 $generated@@579 ($generated@@455 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@148) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@579) $generated@@582))) (and ($generated@@253 ($generated@@89 ($generated@@430 $generated@@579) $generated@@582) $generated@@581) ($generated@@253 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@89 ($generated@@430 $generated@@579) $generated@@582))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@152 $generated@@579 ($generated@@455 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@72) (= (type $generated@@584) $generated@@148)) (= ($generated@@152 ($generated@@311 $generated@@584) ($generated@@247 $generated@@583)) ($generated@@253 $generated@@584 $generated@@583)))
 :pattern ( ($generated@@152 ($generated@@311 $generated@@584) ($generated@@247 $generated@@583)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@148) (= (type $generated@@588) $generated@@148)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@252 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@252 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@148) (= (type $generated@@590) $generated@@148)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@252 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@252 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@146) (= (type $generated@@592) $generated@@146)) true) (= ($generated@@263 $generated@@591 $generated@@592) ($generated@@144 ($generated@@568 $generated@@591) ($generated@@568 $generated@@592))))
 :pattern ( ($generated@@263 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@148) (= (type $generated@@594) $generated@@72)) (= (type $generated@@595) $generated@@72)) ($generated@@253 $generated@@593 ($generated@@447 $generated@@594 $generated@@595))) (and (= ($generated@@315 ($generated@@376 ($generated@@339 $generated@@148 $generated@@148) $generated@@593)) $generated@@593) ($generated@@152 ($generated@@376 ($generated@@339 $generated@@148 $generated@@148) $generated@@593) ($generated@@447 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@253 $generated@@593 ($generated@@447 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@148) (= (type $generated@@597) $generated@@72)) (= (type $generated@@598) $generated@@72)) ($generated@@253 $generated@@596 ($generated@@455 $generated@@597 $generated@@598))) (and (= ($generated@@315 ($generated@@376 ($generated@@357 $generated@@148 $generated@@148) $generated@@596)) $generated@@596) ($generated@@152 ($generated@@376 ($generated@@357 $generated@@148 $generated@@148) $generated@@596) ($generated@@455 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@253 $generated@@596 ($generated@@455 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@72) (= (type $generated@@600) $generated@@72)) (= (type $generated@@601) $generated@@148)) ($generated@@253 $generated@@601 ($generated@@155 $generated@@599 $generated@@600))) (and (= ($generated@@315 ($generated@@376 $generated@@146 $generated@@601)) $generated@@601) ($generated@@152 ($generated@@376 $generated@@146 $generated@@601) ($generated@@155 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@253 $generated@@601 ($generated@@155 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@146) (< ($generated@@586 $generated@@602) ($generated@@586 ($generated@@307 $generated@@602))))
 :pattern ( ($generated@@307 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@148) (< ($generated@@585 $generated@@603) ($generated@@586 ($generated@@311 $generated@@603))))
 :pattern ( ($generated@@311 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@146) (= (type $generated@@605) $generated@@72)) (= (type $generated@@606) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@248 $generated@@606) (and ($generated@@145 $generated@@604) ($generated@@82 $generated@@604 ($generated@@247 $generated@@605) $generated@@606)))) ($generated@@285 ($generated@@147 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@285 ($generated@@147 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@89 ($generated@@468 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@89 ($generated@@468 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@72) (= (type $generated@@610) $generated@@72)) (and (= ($generated@@80 ($generated@@155 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@334 ($generated@@155 $generated@@609 $generated@@610)) $generated@@69)))
 :pattern ( ($generated@@155 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@146) (= ($generated@@585 ($generated@@315 $generated@@611)) ($generated@@586 $generated@@611)))
 :pattern ( ($generated@@585 ($generated@@315 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@148) ($generated@@253 $generated@@612 ($generated@@83 0))) (and (= ($generated@@315 ($generated@@376 $generated@@2 $generated@@612)) $generated@@612) ($generated@@152 ($generated@@376 ($generated@@84 $generated@@148 $generated@@4) $generated@@612) ($generated@@83 0))))
 :pattern ( ($generated@@253 $generated@@612 ($generated@@83 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@148) (= (type $generated@@614) $generated@@72)) ($generated@@253 $generated@@613 ($generated@@268 $generated@@614))) (and (= ($generated@@315 ($generated@@376 ($generated@@84 $generated@@148 $generated@@4) $generated@@613)) $generated@@613) ($generated@@152 ($generated@@376 ($generated@@84 $generated@@148 $generated@@4) $generated@@613) ($generated@@268 $generated@@614))))
 :pattern ( ($generated@@253 $generated@@613 ($generated@@268 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@148) (= (type $generated@@616) $generated@@72)) ($generated@@253 $generated@@615 ($generated@@273 $generated@@616))) (and (= ($generated@@315 ($generated@@376 ($generated@@84 $generated@@148 $generated@@4) $generated@@615)) $generated@@615) ($generated@@152 ($generated@@376 ($generated@@84 $generated@@148 $generated@@4) $generated@@615) ($generated@@273 $generated@@616))))
 :pattern ( ($generated@@253 $generated@@615 ($generated@@273 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@148) (= (type $generated@@618) $generated@@72)) ($generated@@253 $generated@@617 ($generated@@171 $generated@@618))) (and (= ($generated@@315 ($generated@@376 ($generated@@84 $generated@@148 $generated@@2) $generated@@617)) $generated@@617) ($generated@@152 ($generated@@376 ($generated@@84 $generated@@148 $generated@@2) $generated@@617) ($generated@@171 $generated@@618))))
 :pattern ( ($generated@@253 $generated@@617 ($generated@@171 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@148) (= (type $generated@@620) $generated@@72)) ($generated@@253 $generated@@619 ($generated@@536 $generated@@620))) (and (= ($generated@@315 ($generated@@376 ($generated@@300 $generated@@148) $generated@@619)) $generated@@619) ($generated@@152 ($generated@@376 ($generated@@300 $generated@@148) $generated@@619) ($generated@@536 $generated@@620))))
 :pattern ( ($generated@@253 $generated@@619 ($generated@@536 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@72) (= (type $generated@@622) $generated@@148)) ($generated@@253 $generated@@622 ($generated@@247 $generated@@621))) (and (= ($generated@@315 ($generated@@376 $generated@@146 $generated@@622)) $generated@@622) ($generated@@152 ($generated@@376 $generated@@146 $generated@@622) ($generated@@247 $generated@@621))))
 :pattern ( ($generated@@253 $generated@@622 ($generated@@247 $generated@@621)))
)))
(assert (= ($generated@@80 $generated@@245) $generated@@64))
(assert (= ($generated@@334 $generated@@245) $generated@@70))
(assert (= ($generated@@80 $generated@@380) $generated@@65))
(assert (= ($generated@@334 $generated@@380) $generated@@71))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@84 $generated@@148 $generated@@2)) (= (type $generated@@624) $generated@@72)) (= (type $generated@@625) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@623 ($generated@@171 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@148) (< 0 ($generated ($generated@@89 $generated@@623 $generated@@626)))) ($generated@@285 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@89 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@82 $generated@@623 ($generated@@171 $generated@@624) $generated@@625))
)))
(assert (= $generated@@169 ($generated@@278 $generated@@169)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@146) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@248 $generated@@629) (and ($generated@@154 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@72) ($generated@@82 $generated@@627 ($generated@@155 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@82 $generated@@627 ($generated@@155 $generated@@628 $generated@@630) $generated@@629))
))))) ($generated@@285 ($generated@@162 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@285 ($generated@@162 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@146) (= (type $generated@@632) $generated@@72)) (= (type $generated@@633) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@248 $generated@@633) (and ($generated@@154 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@72) ($generated@@82 $generated@@631 ($generated@@155 $generated@@634 $generated@@632) $generated@@633))
 :pattern ( ($generated@@82 $generated@@631 ($generated@@155 $generated@@634 $generated@@632) $generated@@633))
))))) ($generated@@285 ($generated@@163 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@285 ($generated@@163 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@148) (= (type $generated@@636) $generated@@148)) (= ($generated@@252 ($generated@@278 $generated@@635) ($generated@@278 $generated@@636)) ($generated@@278 ($generated@@252 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@252 ($generated@@278 $generated@@635) ($generated@@278 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@146) (= ($generated@@307 ($generated@@278 $generated@@637)) ($generated@@278 ($generated@@307 $generated@@637))))
 :pattern ( ($generated@@307 ($generated@@278 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@148) (= ($generated@@311 ($generated@@278 $generated@@638)) ($generated@@278 ($generated@@311 $generated@@638))))
 :pattern ( ($generated@@311 ($generated@@278 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@315 ($generated@@278 $generated@@639)) ($generated@@278 ($generated@@315 $generated@@639)))
 :pattern ( ($generated@@315 ($generated@@278 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@301 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@300 $generated@@641)) (= ($generated@@299 $generated@@640) 0)) (= $generated@@640 ($generated@@298 $generated@@641))))
 :pattern ( ($generated@@299 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@643)))
 (=> (and (and (= (type $generated@@642) ($generated@@84 $generated@@645 $generated@@2)) (= (type $generated@@644) $generated@@2)) (<= 0 ($generated $generated@@644))) (= ($generated@@328 ($generated@@90 $generated@@642 $generated@@643 $generated@@644)) (+ (- ($generated@@328 $generated@@642) ($generated ($generated@@89 $generated@@642 $generated@@643))) ($generated $generated@@644)))))
 :pattern ( ($generated@@328 ($generated@@90 $generated@@642 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@146) (= (type $generated@@647) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@248 $generated@@647) (and ($generated@@244 $generated@@646) ($generated@@82 $generated@@646 $generated@@245 $generated@@647)))) ($generated@@82 ($generated@@568 $generated@@646) ($generated@@247 $generated@@380) $generated@@647))
 :pattern ( ($generated@@82 ($generated@@568 $generated@@646) ($generated@@247 $generated@@380) $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@649) $generated@@2)) ($generated@@82 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@82 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@651) $generated@@3)) ($generated@@82 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@82 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@653) $generated@@4)) ($generated@@82 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@82 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@655) $generated@@492)) ($generated@@82 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@82 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@657) $generated@@148)) ($generated@@82 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@82 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@300 $generated@@148)) (= (type $generated@@659) $generated@@72)) (= ($generated@@152 $generated@@658 ($generated@@536 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@299 $generated@@658))) ($generated@@253 ($generated@@537 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@537 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@152 $generated@@658 ($generated@@536 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@300 $generated@@148)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@299 $generated@@662))) (< ($generated@@586 ($generated@@376 $generated@@146 ($generated@@537 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@586 ($generated@@376 $generated@@146 ($generated@@537 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@339 $generated@@148 $generated@@148)) (= (type $generated@@665) $generated@@72)) (= (type $generated@@666) $generated@@72)) ($generated@@152 $generated@@664 ($generated@@447 $generated@@665 $generated@@666))) (and (and ($generated@@152 ($generated@@337 $generated@@664) ($generated@@268 $generated@@665)) ($generated@@152 ($generated@@386 $generated@@664) ($generated@@268 $generated@@666))) ($generated@@152 ($generated@@421 $generated@@664) ($generated@@268 ($generated@@155 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@152 $generated@@664 ($generated@@447 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@357 $generated@@148 $generated@@148)) (= (type $generated@@668) $generated@@72)) (= (type $generated@@669) $generated@@72)) ($generated@@152 $generated@@667 ($generated@@455 $generated@@668 $generated@@669))) (and (and ($generated@@152 ($generated@@355 $generated@@667) ($generated@@273 $generated@@668)) ($generated@@152 ($generated@@397 $generated@@667) ($generated@@273 $generated@@669))) ($generated@@152 ($generated@@429 $generated@@667) ($generated@@273 ($generated@@155 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@152 $generated@@667 ($generated@@455 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@152 $generated@@670 $generated@@46))
 :pattern ( ($generated@@152 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@152 $generated@@671 $generated@@47))
 :pattern ( ($generated@@152 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@152 $generated@@672 $generated@@44))
 :pattern ( ($generated@@152 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@492) ($generated@@152 $generated@@673 $generated@@45))
 :pattern ( ($generated@@152 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@148) ($generated@@152 $generated@@674 $generated@@48))
 :pattern ( ($generated@@152 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 (T@U) Bool)
(declare-fun $generated@@685 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@678) $generated@@146) (= (type $generated@@679) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@675) $generated@@146)) (= (type $generated@@676) $generated@@146)) (= (type $generated@@680) ($generated@@178 $generated@@85 $generated@@4))) (= (type $generated@@681) $generated@@85)) (= (type $generated@@682) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@683) ($generated@@178 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@686 true))
(let (($generated@@687  (=> (and (= $generated@@675 $generated@@169) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@688  (=> (not (= $generated@@675 ($generated@@311 ($generated@@315 $generated@@676)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@687) (=> (= (ControlFlow 0 9) 8) $generated@@686)))))
(let (($generated@@689 true))
(let (($generated@@690 true))
(let (($generated@@691  (=> (= $generated@@675 ($generated@@311 ($generated@@315 $generated@@676))) (=> (and (and ($generated@@152 $generated@@676 $generated@@380) (= $generated@@677 ($generated@@0 ($generated@@278 ($generated@@11 true))))) (and ($generated@@152 ($generated@@11 $generated@@677) $generated@@44) (= (ControlFlow 0 5) 2))) $generated@@690))))
(let (($generated@@692  (=> (and (= $generated@@678 ($generated@@307 $generated@@675)) ($generated@@152 $generated@@675 ($generated@@247 $generated@@380))) (and (=> (= (ControlFlow 0 10) 5) $generated@@691) (=> (= (ControlFlow 0 10) 9) $generated@@688)))))
(let (($generated@@693  (=> (and (and ($generated@@152 $generated@@678 $generated@@245) ($generated@@82 $generated@@678 $generated@@245 $generated@@679)) (= $generated@@680 ($generated@@232 $generated@@681 $generated@@679 $generated@@60 false))) (and (=> (= (ControlFlow 0 11) 10) $generated@@692) (=> (= (ControlFlow 0 11) 4) $generated@@689)))))
(let (($generated@@694  (=> (and (not (and ($generated@@152 $generated@@678 $generated@@245) ($generated@@82 $generated@@678 $generated@@245 $generated@@679))) (= (ControlFlow 0 3) 2)) $generated@@690)))
(let (($generated@@695  (=> (and ($generated@@248 $generated@@679) (or (= $generated@@682 $generated@@679) ($generated@@140 $generated@@682 $generated@@679))) (and (=> (= (ControlFlow 0 12) 11) $generated@@693) (=> (= (ControlFlow 0 12) 3) $generated@@694)))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@683 ($generated@@177 $generated@@681 $generated@@682 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@695) (=> (= (ControlFlow 0 13) 1) $generated@@696)))))
(let (($generated@@698  (=> (and (and ($generated@@248 $generated@@682) ($generated@@684 $generated@@682)) (and (= 3 $generated@@685) (= (ControlFlow 0 14) 13))) $generated@@697)))
$generated@@698))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
