(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 (T@U T@U) Int)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (Int) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 () T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U Int) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@138) 14))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@138) (= (type $generated@@141) $generated@@138)) (and ($generated@@137 $generated@@140) ($generated@@137 $generated@@141))) (= ($generated@@136 $generated@@140 $generated@@141) (= ($generated@@139 $generated@@140) ($generated@@139 $generated@@141))))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@140))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@79 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 15) (= (type $generated@@148) $generated@@68)))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@146) (= (type $generated@@150) $generated@@138)) (or ($generated@@147 $generated@@150) (and (not (= 0 $generated@@144)) ($generated@@142 $generated@@150 $generated@@148)))) true)
 :pattern ( ($generated@@145 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@68)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@68) (= (type $generated@@156) $generated@@68)) (= (type $generated@@157) $generated@@138)) ($generated@@142 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@142 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@138) (= (type $generated@@165) $generated@@138)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@68)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@80 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@68)) ($generated@@142 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@142 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@71 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@81) (= (type $generated@@221) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@222) ($generated@@70 $generated@@4))) (= (type $generated@@224) $generated@@81)) (= (type $generated@@225) ($generated@@70 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@81 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@71 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@70 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@70 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@138)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@161)) (= (type $generated@@246) $generated@@161)) (= ($generated@@142 ($generated@@239 $generated@@245 $generated@@246) ($generated@@152 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@142 ($generated@@239 $generated@@245 $generated@@246) ($generated@@152 $generated@@243 $generated@@244)))
)))
(assert  (and (and (forall (($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@250)) $generated@@146)
 :pattern ( ($generated@@247 $generated@@250))
)) (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@248 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@253 T@U) ) (! (= (type ($generated@@249 $generated@@253)) $generated@@138)
 :pattern ( ($generated@@249 $generated@@253))
))))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@146) (= (type $generated@@255) $generated@@138)) (or ($generated@@147 ($generated@@248 $generated@@255)) (and (not (= 0 $generated@@144)) ($generated@@142 $generated@@255 $generated@@148)))) (and (=> (not ($generated@@0 ($generated@@248 ($generated@@11 ($generated@@137 ($generated@@248 $generated@@255)))))) ($generated@@147 ($generated@@248 ($generated@@249 ($generated@@248 $generated@@255))))) (= ($generated@@145 ($generated@@247 $generated@@254) ($generated@@248 $generated@@255)) (ite ($generated@@137 ($generated@@248 $generated@@255)) 0 ($generated@@145 ($generated@@247 $generated@@254) ($generated@@248 ($generated@@249 ($generated@@248 $generated@@255))))))))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@247 $generated@@254) ($generated@@248 $generated@@255)))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@138) (= (type $generated@@257) $generated@@138)) (= ($generated@@158 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@158 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@138) (= (type $generated@@259) $generated@@138)) (= ($generated@@136 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@136 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@161 $generated@@4)) (= (type $generated@@263) $generated@@68)) (= ($generated@@142 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@161) ($generated@@0 ($generated@@85 $generated@@262 $generated@@264))) ($generated@@240 $generated@@264 $generated@@263))
 :pattern ( ($generated@@85 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@142 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@161 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@142 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@161) ($generated@@0 ($generated@@85 $generated@@267 $generated@@269))) ($generated@@240 $generated@@269 $generated@@268))
 :pattern ( ($generated@@85 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@142 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@248 $generated@@272) $generated@@272)
 :pattern ( ($generated@@248 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@68) (= (type $generated@@276) $generated@@68)) (= (type $generated@@277) $generated@@161)) (= (type $generated@@278) $generated@@161)) (= (type $generated@@279) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@273 $generated@@279)) (= ($generated@@78 ($generated@@239 $generated@@277 $generated@@278) ($generated@@152 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@277 $generated@@278) ($generated@@152 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@72)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@138) (= ($generated@@151 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@138) (= ($generated@@137 $generated@@283) (= ($generated@@280 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@138) (= ($generated@@284 $generated@@285) (= ($generated@@280 $generated@@285) $generated@@65)))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@138) ($generated@@151 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@161) (= (type $generated@@288) $generated@@161)) (= $generated@@286 ($generated@@239 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@151 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 18)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 Int) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@138)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@138) ($generated@@137 $generated@@299)) (exists (($generated@@300 Int) ) (= $generated@@299 ($generated@@297 $generated@@300))))
 :pattern ( ($generated@@137 $generated@@299))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@138)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@138) ($generated@@284 $generated@@303)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@138) (= $generated@@303 ($generated@@301 $generated@@304)))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@284 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@161)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@68) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@274 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@78 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@274 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@80 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@83 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@80 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@85 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@80 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 20)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@83 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@80 $generated@@353 $generated@@2)) (= ($generated@@167 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@85 $generated@@352 $generated@@354))) (<= ($generated ($generated@@85 $generated@@352 $generated@@354)) ($generated@@310 $generated@@352))))
 :pattern ( ($generated@@85 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@167 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@161) ($generated@@240 $generated@@358 $generated@@148)) (and (= ($generated@@305 ($generated@@355 $generated@@138 $generated@@358)) $generated@@358) ($generated@@142 ($generated@@355 $generated@@138 $generated@@358) $generated@@148)))
 :pattern ( ($generated@@240 $generated@@358 $generated@@148))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@138) (= ($generated@@142 ($generated@@301 $generated@@359) $generated@@148) ($generated@@142 $generated@@359 $generated@@148)))
 :pattern ( ($generated@@142 ($generated@@301 $generated@@359) $generated@@148))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@360) $generated@@138) (= (type $generated@@361) $generated@@138)) (and ($generated@@284 $generated@@360) ($generated@@284 $generated@@361))) (= ($generated@@136 $generated@@360 $generated@@361) ($generated@@136 ($generated@@249 $generated@@360) ($generated@@249 $generated@@361))))
 :pattern ( ($generated@@136 $generated@@360 $generated@@361) ($generated@@284 $generated@@360))
 :pattern ( ($generated@@136 $generated@@360 $generated@@361) ($generated@@284 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(let (($generated@@364 ($generated@@319 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@318 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@317 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@316 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@320 (type $generated@@369))))
(let (($generated@@371 ($generated@@319 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@318 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@317 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@338 (type $generated@@373))))
(let (($generated@@375 ($generated@@337 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@336 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@335 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@334 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@80 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@338 (type $generated@@380))))
(let (($generated@@382 ($generated@@337 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@336 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@335 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@85 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@80 $generated@@161 $generated@@2)) (= (type $generated@@385) $generated@@68)) (= ($generated@@142 $generated@@384 ($generated@@166 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@161) (< 0 ($generated ($generated@@85 $generated@@384 $generated@@386)))) ($generated@@240 $generated@@386 $generated@@385))
 :pattern ( ($generated@@85 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@142 $generated@@384 ($generated@@166 $generated@@385)))
)))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@387) $generated@@146) (= (type $generated@@388) $generated@@138)) (or ($generated@@147 $generated@@388) (and (not (= 0 $generated@@144)) ($generated@@142 $generated@@388 $generated@@148)))) (and (=> (not ($generated@@137 $generated@@388)) ($generated@@147 ($generated@@249 $generated@@388))) (= ($generated@@145 ($generated@@247 $generated@@387) $generated@@388) (ite ($generated@@137 $generated@@388) 0 ($generated@@145 $generated@@387 ($generated@@249 $generated@@388))))))
 :pattern ( ($generated@@145 ($generated@@247 $generated@@387) $generated@@388))
))))
(assert (forall (($generated@@389 Int) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@273 $generated@@390)) (= ($generated@@78 ($generated@@297 $generated@@389) $generated@@148 $generated@@390) ($generated@@78 ($generated@@8 $generated@@389) $generated@@46 $generated@@390)))
 :pattern ( ($generated@@78 ($generated@@297 $generated@@389) $generated@@148 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@161 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@260 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@161) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@274 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@260 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@161 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@265 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@161) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@265 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@311 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@311 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@161 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@320 (type $generated@@404))))
(let (($generated@@406 ($generated@@319 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@408) $generated@@161)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@407) ($generated@@159 ($generated@@355 $generated@@138 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@159 ($generated@@355 $generated@@138 $generated@@408))) ($generated@@160 ($generated@@355 $generated@@138 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@161 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@338 (type $generated@@412))))
(let (($generated@@414 ($generated@@337 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@336 $generated@@161 $generated@@161)) (= (type $generated@@416) $generated@@161)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@415) ($generated@@159 ($generated@@355 $generated@@138 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@159 ($generated@@355 $generated@@138 $generated@@416))) ($generated@@160 ($generated@@355 $generated@@138 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@319 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@318 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@337 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@336 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@377 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@161) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@85 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@336 $generated@@161 $generated@@161)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@161) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@438) $generated@@442))) (and ($generated@@274 ($generated@@85 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@274 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) $generated@@138) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@273 $generated@@444)) (= ($generated@@78 ($generated@@301 $generated@@443) $generated@@148 $generated@@444) ($generated@@78 $generated@@443 $generated@@148 $generated@@444)))
 :pattern ( ($generated@@78 ($generated@@301 $generated@@443) $generated@@148 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@138) ($generated@@142 $generated@@445 $generated@@148)) (or ($generated@@137 $generated@@445) ($generated@@284 $generated@@445)))
 :pattern ( ($generated@@284 $generated@@445) ($generated@@142 $generated@@445 $generated@@148))
 :pattern ( ($generated@@137 $generated@@445) ($generated@@142 $generated@@445 $generated@@148))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@80 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@338 (type $generated@@448))))
(let (($generated@@450 ($generated@@337 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@336 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@335 $generated@@450 $generated@@449)) (= ($generated@@334 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@334 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@338 (type $generated@@451))))
(let (($generated@@453 ($generated@@337 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@336 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@335 $generated@@453 $generated@@452)) (= ($generated@@377 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@377 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@338 (type $generated@@454))))
(let (($generated@@456 ($generated@@337 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@336 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@335 $generated@@456 $generated@@455)) (= ($generated@@409 $generated@@454) ($generated@@446 $generated@@161))))))
 :pattern ( ($generated@@409 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@320 (type $generated@@457))))
(let (($generated@@459 ($generated@@319 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@318 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@317 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@161) (= (type $generated@@461) $generated@@161)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@457) ($generated@@305 ($generated@@239 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@401 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@338 (type $generated@@462))))
(let (($generated@@464 ($generated@@337 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@336 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@335 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@161) (= (type $generated@@466) $generated@@161)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@462) ($generated@@305 ($generated@@239 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@161) ($generated@@240 $generated@@467 $generated@@46)) (and (= ($generated@@305 ($generated@@355 $generated@@2 $generated@@467)) $generated@@467) ($generated@@142 ($generated@@355 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@161) ($generated@@240 $generated@@468 $generated@@47)) (and (= ($generated@@305 ($generated@@355 $generated@@3 $generated@@468)) $generated@@468) ($generated@@142 ($generated@@355 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@161) ($generated@@240 $generated@@469 $generated@@44)) (and (= ($generated@@305 ($generated@@355 $generated@@4 $generated@@469)) $generated@@469) ($generated@@142 ($generated@@355 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 21))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@161) ($generated@@240 $generated@@471 $generated@@45)) (and (= ($generated@@305 ($generated@@355 $generated@@470 $generated@@471)) $generated@@471) ($generated@@142 ($generated@@355 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@68) (= ($generated@@240 ($generated@@305 $generated@@472) $generated@@473) ($generated@@142 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@240 ($generated@@305 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@83 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@80 $generated@@475 $generated@@2)) (<= 0 ($generated@@310 $generated@@474))))
 :pattern ( ($generated@@310 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@292 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@291 $generated@@477)) (<= 0 ($generated@@290 $generated@@476))))
 :pattern ( ($generated@@290 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@427 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@427 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@427 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@427 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@76 ($generated@@427 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@435 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@435 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@435 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@435 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@161) (= (type $generated@@499) $generated@@161)) (= ($generated@@280 ($generated@@239 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@152 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@152 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@152 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@152 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@161) (= (type $generated@@509) $generated@@161)) (= ($generated@@159 ($generated@@239 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@239 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@161) (= (type $generated@@511) $generated@@161)) (= ($generated@@160 ($generated@@239 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@239 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@146)
 :pattern ( ($generated@@512 $generated@@514))
)) (= (type $generated@@513) $generated@@146)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@146) (= (type $generated@@516) $generated@@138)) (= ($generated@@145 $generated@@515 $generated@@516) ($generated@@145 $generated@@513 $generated@@516)))
 :pattern ( ($generated@@145 ($generated@@512 $generated@@515) $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@292 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520 $generated@@521)) $generated@@522))
 :pattern ( ($generated@@518 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@291 $generated@@161)) (= (type $generated@@524) $generated@@68)) (= (type $generated@@525) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525) (forall (($generated@@526 Int) ) (!  (=> (and (<= 0 $generated@@526) (< $generated@@526 ($generated@@290 $generated@@523))) ($generated@@274 ($generated@@518 $generated@@523 $generated@@526) $generated@@524 $generated@@525))
 :pattern ( ($generated@@518 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@527 ($generated@@79 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@79 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@260 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@260 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@260 $generated@@532)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@265 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@265 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@265 $generated@@536)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@166 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@166 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@166 $generated@@540)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@517 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@517 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@517 $generated@@544)) $generated@@57))
 :pattern ( ($generated@@517 $generated@@544))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@280 ($generated@@297 $generated@@545)) $generated@@63)
 :pattern ( ($generated@@297 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@139 ($generated@@297 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@297 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@138) (= ($generated@@280 ($generated@@301 $generated@@547)) $generated@@65))
 :pattern ( ($generated@@301 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@138) (= ($generated@@249 ($generated@@301 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@301 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@355 $generated@@550 ($generated@@305 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@305 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) (= ($generated@@142 $generated@@551 ($generated@@427 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@161) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@551) $generated@@554))) (and ($generated@@240 ($generated@@85 ($generated@@402 $generated@@551) $generated@@554) $generated@@553) ($generated@@240 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@551) $generated@@554))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@142 $generated@@551 ($generated@@427 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@336 $generated@@161 $generated@@161)) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) (= ($generated@@142 $generated@@555 ($generated@@435 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@161) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@555) $generated@@558))) (and ($generated@@240 ($generated@@85 ($generated@@410 $generated@@555) $generated@@558) $generated@@557) ($generated@@240 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@555) $generated@@558))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@142 $generated@@555 ($generated@@435 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@161)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@239 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@239 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@161) (= (type $generated@@564) $generated@@161)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@239 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@146) (= (type $generated@@566) $generated@@138)) (= ($generated@@145 ($generated@@247 $generated@@565) $generated@@566) ($generated@@145 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@145 ($generated@@247 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@142 ($generated@@297 $generated@@567) $generated@@148) ($generated@@142 ($generated@@8 $generated@@567) $generated@@46))
 :pattern ( ($generated@@142 ($generated@@297 $generated@@567) $generated@@148))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@161) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) ($generated@@240 $generated@@568 ($generated@@427 $generated@@569 $generated@@570))) (and (= ($generated@@305 ($generated@@355 ($generated@@318 $generated@@161 $generated@@161) $generated@@568)) $generated@@568) ($generated@@142 ($generated@@355 ($generated@@318 $generated@@161 $generated@@161) $generated@@568) ($generated@@427 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@568 ($generated@@427 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@161) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@240 $generated@@571 ($generated@@435 $generated@@572 $generated@@573))) (and (= ($generated@@305 ($generated@@355 ($generated@@336 $generated@@161 $generated@@161) $generated@@571)) $generated@@571) ($generated@@142 ($generated@@355 ($generated@@336 $generated@@161 $generated@@161) $generated@@571) ($generated@@435 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@240 $generated@@571 ($generated@@435 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@161)) ($generated@@240 $generated@@576 ($generated@@152 $generated@@574 $generated@@575))) (and (= ($generated@@305 ($generated@@355 $generated@@138 $generated@@576)) $generated@@576) ($generated@@142 ($generated@@355 $generated@@138 $generated@@576) ($generated@@152 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@240 $generated@@576 ($generated@@152 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@138) (< ($generated@@560 $generated@@577) ($generated@@560 ($generated@@301 $generated@@577))))
 :pattern ( ($generated@@301 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@85 ($generated@@446 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@85 ($generated@@446 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@73)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@68) (= (type $generated@@583) $generated@@68)) (and (= ($generated@@76 ($generated@@152 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@580 ($generated@@152 $generated@@582 $generated@@583)) $generated@@66)))
 :pattern ( ($generated@@152 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@138) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@273 $generated@@585) (and ($generated@@137 $generated@@584) ($generated@@78 $generated@@584 $generated@@148 $generated@@585)))) ($generated@@78 ($generated@@8 ($generated@@139 $generated@@584)) $generated@@46 $generated@@585))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@139 $generated@@584)) $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@138) (= ($generated@@559 ($generated@@305 $generated@@586)) ($generated@@560 $generated@@586)))
 :pattern ( ($generated@@559 ($generated@@305 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@161) ($generated@@240 $generated@@587 ($generated@@79 0))) (and (= ($generated@@305 ($generated@@355 $generated@@2 $generated@@587)) $generated@@587) ($generated@@142 ($generated@@355 ($generated@@80 $generated@@161 $generated@@4) $generated@@587) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@587 ($generated@@79 0)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@161) (= (type $generated@@589) $generated@@68)) ($generated@@240 $generated@@588 ($generated@@260 $generated@@589))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@161 $generated@@4) $generated@@588)) $generated@@588) ($generated@@142 ($generated@@355 ($generated@@80 $generated@@161 $generated@@4) $generated@@588) ($generated@@260 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@260 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@68)) ($generated@@240 $generated@@590 ($generated@@265 $generated@@591))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@161 $generated@@4) $generated@@590)) $generated@@590) ($generated@@142 ($generated@@355 ($generated@@80 $generated@@161 $generated@@4) $generated@@590) ($generated@@265 $generated@@591))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@265 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@161) (= (type $generated@@593) $generated@@68)) ($generated@@240 $generated@@592 ($generated@@166 $generated@@593))) (and (= ($generated@@305 ($generated@@355 ($generated@@80 $generated@@161 $generated@@2) $generated@@592)) $generated@@592) ($generated@@142 ($generated@@355 ($generated@@80 $generated@@161 $generated@@2) $generated@@592) ($generated@@166 $generated@@593))))
 :pattern ( ($generated@@240 $generated@@592 ($generated@@166 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@68)) ($generated@@240 $generated@@594 ($generated@@517 $generated@@595))) (and (= ($generated@@305 ($generated@@355 ($generated@@291 $generated@@161) $generated@@594)) $generated@@594) ($generated@@142 ($generated@@355 ($generated@@291 $generated@@161) $generated@@594) ($generated@@517 $generated@@595))))
 :pattern ( ($generated@@240 $generated@@594 ($generated@@517 $generated@@595)))
)))
(assert (= ($generated@@76 $generated@@148) $generated@@64))
(assert (= ($generated@@580 $generated@@148) $generated@@67))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@161 $generated@@2)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@166 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@161) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@274 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@166 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@138) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@273 $generated@@602) (and ($generated@@151 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@68) ($generated@@78 $generated@@600 ($generated@@152 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@152 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@274 ($generated@@159 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@274 ($generated@@159 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@138) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@273 $generated@@606) (and ($generated@@151 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@68) ($generated@@78 $generated@@604 ($generated@@152 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@152 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@274 ($generated@@160 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@274 ($generated@@160 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@138) (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@273 $generated@@609) (and ($generated@@284 $generated@@608) ($generated@@78 $generated@@608 $generated@@148 $generated@@609)))) ($generated@@78 ($generated@@249 $generated@@608) $generated@@148 $generated@@609))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@608) $generated@@148 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@161) (= (type $generated@@611) $generated@@161)) (= ($generated@@239 ($generated@@248 $generated@@610) ($generated@@248 $generated@@611)) ($generated@@248 ($generated@@239 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@239 ($generated@@248 $generated@@610) ($generated@@248 $generated@@611)))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@270 $generated@@612))) ($generated@@248 ($generated@@305 ($generated@@8 $generated@@612))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@270 $generated@@612))))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@297 ($generated@@270 $generated@@613)) ($generated@@248 ($generated@@297 $generated@@613)))
 :pattern ( ($generated@@297 ($generated@@270 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@138) (= ($generated@@301 ($generated@@248 $generated@@614)) ($generated@@248 ($generated@@301 $generated@@614))))
 :pattern ( ($generated@@301 ($generated@@248 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@305 ($generated@@248 $generated@@615)) ($generated@@248 ($generated@@305 $generated@@615)))
 :pattern ( ($generated@@305 ($generated@@248 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@292 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@291 $generated@@617)) (= ($generated@@290 $generated@@616) 0)) (= $generated@@616 ($generated@@289 $generated@@617))))
 :pattern ( ($generated@@290 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@80 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@310 ($generated@@86 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@310 $generated@@618) ($generated ($generated@@85 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@310 ($generated@@86 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@2)) ($generated@@78 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@3)) ($generated@@78 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@4)) ($generated@@78 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@470)) ($generated@@78 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@78 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@161)) ($generated@@78 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@291 $generated@@161)) (= (type $generated@@633) $generated@@68)) (= ($generated@@142 $generated@@632 ($generated@@517 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@632))) ($generated@@240 ($generated@@518 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@518 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@142 $generated@@632 ($generated@@517 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@291 $generated@@161)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@290 $generated@@636))) (< ($generated@@560 ($generated@@355 $generated@@138 ($generated@@518 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@560 ($generated@@355 $generated@@138 ($generated@@518 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) $generated@@68)) ($generated@@142 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@142 ($generated@@316 $generated@@638) ($generated@@260 $generated@@639)) ($generated@@142 ($generated@@366 $generated@@638) ($generated@@260 $generated@@640))) ($generated@@142 ($generated@@401 $generated@@638) ($generated@@260 ($generated@@152 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@142 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@336 $generated@@161 $generated@@161)) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@142 $generated@@641 ($generated@@435 $generated@@642 $generated@@643))) (and (and ($generated@@142 ($generated@@334 $generated@@641) ($generated@@265 $generated@@642)) ($generated@@142 ($generated@@377 $generated@@641) ($generated@@265 $generated@@643))) ($generated@@142 ($generated@@409 $generated@@641) ($generated@@265 ($generated@@152 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@142 $generated@@641 ($generated@@435 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@142 $generated@@644 $generated@@46))
 :pattern ( ($generated@@142 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@142 $generated@@645 $generated@@47))
 :pattern ( ($generated@@142 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@142 $generated@@646 $generated@@44))
 :pattern ( ($generated@@142 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@470) ($generated@@142 $generated@@647 $generated@@45))
 :pattern ( ($generated@@142 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@161) ($generated@@142 $generated@@648 $generated@@48))
 :pattern ( ($generated@@142 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@649) $generated@@138) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) ($generated@@173 $generated@@81 $generated@@4))) (= (type $generated@@652) $generated@@81)) (= (type $generated@@653) ($generated@@173 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@655  (=> (not ($generated@@137 $generated@@649)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@284 $generated@@649)) (=> ($generated@@284 $generated@@649) (=> (and ($generated@@78 ($generated@@249 $generated@@649) $generated@@148 $generated@@650) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@560 ($generated@@249 $generated@@649)) ($generated@@560 $generated@@649))))))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@227 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@656) (=> (= (ControlFlow 0 6) 4) $generated@@655)))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@653 ($generated@@172 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@658) (=> (= (ControlFlow 0 7) 6) $generated@@657)))))
(let (($generated@@660  (=> (and ($generated@@273 $generated@@650) ($generated@@654 $generated@@650)) (=> (and (and ($generated@@142 $generated@@649 $generated@@148) ($generated@@78 $generated@@649 $generated@@148 $generated@@650)) (and (= 0 $generated@@144) (= (ControlFlow 0 8) 7))) $generated@@659))))
$generated@@660)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
