(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@84 T@U) ) (! (let (($generated@@85 (type $generated@@84)))
(= (type ($generated@@78 $generated@@84)) $generated@@85))
 :pattern ( ($generated@@78 $generated@@84))
))) (= (type $generated@@82) $generated@@66)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@86 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@79) (or ($generated@@80 ($generated@@78 $generated@@86)) (and (not (= 0 $generated@@76)) ($generated@@81 $generated@@86 $generated@@82)))) (= ($generated@@77 ($generated@@78 $generated@@86)) ($generated@@83 12)))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@86)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 12)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@69 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@69 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@81 $generated@@149 ($generated@@88 0)))
 :pattern ( ($generated@@81 $generated@@149 ($generated@@88 0)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@79) (or ($generated@@151 $generated@@152) (and (not (= 0 $generated@@76)) ($generated@@81 $generated@@152 $generated@@82)))) true)
 :pattern ( ($generated@@150 $generated@@152))
))))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) (or ($generated@@80 $generated@@153) (and (not (= 0 $generated@@76)) ($generated@@81 $generated@@153 $generated@@82)))) true)
 :pattern ( ($generated@@77 $generated@@153))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@156 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@66) (= (type $generated@@159) $generated@@66)) (= (type $generated@@160) $generated@@79)) ($generated@@81 $generated@@160 ($generated@@155 $generated@@158 $generated@@159))) ($generated@@154 $generated@@160))
 :pattern ( ($generated@@154 $generated@@160) ($generated@@81 $generated@@160 ($generated@@155 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@79) (= (type $generated@@168) $generated@@79)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@66)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@89 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@66)) ($generated@@81 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@81 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@90 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@69 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@90) (= (type $generated@@224) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@225) ($generated@@68 $generated@@4))) (= (type $generated@@227) $generated@@90)) (= (type $generated@@228) ($generated@@68 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@79)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@66) (= (type $generated@@235) $generated@@66)) (= (type $generated@@236) $generated@@164)) (= (type $generated@@237) $generated@@164)) (= ($generated@@81 ($generated@@230 $generated@@236 $generated@@237) ($generated@@155 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@81 ($generated@@230 $generated@@236 $generated@@237) ($generated@@155 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) $generated@@79)) (= ($generated@@161 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@161 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@66)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@89 $generated@@164 $generated@@4)) (= (type $generated@@243) $generated@@66)) (= ($generated@@81 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@164) ($generated@@0 ($generated@@94 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@94 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@81 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@89 $generated@@164 $generated@@4)) (= (type $generated@@248) $generated@@66)) (= ($generated@@81 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@164) ($generated@@0 ($generated@@94 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@94 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@81 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@83 $generated@@250) $generated@@250)
 :pattern ( ($generated@@83 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@78 $generated@@251) $generated@@251)
 :pattern ( ($generated@@78 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@66) (= (type $generated@@255) $generated@@66)) (= (type $generated@@256) $generated@@164)) (= (type $generated@@257) $generated@@164)) (= (type $generated@@258) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@252 $generated@@258)) (= ($generated@@87 ($generated@@230 $generated@@256 $generated@@257) ($generated@@155 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@87 ($generated@@230 $generated@@256 $generated@@257) ($generated@@155 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@79) (= ($generated@@154 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@79) ($generated@@154 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@164) (= (type $generated@@264) $generated@@164)) (= $generated@@262 ($generated@@230 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@154 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@164)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@66) (= (type $generated@@277) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@87 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@279) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@280) $generated@@164)) (= (type $generated@@281) $generated@@66)) ($generated@@145 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@145 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@283) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@285) $generated@@66)) ($generated@@145 $generated@@282 $generated@@283)) ($generated@@87 $generated@@284 $generated@@285 $generated@@282)) ($generated@@87 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@145 $generated@@282 $generated@@283) ($generated@@87 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@89 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@92 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@89 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@94 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@89 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@94 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@94 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@89 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@94 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@94 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@92 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@89 $generated@@329 $generated@@2)) (= ($generated@@170 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@94 $generated@@328 $generated@@330))) (<= ($generated ($generated@@94 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@94 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@170 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@164) ($generated@@231 $generated@@334 $generated@@82)) (and (= ($generated@@273 ($generated@@331 $generated@@79 $generated@@334)) $generated@@334) ($generated@@81 ($generated@@331 $generated@@79 $generated@@334) $generated@@82)))
 :pattern ( ($generated@@231 $generated@@334 $generated@@82))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@296 (type $generated@@335))))
(let (($generated@@337 ($generated@@295 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@294 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@293 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@94 ($generated@@292 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@292 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@296 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@89 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(let (($generated@@344 ($generated@@295 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@294 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@293 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@94 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@314 (type $generated@@346))))
(let (($generated@@348 ($generated@@313 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@312 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@311 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@94 ($generated@@310 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@310 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@89 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(let (($generated@@355 ($generated@@313 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@312 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@311 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@94 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@89 $generated@@164 $generated@@2)) (= (type $generated@@358) $generated@@66)) (= ($generated@@81 $generated@@357 ($generated@@169 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@164) (< 0 ($generated ($generated@@94 $generated@@357 $generated@@359)))) ($generated@@231 $generated@@359 $generated@@358))
 :pattern ( ($generated@@94 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@81 $generated@@357 ($generated@@169 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@89 $generated@@164 $generated@@4)) (= (type $generated@@361) $generated@@66)) (= (type $generated@@362) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@360 ($generated@@240 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@164) ($generated@@0 ($generated@@94 $generated@@360 $generated@@363))) ($generated@@253 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@94 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@87 $generated@@360 ($generated@@240 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@89 $generated@@164 $generated@@4)) (= (type $generated@@365) $generated@@66)) (= (type $generated@@366) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@364 ($generated@@245 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@164) ($generated@@0 ($generated@@94 $generated@@364 $generated@@367))) ($generated@@253 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@94 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@87 $generated@@364 ($generated@@245 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@94 ($generated@@287 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@94 ($generated@@287 $generated@@369) $generated@@368)))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@89 $generated@@164 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@296 (type $generated@@373))))
(let (($generated@@375 ($generated@@295 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@89 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@294 $generated@@164 $generated@@164)) (= (type $generated@@377) $generated@@164)) (= ($generated@@0 ($generated@@94 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@94 ($generated@@292 $generated@@376) ($generated@@162 ($generated@@331 $generated@@79 $generated@@377)))) (= ($generated@@94 ($generated@@371 $generated@@376) ($generated@@162 ($generated@@331 $generated@@79 $generated@@377))) ($generated@@163 ($generated@@331 $generated@@79 $generated@@377))))))
 :pattern ( ($generated@@94 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@89 $generated@@164 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@314 (type $generated@@381))))
(let (($generated@@383 ($generated@@313 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@89 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@312 $generated@@164 $generated@@164)) (= (type $generated@@385) $generated@@164)) (= ($generated@@0 ($generated@@94 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@94 ($generated@@310 $generated@@384) ($generated@@162 ($generated@@331 $generated@@79 $generated@@385)))) (= ($generated@@94 ($generated@@379 $generated@@384) ($generated@@162 ($generated@@331 $generated@@79 $generated@@385))) ($generated@@163 ($generated@@331 $generated@@79 $generated@@385))))))
 :pattern ( ($generated@@94 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@295 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@294 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@94 ($generated@@339 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@94 ($generated@@292 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@94 ($generated@@371 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@94 ($generated@@292 $generated@@386) $generated@@390))
 :pattern ( ($generated@@94 ($generated@@371 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@94 ($generated@@339 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@313 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@312 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@94 ($generated@@350 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@94 ($generated@@310 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@94 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@94 ($generated@@310 $generated@@391) $generated@@395))
 :pattern ( ($generated@@94 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@94 ($generated@@350 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@66)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@294 $generated@@164 $generated@@164)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@164) ($generated@@0 ($generated@@94 ($generated@@292 $generated@@399) $generated@@403))) (and ($generated@@253 ($generated@@94 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@253 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@94 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@94 ($generated@@292 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@87 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@66)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@312 $generated@@164 $generated@@164)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@164) ($generated@@0 ($generated@@94 ($generated@@310 $generated@@407) $generated@@411))) (and ($generated@@253 ($generated@@94 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@253 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@94 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@94 ($generated@@310 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@87 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@413) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@414) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@412 $generated@@414))) (and ($generated@@145 $generated@@412 $generated@@413) ($generated@@145 $generated@@413 $generated@@414))) ($generated@@145 $generated@@412 $generated@@414))
 :pattern ( ($generated@@145 $generated@@412 $generated@@413) ($generated@@145 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@89 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@314 (type $generated@@417))))
(let (($generated@@419 ($generated@@313 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@312 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@311 $generated@@419 $generated@@418)) (= ($generated@@310 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@310 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@314 (type $generated@@420))))
(let (($generated@@422 ($generated@@313 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@312 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@311 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@314 (type $generated@@423))))
(let (($generated@@425 ($generated@@313 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@312 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@311 $generated@@425 $generated@@424)) (= ($generated@@378 $generated@@423) ($generated@@415 $generated@@164))))))
 :pattern ( ($generated@@378 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@296 (type $generated@@426))))
(let (($generated@@428 ($generated@@295 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@294 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@293 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@164) (= (type $generated@@430) $generated@@164)) ($generated@@0 ($generated@@94 ($generated@@370 $generated@@426) ($generated@@273 ($generated@@230 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@314 (type $generated@@431))))
(let (($generated@@433 ($generated@@313 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@312 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@311 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@164) (= (type $generated@@435) $generated@@164)) ($generated@@0 ($generated@@94 ($generated@@378 $generated@@431) ($generated@@273 ($generated@@230 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@164) ($generated@@231 $generated@@436 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@436)) $generated@@436) ($generated@@81 ($generated@@331 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@164) ($generated@@231 $generated@@437 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@437)) $generated@@437) ($generated@@81 ($generated@@331 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@164) ($generated@@231 $generated@@438 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@438)) $generated@@438) ($generated@@81 ($generated@@331 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@164) ($generated@@231 $generated@@440 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@439 $generated@@440)) $generated@@440) ($generated@@81 ($generated@@331 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@66) (= ($generated@@231 ($generated@@273 $generated@@441) $generated@@442) ($generated@@81 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@231 ($generated@@273 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@92 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@89 $generated@@444 $generated@@2)) (<= 0 ($generated@@286 $generated@@443))))
 :pattern ( ($generated@@286 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@268 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@267 $generated@@446)) (<= 0 ($generated@@266 $generated@@445))))
 :pattern ( ($generated@@266 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@396 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@396 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@396 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@396 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@396 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@404 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@404 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@404 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@404 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@164) (= (type $generated@@468) $generated@@164)) (= ($generated@@259 ($generated@@230 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@155 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@155 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@155 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@155 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@164) (= (type $generated@@478) $generated@@164)) (= ($generated@@162 ($generated@@230 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@230 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@164) (= (type $generated@@480) $generated@@164)) (= ($generated@@163 ($generated@@230 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@230 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@268 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@267 $generated@@164)) (= (type $generated@@488) $generated@@66)) (= (type $generated@@489) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@266 $generated@@487))) ($generated@@253 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@87 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@88 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@88 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@240 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@240 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@240 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@245 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@245 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@245 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@169 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@169 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@169 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@331 $generated@@510 ($generated@@273 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@273 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@294 $generated@@164 $generated@@164)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@81 $generated@@511 ($generated@@396 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@164) ($generated@@0 ($generated@@94 ($generated@@292 $generated@@511) $generated@@514))) (and ($generated@@231 ($generated@@94 ($generated@@371 $generated@@511) $generated@@514) $generated@@513) ($generated@@231 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@94 ($generated@@371 $generated@@511) $generated@@514))
 :pattern ( ($generated@@94 ($generated@@292 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@81 $generated@@511 ($generated@@396 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@312 $generated@@164 $generated@@164)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@81 $generated@@515 ($generated@@404 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@164) ($generated@@0 ($generated@@94 ($generated@@310 $generated@@515) $generated@@518))) (and ($generated@@231 ($generated@@94 ($generated@@379 $generated@@515) $generated@@518) $generated@@517) ($generated@@231 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@94 ($generated@@379 $generated@@515) $generated@@518))
 :pattern ( ($generated@@94 ($generated@@310 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@81 $generated@@515 ($generated@@404 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@164) (= (type $generated@@522) $generated@@164)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@230 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@230 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@164) (= (type $generated@@524) $generated@@164)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@230 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@230 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@164) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@231 $generated@@525 ($generated@@396 $generated@@526 $generated@@527))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@164 $generated@@164) $generated@@525)) $generated@@525) ($generated@@81 ($generated@@331 ($generated@@294 $generated@@164 $generated@@164) $generated@@525) ($generated@@396 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@231 $generated@@525 ($generated@@396 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@164) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) ($generated@@231 $generated@@528 ($generated@@404 $generated@@529 $generated@@530))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@164 $generated@@164) $generated@@528)) $generated@@528) ($generated@@81 ($generated@@331 ($generated@@312 $generated@@164 $generated@@164) $generated@@528) ($generated@@404 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@231 $generated@@528 ($generated@@404 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@164)) ($generated@@231 $generated@@533 ($generated@@155 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 $generated@@79 $generated@@533)) $generated@@533) ($generated@@81 ($generated@@331 $generated@@79 $generated@@533) ($generated@@155 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@231 $generated@@533 ($generated@@155 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@94 ($generated@@415 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@94 ($generated@@415 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@155 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@155 $generated@@538 $generated@@539)) $generated@@64)))
 :pattern ( ($generated@@155 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@79) (= ($generated@@519 ($generated@@273 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@273 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@164) ($generated@@231 $generated@@541 ($generated@@88 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@541)) $generated@@541) ($generated@@81 ($generated@@331 ($generated@@89 $generated@@164 $generated@@4) $generated@@541) ($generated@@88 0))))
 :pattern ( ($generated@@231 $generated@@541 ($generated@@88 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@164) (= (type $generated@@543) $generated@@66)) ($generated@@231 $generated@@542 ($generated@@240 $generated@@543))) (and (= ($generated@@273 ($generated@@331 ($generated@@89 $generated@@164 $generated@@4) $generated@@542)) $generated@@542) ($generated@@81 ($generated@@331 ($generated@@89 $generated@@164 $generated@@4) $generated@@542) ($generated@@240 $generated@@543))))
 :pattern ( ($generated@@231 $generated@@542 ($generated@@240 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@164) (= (type $generated@@545) $generated@@66)) ($generated@@231 $generated@@544 ($generated@@245 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@89 $generated@@164 $generated@@4) $generated@@544)) $generated@@544) ($generated@@81 ($generated@@331 ($generated@@89 $generated@@164 $generated@@4) $generated@@544) ($generated@@245 $generated@@545))))
 :pattern ( ($generated@@231 $generated@@544 ($generated@@245 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@164) (= (type $generated@@547) $generated@@66)) ($generated@@231 $generated@@546 ($generated@@169 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@89 $generated@@164 $generated@@2) $generated@@546)) $generated@@546) ($generated@@81 ($generated@@331 ($generated@@89 $generated@@164 $generated@@2) $generated@@546) ($generated@@169 $generated@@547))))
 :pattern ( ($generated@@231 $generated@@546 ($generated@@169 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@164) (= (type $generated@@549) $generated@@66)) ($generated@@231 $generated@@548 ($generated@@481 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@164) $generated@@548)) $generated@@548) ($generated@@81 ($generated@@331 ($generated@@267 $generated@@164) $generated@@548) ($generated@@481 $generated@@549))))
 :pattern ( ($generated@@231 $generated@@548 ($generated@@481 $generated@@549)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@79) (or ($generated@@151 $generated@@550) (and (not (= 0 $generated@@76)) ($generated@@81 $generated@@550 $generated@@82)))) (= ($generated@@150 $generated@@550) ($generated@@0 ($generated@@78 ($generated@@11 true)))))
 :pattern ( ($generated@@150 $generated@@550))
))))
(assert (= ($generated@@74 $generated@@82) $generated@@63))
(assert (= ($generated@@536 $generated@@82) $generated@@65))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@89 $generated@@164 $generated@@2)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@551 ($generated@@169 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@164) (< 0 ($generated ($generated@@94 $generated@@551 $generated@@554)))) ($generated@@253 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@94 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@87 $generated@@551 ($generated@@169 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@79) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@252 $generated@@557) (and ($generated@@154 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@87 $generated@@555 ($generated@@155 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@87 $generated@@555 ($generated@@155 $generated@@556 $generated@@558) $generated@@557))
))))) ($generated@@253 ($generated@@162 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@253 ($generated@@162 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@79) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@252 $generated@@561) (and ($generated@@154 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@66) ($generated@@87 $generated@@559 ($generated@@155 $generated@@562 $generated@@560) $generated@@561))
 :pattern ( ($generated@@87 $generated@@559 ($generated@@155 $generated@@562 $generated@@560) $generated@@561))
))))) ($generated@@253 ($generated@@163 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@253 ($generated@@163 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@164) (= (type $generated@@564) $generated@@164)) (= ($generated@@230 ($generated@@78 $generated@@563) ($generated@@78 $generated@@564)) ($generated@@78 ($generated@@230 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@230 ($generated@@78 $generated@@563) ($generated@@78 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@83 $generated@@565))) ($generated@@78 ($generated@@273 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@83 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@273 ($generated@@78 $generated@@566)) ($generated@@78 ($generated@@273 $generated@@566)))
 :pattern ( ($generated@@273 ($generated@@78 $generated@@566)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@79) (or ($generated@@80 $generated@@567) (and (not (= 0 $generated@@76)) ($generated@@81 $generated@@567 $generated@@82)))) (= ($generated@@77 $generated@@567) ($generated@@83 12)))
 :pattern ( ($generated@@77 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@268 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@267 $generated@@569)) (= ($generated@@266 $generated@@568) 0)) (= $generated@@568 ($generated@@265 $generated@@569))))
 :pattern ( ($generated@@266 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@89 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@286 ($generated@@95 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@286 $generated@@570) ($generated ($generated@@94 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@286 ($generated@@95 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@79) (or ($generated@@151 ($generated@@78 $generated@@574)) (and (not (= 0 $generated@@76)) ($generated@@81 $generated@@574 $generated@@82)))) (= ($generated@@150 ($generated@@78 $generated@@574)) ($generated@@0 ($generated@@78 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@150 ($generated@@78 $generated@@574)))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@576) $generated@@2)) ($generated@@87 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@87 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@578) $generated@@3)) ($generated@@87 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@87 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@580) $generated@@4)) ($generated@@87 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@87 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@582) $generated@@439)) ($generated@@87 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@87 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@584) $generated@@164)) ($generated@@87 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@87 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@267 $generated@@164)) (= (type $generated@@586) $generated@@66)) (= ($generated@@81 $generated@@585 ($generated@@481 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@266 $generated@@585))) ($generated@@231 ($generated@@482 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@482 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@81 $generated@@585 ($generated@@481 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@267 $generated@@164)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@266 $generated@@589))) (< ($generated@@520 ($generated@@331 $generated@@79 ($generated@@482 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@520 ($generated@@331 $generated@@79 ($generated@@482 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@294 $generated@@164 $generated@@164)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) ($generated@@81 $generated@@591 ($generated@@396 $generated@@592 $generated@@593))) (and (and ($generated@@81 ($generated@@292 $generated@@591) ($generated@@240 $generated@@592)) ($generated@@81 ($generated@@339 $generated@@591) ($generated@@240 $generated@@593))) ($generated@@81 ($generated@@370 $generated@@591) ($generated@@240 ($generated@@155 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@81 $generated@@591 ($generated@@396 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@312 $generated@@164 $generated@@164)) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) ($generated@@81 $generated@@594 ($generated@@404 $generated@@595 $generated@@596))) (and (and ($generated@@81 ($generated@@310 $generated@@594) ($generated@@245 $generated@@595)) ($generated@@81 ($generated@@350 $generated@@594) ($generated@@245 $generated@@596))) ($generated@@81 ($generated@@378 $generated@@594) ($generated@@245 ($generated@@155 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@81 $generated@@594 ($generated@@404 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@81 $generated@@597 $generated@@46))
 :pattern ( ($generated@@81 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@81 $generated@@598 $generated@@47))
 :pattern ( ($generated@@81 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@81 $generated@@599 $generated@@44))
 :pattern ( ($generated@@81 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@439) ($generated@@81 $generated@@600 $generated@@45))
 :pattern ( ($generated@@81 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@164) ($generated@@81 $generated@@601 $generated@@48))
 :pattern ( ($generated@@81 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
