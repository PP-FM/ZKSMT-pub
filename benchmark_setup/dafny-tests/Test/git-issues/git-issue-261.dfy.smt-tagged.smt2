(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@613 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert  (and (and (= ($generated@@1 $generated@@143) 14) (= ($generated@@1 $generated@@145) 15)) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@144 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@143) (= (type $generated@@148) $generated@@143)) (and ($generated@@142 $generated@@147) ($generated@@142 $generated@@148))) (= ($generated@@141 $generated@@147 $generated@@148) (= ($generated@@144 $generated@@147) ($generated@@144 $generated@@148))))
 :pattern ( ($generated@@141 $generated@@147 $generated@@148) ($generated@@142 $generated@@147))
 :pattern ( ($generated@@141 $generated@@147 $generated@@148) ($generated@@142 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@70)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@70) (= (type $generated@@156) $generated@@70)) (= (type $generated@@157) $generated@@143)) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@145)
 :pattern ( ($generated@@159 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@145)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@143) (= (type $generated@@164) $generated@@143)) true) (= ($generated@@158 $generated@@163 $generated@@164)  (and (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)) (= ($generated@@160 $generated@@163) ($generated@@160 $generated@@164)))))
 :pattern ( ($generated@@158 $generated@@163 $generated@@164))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@74)
 :pattern ( ($generated@@165 $generated@@167))
)) (= (type $generated@@166) $generated@@143)))
(assert (= ($generated@@165 $generated@@166) $generated@@64))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@82 $generated@@145 $generated@@2)) (= (type $generated@@172) $generated@@70)) ($generated@@149 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@149 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@83 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@73 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@83) (= (type $generated@@223) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@224) ($generated@@72 $generated@@4))) (= (type $generated@@226) $generated@@83)) (= (type $generated@@227) ($generated@@72 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@70)
 :pattern ( ($generated@@229 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@230 $generated@@233)) ($generated@@80 $generated@@166 ($generated@@229 $generated@@232) $generated@@233))
 :pattern ( ($generated@@80 $generated@@166 ($generated@@229 $generated@@232) $generated@@233))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@143)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@70) (= (type $generated@@239) $generated@@70)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) $generated@@145)) (= ($generated@@149 ($generated@@234 $generated@@240 $generated@@241) ($generated@@152 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@149 ($generated@@234 $generated@@240 $generated@@241) ($generated@@152 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (= (type $generated@@242) $generated@@70) ($generated@@149 $generated@@166 ($generated@@229 $generated@@242)))
 :pattern ( ($generated@@149 $generated@@166 ($generated@@229 $generated@@242)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@143) (= (type $generated@@244) $generated@@143)) (= ($generated@@158 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@158 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@143) (= (type $generated@@246) $generated@@143)) (= ($generated@@141 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@141 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@145 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@149 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@145) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@235 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@149 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@145 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@235 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@143) (= (type $generated@@265) $generated@@143)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@141 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@141 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@141 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@145)) (= (type $generated@@270) $generated@@145)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@230 $generated@@271)) (= ($generated@@80 ($generated@@234 $generated@@269 $generated@@270) ($generated@@152 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@234 $generated@@269 $generated@@270) ($generated@@152 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@143) (= ($generated@@151 $generated@@272) (= ($generated@@165 $generated@@272) $generated@@62)))
 :pattern ( ($generated@@151 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@143) (= ($generated@@263 $generated@@273) (= ($generated@@165 $generated@@273) $generated@@64)))
 :pattern ( ($generated@@263 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@143) (= ($generated@@142 $generated@@274) (= ($generated@@165 $generated@@274) $generated@@66)))
 :pattern ( ($generated@@142 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@143) ($generated@@151 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@234 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@151 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@143) ($generated@@263 $generated@@286)) (= $generated@@286 $generated@@166))
 :pattern ( ($generated@@263 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@143)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@143) ($generated@@142 $generated@@289)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@145) (= $generated@@289 ($generated@@287 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@142 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@2) (= ($generated@@149 $generated@@291 $generated@@138) (<= ($generated@@257 0) ($generated $generated@@291))))
 :pattern ( ($generated@@149 $generated@@291 $generated@@138))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@145)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@70) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@80 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@266 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@82 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@85 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@82 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@87 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@75)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@70) (and (= ($generated@@78 ($generated@@229 $generated@@305)) $generated@@65) (= ($generated@@303 ($generated@@229 $generated@@305)) $generated@@69)))
 :pattern ( ($generated@@229 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@82 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@87 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@82 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@85 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@82 $generated@@343 $generated@@2)) (= ($generated@@169 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@87 $generated@@342 $generated@@344))) (<= ($generated ($generated@@87 $generated@@342 $generated@@344)) ($generated@@297 $generated@@342))))
 :pattern ( ($generated@@87 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@169 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) ($generated@@235 $generated@@348 $generated@@138)) (and (= ($generated@@292 ($generated@@345 $generated@@2 $generated@@348)) $generated@@348) ($generated@@149 ($generated@@345 $generated@@2 $generated@@348) $generated@@138)))
 :pattern ( ($generated@@235 $generated@@348 $generated@@138))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@310 (type $generated@@349))))
(let (($generated@@351 ($generated@@309 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@308 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@307 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@306 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@82 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@310 (type $generated@@356))))
(let (($generated@@358 ($generated@@309 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@308 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@307 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@87 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@328 (type $generated@@360))))
(let (($generated@@362 ($generated@@327 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@326 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@325 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@324 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@328 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(let (($generated@@369 ($generated@@327 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@326 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@325 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@82 $generated@@145 $generated@@2)) (= (type $generated@@372) $generated@@70)) (= ($generated@@149 $generated@@371 ($generated@@168 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@145) (< 0 ($generated ($generated@@87 $generated@@371 $generated@@373)))) ($generated@@235 $generated@@373 $generated@@372))
 :pattern ( ($generated@@87 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@149 $generated@@371 ($generated@@168 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@70) (= (type $generated@@375) $generated@@145)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@230 $generated@@376)) (= ($generated@@80 ($generated@@287 $generated@@375) ($generated@@229 $generated@@374) $generated@@376) ($generated@@266 $generated@@375 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@80 ($generated@@287 $generated@@375) ($generated@@229 $generated@@374) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@145 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@145) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@266 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@82 $generated@@145 $generated@@4)) (= (type $generated@@382) $generated@@70)) (= (type $generated@@383) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@381 ($generated@@252 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@87 $generated@@381 $generated@@384))) ($generated@@266 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@87 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@80 $generated@@381 ($generated@@252 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@87 ($generated@@298 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@87 ($generated@@298 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@145 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@310 (type $generated@@390))))
(let (($generated@@392 ($generated@@309 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@82 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@145)) (= ($generated@@0 ($generated@@87 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@393) ($generated@@159 ($generated@@345 $generated@@143 $generated@@394)))) (= ($generated@@87 ($generated@@388 $generated@@393) ($generated@@159 ($generated@@345 $generated@@143 $generated@@394))) ($generated@@160 ($generated@@345 $generated@@143 $generated@@394))))))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@145 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@328 (type $generated@@398))))
(let (($generated@@400 ($generated@@327 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@145)) (= ($generated@@0 ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@401) ($generated@@159 ($generated@@345 $generated@@143 $generated@@402)))) (= ($generated@@87 ($generated@@396 $generated@@401) ($generated@@159 ($generated@@345 $generated@@143 $generated@@402))) ($generated@@160 ($generated@@345 $generated@@143 $generated@@402))))))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@309 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@308 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@87 ($generated@@353 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@87 ($generated@@306 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@87 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@403) $generated@@407))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@87 ($generated@@353 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@327 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@326 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@87 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@408) $generated@@412))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@70)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@416) $generated@@420))) (and ($generated@@266 ($generated@@87 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@266 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@80 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@424) $generated@@428))) (and ($generated@@266 ($generated@@87 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@266 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) $generated@@70) (= (type $generated@@430) $generated@@143)) ($generated@@149 $generated@@430 ($generated@@229 $generated@@429))) (or ($generated@@263 $generated@@430) ($generated@@142 $generated@@430)))
 :pattern ( ($generated@@142 $generated@@430) ($generated@@149 $generated@@430 ($generated@@229 $generated@@429)))
 :pattern ( ($generated@@263 $generated@@430) ($generated@@149 $generated@@430 ($generated@@229 $generated@@429)))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@328 (type $generated@@433))))
(let (($generated@@435 ($generated@@327 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@326 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@325 $generated@@435 $generated@@434)) (= ($generated@@324 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@324 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@328 (type $generated@@436))))
(let (($generated@@438 ($generated@@327 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@326 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@325 $generated@@438 $generated@@437)) (= ($generated@@364 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@364 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@395 $generated@@439) ($generated@@431 $generated@@145))))))
 :pattern ( ($generated@@395 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@310 (type $generated@@442))))
(let (($generated@@444 ($generated@@309 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@308 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@307 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) ($generated@@0 ($generated@@87 ($generated@@387 $generated@@442) ($generated@@292 ($generated@@234 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@387 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@328 (type $generated@@447))))
(let (($generated@@449 ($generated@@327 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@326 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@325 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) ($generated@@0 ($generated@@87 ($generated@@395 $generated@@447) ($generated@@292 ($generated@@234 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@395 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@235 $generated@@452 $generated@@46)) (and (= ($generated@@292 ($generated@@345 $generated@@2 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@345 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@235 $generated@@453 $generated@@47)) (and (= ($generated@@292 ($generated@@345 $generated@@3 $generated@@453)) $generated@@453) ($generated@@149 ($generated@@345 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@145) ($generated@@235 $generated@@454 $generated@@44)) (and (= ($generated@@292 ($generated@@345 $generated@@4 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@345 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@235 $generated@@456 $generated@@45)) (and (= ($generated@@292 ($generated@@345 $generated@@455 $generated@@456)) $generated@@456) ($generated@@149 ($generated@@345 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@235 ($generated@@292 $generated@@457) $generated@@458) ($generated@@149 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@235 ($generated@@292 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@281 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@280 $generated@@462)) (<= 0 ($generated@@279 $generated@@461))))
 :pattern ( ($generated@@279 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@413 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@413 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@78 ($generated@@413 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@421 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@165 ($generated@@234 $generated@@483 $generated@@484)) $generated@@62))
 :pattern ( ($generated@@234 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@152 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@152 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@152 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@152 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@145) (= (type $generated@@494) $generated@@145)) (= ($generated@@159 ($generated@@234 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@234 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) (= (type $generated@@496) $generated@@145)) (= ($generated@@160 ($generated@@234 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@281 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@280 $generated@@145)) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@279 $generated@@503))) ($generated@@266 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@80 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@81 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@81 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@247 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@247 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@252 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@252 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@168 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@168 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@168 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@229 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@229 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@145) (= ($generated@@165 ($generated@@287 $generated@@528)) $generated@@66))
 :pattern ( ($generated@@287 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@145) (= ($generated@@144 ($generated@@287 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@287 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@345 $generated@@531 ($generated@@292 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@292 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@533) $generated@@70)) (= (type $generated@@534) $generated@@70)) (= ($generated@@149 $generated@@532 ($generated@@413 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@0 ($generated@@87 ($generated@@306 $generated@@532) $generated@@535))) (and ($generated@@235 ($generated@@87 ($generated@@388 $generated@@532) $generated@@535) $generated@@534) ($generated@@235 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@532) $generated@@535))
 :pattern ( ($generated@@87 ($generated@@306 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@149 $generated@@532 ($generated@@413 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) (= ($generated@@149 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@536) $generated@@539))) (and ($generated@@235 ($generated@@87 ($generated@@396 $generated@@536) $generated@@539) $generated@@538) ($generated@@235 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@536) $generated@@539))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@149 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@70) (= (type $generated@@541) $generated@@145)) (= ($generated@@149 ($generated@@287 $generated@@541) ($generated@@229 $generated@@540)) ($generated@@235 $generated@@541 $generated@@540)))
 :pattern ( ($generated@@149 ($generated@@287 $generated@@541) ($generated@@229 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@234 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@234 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@145)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@234 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@234 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@235 $generated@@548 ($generated@@413 $generated@@549 $generated@@550))) (and (= ($generated@@292 ($generated@@345 ($generated@@308 $generated@@145 $generated@@145) $generated@@548)) $generated@@548) ($generated@@149 ($generated@@345 ($generated@@308 $generated@@145 $generated@@145) $generated@@548) ($generated@@413 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@235 $generated@@548 ($generated@@413 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) ($generated@@235 $generated@@551 ($generated@@421 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@345 ($generated@@326 $generated@@145 $generated@@145) $generated@@551)) $generated@@551) ($generated@@149 ($generated@@345 ($generated@@326 $generated@@145 $generated@@145) $generated@@551) ($generated@@421 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@235 $generated@@551 ($generated@@421 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@145)) ($generated@@235 $generated@@556 ($generated@@152 $generated@@554 $generated@@555))) (and (= ($generated@@292 ($generated@@345 $generated@@143 $generated@@556)) $generated@@556) ($generated@@149 ($generated@@345 $generated@@143 $generated@@556) ($generated@@152 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@235 $generated@@556 ($generated@@152 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@145) (< ($generated@@542 $generated@@557) ($generated@@543 ($generated@@287 $generated@@557))))
 :pattern ( ($generated@@287 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@143) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@230 $generated@@560) (and ($generated@@142 $generated@@558) ($generated@@80 $generated@@558 ($generated@@229 $generated@@559) $generated@@560)))) ($generated@@266 ($generated@@144 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@266 ($generated@@144 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@87 ($generated@@431 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (and (= ($generated@@78 ($generated@@152 $generated@@563 $generated@@564)) $generated@@63) (= ($generated@@303 ($generated@@152 $generated@@563 $generated@@564)) $generated@@68)))
 :pattern ( ($generated@@152 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@143) (= ($generated@@542 ($generated@@292 $generated@@565)) ($generated@@543 $generated@@565)))
 :pattern ( ($generated@@542 ($generated@@292 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) ($generated@@235 $generated@@566 ($generated@@81 0))) (and (= ($generated@@292 ($generated@@345 $generated@@2 $generated@@566)) $generated@@566) ($generated@@149 ($generated@@345 ($generated@@82 $generated@@145 $generated@@4) $generated@@566) ($generated@@81 0))))
 :pattern ( ($generated@@235 $generated@@566 ($generated@@81 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@70)) ($generated@@235 $generated@@567 ($generated@@247 $generated@@568))) (and (= ($generated@@292 ($generated@@345 ($generated@@82 $generated@@145 $generated@@4) $generated@@567)) $generated@@567) ($generated@@149 ($generated@@345 ($generated@@82 $generated@@145 $generated@@4) $generated@@567) ($generated@@247 $generated@@568))))
 :pattern ( ($generated@@235 $generated@@567 ($generated@@247 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) ($generated@@235 $generated@@569 ($generated@@252 $generated@@570))) (and (= ($generated@@292 ($generated@@345 ($generated@@82 $generated@@145 $generated@@4) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@345 ($generated@@82 $generated@@145 $generated@@4) $generated@@569) ($generated@@252 $generated@@570))))
 :pattern ( ($generated@@235 $generated@@569 ($generated@@252 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@70)) ($generated@@235 $generated@@571 ($generated@@168 $generated@@572))) (and (= ($generated@@292 ($generated@@345 ($generated@@82 $generated@@145 $generated@@2) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@345 ($generated@@82 $generated@@145 $generated@@2) $generated@@571) ($generated@@168 $generated@@572))))
 :pattern ( ($generated@@235 $generated@@571 ($generated@@168 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@70)) ($generated@@235 $generated@@573 ($generated@@497 $generated@@574))) (and (= ($generated@@292 ($generated@@345 ($generated@@280 $generated@@145) $generated@@573)) $generated@@573) ($generated@@149 ($generated@@345 ($generated@@280 $generated@@145) $generated@@573) ($generated@@497 $generated@@574))))
 :pattern ( ($generated@@235 $generated@@573 ($generated@@497 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@145)) ($generated@@235 $generated@@576 ($generated@@229 $generated@@575))) (and (= ($generated@@292 ($generated@@345 $generated@@143 $generated@@576)) $generated@@576) ($generated@@149 ($generated@@345 $generated@@143 $generated@@576) ($generated@@229 $generated@@575))))
 :pattern ( ($generated@@235 $generated@@576 ($generated@@229 $generated@@575)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@303 $generated@@138) $generated@@67))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@82 $generated@@145 $generated@@2)) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@577 ($generated@@168 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@145) (< 0 ($generated ($generated@@87 $generated@@577 $generated@@580)))) ($generated@@266 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@87 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@168 $generated@@578) $generated@@579))
)))
(assert (= $generated@@166 ($generated@@259 $generated@@166)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@143) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@230 $generated@@583) (and ($generated@@151 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@152 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@152 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@266 ($generated@@159 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@266 ($generated@@159 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@143) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@230 $generated@@587) (and ($generated@@151 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@80 $generated@@585 ($generated@@152 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@80 $generated@@585 ($generated@@152 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@266 ($generated@@160 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@266 ($generated@@160 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@145) (= (type $generated@@590) $generated@@145)) (= ($generated@@234 ($generated@@259 $generated@@589) ($generated@@259 $generated@@590)) ($generated@@259 ($generated@@234 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@234 ($generated@@259 $generated@@589) ($generated@@259 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@257 $generated@@591))) ($generated@@259 ($generated@@292 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@257 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) (= ($generated@@287 ($generated@@259 $generated@@592)) ($generated@@259 ($generated@@287 $generated@@592))))
 :pattern ( ($generated@@287 ($generated@@259 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@292 ($generated@@259 $generated@@593)) ($generated@@259 ($generated@@292 $generated@@593)))
 :pattern ( ($generated@@292 ($generated@@259 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@281 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@280 $generated@@595)) (= ($generated@@279 $generated@@594) 0)) (= $generated@@594 ($generated@@278 $generated@@595))))
 :pattern ( ($generated@@279 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@82 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@297 ($generated@@88 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@297 $generated@@596) ($generated ($generated@@87 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@297 ($generated@@88 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@2)) ($generated@@80 $generated@@601 $generated@@46 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@3)) ($generated@@80 $generated@@603 $generated@@47 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@47 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@4)) ($generated@@80 $generated@@605 $generated@@44 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@44 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@455)) ($generated@@80 $generated@@607 $generated@@45 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@45 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@609) $generated@@145)) ($generated@@80 $generated@@609 $generated@@48 $generated@@608))
 :pattern ( ($generated@@80 $generated@@609 $generated@@48 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@280 $generated@@145)) (= (type $generated@@611) $generated@@70)) (= ($generated@@149 $generated@@610 ($generated@@497 $generated@@611)) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@279 $generated@@610))) ($generated@@235 ($generated@@498 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@498 $generated@@610 $generated@@612))
))))
 :pattern ( ($generated@@149 $generated@@610 ($generated@@497 $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ) (!  (=> (= (type $generated@@614) ($generated@@280 $generated@@145)) (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@279 $generated@@614))) (< ($generated@@543 ($generated@@345 $generated@@143 ($generated@@498 $generated@@614 $generated@@615))) ($generated@@613 $generated@@614))))
 :pattern ( ($generated@@543 ($generated@@345 $generated@@143 ($generated@@498 $generated@@614 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@617) $generated@@70)) (= (type $generated@@618) $generated@@70)) ($generated@@149 $generated@@616 ($generated@@413 $generated@@617 $generated@@618))) (and (and ($generated@@149 ($generated@@306 $generated@@616) ($generated@@247 $generated@@617)) ($generated@@149 ($generated@@353 $generated@@616) ($generated@@247 $generated@@618))) ($generated@@149 ($generated@@387 $generated@@616) ($generated@@247 ($generated@@152 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@413 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@620) $generated@@70)) (= (type $generated@@621) $generated@@70)) ($generated@@149 $generated@@619 ($generated@@421 $generated@@620 $generated@@621))) (and (and ($generated@@149 ($generated@@324 $generated@@619) ($generated@@252 $generated@@620)) ($generated@@149 ($generated@@364 $generated@@619) ($generated@@252 $generated@@621))) ($generated@@149 ($generated@@395 $generated@@619) ($generated@@252 ($generated@@152 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@421 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@2) ($generated@@149 $generated@@622 $generated@@46))
 :pattern ( ($generated@@149 $generated@@622 $generated@@46))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@3) ($generated@@149 $generated@@623 $generated@@47))
 :pattern ( ($generated@@149 $generated@@623 $generated@@47))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@4) ($generated@@149 $generated@@624 $generated@@44))
 :pattern ( ($generated@@149 $generated@@624 $generated@@44))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@455) ($generated@@149 $generated@@625 $generated@@45))
 :pattern ( ($generated@@149 $generated@@625 $generated@@45))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@145) ($generated@@149 $generated@@626 $generated@@48))
 :pattern ( ($generated@@149 $generated@@626 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(assert  (and (and (and (and (and (= (type $generated@@627) ($generated@@175 $generated@@83 $generated@@4)) (= (type $generated@@628) $generated@@83)) (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) $generated@@143)) (= (type $generated@@633) $generated@@143)) (= (type $generated@@635) $generated@@143)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@637  (=> (= $generated@@627 ($generated@@174 $generated@@628 $generated@@629 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@149 ($generated@@259 ($generated@@234 ($generated@@292 ($generated@@8 ($generated@@257 2))) ($generated@@292 ($generated@@8 ($generated@@257 3))))) ($generated@@152 $generated@@138 $generated@@138))) (=> ($generated@@149 ($generated@@259 ($generated@@234 ($generated@@292 ($generated@@8 ($generated@@257 2))) ($generated@@292 ($generated@@8 ($generated@@257 3))))) ($generated@@152 $generated@@138 $generated@@138)) (=> (and (= $generated@@630 ($generated@@259 ($generated@@287 ($generated@@292 ($generated@@259 ($generated@@234 ($generated@@292 ($generated@@8 ($generated@@257 2))) ($generated@@292 ($generated@@8 ($generated@@257 3))))))))) (<= ($generated@@257 0) $generated@@631)) (=> (and (and (<= ($generated@@257 0) $generated@@632) (= $generated@@633 $generated@@630)) (and ($generated@@149 $generated@@633 ($generated@@229 ($generated@@152 $generated@@138 $generated@@138))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@142 $generated@@633))))))))
(let (($generated@@638  (=> (and ($generated@@230 $generated@@629) ($generated@@634 $generated@@629)) (=> (and (and (and ($generated@@149 $generated@@635 ($generated@@229 ($generated@@152 $generated@@138 $generated@@138))) ($generated@@80 $generated@@635 ($generated@@229 ($generated@@152 $generated@@138 $generated@@138)) $generated@@629)) true) (and (= 1 $generated@@636) (= (ControlFlow 0 4) 2))) $generated@@637))))
$generated@@638)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
