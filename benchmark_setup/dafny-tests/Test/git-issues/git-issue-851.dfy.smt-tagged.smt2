(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () Bool)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 (T@U) Bool)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(assert  (and (and (and (and (= (type $generated@@586) ($generated@@164 $generated@@80 $generated@@4)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@589) $generated@@80)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@592) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@594  (=> (and (= $generated@@586 ($generated@@163 $generated@@136 $generated@@587 $generated@@60 false)) (=> $generated@@588 (and ($generated@@139 $generated@@589 $generated@@218) ($generated@@77 $generated@@589 $generated@@218 $generated@@587)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@588) (=> $generated@@588 (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@589 $generated@@136))) (=> (not (= $generated@@589 $generated@@136)) (=> (and (and (and ($generated@@245 $generated@@590) ($generated@@591 $generated@@590)) ($generated@@0 ($generated@@241 ($generated@@11 false)))) (and (= $generated@@587 $generated@@590) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@0 ($generated@@241 ($generated@@11 false)))))))))))
(let (($generated@@595  (=> (and ($generated@@245 $generated@@587) ($generated@@591 $generated@@587)) (=> (and (and (=> $generated@@588 (and ($generated@@139 $generated@@592 $generated@@218) ($generated@@77 $generated@@592 $generated@@218 $generated@@587))) true) (and (= 1 $generated@@593) (= (ControlFlow 0 5) 2))) $generated@@594))))
$generated@@595)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () T@U)
(declare-fun $generated@@570 () T@U)
(declare-fun $generated@@571 () T@U)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () Bool)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () Bool)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@145)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@572) $generated@@145)) (= (type $generated@@573) $generated@@145)) (= (type $generated@@574) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@575) $generated@@77)) (= (type $generated@@578) $generated@@145)) (= (type $generated@@580) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@582  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@145) (and ($generated@@212 $generated@@583 $generated@@569) ($generated@@0 ($generated@@231 ($generated@@11 true)))))
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
)))))
(let (($generated@@584  (=> (and (not (and ($generated@@212 $generated@@570 $generated@@569) ($generated@@236 $generated@@570 $generated@@569 $generated@@571))) (= (ControlFlow 0 4) 2)) $generated@@582)))
(let (($generated@@585  (=> (and (and ($generated@@212 $generated@@570 $generated@@569) ($generated@@236 $generated@@570 $generated@@569 $generated@@571)) (= (ControlFlow 0 3) 2)) $generated@@582)))
(let (($generated@@586  (and (=> (= (ControlFlow 0 5) (- 0 6)) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@145) (and ($generated@@212 $generated@@587 $generated@@569) ($generated@@0 ($generated@@231 ($generated@@11 true)))))
 :no-pattern (type $generated@@587)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
))) (=> (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@145) (and ($generated@@212 $generated@@588 $generated@@569) ($generated@@0 ($generated@@231 ($generated@@11 true)))))
 :no-pattern (type $generated@@588)
 :no-pattern ($generated $generated@@588)
 :no-pattern ($generated@@0 $generated@@588)
)) (=> (=> true (and ($generated@@212 $generated@@572 $generated@@569) ($generated@@236 $generated@@572 $generated@@569 $generated@@571))) (and (=> (= (ControlFlow 0 5) 3) $generated@@585) (=> (= (ControlFlow 0 5) 4) $generated@@584)))))))
(let (($generated@@589  (=> (and (not (and ($generated@@212 $generated@@573 $generated@@569) ($generated@@236 $generated@@573 $generated@@569 $generated@@571))) (= (ControlFlow 0 8) 5)) $generated@@586)))
(let (($generated@@590  (=> (and (and ($generated@@212 $generated@@573 $generated@@569) ($generated@@236 $generated@@573 $generated@@569 $generated@@571)) (= (ControlFlow 0 7) 5)) $generated@@586)))
(let (($generated@@591  (=> (= $generated@@574 ($generated@@156 $generated@@575 $generated@@571 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@590) (=> (= (ControlFlow 0 9) 8) $generated@@589)))))
(let (($generated@@592  (=> (and (and (and ($generated@@235 $generated@@571) ($generated@@576 $generated@@571)) (and (=> $generated@@577 (and ($generated@@212 $generated@@578 $generated@@569) ($generated@@236 $generated@@578 $generated@@569 $generated@@571))) true)) (and (and (=> $generated@@579 (and ($generated@@212 $generated@@580 $generated@@569) ($generated@@236 $generated@@580 $generated@@569 $generated@@571))) true) (and (= 0 $generated@@581) (= (ControlFlow 0 10) 9)))) $generated@@591)))
$generated@@592)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (Int Int) Int)
(declare-fun $generated@@391 (T@T) T@U)
(declare-fun $generated@@415 () T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U Int) T@U)
(declare-fun $generated@@467 (T@U) Int)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 Int) ($generated@@390 Int) ) (! (= ($generated@@388 $generated@@389 $generated@@390) (div $generated@@389 $generated@@390))
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@T) ) (! (= (type ($generated@@391 $generated@@392)) ($generated@@76 $generated@@392 $generated@@4))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@287 $generated@@393) ($generated@@391 $generated@@395))))))
 :pattern ( ($generated@@287 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@323 $generated@@396) ($generated@@391 $generated@@397))))))
 :pattern ( ($generated@@323 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@291 (type $generated@@399))))
(let (($generated@@401 ($generated@@290 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@289 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@288 $generated@@401 $generated@@400)) (= ($generated@@354 $generated@@399) ($generated@@391 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@273 (type $generated@@402))))
(let (($generated@@404 ($generated@@272 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@271 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@270 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@402) ($generated@@258 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@343 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@291 (type $generated@@407))))
(let (($generated@@409 ($generated@@290 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@289 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@288 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@407) ($generated@@258 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@354 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@212 $generated@@412 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@412)) $generated@@412) ($generated@@132 ($generated@@344 $generated@@2 $generated@@412) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@412 $generated@@46))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@3 $generated@@413) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@47))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@212 $generated@@414 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@414)) $generated@@414) ($generated@@132 ($generated@@344 $generated@@4 $generated@@414) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@414 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@415) 20))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@415 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@344 $generated@@415 $generated@@416) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@45))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@417) $generated@@418) ($generated@@132 $generated@@417 $generated@@418)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@79 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@76 $generated@@420 $generated@@2)) (<= 0 ($generated@@263 $generated@@419))))
 :pattern ( ($generated@@263 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@253 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@252 $generated@@422)) (<= 0 ($generated@@251 $generated@@421))))
 :pattern ( ($generated@@251 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (= (type ($generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@64) (= (type $generated@@426) $generated@@64)) (= ($generated@@423 ($generated@@372 $generated@@425 $generated@@426)) $generated@@425))
 :pattern ( ($generated@@372 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@64) (= (type $generated@@430) $generated@@64)) (= ($generated@@427 ($generated@@372 $generated@@429 $generated@@430)) $generated@@430))
 :pattern ( ($generated@@372 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@431 $generated@@432)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@380 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@380 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@380 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@380 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@441 $generated@@442)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) (= (type $generated@@444) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@443 $generated@@444)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@135 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@135 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@211 $generated@@455 $generated@@456))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ($generated@@461 Int) ) (! (let (($generated@@462 ($generated@@253 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460 $generated@@461)) $generated@@462))
 :pattern ( ($generated@@458 $generated@@460 $generated@@461))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@463) ($generated@@252 $generated@@145)) (= (type $generated@@464) $generated@@64)) (= (type $generated@@465) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@463 ($generated@@457 $generated@@464) $generated@@465) (forall (($generated@@466 Int) ) (!  (=> (and (<= 0 $generated@@466) (< $generated@@466 ($generated@@251 $generated@@463))) ($generated@@238 ($generated@@458 $generated@@463 $generated@@466) $generated@@464 $generated@@465))
 :pattern ( ($generated@@458 $generated@@463 $generated@@466))
))))
 :pattern ( ($generated@@74 $generated@@463 ($generated@@457 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 Int) ) (! (= ($generated@@467 ($generated@@75 $generated@@468)) $generated@@468)
 :pattern ( ($generated@@75 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@469 ($generated@@221 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@221 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@472)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@226 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@226 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@476)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@150 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@150 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@480)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@457 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@457 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@457 $generated@@484)) $generated@@57))
 :pattern ( ($generated@@457 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= ($generated@@344 $generated@@486 ($generated@@258 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@258 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) $generated@@64)) (= ($generated@@132 $generated@@487 ($generated@@372 $generated@@488 $generated@@489)) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@487) $generated@@490))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@487) $generated@@490) $generated@@489) ($generated@@212 $generated@@490 $generated@@488)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@487) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@487) $generated@@490))
))))
 :pattern ( ($generated@@132 $generated@@487 ($generated@@372 $generated@@488 $generated@@489)))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@491) $generated@@494))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@491) $generated@@494) $generated@@493) ($generated@@212 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) (= (type $generated@@498) $generated@@145)) (< ($generated@@495 $generated@@497) ($generated@@496 ($generated@@211 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@211 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (< ($generated@@495 $generated@@500) ($generated@@496 ($generated@@211 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@211 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@372 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@501) ($generated@@372 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@372 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) ($generated@@212 $generated@@504 ($generated@@380 $generated@@505 $generated@@506))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@504)) $generated@@504) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@504) ($generated@@380 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@380 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@145)) ($generated@@212 $generated@@509 ($generated@@135 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@509)) $generated@@509) ($generated@@132 ($generated@@344 $generated@@136 $generated@@509) ($generated@@135 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@135 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (not ($generated@@0 ($generated@@81 ($generated@@391 $generated@@511) $generated@@510))))
 :pattern ( (let (($generated@@511 (type $generated@@510)))
($generated@@81 ($generated@@391 $generated@@511) $generated@@510)))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@514 $generated@@515)) $generated@@62) (= ($generated@@512 ($generated@@135 $generated@@514 $generated@@515)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@136) (= ($generated@@495 ($generated@@258 $generated@@516)) ($generated@@496 $generated@@516)))
 :pattern ( ($generated@@495 ($generated@@258 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@212 $generated@@517 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@75 0)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@221 $generated@@519))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@221 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@221 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@226 $generated@@521))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@226 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@226 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@150 $generated@@523))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522) ($generated@@150 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@150 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@457 $generated@@525))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524) ($generated@@457 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@457 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@526 $generated@@529)))) ($generated@@238 $generated@@529 $generated@@527 $generated@@528))
 :pattern ( ($generated@@81 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@532) (and ($generated@@134 $generated@@530) (exists (($generated@@533 T@U) ) (!  (and (= (type $generated@@533) $generated@@64) ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
))))) ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
))))) ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@211 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@540))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))))
)))
(assert (forall (($generated@@541 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@541)) ($generated@@233 ($generated@@258 $generated@@541)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@253 (type $generated@@542))))
 (=> (and (= (type $generated@@542) ($generated@@252 $generated@@543)) (= ($generated@@251 $generated@@542) 0)) (= $generated@@542 ($generated@@250 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@545)))
 (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@547 $generated@@2)) (= (type $generated@@546) $generated@@2)) (<= 0 ($generated $generated@@546))) (= ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)) (+ (- ($generated@@263 $generated@@544) ($generated ($generated@@81 $generated@@544 $generated@@545))) ($generated $generated@@546)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@2)) ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@3)) ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@4)) ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@415)) ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@145)) ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@252 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@558 ($generated@@457 $generated@@559)) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@558))) ($generated@@212 ($generated@@458 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@458 $generated@@558 $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@457 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (= (type $generated@@562) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@251 $generated@@562))) (< ($generated@@496 ($generated@@344 $generated@@136 ($generated@@458 $generated@@562 $generated@@563))) ($generated@@561 $generated@@562))))
 :pattern ( ($generated@@496 ($generated@@344 $generated@@136 ($generated@@458 $generated@@562 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@269 $generated@@564) ($generated@@221 $generated@@565)) ($generated@@132 ($generated@@312 $generated@@564) ($generated@@221 $generated@@566))) ($generated@@132 ($generated@@343 $generated@@564) ($generated@@221 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569))) (and (and ($generated@@132 ($generated@@287 $generated@@567) ($generated@@226 $generated@@568)) ($generated@@132 ($generated@@323 $generated@@567) ($generated@@226 $generated@@569))) ($generated@@132 ($generated@@354 $generated@@567) ($generated@@226 ($generated@@135 $generated@@568 $generated@@569)))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@2) ($generated@@132 $generated@@570 $generated@@46))
 :pattern ( ($generated@@132 $generated@@570 $generated@@46))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@3) ($generated@@132 $generated@@571 $generated@@47))
 :pattern ( ($generated@@132 $generated@@571 $generated@@47))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@4) ($generated@@132 $generated@@572 $generated@@44))
 :pattern ( ($generated@@132 $generated@@572 $generated@@44))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@415) ($generated@@132 $generated@@573 $generated@@45))
 :pattern ( ($generated@@132 $generated@@573 $generated@@45))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@145) ($generated@@132 $generated@@574 $generated@@48))
 :pattern ( ($generated@@132 $generated@@574 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@575 () Bool)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 (T@U) Bool)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () Int)
(assert  (and (and (and (and (and (= (type $generated@@576) $generated@@64) (= (type $generated@@577) $generated@@145)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@581) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@582) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@584  (=> (and (= $generated@@575 (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@145) ($generated@@212 $generated@@585 $generated@@576)) (= ($generated@@231 ($generated@@388 5 ($generated@@231 0))) ($generated@@231 19)))
 :no-pattern (type $generated@@585)
 :no-pattern ($generated $generated@@585)
 :no-pattern ($generated@@0 $generated@@585)
))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@231 0) 0)))))
(let (($generated@@586  (=> (and (not (and ($generated@@212 $generated@@577 $generated@@576) ($generated@@238 $generated@@577 $generated@@576 $generated@@578))) (= (ControlFlow 0 5) 2)) $generated@@584)))
(let (($generated@@587  (=> (and ($generated@@212 $generated@@577 $generated@@576) ($generated@@238 $generated@@577 $generated@@576 $generated@@578)) (=> (and (and ($generated@@237 $generated@@579) ($generated@@580 $generated@@579)) (and ($generated@@0 ($generated@@233 ($generated@@11 false))) (= $generated@@578 $generated@@579))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= ($generated@@231 0) 0))) (=> (not (= ($generated@@231 0) 0)) (=> (= (ControlFlow 0 3) 2) $generated@@584)))))))
(let (($generated@@588  (=> (= $generated@@581 ($generated@@156 $generated@@582 $generated@@578 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@587) (=> (= (ControlFlow 0 6) 5) $generated@@586)))))
(let (($generated@@589  (=> (and (and ($generated@@237 $generated@@578) ($generated@@580 $generated@@578)) (and (= 1 $generated@@583) (= (ControlFlow 0 7) 6))) $generated@@588)))
$generated@@589))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () Bool)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (Int Int) Int)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (= (type $generated@@262) $generated@@64))
(assert  (=> (<= 0 $generated@@259) (=> (or $generated@@260 (not (= 0 $generated@@259))) (= $generated@@261 ($generated@@243 40)))))
(assert  (=> (<= 0 $generated@@259) (=> (or $generated@@260 (not (= 0 $generated@@259))) (= $generated@@261 ($generated@@243 40)))))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert ($generated@@274 $generated@@262))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@145)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@74 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@250 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@76 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@79 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@76 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@81 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@76 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@290 (type $generated@@325))))
(let (($generated@@327 ($generated@@289 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@288 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@287 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@286 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@290 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@290 (type $generated@@332))))
(let (($generated@@334 ($generated@@289 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@288 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@287 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@308 (type $generated@@336))))
(let (($generated@@338 ($generated@@307 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@306 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@305 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@304 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@308 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@224 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@233 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@250 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@233 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@238 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@250 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@238 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@81 ($generated@@281 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@81 ($generated@@281 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@290 (type $generated@@366))))
(let (($generated@@368 ($generated@@289 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@362 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@308 (type $generated@@374))))
(let (($generated@@376 ($generated@@307 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@289 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@288 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@307 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@306 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@392) $generated@@396))) (and ($generated@@250 ($generated@@81 ($generated@@362 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@250 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@400) $generated@@404))) (and ($generated@@250 ($generated@@81 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@250 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 Int) ($generated@@407 Int) ) (! (= ($generated@@405 $generated@@406 $generated@@407) (div $generated@@406 $generated@@407))
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 0 $generated@@259) (=> (or $generated@@260 (not (= 0 $generated@@259))) true)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@308 (type $generated@@410))))
(let (($generated@@412 ($generated@@307 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@306 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@305 $generated@@412 $generated@@411)) (= ($generated@@304 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@304 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@308 (type $generated@@413))))
(let (($generated@@415 ($generated@@307 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@306 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@305 $generated@@415 $generated@@414)) (= ($generated@@340 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@340 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@371 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@371 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@290 (type $generated@@419))))
(let (($generated@@421 ($generated@@289 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@288 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@287 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@419) ($generated@@275 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@360 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@308 (type $generated@@424))))
(let (($generated@@426 ($generated@@307 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@306 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@305 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@424) ($generated@@275 ($generated@@223 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@46)) (and (= ($generated@@275 ($generated@@361 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@361 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@47)) (and (= ($generated@@275 ($generated@@361 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@361 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@44)) (and (= ($generated@@275 ($generated@@361 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@361 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@45)) (and (= ($generated@@275 ($generated@@361 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@361 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@224 ($generated@@275 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@224 ($generated@@275 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@280 $generated@@436))))
 :pattern ( ($generated@@280 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@269 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@268 $generated@@439)) (<= 0 ($generated@@267 $generated@@438))))
 :pattern ( ($generated@@267 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) ($generated@@274 $generated@@440)) (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@442) $generated@@145)) ($generated@@224 $generated@@442 $generated@@440)) ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
)))
 :pattern ( ($generated@@274 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@389 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@389 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@389 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@397 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@397 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@397 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@269 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@268 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@267 $generated@@483))) ($generated@@250 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@233 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@238 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@361 $generated@@506 ($generated@@275 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@275 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@389 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@507) $generated@@510))) (and ($generated@@224 ($generated@@81 ($generated@@362 $generated@@507) $generated@@510) $generated@@509) ($generated@@224 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@389 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@397 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@372 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@397 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@223 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@223 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@389 $generated@@522 $generated@@523))) (and (= ($generated@@275 ($generated@@361 ($generated@@288 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@361 ($generated@@288 $generated@@145 $generated@@145) $generated@@521) ($generated@@389 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@389 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@224 $generated@@524 ($generated@@397 $generated@@525 $generated@@526))) (and (= ($generated@@275 ($generated@@361 ($generated@@306 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@361 ($generated@@306 $generated@@145 $generated@@145) $generated@@524) ($generated@@397 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@397 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@145)) ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528))) (and (= ($generated@@275 ($generated@@361 $generated@@136 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@361 $generated@@136 $generated@@529) ($generated@@135 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@135 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@515 ($generated@@275 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@275 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@275 ($generated@@361 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@233 $generated@@539))) (and (= ($generated@@275 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@233 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@238 $generated@@541))) (and (= ($generated@@275 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@238 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@238 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@275 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@477 $generated@@545))) (and (= ($generated@@275 ($generated@@361 ($generated@@268 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@361 ($generated@@268 $generated@@145) $generated@@544) ($generated@@477 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@477 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@250 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)) ($generated@@245 ($generated@@223 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@243 $generated@@560))) ($generated@@245 ($generated@@275 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@243 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@275 ($generated@@245 $generated@@561)) ($generated@@245 ($generated@@275 $generated@@561)))
 :pattern ( ($generated@@275 ($generated@@245 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@269 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@268 $generated@@563)) (= ($generated@@267 $generated@@562) 0)) (= $generated@@562 ($generated@@266 $generated@@563))))
 :pattern ( ($generated@@267 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@280 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@280 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@280 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@268 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@267 $generated@@578))) ($generated@@224 ($generated@@478 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@478 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@267 $generated@@582))) (< ($generated@@516 ($generated@@361 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@361 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@389 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@286 $generated@@584) ($generated@@233 $generated@@585)) ($generated@@132 ($generated@@329 $generated@@584) ($generated@@233 $generated@@586))) ($generated@@132 ($generated@@360 $generated@@584) ($generated@@233 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@389 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@397 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@304 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@132 ($generated@@340 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@132 ($generated@@371 $generated@@587) ($generated@@238 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@397 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@597) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@598) $generated@@77)) (= (type $generated@@599) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@601 true))
(let (($generated@@602  (=> (and (not (and ($generated@@224 $generated@@595 $generated@@262) ($generated@@250 $generated@@595 $generated@@262 $generated@@596))) (= (ControlFlow 0 5) 2)) $generated@@601)))
(let (($generated@@603  (=> (and ($generated@@224 $generated@@595 $generated@@262) ($generated@@250 $generated@@595 $generated@@262 $generated@@596)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= ($generated@@243 0) 0))) (=> (not (= ($generated@@243 0) 0)) (=> (= (ControlFlow 0 3) 2) $generated@@601))))))
(let (($generated@@604  (=> (= $generated@@597 ($generated@@211 $generated@@598 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@603) (=> (= (ControlFlow 0 6) 5) $generated@@602)))))
(let (($generated@@605 true))
(let (($generated@@606  (=> (= $generated@@599 ($generated@@156 $generated@@598 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@605) (=> (= (ControlFlow 0 7) 6) $generated@@604)))))
(let (($generated@@607  (=> (and (and ($generated@@249 $generated@@596) ($generated@@600 $generated@@596)) (and (= 0 $generated@@259) (= (ControlFlow 0 8) 7))) $generated@@606)))
$generated@@607))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 (T@U) Bool)
(declare-fun $generated@@591 () Int)
(assert  (and (and (and (= (type $generated@@586) ($generated@@164 $generated@@80 $generated@@4)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@588) $generated@@80)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@592  (=> (= $generated@@586 ($generated@@163 $generated@@136 $generated@@587 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@588 $generated@@136))) (=> (not (= $generated@@588 $generated@@136)) (=> (and (and (and ($generated@@245 $generated@@589) ($generated@@590 $generated@@589)) ($generated@@0 ($generated@@241 ($generated@@11 false)))) (and (= $generated@@587 $generated@@589) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@0 ($generated@@241 ($generated@@11 false)))))))))
(let (($generated@@593  (=> (and ($generated@@245 $generated@@587) ($generated@@590 $generated@@587)) (=> (and (and ($generated@@139 $generated@@588 $generated@@218) ($generated@@77 $generated@@588 $generated@@218 $generated@@587)) (and (= 1 $generated@@591) (= (ControlFlow 0 4) 2))) $generated@@592))))
$generated@@593)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () Bool)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Int)
(assert  (and (and (and (and (and (= (type $generated@@586) $generated@@80) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@590) $generated@@80)) (= (type $generated@@591) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@593) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@595  (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (and ($generated@@139 $generated@@136 $generated@@218) (= $generated@@136 $generated@@136)) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@80) (and ($generated@@139 $generated@@596 $generated@@218) (= $generated@@596 $generated@@596)))
 :no-pattern (type $generated@@596)
 :no-pattern ($generated $generated@@596)
 :no-pattern ($generated@@0 $generated@@596)
)))) (=> (or (and ($generated@@139 $generated@@136 $generated@@218) (= $generated@@136 $generated@@136)) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@80) (and ($generated@@139 $generated@@597 $generated@@218) (= $generated@@597 $generated@@597)))
 :no-pattern (type $generated@@597)
 :no-pattern ($generated $generated@@597)
 :no-pattern ($generated@@0 $generated@@597)
))) (=> (and (=> true (and ($generated@@139 $generated@@586 $generated@@218) ($generated@@77 $generated@@586 $generated@@218 $generated@@587))) (= $generated@@586 $generated@@586)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@586 $generated@@136))) (=> (not (= $generated@@586 $generated@@136)) (=> (and (and (and ($generated@@245 $generated@@588) ($generated@@589 $generated@@588)) ($generated@@0 ($generated@@241 ($generated@@11 false)))) (and (= $generated@@587 $generated@@588) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@0 ($generated@@241 ($generated@@11 false))))))))))))
(let (($generated@@598  (=> (and (not (and ($generated@@139 $generated@@590 $generated@@218) ($generated@@77 $generated@@590 $generated@@218 $generated@@587))) (= (ControlFlow 0 7) 2)) $generated@@595)))
(let (($generated@@599  (=> (and (and ($generated@@139 $generated@@590 $generated@@218) ($generated@@77 $generated@@590 $generated@@218 $generated@@587)) (= (ControlFlow 0 6) 2)) $generated@@595)))
(let (($generated@@600  (=> (= $generated@@591 ($generated@@163 $generated@@136 $generated@@587 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 6) $generated@@599) (=> (= (ControlFlow 0 8) 7) $generated@@598)))))
(let (($generated@@601  (=> (and ($generated@@245 $generated@@587) ($generated@@589 $generated@@587)) (=> (and (and (=> $generated@@592 (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@587))) true) (and (= 1 $generated@@594) (= (ControlFlow 0 9) 8))) $generated@@600))))
$generated@@601))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U T@U) Bool)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@526 (T@T) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Bool)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@314))))
 (=> (and (= (type $generated@@314) ($generated@@79 $generated@@316 $generated@@4)) (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@4))) (= ($generated@@313 $generated@@314 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (= ($generated@@0 ($generated@@84 $generated@@314 $generated@@317)) ($generated@@0 ($generated@@84 $generated@@315 $generated@@317))))
 :pattern ( ($generated@@84 $generated@@314 $generated@@317))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@271 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@222 $generated@@324 $generated@@135)) (and (= ($generated@@266 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@222 $generated@@325 $generated@@218)) (and (= ($generated@@266 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@325 $generated@@218))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@218)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@218))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(let (($generated@@329 ($generated@@280 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@279 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@278 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@277 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@281 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@281 (type $generated@@334))))
(let (($generated@@336 ($generated@@280 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@279 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@278 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(let (($generated@@340 ($generated@@298 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@297 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@296 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@295 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@299 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@299 (type $generated@@345))))
(let (($generated@@347 ($generated@@298 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@297 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@296 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@246 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@246 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@272 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@281 (type $generated@@365))))
(let (($generated@@367 ($generated@@280 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@299 (type $generated@@373))))
(let (($generated@@375 ($generated@@298 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@280 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@279 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@298 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@297 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@391) $generated@@395))) (and ($generated@@246 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@246 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@399) $generated@@403))) (and ($generated@@246 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@246 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@82 (type $generated@@404))))
 (=> (and (and (= (type $generated@@404) ($generated@@79 $generated@@406 $generated@@4)) (= (type $generated@@405) ($generated@@79 $generated@@406 $generated@@4))) ($generated@@313 $generated@@404 $generated@@405)) (= $generated@@404 $generated@@405)))
 :pattern ( ($generated@@313 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@79 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@299 (type $generated@@409))))
(let (($generated@@411 ($generated@@298 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@297 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@296 $generated@@411 $generated@@410)) (= ($generated@@295 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@295 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@299 (type $generated@@412))))
(let (($generated@@414 ($generated@@298 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@297 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@296 $generated@@414 $generated@@413)) (= ($generated@@342 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@342 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (= ($generated@@370 $generated@@415) ($generated@@407 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@281 (type $generated@@418))))
(let (($generated@@420 ($generated@@280 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@279 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@278 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@152) (= (type $generated@@422) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@418) ($generated@@266 ($generated@@221 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@299 (type $generated@@423))))
(let (($generated@@425 ($generated@@298 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@297 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@296 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@152) (= (type $generated@@427) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@423) ($generated@@266 ($generated@@221 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@152) ($generated@@222 $generated@@428 $generated@@46)) (and (= ($generated@@266 ($generated@@321 $generated@@2 $generated@@428)) $generated@@428) ($generated@@139 ($generated@@321 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@47)) (and (= ($generated@@266 ($generated@@321 $generated@@3 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@152) ($generated@@222 $generated@@430 $generated@@44)) (and (= ($generated@@266 ($generated@@321 $generated@@4 $generated@@430)) $generated@@430) ($generated@@139 ($generated@@321 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@152) ($generated@@222 $generated@@432 $generated@@45)) (and (= ($generated@@266 ($generated@@321 $generated@@431 $generated@@432)) $generated@@432) ($generated@@139 ($generated@@321 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@433) $generated@@434) ($generated@@139 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@82 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@79 $generated@@436 $generated@@2)) (<= 0 ($generated@@271 $generated@@435))))
 :pattern ( ($generated@@271 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@261 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@260 $generated@@438)) (<= 0 ($generated@@259 $generated@@437))))
 :pattern ( ($generated@@259 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@388 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@388 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@388 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@388 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@396 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@396 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@396 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@152) (= (type $generated@@460) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@142 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@142 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@142 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@142 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@152) (= (type $generated@@470) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) (= (type $generated@@472) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@221 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@261 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@260 $generated@@152)) (= (type $generated@@480) $generated@@67)) (= (type $generated@@481) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@259 $generated@@479))) ($generated@@246 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@77 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@78 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@78 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@231 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@231 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@236 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@236 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@157 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@157 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@321 $generated@@502 ($generated@@266 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@266 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) $generated@@67)) (= ($generated@@139 $generated@@503 ($generated@@388 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@503) $generated@@506))) (and ($generated@@222 ($generated@@84 ($generated@@363 $generated@@503) $generated@@506) $generated@@505) ($generated@@222 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@503) $generated@@506))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@139 $generated@@503 ($generated@@388 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@67)) (= ($generated@@139 $generated@@507 ($generated@@396 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@507) $generated@@510))) (and ($generated@@222 ($generated@@84 ($generated@@371 $generated@@507) $generated@@510) $generated@@509) ($generated@@222 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@507) $generated@@510))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@139 $generated@@507 ($generated@@396 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) (= (type $generated@@514) $generated@@152)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@221 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@221 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@152)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@221 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@221 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@388 $generated@@518 $generated@@519))) (and (= ($generated@@266 ($generated@@321 ($generated@@279 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@279 $generated@@152 $generated@@152) $generated@@517) ($generated@@388 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@388 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@152) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) ($generated@@222 $generated@@520 ($generated@@396 $generated@@521 $generated@@522))) (and (= ($generated@@266 ($generated@@321 ($generated@@297 $generated@@152 $generated@@152) $generated@@520)) $generated@@520) ($generated@@139 ($generated@@321 ($generated@@297 $generated@@152 $generated@@152) $generated@@520) ($generated@@396 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@222 $generated@@520 ($generated@@396 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@67) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@152)) ($generated@@222 $generated@@525 ($generated@@142 $generated@@523 $generated@@524))) (and (= ($generated@@266 ($generated@@321 $generated@@143 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@321 $generated@@143 $generated@@525) ($generated@@142 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@142 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@527 T@T) ) (! (= (type ($generated@@526 $generated@@527)) ($generated@@79 $generated@@527 $generated@@4))
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@84 ($generated@@526 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@84 ($generated@@526 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@84 ($generated@@407 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@84 ($generated@@407 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@142 $generated@@534 $generated@@535)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@143) (= ($generated@@511 ($generated@@266 $generated@@536)) ($generated@@512 $generated@@536)))
 :pattern ( ($generated@@511 ($generated@@266 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) ($generated@@222 $generated@@537 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@321 $generated@@2 $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@537) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@78 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@67)) ($generated@@222 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@266 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@222 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@152) (= (type $generated@@541) $generated@@67)) ($generated@@222 $generated@@540 ($generated@@236 $generated@@541))) (and (= ($generated@@266 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@540)) $generated@@540) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@540) ($generated@@236 $generated@@541))))
 :pattern ( ($generated@@222 $generated@@540 ($generated@@236 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@152) (= (type $generated@@543) $generated@@67)) ($generated@@222 $generated@@542 ($generated@@157 $generated@@543))) (and (= ($generated@@266 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@542)) $generated@@542) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@542) ($generated@@157 $generated@@543))))
 :pattern ( ($generated@@222 $generated@@542 ($generated@@157 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@152) (= (type $generated@@545) $generated@@67)) ($generated@@222 $generated@@544 ($generated@@473 $generated@@545))) (and (= ($generated@@266 ($generated@@321 ($generated@@260 $generated@@152) $generated@@544)) $generated@@544) ($generated@@139 ($generated@@321 ($generated@@260 $generated@@152) $generated@@544) ($generated@@473 $generated@@545))))
 :pattern ( ($generated@@222 $generated@@544 ($generated@@473 $generated@@545)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@532 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@532 $generated@@218) $generated@@66))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@546 ($generated@@157 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@546 $generated@@549)))) ($generated@@246 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@84 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@157 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@80) (= ($generated@@139 $generated@@553 $generated@@135)  (or (= $generated@@553 $generated@@136) ($generated@@550 ($generated@@551 $generated@@553)))))
 :pattern ( ($generated@@139 $generated@@553 $generated@@135))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@143) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@556) (and ($generated@@141 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@67) ($generated@@77 $generated@@554 ($generated@@142 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@77 $generated@@554 ($generated@@142 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@246 ($generated@@150 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@143) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@560) (and ($generated@@141 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@67) ($generated@@77 $generated@@558 ($generated@@142 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@142 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@246 ($generated@@151 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@152) (= (type $generated@@563) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@562) ($generated@@241 $generated@@563)) ($generated@@241 ($generated@@221 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@562) ($generated@@241 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@564)) ($generated@@241 ($generated@@266 $generated@@564)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@261 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@260 $generated@@566)) (= ($generated@@259 $generated@@565) 0)) (= $generated@@565 ($generated@@258 $generated@@566))))
 :pattern ( ($generated@@259 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@271 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@271 $generated@@567) ($generated ($generated@@84 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@2)) ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@3)) ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@4)) ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@431)) ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@152)) ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@260 $generated@@152)) (= (type $generated@@582) $generated@@67)) (= ($generated@@139 $generated@@581 ($generated@@473 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@259 $generated@@581))) ($generated@@222 ($generated@@474 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@474 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@473 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@259 $generated@@585))) (< ($generated@@512 ($generated@@321 $generated@@143 ($generated@@474 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@512 ($generated@@321 $generated@@143 ($generated@@474 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@139 $generated@@587 ($generated@@388 $generated@@588 $generated@@589))) (and (and ($generated@@139 ($generated@@277 $generated@@587) ($generated@@231 $generated@@588)) ($generated@@139 ($generated@@331 $generated@@587) ($generated@@231 $generated@@589))) ($generated@@139 ($generated@@362 $generated@@587) ($generated@@231 ($generated@@142 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@139 $generated@@587 ($generated@@388 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@139 $generated@@590 ($generated@@396 $generated@@591 $generated@@592))) (and (and ($generated@@139 ($generated@@295 $generated@@590) ($generated@@236 $generated@@591)) ($generated@@139 ($generated@@342 $generated@@590) ($generated@@236 $generated@@592))) ($generated@@139 ($generated@@370 $generated@@590) ($generated@@236 ($generated@@142 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@139 $generated@@590 ($generated@@396 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@139 $generated@@593 $generated@@46))
 :pattern ( ($generated@@139 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@139 $generated@@594 $generated@@47))
 :pattern ( ($generated@@139 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@139 $generated@@595 $generated@@44))
 :pattern ( ($generated@@139 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@431) ($generated@@139 $generated@@596 $generated@@45))
 :pattern ( ($generated@@139 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@152) ($generated@@139 $generated@@597 $generated@@48))
 :pattern ( ($generated@@139 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@598) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@599) $generated@@80)) (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@603) $generated@@80)) (= (type $generated@@604) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@606) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@608  (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (and ($generated@@139 $generated@@136 $generated@@218) ($generated@@0 ($generated@@84 $generated@@598 ($generated@@266 $generated@@136)))) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) $generated@@80) (and ($generated@@139 $generated@@609 $generated@@218) ($generated@@0 ($generated@@84 $generated@@598 ($generated@@266 $generated@@609)))))
 :no-pattern (type $generated@@609)
 :no-pattern ($generated $generated@@609)
 :no-pattern ($generated@@0 $generated@@609)
)))) (=> (or (and ($generated@@139 $generated@@136 $generated@@218) ($generated@@0 ($generated@@84 $generated@@598 ($generated@@266 $generated@@136)))) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@80) (and ($generated@@139 $generated@@610 $generated@@218) ($generated@@0 ($generated@@84 $generated@@598 ($generated@@266 $generated@@610)))))
 :no-pattern (type $generated@@610)
 :no-pattern ($generated $generated@@610)
 :no-pattern ($generated@@0 $generated@@610)
))) (=> (and (=> true (and ($generated@@139 $generated@@599 $generated@@218) ($generated@@77 $generated@@599 $generated@@218 $generated@@600))) ($generated@@0 ($generated@@84 $generated@@598 ($generated@@266 $generated@@599)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@599 $generated@@136))) (=> (not (= $generated@@599 $generated@@136)) (=> (and (and (and ($generated@@245 $generated@@601) ($generated@@602 $generated@@601)) ($generated@@0 ($generated@@241 ($generated@@11 false)))) (and (= $generated@@600 $generated@@601) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@0 ($generated@@241 ($generated@@11 false))))))))))))
(let (($generated@@611  (=> (and (not (and ($generated@@139 $generated@@603 $generated@@218) ($generated@@77 $generated@@603 $generated@@218 $generated@@600))) (= (ControlFlow 0 7) 2)) $generated@@608)))
(let (($generated@@612  (=> (and (and ($generated@@139 $generated@@603 $generated@@218) ($generated@@77 $generated@@603 $generated@@218 $generated@@600)) (= (ControlFlow 0 6) 2)) $generated@@608)))
(let (($generated@@613  (=> (= $generated@@604 ($generated@@163 $generated@@136 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 6) $generated@@612) (=> (= (ControlFlow 0 8) 7) $generated@@611)))))
(let (($generated@@614  (=> (and (and ($generated@@245 $generated@@600) ($generated@@602 $generated@@600)) (and ($generated@@139 $generated@@598 ($generated@@231 $generated@@218)) ($generated@@77 $generated@@598 ($generated@@231 $generated@@218) $generated@@600))) (=> (and (and (and (=> $generated@@605 (and ($generated@@139 $generated@@606 $generated@@218) ($generated@@77 $generated@@606 $generated@@218 $generated@@600))) true) (= 1 $generated@@607)) (and (not ($generated@@313 $generated@@598 ($generated@@526 $generated@@152))) (= (ControlFlow 0 9) 8))) $generated@@613))))
$generated@@614))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () Bool)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Int)
(assert  (and (and (and (and (and (= (type $generated@@586) $generated@@80) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@590) $generated@@80)) (= (type $generated@@591) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@593) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@595  (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (and ($generated@@139 $generated@@136 $generated@@218) (= $generated@@136 $generated@@136)) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@80) (and ($generated@@139 $generated@@596 $generated@@218) (= $generated@@596 $generated@@596)))
 :no-pattern (type $generated@@596)
 :no-pattern ($generated $generated@@596)
 :no-pattern ($generated@@0 $generated@@596)
)))) (=> (or (and ($generated@@139 $generated@@136 $generated@@218) (= $generated@@136 $generated@@136)) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@80) (and ($generated@@139 $generated@@597 $generated@@218) (= $generated@@597 $generated@@597)))
 :no-pattern (type $generated@@597)
 :no-pattern ($generated $generated@@597)
 :no-pattern ($generated@@0 $generated@@597)
))) (=> (and (=> true (and ($generated@@139 $generated@@586 $generated@@218) ($generated@@77 $generated@@586 $generated@@218 $generated@@587))) (= $generated@@586 $generated@@586)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@586 $generated@@136))) (=> (not (= $generated@@586 $generated@@136)) (=> (and (and (and ($generated@@245 $generated@@588) ($generated@@589 $generated@@588)) ($generated@@0 ($generated@@241 ($generated@@11 false)))) (and (= $generated@@587 $generated@@588) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@0 ($generated@@241 ($generated@@11 false))))))))))))
(let (($generated@@598  (=> (and (not (and ($generated@@139 $generated@@590 $generated@@218) ($generated@@77 $generated@@590 $generated@@218 $generated@@587))) (= (ControlFlow 0 7) 2)) $generated@@595)))
(let (($generated@@599  (=> (and (and ($generated@@139 $generated@@590 $generated@@218) ($generated@@77 $generated@@590 $generated@@218 $generated@@587)) (= (ControlFlow 0 6) 2)) $generated@@595)))
(let (($generated@@600  (=> (= $generated@@591 ($generated@@163 $generated@@136 $generated@@587 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 6) $generated@@599) (=> (= (ControlFlow 0 8) 7) $generated@@598)))))
(let (($generated@@601  (=> (and ($generated@@245 $generated@@587) ($generated@@589 $generated@@587)) (=> (and (and (=> $generated@@592 (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@587))) true) (and (= 1 $generated@@594) (= (ControlFlow 0 9) 8))) $generated@@600))))
$generated@@601))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@143) ($generated@@141 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@152) (= (type $generated@@257) $generated@@152)) (= $generated@@255 ($generated@@221 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@141 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@152)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@77 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@246 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@79 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@82 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@79 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@84 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (= ($generated@@158 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@84 $generated@@313 $generated@@315))) (<= ($generated ($generated@@84 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@84 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@158 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@152) ($generated@@222 $generated@@319 $generated@@135)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@319)) $generated@@319) ($generated@@139 ($generated@@316 $generated@@80 $generated@@319) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@319 $generated@@135))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@152) ($generated@@222 $generated@@320 $generated@@218)) (and (= ($generated@@266 ($generated@@316 $generated@@80 $generated@@320)) $generated@@320) ($generated@@139 ($generated@@316 $generated@@80 $generated@@320) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@320 $generated@@218))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@80) (= ($generated@@139 $generated@@321 $generated@@218)  (and ($generated@@139 $generated@@321 $generated@@135) (not (= $generated@@321 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@321 $generated@@218))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@281 (type $generated@@322))))
(let (($generated@@324 ($generated@@280 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@279 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@278 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@277 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@281 (type $generated@@329))))
(let (($generated@@331 ($generated@@280 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@279 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@278 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@299 (type $generated@@333))))
(let (($generated@@335 ($generated@@298 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@297 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@296 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@295 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@345) $generated@@67)) (= ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@344 $generated@@346)))) ($generated@@222 $generated@@346 $generated@@345))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@139 $generated@@344 ($generated@@157 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@348) $generated@@67)) (= (type $generated@@349) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@152) ($generated@@0 ($generated@@84 $generated@@347 $generated@@350))) ($generated@@246 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@84 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@77 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@352) $generated@@67)) (= (type $generated@@353) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@152) ($generated@@0 ($generated@@84 $generated@@351 $generated@@354))) ($generated@@246 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@84 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@77 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@84 ($generated@@272 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@84 ($generated@@272 $generated@@356) $generated@@355)))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@281 (type $generated@@360))))
(let (($generated@@362 ($generated@@280 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@79 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364)))) (= ($generated@@84 ($generated@@358 $generated@@363) ($generated@@150 ($generated@@316 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@299 (type $generated@@368))))
(let (($generated@@370 ($generated@@298 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372)))) (= ($generated@@84 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@316 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@316 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@280 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@279 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@84 ($generated@@326 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@373) $generated@@377))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@298 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@297 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@67)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) $generated@@67)) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))) (and ($generated@@246 ($generated@@84 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@246 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))) (and ($generated@@246 ($generated@@84 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@246 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@79 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@299 (type $generated@@401))))
(let (($generated@@403 ($generated@@298 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@297 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@296 $generated@@403 $generated@@402)) (= ($generated@@295 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@295 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@299 (type $generated@@404))))
(let (($generated@@406 ($generated@@298 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@297 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@296 $generated@@406 $generated@@405)) (= ($generated@@337 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@337 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@281 (type $generated@@410))))
(let (($generated@@412 ($generated@@280 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@279 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@278 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@410) ($generated@@266 ($generated@@221 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@299 (type $generated@@415))))
(let (($generated@@417 ($generated@@298 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@297 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@296 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@415) ($generated@@266 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@222 $generated@@420 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@316 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@222 $generated@@421 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@316 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@222 $generated@@422 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@316 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@222 $generated@@424 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@316 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@222 ($generated@@266 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@222 ($generated@@266 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2)) (<= 0 ($generated@@271 $generated@@427))))
 :pattern ( ($generated@@271 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@261 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@260 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@75 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@261 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@260 $generated@@152)) (= (type $generated@@472) $generated@@67)) (= (type $generated@@473) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@259 $generated@@471))) ($generated@@246 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@77 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@78 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@78 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@231 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@236 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@236 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@75 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@316 $generated@@494 ($generated@@266 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@266 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))) (and ($generated@@222 ($generated@@84 ($generated@@358 $generated@@495) $generated@@498) $generated@@497) ($generated@@222 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@495) $generated@@498))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@139 $generated@@495 ($generated@@383 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))) (and ($generated@@222 ($generated@@84 ($generated@@366 $generated@@499) $generated@@502) $generated@@501) ($generated@@222 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@499) $generated@@502))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@139 $generated@@499 ($generated@@391 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@221 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@221 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) (= (type $generated@@508) $generated@@152)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@221 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@221 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@152) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509)) $generated@@509) ($generated@@139 ($generated@@316 ($generated@@279 $generated@@152 $generated@@152) $generated@@509) ($generated@@383 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@222 $generated@@509 ($generated@@383 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@316 ($generated@@297 $generated@@152 $generated@@152) $generated@@512) ($generated@@391 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@222 $generated@@512 ($generated@@391 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@152)) ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 $generated@@143 $generated@@517)) $generated@@517) ($generated@@139 ($generated@@316 $generated@@143 $generated@@517) ($generated@@142 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@142 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@84 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@84 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@142 $generated@@522 $generated@@523)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@143) (= ($generated@@503 ($generated@@266 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@266 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@152) ($generated@@222 $generated@@525 ($generated@@78 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@525) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@525 ($generated@@78 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@231 $generated@@527))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@526) ($generated@@231 $generated@@527))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@231 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@67)) ($generated@@222 $generated@@528 ($generated@@236 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@236 $generated@@529))))
 :pattern ( ($generated@@222 $generated@@528 ($generated@@236 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@530 ($generated@@157 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@316 ($generated@@79 $generated@@152 $generated@@2) $generated@@530) ($generated@@157 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@157 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@222 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@316 ($generated@@260 $generated@@152) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@520 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@520 $generated@@218) $generated@@66))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@534 $generated@@537)))) ($generated@@246 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@84 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@157 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@80) (= ($generated@@139 $generated@@541 $generated@@135)  (or (= $generated@@541 $generated@@136) ($generated@@538 ($generated@@539 $generated@@541)))))
 :pattern ( ($generated@@139 $generated@@541 $generated@@135))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@143) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@544) (and ($generated@@141 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@67) ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@142 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@143) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@548) (and ($generated@@141 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@67) ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@142 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@221 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@550) ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@241 $generated@@552)) ($generated@@241 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@241 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@261 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@260 $generated@@554)) (= ($generated@@259 $generated@@553) 0)) (= $generated@@553 ($generated@@258 $generated@@554))))
 :pattern ( ($generated@@259 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@84 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@85 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@560) $generated@@2)) ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@77 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@3)) ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@4)) ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@423)) ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@152)) ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@260 $generated@@152)) (= (type $generated@@570) $generated@@67)) (= ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@259 $generated@@569))) ($generated@@222 ($generated@@466 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@466 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@139 $generated@@569 ($generated@@465 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@573))) (< ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@143 ($generated@@466 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@152 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@139 ($generated@@277 $generated@@575) ($generated@@231 $generated@@576)) ($generated@@139 ($generated@@326 $generated@@575) ($generated@@231 $generated@@577))) ($generated@@139 ($generated@@357 $generated@@575) ($generated@@231 ($generated@@142 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@295 $generated@@578) ($generated@@236 $generated@@579)) ($generated@@139 ($generated@@337 $generated@@578) ($generated@@236 $generated@@580))) ($generated@@139 ($generated@@365 $generated@@578) ($generated@@236 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@391 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@139 $generated@@581 $generated@@46))
 :pattern ( ($generated@@139 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@139 $generated@@582 $generated@@47))
 :pattern ( ($generated@@139 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@139 $generated@@583 $generated@@44))
 :pattern ( ($generated@@139 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@423) ($generated@@139 $generated@@584 $generated@@45))
 :pattern ( ($generated@@139 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@152) ($generated@@139 $generated@@585 $generated@@48))
 :pattern ( ($generated@@139 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 (T@U) Bool)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(assert  (and (and (and (and (and (= (type $generated@@586) $generated@@80) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@590) $generated@@80)) (= (type $generated@@591) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@592) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@594  (=> (= $generated@@586 $generated@@586) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@586 $generated@@136))) (=> (not (= $generated@@586 $generated@@136)) (=> (and (and (and ($generated@@245 $generated@@587) ($generated@@588 $generated@@587)) ($generated@@0 ($generated@@241 ($generated@@11 false)))) (and (= $generated@@589 $generated@@587) (= (ControlFlow 0 5) (- 0 4)))) ($generated@@0 ($generated@@241 ($generated@@11 false)))))))))
(let (($generated@@595  (=> (and (not (and ($generated@@139 $generated@@590 $generated@@218) ($generated@@77 $generated@@590 $generated@@218 $generated@@589))) (= (ControlFlow 0 8) 5)) $generated@@594)))
(let (($generated@@596  (=> (and (and ($generated@@139 $generated@@590 $generated@@218) ($generated@@77 $generated@@590 $generated@@218 $generated@@589)) (= (ControlFlow 0 7) 5)) $generated@@594)))
(let (($generated@@597  (=> (and (and (not (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@80) (and ($generated@@139 $generated@@598 $generated@@218) (= $generated@@598 $generated@@598)))
 :no-pattern (type $generated@@598)
 :no-pattern ($generated $generated@@598)
 :no-pattern ($generated@@0 $generated@@598)
))) (not ($generated@@0 ($generated@@241 ($generated@@11 true))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@599 true))
(let (($generated@@600  (=> (= $generated@@591 ($generated@@163 $generated@@136 $generated@@589 $generated@@60 false)) (=> (and ($generated@@139 $generated@@586 $generated@@218) ($generated@@77 $generated@@586 $generated@@218 $generated@@589)) (and (and (and (=> (= (ControlFlow 0 9) 1) $generated@@599) (=> (= (ControlFlow 0 9) 3) $generated@@597)) (=> (= (ControlFlow 0 9) 7) $generated@@596)) (=> (= (ControlFlow 0 9) 8) $generated@@595))))))
(let (($generated@@601  (=> (and ($generated@@245 $generated@@589) ($generated@@588 $generated@@589)) (=> (and (and (and ($generated@@139 $generated@@592 $generated@@218) ($generated@@77 $generated@@592 $generated@@218 $generated@@589)) true) (and (= 1 $generated@@593) (= (ControlFlow 0 10) 9))) $generated@@600))))
$generated@@601))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (Int Int) Int)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert (forall (($generated@@319 T@T) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@152) ($generated@@222 $generated@@321 $generated@@135)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@321)) $generated@@321) ($generated@@139 ($generated@@318 $generated@@80 $generated@@321) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@321 $generated@@135))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@222 $generated@@322 $generated@@218)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@318 $generated@@80 $generated@@322) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@218))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@80) (= ($generated@@139 $generated@@323 $generated@@218)  (and ($generated@@139 $generated@@323 $generated@@135) (not (= $generated@@323 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@323 $generated@@218))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@283 (type $generated@@324))))
(let (($generated@@326 ($generated@@282 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@281 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@280 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@279 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@283 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@283 (type $generated@@331))))
(let (($generated@@333 ($generated@@282 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@281 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@280 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@301 (type $generated@@335))))
(let (($generated@@337 ($generated@@300 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@299 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@298 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@297 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@301 (type $generated@@342))))
(let (($generated@@344 ($generated@@300 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@299 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@298 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@347) $generated@@67)) (= ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@346 $generated@@348)))) ($generated@@222 $generated@@348 $generated@@347))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@350) $generated@@67)) (= (type $generated@@351) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@349 ($generated@@231 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@152) ($generated@@0 ($generated@@84 $generated@@349 $generated@@352))) ($generated@@248 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@84 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@77 $generated@@349 ($generated@@231 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@354) $generated@@67)) (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@353 ($generated@@236 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) ($generated@@0 ($generated@@84 $generated@@353 $generated@@356))) ($generated@@248 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@84 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@77 $generated@@353 ($generated@@236 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@84 ($generated@@274 $generated@@358) $generated@@357)))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@283 (type $generated@@362))))
(let (($generated@@364 ($generated@@282 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@79 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@366) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@365) ($generated@@150 ($generated@@318 $generated@@143 $generated@@366)))) (= ($generated@@84 ($generated@@360 $generated@@365) ($generated@@150 ($generated@@318 $generated@@143 $generated@@366))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@366))))))
 :pattern ( ($generated@@84 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@301 (type $generated@@370))))
(let (($generated@@372 ($generated@@300 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@374) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@373) ($generated@@150 ($generated@@318 $generated@@143 $generated@@374)))) (= ($generated@@84 ($generated@@368 $generated@@373) ($generated@@150 ($generated@@318 $generated@@143 $generated@@374))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@374))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@282 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@281 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@84 ($generated@@328 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@84 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@375) $generated@@379))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@300 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@299 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@84 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@380) $generated@@384))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@67)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@388) $generated@@392))) (and ($generated@@248 ($generated@@84 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@248 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@67)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@396) $generated@@400))) (and ($generated@@248 ($generated@@84 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@248 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@401 $generated@@402 $generated@@403) (div $generated@@402 $generated@@403))
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@301 (type $generated@@406))))
(let (($generated@@408 ($generated@@300 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@299 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@298 $generated@@408 $generated@@407)) (= ($generated@@297 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@297 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@301 (type $generated@@409))))
(let (($generated@@411 ($generated@@300 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@299 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@298 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@301 (type $generated@@412))))
(let (($generated@@414 ($generated@@300 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@299 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@298 $generated@@414 $generated@@413)) (= ($generated@@367 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@367 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@283 (type $generated@@415))))
(let (($generated@@417 ($generated@@282 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@281 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@280 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@359 $generated@@415) ($generated@@268 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@301 (type $generated@@420))))
(let (($generated@@422 ($generated@@300 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@299 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@298 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@420) ($generated@@268 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@318 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@268 ($generated@@318 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@318 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@268 ($generated@@318 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@318 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@268 ($generated@@318 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@318 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@273 $generated@@432))))
 :pattern ( ($generated@@273 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@385 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@385 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@385 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@385 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@385 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@393 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@393 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@393 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@393 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@318 $generated@@499 ($generated@@268 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@268 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@360 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@368 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@385 $generated@@515 $generated@@516))) (and (= ($generated@@268 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@514) ($generated@@385 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@385 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@393 $generated@@518 $generated@@519))) (and (= ($generated@@268 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@517) ($generated@@393 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@393 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@268 ($generated@@318 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@318 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@268 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@268 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@222 $generated@@530 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@268 ($generated@@318 ($generated@@262 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@318 ($generated@@262 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@525 $generated@@218) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@248 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@135)  (or (= $generated@@546 $generated@@136) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@135))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@248 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@248 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)) ($generated@@243 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@557))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@558)) ($generated@@243 ($generated@@268 $generated@@558)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@263 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@262 $generated@@560)) (= ($generated@@261 $generated@@559) 0)) (= $generated@@559 ($generated@@260 $generated@@560))))
 :pattern ( ($generated@@261 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@79 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@273 ($generated@@85 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@273 $generated@@561) ($generated ($generated@@84 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@2)) ($generated@@77 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@3)) ($generated@@77 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@4)) ($generated@@77 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@428)) ($generated@@77 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@152)) ($generated@@77 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@262 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= ($generated@@139 $generated@@575 ($generated@@470 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@261 $generated@@575))) ($generated@@222 ($generated@@471 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@471 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@470 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@261 $generated@@579))) (< ($generated@@509 ($generated@@318 $generated@@143 ($generated@@471 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@509 ($generated@@318 $generated@@143 ($generated@@471 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@139 $generated@@581 ($generated@@385 $generated@@582 $generated@@583))) (and (and ($generated@@139 ($generated@@279 $generated@@581) ($generated@@231 $generated@@582)) ($generated@@139 ($generated@@328 $generated@@581) ($generated@@231 $generated@@583))) ($generated@@139 ($generated@@359 $generated@@581) ($generated@@231 ($generated@@142 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@385 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@67)) ($generated@@139 $generated@@584 ($generated@@393 $generated@@585 $generated@@586))) (and (and ($generated@@139 ($generated@@297 $generated@@584) ($generated@@236 $generated@@585)) ($generated@@139 ($generated@@339 $generated@@584) ($generated@@236 $generated@@586))) ($generated@@139 ($generated@@367 $generated@@584) ($generated@@236 ($generated@@142 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@139 $generated@@584 ($generated@@393 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@139 $generated@@587 $generated@@46))
 :pattern ( ($generated@@139 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@139 $generated@@588 $generated@@47))
 :pattern ( ($generated@@139 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@139 $generated@@589 $generated@@44))
 :pattern ( ($generated@@139 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@428) ($generated@@139 $generated@@590 $generated@@45))
 :pattern ( ($generated@@139 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@152) ($generated@@139 $generated@@591 $generated@@48))
 :pattern ( ($generated@@139 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () Bool)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () Int)
(assert  (and (and (and (= (type $generated@@593) $generated@@80) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@597) ($generated@@164 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@599  (=> (and (= $generated@@592 (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@80) ($generated@@139 $generated@@600 $generated@@218)) (= ($generated@@241 ($generated@@401 5 ($generated@@241 0))) ($generated@@241 19)))
 :no-pattern (type $generated@@600)
 :no-pattern ($generated $generated@@600)
 :no-pattern ($generated@@0 $generated@@600)
))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@241 0) 0)))))
(let (($generated@@601  (=> (and (not (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@594))) (= (ControlFlow 0 6) 2)) $generated@@599)))
(let (($generated@@602  (=> (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@594)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@593 $generated@@136))) (=> (not (= $generated@@593 $generated@@136)) (=> (and (and ($generated@@247 $generated@@595) ($generated@@596 $generated@@595)) (and ($generated@@0 ($generated@@243 ($generated@@11 false))) (= $generated@@594 $generated@@595))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= ($generated@@241 0) 0))) (=> (not (= ($generated@@241 0) 0)) (=> (= (ControlFlow 0 3) 2) $generated@@599)))))))))
(let (($generated@@603  (=> (= $generated@@597 ($generated@@163 $generated@@136 $generated@@594 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@602) (=> (= (ControlFlow 0 7) 6) $generated@@601)))))
(let (($generated@@604  (=> (and (and ($generated@@247 $generated@@594) ($generated@@596 $generated@@594)) (and (= 1 $generated@@598) (= (ControlFlow 0 8) 7))) $generated@@603)))
$generated@@604))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 () Int)
(declare-fun $generated@@329 (T@U) Bool)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@363 () Bool)
(declare-fun $generated@@364 () Bool)
(declare-fun $generated@@365 () Bool)
(declare-fun $generated@@366 () T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Bool)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@70 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@225) ($generated@@69 $generated@@4))) (= (type $generated@@227) $generated@@80)) (= (type $generated@@228) ($generated@@69 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (= (type $generated@@230) $generated@@67))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@231 $generated@@230 $generated@@232) ($generated@@77 $generated@@231 $generated@@135 $generated@@232)))
 :pattern ( ($generated@@77 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@143)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@67) (= (type $generated@@238) $generated@@67)) (= (type $generated@@239) $generated@@152)) (= (type $generated@@240) $generated@@152)) (= ($generated@@139 ($generated@@233 $generated@@239 $generated@@240) ($generated@@142 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@139 ($generated@@233 $generated@@239 $generated@@240) ($generated@@142 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@143) (= (type $generated@@242) $generated@@143)) (= ($generated@@149 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@149 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@139 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@152) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@139 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@152) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@67) (= (type $generated@@260) $generated@@67)) (= (type $generated@@261) $generated@@152)) (= (type $generated@@262) $generated@@152)) (= (type $generated@@263) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@257 $generated@@263)) (= ($generated@@77 ($generated@@233 $generated@@261 $generated@@262) ($generated@@142 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@77 ($generated@@233 $generated@@261 $generated@@262) ($generated@@142 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@143) (= ($generated@@141 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@143) ($generated@@141 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@152) (= (type $generated@@269) $generated@@152)) (= $generated@@267 ($generated@@233 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@141 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@152)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@67) (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@77 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@79 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@82 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@79 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@84 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@79 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@82 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@79 $generated@@326 $generated@@2)) (= ($generated@@158 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@84 $generated@@325 $generated@@327))) (<= ($generated ($generated@@84 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@84 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@158 $generated@@325))
)))
(assert  (=> (<= 0 $generated@@328) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@80) (or ($generated@@330 $generated@@331) (and (not (= 0 $generated@@328)) (and (not (= $generated@@331 $generated@@136)) ($generated@@139 $generated@@331 $generated@@230))))) ($generated@@0 ($generated@@253 ($generated@@11 false))))
 :pattern ( ($generated@@329 $generated@@331))
))))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@152) ($generated@@234 $generated@@335 $generated@@135)) (and (= ($generated@@278 ($generated@@332 $generated@@80 $generated@@335)) $generated@@335) ($generated@@139 ($generated@@332 $generated@@80 $generated@@335) $generated@@135)))
 :pattern ( ($generated@@234 $generated@@335 $generated@@135))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@152) ($generated@@234 $generated@@336 $generated@@230)) (and (= ($generated@@278 ($generated@@332 $generated@@80 $generated@@336)) $generated@@336) ($generated@@139 ($generated@@332 $generated@@80 $generated@@336) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@336 $generated@@230))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@80) (= ($generated@@139 $generated@@337 $generated@@230)  (and ($generated@@139 $generated@@337 $generated@@135) (not (= $generated@@337 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@337 $generated@@230))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@293 (type $generated@@338))))
(let (($generated@@340 ($generated@@292 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@291 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@290 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@289 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@293 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@293 (type $generated@@345))))
(let (($generated@@347 ($generated@@292 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@291 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@290 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@311 (type $generated@@349))))
(let (($generated@@351 ($generated@@310 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@309 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@308 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@307 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@311 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@311 (type $generated@@356))))
(let (($generated@@358 ($generated@@310 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@309 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@308 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@361) $generated@@67)) (= ($generated@@139 $generated@@360 ($generated@@157 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@360 $generated@@362)))) ($generated@@234 $generated@@362 $generated@@361))
 :pattern ( ($generated@@84 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@139 $generated@@360 ($generated@@157 $generated@@361)))
)))
(assert (= (type $generated@@366) $generated@@80))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81)) (or $generated@@364 (and (not (= 1 $generated@@328)) ($generated@@257 $generated@@367)))) (and (and $generated@@365 ($generated@@330 $generated@@366)) (= $generated@@363 (let (($generated@@368 $generated@@366))
($generated@@329 $generated@@368)))))
 :pattern ( $generated@@363 ($generated@@257 $generated@@367))
))))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@79 $generated@@80 $generated@@81)) (or $generated@@364 (and (not (= 1 $generated@@328)) ($generated@@257 $generated@@369)))) (and (and $generated@@365 ($generated@@330 $generated@@366)) (= $generated@@363 (let (($generated@@370 $generated@@366))
($generated@@329 $generated@@370)))))
 :weight 3
 :pattern ( $generated@@363 ($generated@@257 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@371 ($generated@@243 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@152) ($generated@@0 ($generated@@84 $generated@@371 $generated@@374))) ($generated@@258 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@84 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@77 $generated@@371 ($generated@@243 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@152) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@258 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@84 ($generated@@284 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@84 ($generated@@284 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@293 (type $generated@@384))))
(let (($generated@@386 ($generated@@292 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@388) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@387) ($generated@@150 ($generated@@332 $generated@@143 $generated@@388)))) (= ($generated@@84 ($generated@@382 $generated@@387) ($generated@@150 ($generated@@332 $generated@@143 $generated@@388))) ($generated@@151 ($generated@@332 $generated@@143 $generated@@388))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@311 (type $generated@@392))))
(let (($generated@@394 ($generated@@310 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@396) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@395) ($generated@@150 ($generated@@332 $generated@@143 $generated@@396)))) (= ($generated@@84 ($generated@@390 $generated@@395) ($generated@@150 ($generated@@332 $generated@@143 $generated@@396))) ($generated@@151 ($generated@@332 $generated@@143 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@292 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@291 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@84 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@353 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@353 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@410) $generated@@414))) (and ($generated@@258 ($generated@@84 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@258 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@418) $generated@@422))) (and ($generated@@258 ($generated@@84 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@258 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@79 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (= ($generated@@307 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@307 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (= ($generated@@353 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@353 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@311 (type $generated@@431))))
(let (($generated@@433 ($generated@@310 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@309 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@308 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@152))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@293 (type $generated@@434))))
(let (($generated@@436 ($generated@@292 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@291 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@290 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@152) (= (type $generated@@438) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@434) ($generated@@278 ($generated@@233 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@311 (type $generated@@439))))
(let (($generated@@441 ($generated@@310 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@309 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@308 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@152) (= (type $generated@@443) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@389 $generated@@439) ($generated@@278 ($generated@@233 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@152) ($generated@@234 $generated@@444 $generated@@46)) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@444)) $generated@@444) ($generated@@139 ($generated@@332 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@234 $generated@@445 $generated@@47)) (and (= ($generated@@278 ($generated@@332 $generated@@3 $generated@@445)) $generated@@445) ($generated@@139 ($generated@@332 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@152) ($generated@@234 $generated@@446 $generated@@44)) (and (= ($generated@@278 ($generated@@332 $generated@@4 $generated@@446)) $generated@@446) ($generated@@139 ($generated@@332 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@152) ($generated@@234 $generated@@448 $generated@@45)) (and (= ($generated@@278 ($generated@@332 $generated@@447 $generated@@448)) $generated@@448) ($generated@@139 ($generated@@332 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@67) (= ($generated@@234 ($generated@@278 $generated@@449) $generated@@450) ($generated@@139 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@234 ($generated@@278 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@82 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@79 $generated@@452 $generated@@2)) (<= 0 ($generated@@283 $generated@@451))))
 :pattern ( ($generated@@283 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@273 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@272 $generated@@454)) (<= 0 ($generated@@271 $generated@@453))))
 :pattern ( ($generated@@271 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@75 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@75 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) (= (type $generated@@476) $generated@@152)) (= ($generated@@264 ($generated@@233 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@142 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@142 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@142 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@142 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@152) (= (type $generated@@486) $generated@@152)) (= ($generated@@150 ($generated@@233 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@152) (= (type $generated@@488) $generated@@152)) (= ($generated@@151 ($generated@@233 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@233 $generated@@487 $generated@@488))
)))
(assert  (=> $generated@@365 (and ($generated@@139 $generated@@366 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true))))))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@273 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@272 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@271 $generated@@495))) ($generated@@258 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@77 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@78 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@78 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@248 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@157 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@157 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@75 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@332 $generated@@518 ($generated@@278 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@278 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@139 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@519) $generated@@522))) (and ($generated@@234 ($generated@@84 ($generated@@382 $generated@@519) $generated@@522) $generated@@521) ($generated@@234 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@139 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) (= ($generated@@139 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@523) $generated@@526))) (and ($generated@@234 ($generated@@84 ($generated@@390 $generated@@523) $generated@@526) $generated@@525) ($generated@@234 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@523) $generated@@526))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@139 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@152)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@233 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@233 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@152)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@233 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@531 $generated@@532))
)))
(assert  (=> (<= 1 $generated@@328) (=> (or $generated@@364 (not (= 1 $generated@@328))) ($generated@@0 ($generated@@253 ($generated@@11 false))))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@67)) ($generated@@234 $generated@@533 ($generated@@407 $generated@@534 $generated@@535))) (and (= ($generated@@278 ($generated@@332 ($generated@@291 $generated@@152 $generated@@152) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@332 ($generated@@291 $generated@@152 $generated@@152) $generated@@533) ($generated@@407 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@234 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) ($generated@@234 $generated@@536 ($generated@@415 $generated@@537 $generated@@538))) (and (= ($generated@@278 ($generated@@332 ($generated@@309 $generated@@152 $generated@@152) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@332 ($generated@@309 $generated@@152 $generated@@152) $generated@@536) ($generated@@415 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@234 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@152)) ($generated@@234 $generated@@541 ($generated@@142 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@332 $generated@@143 $generated@@541)) $generated@@541) ($generated@@139 ($generated@@332 $generated@@143 $generated@@541) ($generated@@142 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@234 $generated@@541 ($generated@@142 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@84 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@84 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@72)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@142 $generated@@546 $generated@@547)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@143) (= ($generated@@527 ($generated@@278 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@278 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@152) ($generated@@234 $generated@@549 ($generated@@78 0))) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@549)) $generated@@549) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@549) ($generated@@78 0))))
 :pattern ( ($generated@@234 $generated@@549 ($generated@@78 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@67)) ($generated@@234 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@278 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@67)) ($generated@@234 $generated@@552 ($generated@@248 $generated@@553))) (and (= ($generated@@278 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@552)) $generated@@552) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@552) ($generated@@248 $generated@@553))))
 :pattern ( ($generated@@234 $generated@@552 ($generated@@248 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@152) (= (type $generated@@555) $generated@@67)) ($generated@@234 $generated@@554 ($generated@@157 $generated@@555))) (and (= ($generated@@278 ($generated@@332 ($generated@@79 $generated@@152 $generated@@2) $generated@@554)) $generated@@554) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@2) $generated@@554) ($generated@@157 $generated@@555))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@157 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@152) (= (type $generated@@557) $generated@@67)) ($generated@@234 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@278 ($generated@@332 ($generated@@272 $generated@@152) $generated@@556)) $generated@@556) ($generated@@139 ($generated@@332 ($generated@@272 $generated@@152) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@234 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@544 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@230) $generated@@64))
(assert (= ($generated@@544 $generated@@230) $generated@@66))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@157 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@258 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@157 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@80) (= ($generated@@139 $generated@@565 $generated@@135)  (or (= $generated@@565 $generated@@136) ($generated@@562 ($generated@@563 $generated@@565)))))
 :pattern ( ($generated@@139 $generated@@565 $generated@@135))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@143) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@568) (and ($generated@@141 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@142 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@142 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@258 ($generated@@150 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@258 ($generated@@150 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@143) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@572) (and ($generated@@141 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@67) ($generated@@77 $generated@@570 ($generated@@142 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@77 $generated@@570 ($generated@@142 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@258 ($generated@@151 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@258 ($generated@@151 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@152)) (= ($generated@@233 ($generated@@253 $generated@@574) ($generated@@253 $generated@@575)) ($generated@@253 ($generated@@233 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@233 ($generated@@253 $generated@@574) ($generated@@253 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@278 ($generated@@253 $generated@@576)) ($generated@@253 ($generated@@278 $generated@@576)))
 :pattern ( ($generated@@278 ($generated@@253 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@273 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@272 $generated@@578)) (= ($generated@@271 $generated@@577) 0)) (= $generated@@577 ($generated@@270 $generated@@578))))
 :pattern ( ($generated@@271 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@283 ($generated@@85 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@283 $generated@@579) ($generated ($generated@@84 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@283 ($generated@@85 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@2)) ($generated@@77 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@3)) ($generated@@77 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@4)) ($generated@@77 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@447)) ($generated@@77 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@592) $generated@@152)) ($generated@@77 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@77 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@272 $generated@@152)) (= (type $generated@@594) $generated@@67)) (= ($generated@@139 $generated@@593 ($generated@@489 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@271 $generated@@593))) ($generated@@234 ($generated@@490 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@490 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@139 $generated@@593 ($generated@@489 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@272 $generated@@152)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@271 $generated@@597))) (< ($generated@@528 ($generated@@332 $generated@@143 ($generated@@490 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@528 ($generated@@332 $generated@@143 ($generated@@490 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@139 $generated@@599 ($generated@@407 $generated@@600 $generated@@601))) (and (and ($generated@@139 ($generated@@289 $generated@@599) ($generated@@243 $generated@@600)) ($generated@@139 ($generated@@342 $generated@@599) ($generated@@243 $generated@@601))) ($generated@@139 ($generated@@381 $generated@@599) ($generated@@243 ($generated@@142 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@139 $generated@@599 ($generated@@407 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@67)) ($generated@@139 $generated@@602 ($generated@@415 $generated@@603 $generated@@604))) (and (and ($generated@@139 ($generated@@307 $generated@@602) ($generated@@248 $generated@@603)) ($generated@@139 ($generated@@353 $generated@@602) ($generated@@248 $generated@@604))) ($generated@@139 ($generated@@389 $generated@@602) ($generated@@248 ($generated@@142 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@139 $generated@@602 ($generated@@415 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@139 $generated@@605 $generated@@46))
 :pattern ( ($generated@@139 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@139 $generated@@606 $generated@@47))
 :pattern ( ($generated@@139 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@139 $generated@@607 $generated@@44))
 :pattern ( ($generated@@139 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@447) ($generated@@139 $generated@@608 $generated@@45))
 :pattern ( ($generated@@139 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@152) ($generated@@139 $generated@@609 $generated@@48))
 :pattern ( ($generated@@139 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@610) $generated@@80) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) $generated@@80)) (= (type $generated@@613) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@614) ($generated@@164 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@616  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@253 ($generated@@11 false))))))
(let (($generated@@617  (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (and ($generated@@139 $generated@@136 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@80) (and ($generated@@139 $generated@@618 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))))
 :no-pattern (type $generated@@618)
 :no-pattern ($generated $generated@@618)
 :no-pattern ($generated@@0 $generated@@618)
)))) (=> (or (and ($generated@@139 $generated@@136 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@80) (and ($generated@@139 $generated@@619 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))))
 :no-pattern (type $generated@@619)
 :no-pattern ($generated $generated@@619)
 :no-pattern ($generated@@0 $generated@@619)
))) (=> (and ($generated@@139 $generated@@610 $generated@@230) ($generated@@77 $generated@@610 $generated@@230 $generated@@611)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not (= $generated@@610 $generated@@136))) (=> (not (= $generated@@610 $generated@@136)) (=> (and ($generated@@77 $generated@@610 $generated@@135 $generated@@611) ($generated@@330 $generated@@610)) (=> (and (and ($generated@@139 $generated@@612 $generated@@230) ($generated@@77 $generated@@612 $generated@@230 $generated@@611)) ($generated@@330 $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated@@329 $generated@@610) ($generated@@329 $generated@@612))) (=> (= ($generated@@329 $generated@@610) ($generated@@329 $generated@@612)) (=> $generated@@365 (=> (and (and (= $generated@@363 ($generated@@329 $generated@@610)) ($generated@@330 $generated@@610)) (and ($generated@@139 ($generated@@11 $generated@@363) $generated@@44) (= (ControlFlow 0 4) 3))) $generated@@616)))))))))))))
(let (($generated@@620  (=> (and (not (and ($generated@@139 $generated@@610 $generated@@230) ($generated@@77 $generated@@610 $generated@@230 $generated@@611))) (= (ControlFlow 0 9) 4)) $generated@@617)))
(let (($generated@@621  (=> (and (and ($generated@@139 $generated@@610 $generated@@230) ($generated@@77 $generated@@610 $generated@@230 $generated@@611)) (= (ControlFlow 0 8) 4)) $generated@@617)))
(let (($generated@@622  (=> (= $generated@@613 ($generated@@218 $generated@@136 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@621) (=> (= (ControlFlow 0 10) 9) $generated@@620)))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@614 ($generated@@163 $generated@@136 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@623) (=> (= (ControlFlow 0 11) 10) $generated@@622)))))
(let (($generated@@625  (=> (and (and ($generated@@257 $generated@@611) ($generated@@615 $generated@@611)) (and (= 1 $generated@@328) (= (ControlFlow 0 12) 11))) $generated@@624)))
$generated@@625)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 7))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (Int Int) Int)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert (forall (($generated@@319 T@T) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@152) ($generated@@222 $generated@@321 $generated@@135)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@321)) $generated@@321) ($generated@@139 ($generated@@318 $generated@@80 $generated@@321) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@321 $generated@@135))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@222 $generated@@322 $generated@@218)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@318 $generated@@80 $generated@@322) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@218))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@80) (= ($generated@@139 $generated@@323 $generated@@218)  (and ($generated@@139 $generated@@323 $generated@@135) (not (= $generated@@323 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@323 $generated@@218))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@283 (type $generated@@324))))
(let (($generated@@326 ($generated@@282 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@281 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@280 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@279 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@283 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@283 (type $generated@@331))))
(let (($generated@@333 ($generated@@282 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@281 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@280 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@301 (type $generated@@335))))
(let (($generated@@337 ($generated@@300 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@299 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@298 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@297 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@301 (type $generated@@342))))
(let (($generated@@344 ($generated@@300 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@299 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@298 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@347) $generated@@67)) (= ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@346 $generated@@348)))) ($generated@@222 $generated@@348 $generated@@347))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@350) $generated@@67)) (= (type $generated@@351) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@349 ($generated@@231 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@152) ($generated@@0 ($generated@@84 $generated@@349 $generated@@352))) ($generated@@248 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@84 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@77 $generated@@349 ($generated@@231 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@354) $generated@@67)) (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@353 ($generated@@236 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) ($generated@@0 ($generated@@84 $generated@@353 $generated@@356))) ($generated@@248 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@84 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@77 $generated@@353 ($generated@@236 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@84 ($generated@@274 $generated@@358) $generated@@357)))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@283 (type $generated@@362))))
(let (($generated@@364 ($generated@@282 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@79 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@366) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@365) ($generated@@150 ($generated@@318 $generated@@143 $generated@@366)))) (= ($generated@@84 ($generated@@360 $generated@@365) ($generated@@150 ($generated@@318 $generated@@143 $generated@@366))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@366))))))
 :pattern ( ($generated@@84 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@301 (type $generated@@370))))
(let (($generated@@372 ($generated@@300 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@374) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@373) ($generated@@150 ($generated@@318 $generated@@143 $generated@@374)))) (= ($generated@@84 ($generated@@368 $generated@@373) ($generated@@150 ($generated@@318 $generated@@143 $generated@@374))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@374))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@282 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@281 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@84 ($generated@@328 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@84 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@375) $generated@@379))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@300 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@299 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@84 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@380) $generated@@384))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@67)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@388) $generated@@392))) (and ($generated@@248 ($generated@@84 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@248 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@67)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@396) $generated@@400))) (and ($generated@@248 ($generated@@84 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@248 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@77 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 Int) ) (! (= ($generated@@401 $generated@@402 $generated@@403) (div $generated@@402 $generated@@403))
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@301 (type $generated@@406))))
(let (($generated@@408 ($generated@@300 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@299 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@298 $generated@@408 $generated@@407)) (= ($generated@@297 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@297 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@301 (type $generated@@409))))
(let (($generated@@411 ($generated@@300 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@299 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@298 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@301 (type $generated@@412))))
(let (($generated@@414 ($generated@@300 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@299 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@298 $generated@@414 $generated@@413)) (= ($generated@@367 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@367 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@283 (type $generated@@415))))
(let (($generated@@417 ($generated@@282 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@281 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@280 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@359 $generated@@415) ($generated@@268 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@301 (type $generated@@420))))
(let (($generated@@422 ($generated@@300 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@299 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@298 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@420) ($generated@@268 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@318 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@268 ($generated@@318 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@318 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@268 ($generated@@318 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@318 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@268 ($generated@@318 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@318 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@273 $generated@@432))))
 :pattern ( ($generated@@273 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@385 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@385 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@385 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@385 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@385 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@393 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@393 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@393 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@393 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@318 $generated@@499 ($generated@@268 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@268 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@360 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@368 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@385 $generated@@515 $generated@@516))) (and (= ($generated@@268 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@514) ($generated@@385 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@385 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@393 $generated@@518 $generated@@519))) (and (= ($generated@@268 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@517) ($generated@@393 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@393 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@268 ($generated@@318 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@318 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@268 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@268 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@222 $generated@@530 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@268 ($generated@@318 ($generated@@262 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@318 ($generated@@262 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@525 $generated@@218) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@248 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@135)  (or (= $generated@@546 $generated@@136) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@135))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@248 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@248 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)) ($generated@@243 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@557))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@558)) ($generated@@243 ($generated@@268 $generated@@558)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@263 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@262 $generated@@560)) (= ($generated@@261 $generated@@559) 0)) (= $generated@@559 ($generated@@260 $generated@@560))))
 :pattern ( ($generated@@261 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@79 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@273 ($generated@@85 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@273 $generated@@561) ($generated ($generated@@84 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@2)) ($generated@@77 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@3)) ($generated@@77 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@4)) ($generated@@77 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@428)) ($generated@@77 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@152)) ($generated@@77 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@262 $generated@@152)) (= (type $generated@@576) $generated@@67)) (= ($generated@@139 $generated@@575 ($generated@@470 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@261 $generated@@575))) ($generated@@222 ($generated@@471 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@471 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@470 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@261 $generated@@579))) (< ($generated@@509 ($generated@@318 $generated@@143 ($generated@@471 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@509 ($generated@@318 $generated@@143 ($generated@@471 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@139 $generated@@581 ($generated@@385 $generated@@582 $generated@@583))) (and (and ($generated@@139 ($generated@@279 $generated@@581) ($generated@@231 $generated@@582)) ($generated@@139 ($generated@@328 $generated@@581) ($generated@@231 $generated@@583))) ($generated@@139 ($generated@@359 $generated@@581) ($generated@@231 ($generated@@142 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@385 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@67)) ($generated@@139 $generated@@584 ($generated@@393 $generated@@585 $generated@@586))) (and (and ($generated@@139 ($generated@@297 $generated@@584) ($generated@@236 $generated@@585)) ($generated@@139 ($generated@@339 $generated@@584) ($generated@@236 $generated@@586))) ($generated@@139 ($generated@@367 $generated@@584) ($generated@@236 ($generated@@142 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@139 $generated@@584 ($generated@@393 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@139 $generated@@587 $generated@@46))
 :pattern ( ($generated@@139 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@139 $generated@@588 $generated@@47))
 :pattern ( ($generated@@139 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@139 $generated@@589 $generated@@44))
 :pattern ( ($generated@@139 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@428) ($generated@@139 $generated@@590 $generated@@45))
 :pattern ( ($generated@@139 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@152) ($generated@@139 $generated@@591 $generated@@48))
 :pattern ( ($generated@@139 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () Bool)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () Int)
(assert  (and (and (and (= (type $generated@@593) $generated@@80) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@597) ($generated@@164 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@599  (=> (and (= $generated@@592 (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@80) (and ($generated@@139 $generated@@600 $generated@@218) (= ($generated@@241 ($generated@@401 5 ($generated@@241 0))) ($generated@@241 19))))
 :no-pattern (type $generated@@600)
 :no-pattern ($generated $generated@@600)
 :no-pattern ($generated@@0 $generated@@600)
))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@241 0) 0)))))
(let (($generated@@601  (=> (and (not (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@594))) (= (ControlFlow 0 6) 2)) $generated@@599)))
(let (($generated@@602  (=> (and ($generated@@139 $generated@@593 $generated@@218) ($generated@@77 $generated@@593 $generated@@218 $generated@@594)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@593 $generated@@136))) (=> (not (= $generated@@593 $generated@@136)) (=> (and (and ($generated@@247 $generated@@595) ($generated@@596 $generated@@595)) (and ($generated@@0 ($generated@@243 ($generated@@11 false))) (= $generated@@594 $generated@@595))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= ($generated@@241 0) 0))) (=> (not (= ($generated@@241 0) 0)) (=> (= (ControlFlow 0 3) 2) $generated@@599)))))))))
(let (($generated@@603  (=> (= $generated@@597 ($generated@@163 $generated@@136 $generated@@594 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@602) (=> (= (ControlFlow 0 7) 6) $generated@@601)))))
(let (($generated@@604  (=> (and (and ($generated@@247 $generated@@594) ($generated@@596 $generated@@594)) (and (= 1 $generated@@598) (= (ControlFlow 0 8) 7))) $generated@@603)))
$generated@@604))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U Bool) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) Bool)
(declare-fun $generated@@117 (Int) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (Int Int) Int)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Bool)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@85 $generated@@86)) 12))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@81 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@83 ($generated@@81 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@81 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@83 (type $generated@@91))))
(= (type ($generated@@77 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@77 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@84 $generated@@94 $generated@@95 $generated@@96)) ($generated@@81 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@83 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@77 ($generated@@84 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@77 ($generated@@84 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@77 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@77 ($generated@@84 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@77 $generated@@108 $generated@@110)))
 :weight 0
)))) (forall (($generated@@111 T@U) ($generated@@112 Bool) ) (! (= (type ($generated@@78 $generated@@111 $generated@@112)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@78 $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 Bool) ($generated@@115 T@U) ) (!  (=> (and (= (type $generated@@113) $generated@@67) (= (type $generated@@115) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@78 $generated@@113 $generated@@114) $generated@@115))  (and ($generated@@80 $generated@@115 $generated@@113) $generated@@114)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@113 $generated@@114) $generated@@115))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@118) 13) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@123))))
(= (type ($generated@@120 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@120 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@119) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@121 $generated@@125 $generated@@126 $generated@@127)) $generated@@119)
 :pattern ( ($generated@@121 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@70 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@120 ($generated@@121 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@120 ($generated@@121 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@120 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@120 ($generated@@121 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@120 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@117 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@117 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@81 $generated@@118 $generated@@119))) ($generated@@116 $generated@@141 ($generated@@117 0) $generated@@142))
 :pattern ( ($generated@@116 $generated@@141 ($generated@@117 0) $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@118)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@118) (= (type $generated@@146) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@120 ($generated@@77 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@116 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@147 $generated@@148 ($generated@@117 0)))
 :pattern ( ($generated@@147 $generated@@148 ($generated@@117 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@67)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@67) (= (type $generated@@155) $generated@@67)) (= (type $generated@@156) $generated@@151)) ($generated@@147 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@147 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@79)
 :pattern ( ($generated@@158 $generated@@160))
)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@79)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@151) (= (type $generated@@163) $generated@@151)) true) (= ($generated@@157 $generated@@162 $generated@@163)  (and (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)) (= ($generated@@159 $generated@@162) ($generated@@159 $generated@@163)))))
 :pattern ( ($generated@@157 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@168) $generated@@67)) ($generated@@147 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@147 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@118 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@118) (= (type $generated@@219) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@118)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@120 ($generated@@77 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@118) (= (type $generated@@227) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@226 $generated@@225 $generated@@227) ($generated@@116 $generated@@226 $generated@@143 $generated@@227)))
 :pattern ( ($generated@@116 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@229 $generated@@230)) $generated@@151)
 :pattern ( ($generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@67) (= (type $generated@@232) $generated@@67)) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) $generated@@79)) (= ($generated@@147 ($generated@@228 $generated@@233 $generated@@234) ($generated@@150 $generated@@231 $generated@@232))  (and ($generated@@80 $generated@@233 $generated@@231) ($generated@@80 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@147 ($generated@@228 $generated@@233 $generated@@234) ($generated@@150 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@151) (= (type $generated@@236) $generated@@151)) (= ($generated@@157 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@157 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@67)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@240) $generated@@67)) (= ($generated@@147 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@79) ($generated@@0 ($generated@@77 $generated@@239 $generated@@241))) ($generated@@80 $generated@@241 $generated@@240))
 :pattern ( ($generated@@77 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@147 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@67)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@245) $generated@@67)) (= ($generated@@147 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@79) ($generated@@0 ($generated@@77 $generated@@244 $generated@@246))) ($generated@@80 $generated@@246 $generated@@245))
 :pattern ( ($generated@@77 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@147 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@79)) (= (type $generated@@258) $generated@@79)) (= (type $generated@@259) ($generated@@81 $generated@@118 $generated@@119))) ($generated@@253 $generated@@259)) (= ($generated@@116 ($generated@@228 $generated@@257 $generated@@258) ($generated@@150 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@116 ($generated@@228 $generated@@257 $generated@@258) ($generated@@150 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@71)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@151) (= ($generated@@149 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@151) ($generated@@149 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@79) (= (type $generated@@265) $generated@@79)) (= $generated@@263 ($generated@@228 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@149 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@79)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@67) (= (type $generated@@278) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@116 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@81 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@82 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@81 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@77 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@81 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@77 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@77 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@81 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@77 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@77 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@82 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@81 $generated@@322 $generated@@2)) (= ($generated@@165 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@77 $generated@@321 $generated@@323))) (<= ($generated ($generated@@77 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@77 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@165 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@79) ($generated@@80 $generated@@327 $generated@@143)) (and (= ($generated@@274 ($generated@@324 $generated@@118 $generated@@327)) $generated@@327) ($generated@@147 ($generated@@324 $generated@@118 $generated@@327) $generated@@143)))
 :pattern ( ($generated@@80 $generated@@327 $generated@@143))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@79) ($generated@@80 $generated@@328 $generated@@225)) (and (= ($generated@@274 ($generated@@324 $generated@@118 $generated@@328)) $generated@@328) ($generated@@147 ($generated@@324 $generated@@118 $generated@@328) $generated@@225)))
 :pattern ( ($generated@@80 $generated@@328 $generated@@225))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@118) (= ($generated@@147 $generated@@329 $generated@@225)  (and ($generated@@147 $generated@@329 $generated@@143) (not (= $generated@@329 $generated@@144)))))
 :pattern ( ($generated@@147 $generated@@329 $generated@@225))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@289 (type $generated@@330))))
(let (($generated@@332 ($generated@@288 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@287 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@286 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@77 ($generated@@285 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@285 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@289 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@81 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@289 (type $generated@@337))))
(let (($generated@@339 ($generated@@288 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@287 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@286 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@77 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@307 (type $generated@@341))))
(let (($generated@@343 ($generated@@306 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@305 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@304 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@77 ($generated@@303 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@303 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@81 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@307 (type $generated@@348))))
(let (($generated@@350 ($generated@@306 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@305 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@304 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@77 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@353) $generated@@67)) (= ($generated@@147 $generated@@352 ($generated@@164 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@79) (< 0 ($generated ($generated@@77 $generated@@352 $generated@@354)))) ($generated@@80 $generated@@354 $generated@@353))
 :pattern ( ($generated@@77 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@147 $generated@@352 ($generated@@164 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@356) $generated@@67)) (= (type $generated@@357) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@355 ($generated@@237 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@79) ($generated@@0 ($generated@@77 $generated@@355 $generated@@358))) ($generated@@254 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@77 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@116 $generated@@355 ($generated@@237 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@359 ($generated@@242 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@79) ($generated@@0 ($generated@@77 $generated@@359 $generated@@362))) ($generated@@254 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@77 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@116 $generated@@359 ($generated@@242 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@77 ($generated@@280 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@77 ($generated@@280 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@289 (type $generated@@368))))
(let (($generated@@370 ($generated@@288 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@81 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@287 $generated@@79 $generated@@79)) (= (type $generated@@372) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@77 ($generated@@285 $generated@@371) ($generated@@158 ($generated@@324 $generated@@151 $generated@@372)))) (= ($generated@@77 ($generated@@366 $generated@@371) ($generated@@158 ($generated@@324 $generated@@151 $generated@@372))) ($generated@@159 ($generated@@324 $generated@@151 $generated@@372))))))
 :pattern ( ($generated@@77 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@307 (type $generated@@376))))
(let (($generated@@378 ($generated@@306 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@81 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@305 $generated@@79 $generated@@79)) (= (type $generated@@380) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@77 ($generated@@303 $generated@@379) ($generated@@158 ($generated@@324 $generated@@151 $generated@@380)))) (= ($generated@@77 ($generated@@374 $generated@@379) ($generated@@158 ($generated@@324 $generated@@151 $generated@@380))) ($generated@@159 ($generated@@324 $generated@@151 $generated@@380))))))
 :pattern ( ($generated@@77 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@288 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@287 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@77 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@77 ($generated@@285 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@77 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@77 ($generated@@285 $generated@@381) $generated@@385))
 :pattern ( ($generated@@77 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@77 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@306 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@305 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@77 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@77 ($generated@@303 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@77 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@77 ($generated@@303 $generated@@386) $generated@@390))
 :pattern ( ($generated@@77 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@77 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@287 $generated@@79 $generated@@79)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@285 $generated@@394) $generated@@398))) (and ($generated@@254 ($generated@@77 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@254 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@77 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@77 ($generated@@285 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@116 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@67)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@305 $generated@@79 $generated@@79)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@303 $generated@@402) $generated@@406))) (and ($generated@@254 ($generated@@77 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@254 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@77 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@77 ($generated@@303 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@116 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 Int) ($generated@@409 Int) ) (! (= ($generated@@407 $generated@@408 $generated@@409) (div $generated@@408 $generated@@409))
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@81 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@303 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@303 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@307 (type $generated@@415))))
(let (($generated@@417 ($generated@@306 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@305 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@304 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@307 (type $generated@@418))))
(let (($generated@@420 ($generated@@306 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@305 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@304 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@79))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@289 (type $generated@@421))))
(let (($generated@@423 ($generated@@288 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@287 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@286 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@79) (= (type $generated@@425) $generated@@79)) ($generated@@0 ($generated@@77 ($generated@@365 $generated@@421) ($generated@@274 ($generated@@228 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@307 (type $generated@@426))))
(let (($generated@@428 ($generated@@306 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@305 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@304 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@79) (= (type $generated@@430) $generated@@79)) ($generated@@0 ($generated@@77 ($generated@@373 $generated@@426) ($generated@@274 ($generated@@228 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@79) ($generated@@80 $generated@@431 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@431)) $generated@@431) ($generated@@147 ($generated@@324 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@80 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@79) ($generated@@80 $generated@@432 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@432)) $generated@@432) ($generated@@147 ($generated@@324 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@80 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@79) ($generated@@80 $generated@@433 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@433)) $generated@@433) ($generated@@147 ($generated@@324 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@80 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@79) ($generated@@80 $generated@@435 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@434 $generated@@435)) $generated@@435) ($generated@@147 ($generated@@324 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@80 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@80 ($generated@@274 $generated@@436) $generated@@437) ($generated@@147 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@80 ($generated@@274 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@81 $generated@@439 $generated@@2)) (<= 0 ($generated@@279 $generated@@438))))
 :pattern ( ($generated@@279 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@269 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@268 $generated@@441)) (<= 0 ($generated@@267 $generated@@440))))
 :pattern ( ($generated@@267 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@79) (= (type $generated@@463) $generated@@79)) (= ($generated@@260 ($generated@@228 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@150 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@150 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@150 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@150 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@79) (= (type $generated@@473) $generated@@79)) (= ($generated@@158 ($generated@@228 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@228 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@79) (= (type $generated@@475) $generated@@79)) (= ($generated@@159 ($generated@@228 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@228 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@269 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@268 $generated@@79)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@267 $generated@@482))) ($generated@@254 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@116 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@117 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@117 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@237 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@237 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@237 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@242 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@242 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@242 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@164 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@164 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@164 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@324 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@79 $generated@@79)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@147 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@80 ($generated@@77 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@80 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@77 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@77 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@147 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@79 $generated@@79)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@147 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@80 ($generated@@77 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@80 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@77 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@77 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@147 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@79) (= (type $generated@@517) $generated@@79)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@228 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@228 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@79) (= (type $generated@@519) $generated@@79)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@228 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@228 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@79) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) ($generated@@80 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@79 $generated@@79) $generated@@520)) $generated@@520) ($generated@@147 ($generated@@324 ($generated@@287 $generated@@79 $generated@@79) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@80 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@79) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) ($generated@@80 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@79 $generated@@79) $generated@@523)) $generated@@523) ($generated@@147 ($generated@@324 ($generated@@305 $generated@@79 $generated@@79) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@80 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@67) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@79)) ($generated@@80 $generated@@528 ($generated@@150 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@324 $generated@@151 $generated@@528)) $generated@@528) ($generated@@147 ($generated@@324 $generated@@151 $generated@@528) ($generated@@150 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@80 $generated@@528 ($generated@@150 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@77 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@77 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@72)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (and (= ($generated@@75 ($generated@@150 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@150 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@150 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@151) (= ($generated@@514 ($generated@@274 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) ($generated@@80 $generated@@536 ($generated@@117 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@536)) $generated@@536) ($generated@@147 ($generated@@324 ($generated@@81 $generated@@79 $generated@@4) $generated@@536) ($generated@@117 0))))
 :pattern ( ($generated@@80 $generated@@536 ($generated@@117 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@79) (= (type $generated@@538) $generated@@67)) ($generated@@80 $generated@@537 ($generated@@237 $generated@@538))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@79 $generated@@4) $generated@@537)) $generated@@537) ($generated@@147 ($generated@@324 ($generated@@81 $generated@@79 $generated@@4) $generated@@537) ($generated@@237 $generated@@538))))
 :pattern ( ($generated@@80 $generated@@537 ($generated@@237 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@79) (= (type $generated@@540) $generated@@67)) ($generated@@80 $generated@@539 ($generated@@242 $generated@@540))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@79 $generated@@4) $generated@@539)) $generated@@539) ($generated@@147 ($generated@@324 ($generated@@81 $generated@@79 $generated@@4) $generated@@539) ($generated@@242 $generated@@540))))
 :pattern ( ($generated@@80 $generated@@539 ($generated@@242 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@79) (= (type $generated@@542) $generated@@67)) ($generated@@80 $generated@@541 ($generated@@164 $generated@@542))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@79 $generated@@2) $generated@@541)) $generated@@541) ($generated@@147 ($generated@@324 ($generated@@81 $generated@@79 $generated@@2) $generated@@541) ($generated@@164 $generated@@542))))
 :pattern ( ($generated@@80 $generated@@541 ($generated@@164 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@79) (= (type $generated@@544) $generated@@67)) ($generated@@80 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@274 ($generated@@324 ($generated@@268 $generated@@79) $generated@@543)) $generated@@543) ($generated@@147 ($generated@@324 ($generated@@268 $generated@@79) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@80 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@75 $generated@@143) $generated@@63))
(assert (= ($generated@@531 $generated@@143) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@531 $generated@@225) $generated@@66))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@545 ($generated@@164 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@79) (< 0 ($generated ($generated@@77 $generated@@545 $generated@@548)))) ($generated@@254 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@77 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@116 $generated@@545 ($generated@@164 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@118) (= ($generated@@147 $generated@@552 $generated@@143)  (or (= $generated@@552 $generated@@144) ($generated@@549 ($generated@@550 $generated@@552)))))
 :pattern ( ($generated@@147 $generated@@552 $generated@@143))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@151) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@81 $generated@@118 $generated@@119))) (and ($generated@@253 $generated@@555) (and ($generated@@149 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@67) ($generated@@116 $generated@@553 ($generated@@150 $generated@@554 $generated@@556) $generated@@555))
 :pattern ( ($generated@@116 $generated@@553 ($generated@@150 $generated@@554 $generated@@556) $generated@@555))
))))) ($generated@@254 ($generated@@158 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@254 ($generated@@158 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@151) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@81 $generated@@118 $generated@@119))) (and ($generated@@253 $generated@@559) (and ($generated@@149 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@67) ($generated@@116 $generated@@557 ($generated@@150 $generated@@560 $generated@@558) $generated@@559))
 :pattern ( ($generated@@116 $generated@@557 ($generated@@150 $generated@@560 $generated@@558) $generated@@559))
))))) ($generated@@254 ($generated@@159 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@254 ($generated@@159 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@79) (= (type $generated@@562) $generated@@79)) (= ($generated@@228 ($generated@@249 $generated@@561) ($generated@@249 $generated@@562)) ($generated@@249 ($generated@@228 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@228 ($generated@@249 $generated@@561) ($generated@@249 $generated@@562)))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@247 $generated@@563))) ($generated@@249 ($generated@@274 ($generated@@8 $generated@@563))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@247 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@274 ($generated@@249 $generated@@564)) ($generated@@249 ($generated@@274 $generated@@564)))
 :pattern ( ($generated@@274 ($generated@@249 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@269 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@268 $generated@@566)) (= ($generated@@267 $generated@@565) 0)) (= $generated@@565 ($generated@@266 $generated@@566))))
 :pattern ( ($generated@@267 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@81 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@279 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@279 $generated@@567) ($generated ($generated@@77 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@279 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@572) $generated@@2)) ($generated@@116 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@116 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@574) $generated@@3)) ($generated@@116 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@116 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@576) $generated@@4)) ($generated@@116 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@116 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@578) $generated@@434)) ($generated@@116 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@116 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@580) $generated@@79)) ($generated@@116 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@116 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@268 $generated@@79)) (= (type $generated@@582) $generated@@67)) (= ($generated@@147 $generated@@581 ($generated@@476 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@267 $generated@@581))) ($generated@@80 ($generated@@477 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@477 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@147 $generated@@581 ($generated@@476 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@268 $generated@@79)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@267 $generated@@585))) (< ($generated@@515 ($generated@@324 $generated@@151 ($generated@@477 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@515 ($generated@@324 $generated@@151 ($generated@@477 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@287 $generated@@79 $generated@@79)) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@147 $generated@@587 ($generated@@391 $generated@@588 $generated@@589))) (and (and ($generated@@147 ($generated@@285 $generated@@587) ($generated@@237 $generated@@588)) ($generated@@147 ($generated@@334 $generated@@587) ($generated@@237 $generated@@589))) ($generated@@147 ($generated@@365 $generated@@587) ($generated@@237 ($generated@@150 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@147 $generated@@587 ($generated@@391 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@305 $generated@@79 $generated@@79)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@147 $generated@@590 ($generated@@399 $generated@@591 $generated@@592))) (and (and ($generated@@147 ($generated@@303 $generated@@590) ($generated@@242 $generated@@591)) ($generated@@147 ($generated@@345 $generated@@590) ($generated@@242 $generated@@592))) ($generated@@147 ($generated@@373 $generated@@590) ($generated@@242 ($generated@@150 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@147 $generated@@590 ($generated@@399 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@147 $generated@@593 $generated@@46))
 :pattern ( ($generated@@147 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@147 $generated@@594 $generated@@47))
 :pattern ( ($generated@@147 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@147 $generated@@595 $generated@@44))
 :pattern ( ($generated@@147 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@434) ($generated@@147 $generated@@596 $generated@@45))
 :pattern ( ($generated@@147 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@79) ($generated@@147 $generated@@597 $generated@@48))
 :pattern ( ($generated@@147 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(assert  (and (and (and (and (and (= (type $generated@@598) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@599) $generated@@118)) (= (type $generated@@600) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@601) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@603) ($generated@@171 $generated@@118 $generated@@4))) (= (type $generated@@604) ($generated@@81 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@606  (=> (and (= $generated@@598 ($generated@@78 $generated@@225 (= ($generated@@247 ($generated@@407 5 ($generated@@247 0))) ($generated@@247 19)))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@247 0) 0)))))
(let (($generated@@607  (=> (and (not (= ($generated@@247 ($generated@@407 5 ($generated@@247 0))) ($generated@@247 19))) (= (ControlFlow 0 5) 2)) $generated@@606)))
(let (($generated@@608  (=> (and (= ($generated@@247 ($generated@@407 5 ($generated@@247 0))) ($generated@@247 19)) (= (ControlFlow 0 4) 2)) $generated@@606)))
(let (($generated@@609  (=> (and ($generated@@147 $generated@@599 $generated@@225) ($generated@@116 $generated@@599 $generated@@225 $generated@@600)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (not (= $generated@@599 $generated@@144))) (=> (not (= $generated@@599 $generated@@144)) (=> (and (and ($generated@@253 $generated@@601) ($generated@@602 $generated@@601)) (and ($generated@@0 ($generated@@249 ($generated@@11 false))) (= $generated@@600 $generated@@601))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= ($generated@@247 0) 0))) (=> (not (= ($generated@@247 0) 0)) (and (=> (= (ControlFlow 0 6) 4) $generated@@608) (=> (= (ControlFlow 0 6) 5) $generated@@607))))))))))
(let (($generated@@610  (=> (and (not (and ($generated@@147 $generated@@599 $generated@@225) ($generated@@116 $generated@@599 $generated@@225 $generated@@600))) (= (ControlFlow 0 3) 2)) $generated@@606)))
(let (($generated@@611  (=> (= $generated@@603 ($generated@@170 $generated@@144 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 6) $generated@@609) (=> (= (ControlFlow 0 9) 3) $generated@@610)))))
(let (($generated@@612  (=> (and ($generated@@253 $generated@@600) ($generated@@602 $generated@@600)) (=> (and (and (and ($generated@@147 $generated@@604 ($generated@@237 $generated@@225)) ($generated@@116 $generated@@604 ($generated@@237 $generated@@225) $generated@@600)) true) (and (= 1 $generated@@605) (= (ControlFlow 0 10) 9))) $generated@@611))))
$generated@@612))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 () Int)
(declare-fun $generated@@329 (T@U) Bool)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@363 () Bool)
(declare-fun $generated@@364 () Bool)
(declare-fun $generated@@365 () Bool)
(declare-fun $generated@@366 () T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Bool)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@70 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@225) ($generated@@69 $generated@@4))) (= (type $generated@@227) $generated@@80)) (= (type $generated@@228) ($generated@@69 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (= (type $generated@@230) $generated@@67))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@231 $generated@@230 $generated@@232) ($generated@@77 $generated@@231 $generated@@135 $generated@@232)))
 :pattern ( ($generated@@77 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@143)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@67) (= (type $generated@@238) $generated@@67)) (= (type $generated@@239) $generated@@152)) (= (type $generated@@240) $generated@@152)) (= ($generated@@139 ($generated@@233 $generated@@239 $generated@@240) ($generated@@142 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@139 ($generated@@233 $generated@@239 $generated@@240) ($generated@@142 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@143) (= (type $generated@@242) $generated@@143)) (= ($generated@@149 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@149 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@139 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@152) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@139 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@152) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@67) (= (type $generated@@260) $generated@@67)) (= (type $generated@@261) $generated@@152)) (= (type $generated@@262) $generated@@152)) (= (type $generated@@263) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@257 $generated@@263)) (= ($generated@@77 ($generated@@233 $generated@@261 $generated@@262) ($generated@@142 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@77 ($generated@@233 $generated@@261 $generated@@262) ($generated@@142 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@143) (= ($generated@@141 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@143) ($generated@@141 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@152) (= (type $generated@@269) $generated@@152)) (= $generated@@267 ($generated@@233 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@141 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@152)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@67) (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@77 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@79 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@82 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@79 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@84 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@79 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@82 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@79 $generated@@326 $generated@@2)) (= ($generated@@158 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@84 $generated@@325 $generated@@327))) (<= ($generated ($generated@@84 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@84 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@158 $generated@@325))
)))
(assert  (=> (<= 0 $generated@@328) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@80) (or ($generated@@330 $generated@@331) (and (not (= 0 $generated@@328)) (and (not (= $generated@@331 $generated@@136)) ($generated@@139 $generated@@331 $generated@@230))))) ($generated@@0 ($generated@@253 ($generated@@11 false))))
 :pattern ( ($generated@@329 $generated@@331))
))))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@152) ($generated@@234 $generated@@335 $generated@@135)) (and (= ($generated@@278 ($generated@@332 $generated@@80 $generated@@335)) $generated@@335) ($generated@@139 ($generated@@332 $generated@@80 $generated@@335) $generated@@135)))
 :pattern ( ($generated@@234 $generated@@335 $generated@@135))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@152) ($generated@@234 $generated@@336 $generated@@230)) (and (= ($generated@@278 ($generated@@332 $generated@@80 $generated@@336)) $generated@@336) ($generated@@139 ($generated@@332 $generated@@80 $generated@@336) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@336 $generated@@230))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@80) (= ($generated@@139 $generated@@337 $generated@@230)  (and ($generated@@139 $generated@@337 $generated@@135) (not (= $generated@@337 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@337 $generated@@230))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@293 (type $generated@@338))))
(let (($generated@@340 ($generated@@292 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@291 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@290 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@289 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@293 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@293 (type $generated@@345))))
(let (($generated@@347 ($generated@@292 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@291 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@290 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@311 (type $generated@@349))))
(let (($generated@@351 ($generated@@310 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@309 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@308 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@307 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@311 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@311 (type $generated@@356))))
(let (($generated@@358 ($generated@@310 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@309 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@308 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@361) $generated@@67)) (= ($generated@@139 $generated@@360 ($generated@@157 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@360 $generated@@362)))) ($generated@@234 $generated@@362 $generated@@361))
 :pattern ( ($generated@@84 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@139 $generated@@360 ($generated@@157 $generated@@361)))
)))
(assert (= (type $generated@@366) $generated@@80))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81)) (or $generated@@364 (and (not (= 1 $generated@@328)) ($generated@@257 $generated@@367)))) (and (and $generated@@365 ($generated@@330 $generated@@366)) (= $generated@@363 (let (($generated@@368 $generated@@366))
($generated@@329 $generated@@368)))))
 :pattern ( $generated@@363 ($generated@@257 $generated@@367))
))))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@79 $generated@@80 $generated@@81)) (or $generated@@364 (and (not (= 1 $generated@@328)) ($generated@@257 $generated@@369)))) (and (and $generated@@365 ($generated@@330 $generated@@366)) (= $generated@@363 (let (($generated@@370 $generated@@366))
($generated@@329 $generated@@370)))))
 :weight 3
 :pattern ( $generated@@363 ($generated@@257 $generated@@369))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@371 ($generated@@243 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@152) ($generated@@0 ($generated@@84 $generated@@371 $generated@@374))) ($generated@@258 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@84 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@77 $generated@@371 ($generated@@243 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@152) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@258 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@84 ($generated@@284 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@84 ($generated@@284 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@293 (type $generated@@384))))
(let (($generated@@386 ($generated@@292 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@388) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@387) ($generated@@150 ($generated@@332 $generated@@143 $generated@@388)))) (= ($generated@@84 ($generated@@382 $generated@@387) ($generated@@150 ($generated@@332 $generated@@143 $generated@@388))) ($generated@@151 ($generated@@332 $generated@@143 $generated@@388))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@311 (type $generated@@392))))
(let (($generated@@394 ($generated@@310 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@396) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@395) ($generated@@150 ($generated@@332 $generated@@143 $generated@@396)))) (= ($generated@@84 ($generated@@390 $generated@@395) ($generated@@150 ($generated@@332 $generated@@143 $generated@@396))) ($generated@@151 ($generated@@332 $generated@@143 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@292 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@291 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@84 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@353 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@353 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@410) $generated@@414))) (and ($generated@@258 ($generated@@84 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@258 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@418) $generated@@422))) (and ($generated@@258 ($generated@@84 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@258 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@79 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (= ($generated@@307 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@307 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (= ($generated@@353 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@353 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@311 (type $generated@@431))))
(let (($generated@@433 ($generated@@310 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@309 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@308 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@152))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@293 (type $generated@@434))))
(let (($generated@@436 ($generated@@292 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@291 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@290 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@152) (= (type $generated@@438) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@434) ($generated@@278 ($generated@@233 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@311 (type $generated@@439))))
(let (($generated@@441 ($generated@@310 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@309 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@308 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@152) (= (type $generated@@443) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@389 $generated@@439) ($generated@@278 ($generated@@233 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@152) ($generated@@234 $generated@@444 $generated@@46)) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@444)) $generated@@444) ($generated@@139 ($generated@@332 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@234 $generated@@445 $generated@@47)) (and (= ($generated@@278 ($generated@@332 $generated@@3 $generated@@445)) $generated@@445) ($generated@@139 ($generated@@332 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@152) ($generated@@234 $generated@@446 $generated@@44)) (and (= ($generated@@278 ($generated@@332 $generated@@4 $generated@@446)) $generated@@446) ($generated@@139 ($generated@@332 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@152) ($generated@@234 $generated@@448 $generated@@45)) (and (= ($generated@@278 ($generated@@332 $generated@@447 $generated@@448)) $generated@@448) ($generated@@139 ($generated@@332 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@67) (= ($generated@@234 ($generated@@278 $generated@@449) $generated@@450) ($generated@@139 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@234 ($generated@@278 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@82 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@79 $generated@@452 $generated@@2)) (<= 0 ($generated@@283 $generated@@451))))
 :pattern ( ($generated@@283 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@273 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@272 $generated@@454)) (<= 0 ($generated@@271 $generated@@453))))
 :pattern ( ($generated@@271 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@75 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@75 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) (= (type $generated@@476) $generated@@152)) (= ($generated@@264 ($generated@@233 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@142 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@142 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@142 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@142 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@152) (= (type $generated@@486) $generated@@152)) (= ($generated@@150 ($generated@@233 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@152) (= (type $generated@@488) $generated@@152)) (= ($generated@@151 ($generated@@233 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@233 $generated@@487 $generated@@488))
)))
(assert  (=> $generated@@365 (and ($generated@@139 $generated@@366 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true))))))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@273 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@272 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@271 $generated@@495))) ($generated@@258 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@77 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@78 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@78 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@248 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@157 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@157 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@75 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@332 $generated@@518 ($generated@@278 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@278 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@139 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@519) $generated@@522))) (and ($generated@@234 ($generated@@84 ($generated@@382 $generated@@519) $generated@@522) $generated@@521) ($generated@@234 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@139 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) (= ($generated@@139 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@523) $generated@@526))) (and ($generated@@234 ($generated@@84 ($generated@@390 $generated@@523) $generated@@526) $generated@@525) ($generated@@234 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@523) $generated@@526))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@139 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@152)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@233 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@233 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@152)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@233 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@531 $generated@@532))
)))
(assert  (=> (<= 1 $generated@@328) (=> (or $generated@@364 (not (= 1 $generated@@328))) ($generated@@0 ($generated@@253 ($generated@@11 false))))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@67)) ($generated@@234 $generated@@533 ($generated@@407 $generated@@534 $generated@@535))) (and (= ($generated@@278 ($generated@@332 ($generated@@291 $generated@@152 $generated@@152) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@332 ($generated@@291 $generated@@152 $generated@@152) $generated@@533) ($generated@@407 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@234 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) ($generated@@234 $generated@@536 ($generated@@415 $generated@@537 $generated@@538))) (and (= ($generated@@278 ($generated@@332 ($generated@@309 $generated@@152 $generated@@152) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@332 ($generated@@309 $generated@@152 $generated@@152) $generated@@536) ($generated@@415 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@234 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@152)) ($generated@@234 $generated@@541 ($generated@@142 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@332 $generated@@143 $generated@@541)) $generated@@541) ($generated@@139 ($generated@@332 $generated@@143 $generated@@541) ($generated@@142 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@234 $generated@@541 ($generated@@142 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@84 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@84 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@72)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@142 $generated@@546 $generated@@547)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@143) (= ($generated@@527 ($generated@@278 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@278 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@152) ($generated@@234 $generated@@549 ($generated@@78 0))) (and (= ($generated@@278 ($generated@@332 $generated@@2 $generated@@549)) $generated@@549) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@549) ($generated@@78 0))))
 :pattern ( ($generated@@234 $generated@@549 ($generated@@78 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@67)) ($generated@@234 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@278 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@67)) ($generated@@234 $generated@@552 ($generated@@248 $generated@@553))) (and (= ($generated@@278 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@552)) $generated@@552) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@4) $generated@@552) ($generated@@248 $generated@@553))))
 :pattern ( ($generated@@234 $generated@@552 ($generated@@248 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@152) (= (type $generated@@555) $generated@@67)) ($generated@@234 $generated@@554 ($generated@@157 $generated@@555))) (and (= ($generated@@278 ($generated@@332 ($generated@@79 $generated@@152 $generated@@2) $generated@@554)) $generated@@554) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@152 $generated@@2) $generated@@554) ($generated@@157 $generated@@555))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@157 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@152) (= (type $generated@@557) $generated@@67)) ($generated@@234 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@278 ($generated@@332 ($generated@@272 $generated@@152) $generated@@556)) $generated@@556) ($generated@@139 ($generated@@332 ($generated@@272 $generated@@152) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@234 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@544 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@230) $generated@@64))
(assert (= ($generated@@544 $generated@@230) $generated@@66))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@157 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@258 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@157 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@80) (= ($generated@@139 $generated@@565 $generated@@135)  (or (= $generated@@565 $generated@@136) ($generated@@562 ($generated@@563 $generated@@565)))))
 :pattern ( ($generated@@139 $generated@@565 $generated@@135))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@143) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@568) (and ($generated@@141 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@142 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@142 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@258 ($generated@@150 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@258 ($generated@@150 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@143) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@572) (and ($generated@@141 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@67) ($generated@@77 $generated@@570 ($generated@@142 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@77 $generated@@570 ($generated@@142 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@258 ($generated@@151 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@258 ($generated@@151 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@152)) (= ($generated@@233 ($generated@@253 $generated@@574) ($generated@@253 $generated@@575)) ($generated@@253 ($generated@@233 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@233 ($generated@@253 $generated@@574) ($generated@@253 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@278 ($generated@@253 $generated@@576)) ($generated@@253 ($generated@@278 $generated@@576)))
 :pattern ( ($generated@@278 ($generated@@253 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@273 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@272 $generated@@578)) (= ($generated@@271 $generated@@577) 0)) (= $generated@@577 ($generated@@270 $generated@@578))))
 :pattern ( ($generated@@271 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@79 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@283 ($generated@@85 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@283 $generated@@579) ($generated ($generated@@84 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@283 ($generated@@85 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@2)) ($generated@@77 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@3)) ($generated@@77 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@4)) ($generated@@77 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@447)) ($generated@@77 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@592) $generated@@152)) ($generated@@77 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@77 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@272 $generated@@152)) (= (type $generated@@594) $generated@@67)) (= ($generated@@139 $generated@@593 ($generated@@489 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@271 $generated@@593))) ($generated@@234 ($generated@@490 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@490 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@139 $generated@@593 ($generated@@489 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@272 $generated@@152)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@271 $generated@@597))) (< ($generated@@528 ($generated@@332 $generated@@143 ($generated@@490 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@528 ($generated@@332 $generated@@143 ($generated@@490 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@291 $generated@@152 $generated@@152)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@139 $generated@@599 ($generated@@407 $generated@@600 $generated@@601))) (and (and ($generated@@139 ($generated@@289 $generated@@599) ($generated@@243 $generated@@600)) ($generated@@139 ($generated@@342 $generated@@599) ($generated@@243 $generated@@601))) ($generated@@139 ($generated@@381 $generated@@599) ($generated@@243 ($generated@@142 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@139 $generated@@599 ($generated@@407 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@309 $generated@@152 $generated@@152)) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@67)) ($generated@@139 $generated@@602 ($generated@@415 $generated@@603 $generated@@604))) (and (and ($generated@@139 ($generated@@307 $generated@@602) ($generated@@248 $generated@@603)) ($generated@@139 ($generated@@353 $generated@@602) ($generated@@248 $generated@@604))) ($generated@@139 ($generated@@389 $generated@@602) ($generated@@248 ($generated@@142 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@139 $generated@@602 ($generated@@415 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@139 $generated@@605 $generated@@46))
 :pattern ( ($generated@@139 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@139 $generated@@606 $generated@@47))
 :pattern ( ($generated@@139 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@139 $generated@@607 $generated@@44))
 :pattern ( ($generated@@139 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@447) ($generated@@139 $generated@@608 $generated@@45))
 :pattern ( ($generated@@139 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@152) ($generated@@139 $generated@@609 $generated@@48))
 :pattern ( ($generated@@139 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@610) $generated@@80) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@613) ($generated@@164 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@615  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@253 ($generated@@11 false))))))
(let (($generated@@616  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and ($generated@@139 $generated@@136 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@80) (and ($generated@@139 $generated@@617 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))))
 :no-pattern (type $generated@@617)
 :no-pattern ($generated $generated@@617)
 :no-pattern ($generated@@0 $generated@@617)
)))) (=> (or (and ($generated@@139 $generated@@136 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@80) (and ($generated@@139 $generated@@618 $generated@@230) ($generated@@0 ($generated@@253 ($generated@@11 true)))))
 :no-pattern (type $generated@@618)
 :no-pattern ($generated $generated@@618)
 :no-pattern ($generated@@0 $generated@@618)
))) (=> (and ($generated@@139 $generated@@610 $generated@@230) ($generated@@77 $generated@@610 $generated@@230 $generated@@611)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= $generated@@610 $generated@@136))) (=> (not (= $generated@@610 $generated@@136)) (=> ($generated@@77 $generated@@610 $generated@@135 $generated@@611) (=> (and ($generated@@330 $generated@@610) $generated@@365) (=> (and (and (= $generated@@363 ($generated@@329 $generated@@610)) ($generated@@330 $generated@@610)) (and ($generated@@139 ($generated@@11 $generated@@363) $generated@@44) (= (ControlFlow 0 4) 3))) $generated@@615))))))))))
(let (($generated@@619  (=> (and (not (and ($generated@@139 $generated@@610 $generated@@230) ($generated@@77 $generated@@610 $generated@@230 $generated@@611))) (= (ControlFlow 0 8) 4)) $generated@@616)))
(let (($generated@@620  (=> (and (and ($generated@@139 $generated@@610 $generated@@230) ($generated@@77 $generated@@610 $generated@@230 $generated@@611)) (= (ControlFlow 0 7) 4)) $generated@@616)))
(let (($generated@@621  (=> (= $generated@@612 ($generated@@218 $generated@@136 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@620) (=> (= (ControlFlow 0 9) 8) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@613 ($generated@@163 $generated@@136 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621)))))
(let (($generated@@624  (=> (and (and ($generated@@257 $generated@@611) ($generated@@614 $generated@@611)) (and (= 1 $generated@@328) (= (ControlFlow 0 11) 10))) $generated@@623)))
$generated@@624)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U Bool T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (Int Int) Int)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Bool)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 Bool) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@247 $generated@@251 $generated@@252 $generated@@253) $generated@@254)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@80) (and (and ($generated@@139 $generated@@255 $generated@@251) $generated@@252) (= $generated@@254 $generated@@253)))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))
 :pattern ( ($generated@@84 ($generated@@247 $generated@@251 $generated@@252 $generated@@253) $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@67) (= (type $generated@@259) $generated@@67)) (= (type $generated@@260) $generated@@152)) (= (type $generated@@261) $generated@@152)) (= (type $generated@@262) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@256 $generated@@262)) (= ($generated@@77 ($generated@@221 $generated@@260 $generated@@261) ($generated@@142 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@260 $generated@@261) ($generated@@142 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@71)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@143) (= ($generated@@141 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@143) ($generated@@141 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@152) (= (type $generated@@268) $generated@@152)) (= $generated@@266 ($generated@@221 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@141 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@152)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@67) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@257 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@77 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@79 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@82 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@79 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@84 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@79 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@79 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@82 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@79 $generated@@325 $generated@@2)) (= ($generated@@158 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@84 $generated@@324 $generated@@326))) (<= ($generated ($generated@@84 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@84 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@158 $generated@@324))
)))
(assert (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@152) ($generated@@222 $generated@@330 $generated@@135)) (and (= ($generated@@277 ($generated@@327 $generated@@80 $generated@@330)) $generated@@330) ($generated@@139 ($generated@@327 $generated@@80 $generated@@330) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@330 $generated@@135))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@152) ($generated@@222 $generated@@331 $generated@@218)) (and (= ($generated@@277 ($generated@@327 $generated@@80 $generated@@331)) $generated@@331) ($generated@@139 ($generated@@327 $generated@@80 $generated@@331) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@331 $generated@@218))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@80) (= ($generated@@139 $generated@@332 $generated@@218)  (and ($generated@@139 $generated@@332 $generated@@135) (not (= $generated@@332 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@332 $generated@@218))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@292 (type $generated@@333))))
(let (($generated@@335 ($generated@@291 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@290 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@289 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@288 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@292 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(let (($generated@@342 ($generated@@291 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@290 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@289 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@310 (type $generated@@344))))
(let (($generated@@346 ($generated@@309 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@308 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@307 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@306 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@310 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@79 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(let (($generated@@353 ($generated@@309 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@308 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@307 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@356) $generated@@67)) (= ($generated@@139 $generated@@355 ($generated@@157 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@355 $generated@@357)))) ($generated@@222 $generated@@357 $generated@@356))
 :pattern ( ($generated@@84 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@139 $generated@@355 ($generated@@157 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@359) $generated@@67)) (= (type $generated@@360) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@358 ($generated@@231 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@152) ($generated@@0 ($generated@@84 $generated@@358 $generated@@361))) ($generated@@257 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@84 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@77 $generated@@358 ($generated@@231 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@236 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@152) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@257 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@236 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@84 ($generated@@283 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@84 ($generated@@283 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@292 (type $generated@@371))))
(let (($generated@@373 ($generated@@291 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@375) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@374) ($generated@@150 ($generated@@327 $generated@@143 $generated@@375)))) (= ($generated@@84 ($generated@@369 $generated@@374) ($generated@@150 ($generated@@327 $generated@@143 $generated@@375))) ($generated@@151 ($generated@@327 $generated@@143 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@310 (type $generated@@379))))
(let (($generated@@381 ($generated@@309 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@383) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@382) ($generated@@150 ($generated@@327 $generated@@143 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@150 ($generated@@327 $generated@@143 $generated@@383))) ($generated@@151 ($generated@@327 $generated@@143 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@291 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@290 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@309 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@308 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@348 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@397) $generated@@401))) (and ($generated@@257 ($generated@@84 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@257 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@405) $generated@@409))) (and ($generated@@257 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@257 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 Int) ($generated@@412 Int) ) (! (= ($generated@@410 $generated@@411 $generated@@412) (div $generated@@411 $generated@@412))
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@79 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@310 (type $generated@@415))))
(let (($generated@@417 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@307 $generated@@417 $generated@@416)) (= ($generated@@306 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@306 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@310 (type $generated@@418))))
(let (($generated@@420 ($generated@@309 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@308 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@307 $generated@@420 $generated@@419)) (= ($generated@@348 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@348 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@376 $generated@@421) ($generated@@413 $generated@@152))))))
 :pattern ( ($generated@@376 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@292 (type $generated@@424))))
(let (($generated@@426 ($generated@@291 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@290 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@289 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@152) (= (type $generated@@428) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@424) ($generated@@277 ($generated@@221 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@310 (type $generated@@429))))
(let (($generated@@431 ($generated@@309 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@308 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@307 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@152) (= (type $generated@@433) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@429) ($generated@@277 ($generated@@221 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@152) ($generated@@222 $generated@@434 $generated@@46)) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@434)) $generated@@434) ($generated@@139 ($generated@@327 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@222 $generated@@435 $generated@@47)) (and (= ($generated@@277 ($generated@@327 $generated@@3 $generated@@435)) $generated@@435) ($generated@@139 ($generated@@327 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@152) ($generated@@222 $generated@@436 $generated@@44)) (and (= ($generated@@277 ($generated@@327 $generated@@4 $generated@@436)) $generated@@436) ($generated@@139 ($generated@@327 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@152) ($generated@@222 $generated@@438 $generated@@45)) (and (= ($generated@@277 ($generated@@327 $generated@@437 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@327 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@67) (= ($generated@@222 ($generated@@277 $generated@@439) $generated@@440) ($generated@@139 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@222 ($generated@@277 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@82 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@79 $generated@@442 $generated@@2)) (<= 0 ($generated@@282 $generated@@441))))
 :pattern ( ($generated@@282 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@272 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@271 $generated@@444)) (<= 0 ($generated@@270 $generated@@443))))
 :pattern ( ($generated@@270 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@394 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@394 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@394 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@394 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@402 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@402 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@402 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@152) (= (type $generated@@466) $generated@@152)) (= ($generated@@263 ($generated@@221 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@142 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@142 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@142 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@142 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) (= (type $generated@@476) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@221 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@152) (= (type $generated@@478) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@221 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@272 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@271 $generated@@152)) (= (type $generated@@486) $generated@@67)) (= (type $generated@@487) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@270 $generated@@485))) ($generated@@257 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@77 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@78 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@78 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@236 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@236 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@157 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@157 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@327 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) $generated@@67)) (= ($generated@@139 $generated@@509 ($generated@@394 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@222 ($generated@@84 ($generated@@369 $generated@@509) $generated@@512) $generated@@511) ($generated@@222 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@509) $generated@@512))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@139 $generated@@509 ($generated@@394 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@139 $generated@@513 ($generated@@402 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@222 ($generated@@84 ($generated@@377 $generated@@513) $generated@@516) $generated@@515) ($generated@@222 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@139 $generated@@513 ($generated@@402 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@152) (= (type $generated@@520) $generated@@152)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@221 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@221 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@152) (= (type $generated@@522) $generated@@152)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@221 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@152) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) ($generated@@222 $generated@@523 ($generated@@394 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@327 ($generated@@290 $generated@@152 $generated@@152) $generated@@523)) $generated@@523) ($generated@@139 ($generated@@327 ($generated@@290 $generated@@152 $generated@@152) $generated@@523) ($generated@@394 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@222 $generated@@523 ($generated@@394 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@402 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@327 ($generated@@308 $generated@@152 $generated@@152) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@327 ($generated@@308 $generated@@152 $generated@@152) $generated@@526) ($generated@@402 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@402 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@152)) ($generated@@222 $generated@@531 ($generated@@142 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@327 $generated@@143 $generated@@531)) $generated@@531) ($generated@@139 ($generated@@327 $generated@@143 $generated@@531) ($generated@@142 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@142 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@84 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@84 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@72)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@142 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@143) (= ($generated@@517 ($generated@@277 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@152) ($generated@@222 $generated@@539 ($generated@@78 0))) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@539)) $generated@@539) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@539) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@78 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@152) (= (type $generated@@541) $generated@@67)) ($generated@@222 $generated@@540 ($generated@@231 $generated@@541))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@540)) $generated@@540) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@540) ($generated@@231 $generated@@541))))
 :pattern ( ($generated@@222 $generated@@540 ($generated@@231 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@152) (= (type $generated@@543) $generated@@67)) ($generated@@222 $generated@@542 ($generated@@236 $generated@@543))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@542)) $generated@@542) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@542) ($generated@@236 $generated@@543))))
 :pattern ( ($generated@@222 $generated@@542 ($generated@@236 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@152) (= (type $generated@@545) $generated@@67)) ($generated@@222 $generated@@544 ($generated@@157 $generated@@545))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@152 $generated@@2) $generated@@544)) $generated@@544) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@2) $generated@@544) ($generated@@157 $generated@@545))))
 :pattern ( ($generated@@222 $generated@@544 ($generated@@157 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@152) (= (type $generated@@547) $generated@@67)) ($generated@@222 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@277 ($generated@@327 ($generated@@271 $generated@@152) $generated@@546)) $generated@@546) ($generated@@139 ($generated@@327 ($generated@@271 $generated@@152) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@222 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@534 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@534 $generated@@218) $generated@@66))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@548 ($generated@@157 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@548 $generated@@551)))) ($generated@@257 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@84 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@157 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@67)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@80) (= ($generated@@139 $generated@@555 $generated@@135)  (or (= $generated@@555 $generated@@136) ($generated@@552 ($generated@@553 $generated@@555)))))
 :pattern ( ($generated@@139 $generated@@555 $generated@@135))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@143) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@256 $generated@@558) (and ($generated@@141 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@67) ($generated@@77 $generated@@556 ($generated@@142 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@142 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@257 ($generated@@150 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@257 ($generated@@150 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@143) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@256 $generated@@562) (and ($generated@@141 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@67) ($generated@@77 $generated@@560 ($generated@@142 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@77 $generated@@560 ($generated@@142 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@257 ($generated@@151 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@257 ($generated@@151 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@152) (= (type $generated@@565) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@564) ($generated@@243 $generated@@565)) ($generated@@243 ($generated@@221 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@564) ($generated@@243 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@241 $generated@@566))) ($generated@@243 ($generated@@277 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@241 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@277 ($generated@@243 $generated@@567)) ($generated@@243 ($generated@@277 $generated@@567)))
 :pattern ( ($generated@@277 ($generated@@243 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@272 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@271 $generated@@569)) (= ($generated@@270 $generated@@568) 0)) (= $generated@@568 ($generated@@269 $generated@@569))))
 :pattern ( ($generated@@270 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@79 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@282 ($generated@@85 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@282 $generated@@570) ($generated ($generated@@84 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@282 ($generated@@85 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@575) $generated@@2)) ($generated@@77 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@77 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@3)) ($generated@@77 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@4)) ($generated@@77 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@437)) ($generated@@77 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@152)) ($generated@@77 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@271 $generated@@152)) (= (type $generated@@585) $generated@@67)) (= ($generated@@139 $generated@@584 ($generated@@479 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@270 $generated@@584))) ($generated@@222 ($generated@@480 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@480 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@139 $generated@@584 ($generated@@479 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@271 $generated@@152)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@270 $generated@@588))) (< ($generated@@518 ($generated@@327 $generated@@143 ($generated@@480 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@518 ($generated@@327 $generated@@143 ($generated@@480 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@139 $generated@@590 ($generated@@394 $generated@@591 $generated@@592))) (and (and ($generated@@139 ($generated@@288 $generated@@590) ($generated@@231 $generated@@591)) ($generated@@139 ($generated@@337 $generated@@590) ($generated@@231 $generated@@592))) ($generated@@139 ($generated@@368 $generated@@590) ($generated@@231 ($generated@@142 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@139 $generated@@590 ($generated@@394 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@67)) ($generated@@139 $generated@@593 ($generated@@402 $generated@@594 $generated@@595))) (and (and ($generated@@139 ($generated@@306 $generated@@593) ($generated@@236 $generated@@594)) ($generated@@139 ($generated@@348 $generated@@593) ($generated@@236 $generated@@595))) ($generated@@139 ($generated@@376 $generated@@593) ($generated@@236 ($generated@@142 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@139 $generated@@593 ($generated@@402 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@139 $generated@@596 $generated@@46))
 :pattern ( ($generated@@139 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@139 $generated@@597 $generated@@47))
 :pattern ( ($generated@@139 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@139 $generated@@598 $generated@@44))
 :pattern ( ($generated@@139 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@437) ($generated@@139 $generated@@599 $generated@@45))
 :pattern ( ($generated@@139 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@152) ($generated@@139 $generated@@600 $generated@@48))
 :pattern ( ($generated@@139 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(assert  (and (and (and (and (and (= (type $generated@@601) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@602) $generated@@80)) (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@606) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@607) ($generated@@79 $generated@@152 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@609  (=> (and (= $generated@@601 ($generated@@247 $generated@@218 ($generated@@0 ($generated@@243 ($generated@@11 true))) ($generated@@277 ($generated@@11 (= ($generated@@241 ($generated@@410 5 ($generated@@241 0))) ($generated@@241 19)))))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@241 0) 0)))))
(let (($generated@@610  (=> (and (not ($generated@@0 ($generated@@243 ($generated@@11 true)))) (= (ControlFlow 0 7) 2)) $generated@@609)))
(let (($generated@@611  (=> ($generated@@0 ($generated@@243 ($generated@@11 true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not (= $generated@@602 $generated@@136))) (=> (not (= $generated@@602 $generated@@136)) (=> (and (and ($generated@@256 $generated@@603) ($generated@@604 $generated@@603)) (and ($generated@@0 ($generated@@243 ($generated@@11 false))) (= $generated@@605 $generated@@603))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@241 0) 0))) (=> (not (= ($generated@@241 0) 0)) (=> (= (ControlFlow 0 4) 2) $generated@@609)))))))))
(let (($generated@@612  (=> (and ($generated@@139 $generated@@602 $generated@@218) ($generated@@77 $generated@@602 $generated@@218 $generated@@605)) (and (=> (= (ControlFlow 0 8) 4) $generated@@611) (=> (= (ControlFlow 0 8) 7) $generated@@610)))))
(let (($generated@@613  (=> (and (not (and ($generated@@139 $generated@@602 $generated@@218) ($generated@@77 $generated@@602 $generated@@218 $generated@@605))) (= (ControlFlow 0 3) 2)) $generated@@609)))
(let (($generated@@614  (=> (= $generated@@606 ($generated@@163 $generated@@136 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@612) (=> (= (ControlFlow 0 9) 3) $generated@@613)))))
(let (($generated@@615  (=> (and ($generated@@256 $generated@@605) ($generated@@604 $generated@@605)) (=> (and (and (and ($generated@@139 $generated@@607 ($generated@@231 $generated@@44)) ($generated@@77 $generated@@607 ($generated@@231 $generated@@44) $generated@@605)) true) (and (= 1 $generated@@608) (= (ControlFlow 0 10) 9))) $generated@@614))))
$generated@@615))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () Bool)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 (Int Int) Int)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (= (type $generated@@271) $generated@@64))
(assert ($generated@@270 $generated@@271))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@145)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@74 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) (= $generated@@285 ($generated@@243 ($generated@@286 40 ($generated@@243 0)))))))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) (= $generated@@285 ($generated@@243 ($generated@@286 40 ($generated@@243 0)))))))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@151 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@151 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@224 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@250 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@278 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@363 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@309 (type $generated@@375))))
(let (($generated@@377 ($generated@@308 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@290 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@289 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@308 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@307 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@250 ($generated@@81 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@250 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))) (and ($generated@@250 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@250 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 Int) ($generated@@407 Int) ) (! (= ($generated@@286 $generated@@406 $generated@@407) (div $generated@@406 $generated@@407))
 :pattern ( ($generated@@286 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) true)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@309 (type $generated@@410))))
(let (($generated@@412 ($generated@@308 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@307 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@306 $generated@@412 $generated@@411)) (= ($generated@@305 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@305 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@309 (type $generated@@413))))
(let (($generated@@415 ($generated@@308 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@307 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@306 $generated@@415 $generated@@414)) (= ($generated@@341 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@341 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@309 (type $generated@@416))))
(let (($generated@@418 ($generated@@308 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@307 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@306 $generated@@418 $generated@@417)) (= ($generated@@372 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@372 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@291 (type $generated@@419))))
(let (($generated@@421 ($generated@@290 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@289 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@288 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@419) ($generated@@272 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@361 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@309 (type $generated@@424))))
(let (($generated@@426 ($generated@@308 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@307 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@306 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@424) ($generated@@272 ($generated@@223 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@372 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@46)) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@362 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@47)) (and (= ($generated@@272 ($generated@@362 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@362 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@44)) (and (= ($generated@@272 ($generated@@362 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@362 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@45)) (and (= ($generated@@272 ($generated@@362 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@362 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@224 ($generated@@272 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@224 ($generated@@272 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@277 $generated@@436))))
 :pattern ( ($generated@@277 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@265 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@264 $generated@@439)) (<= 0 ($generated@@263 $generated@@438))))
 :pattern ( ($generated@@263 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) ($generated@@270 $generated@@440)) (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@442) $generated@@145)) ($generated@@224 $generated@@442 $generated@@440)) ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
)))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@390 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@390 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@398 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@265 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@264 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@263 $generated@@483))) ($generated@@250 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@233 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@238 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@362 $generated@@506 ($generated@@272 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@272 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@507) $generated@@510))) (and ($generated@@224 ($generated@@81 ($generated@@363 $generated@@507) $generated@@510) $generated@@509) ($generated@@224 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@223 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@223 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523))) (and (= ($generated@@272 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@521) ($generated@@390 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@272 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@145)) ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@362 $generated@@136 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@362 $generated@@136 $generated@@529) ($generated@@135 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@135 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@515 ($generated@@272 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@272 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@233 $generated@@539))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@233 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@238 $generated@@541))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@238 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@238 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@477 $generated@@545))) (and (= ($generated@@272 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544) ($generated@@477 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@477 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@250 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)) ($generated@@245 ($generated@@223 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))) ($generated@@245 ($generated@@272 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@561)) ($generated@@245 ($generated@@272 $generated@@561)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@265 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@264 $generated@@563)) (= ($generated@@263 $generated@@562) 0)) (= $generated@@562 ($generated@@262 $generated@@563))))
 :pattern ( ($generated@@263 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@277 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@264 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@263 $generated@@578))) ($generated@@224 ($generated@@478 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@478 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@263 $generated@@582))) (< ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@287 $generated@@584) ($generated@@233 $generated@@585)) ($generated@@132 ($generated@@330 $generated@@584) ($generated@@233 $generated@@586))) ($generated@@132 ($generated@@361 $generated@@584) ($generated@@233 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@305 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@132 ($generated@@341 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@132 ($generated@@372 $generated@@587) ($generated@@238 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () Bool)
(declare-fun $generated@@596 () Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@604  (=> (and (and (= $generated@@595 (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@145) ($generated@@224 $generated@@605 $generated@@271)) (= ($generated@@243 ($generated@@286 5 ($generated@@243 0))) ($generated@@243 19)))
 :no-pattern (type $generated@@605)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
))) ($generated@@132 ($generated@@11 $generated@@595) $generated@@44)) (and (= $generated@@596 $generated@@595) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@243 0) 0)))))
(let (($generated@@606  (=> (and (not (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598))) (= (ControlFlow 0 6) 3)) $generated@@604)))
(let (($generated@@607  (=> (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598)) (=> (and (and ($generated@@249 $generated@@599) ($generated@@600 $generated@@599)) (and ($generated@@0 ($generated@@245 ($generated@@11 false))) (= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@243 0) 0))) (=> (not (= ($generated@@243 0) 0)) (=> (= (ControlFlow 0 4) 3) $generated@@604)))))))
(let (($generated@@608  (=> (= $generated@@601 ($generated@@211 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 4) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@603 ($generated@@156 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@609) (=> (= (ControlFlow 0 8) 7) $generated@@608)))))
(let (($generated@@611  (=> (and (and ($generated@@249 $generated@@598) ($generated@@600 $generated@@598)) (and (= 1 $generated@@283) (= (ControlFlow 0 9) 8))) $generated@@610)))
$generated@@611))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U Bool) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) Bool)
(declare-fun $generated@@117 (Int) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T) T@T)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (Int) Int)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (Int Int) Int)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Bool)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@85 $generated@@86)) 12))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@81 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@83 ($generated@@81 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@81 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@83 (type $generated@@91))))
(= (type ($generated@@77 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@77 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@84 $generated@@94 $generated@@95 $generated@@96)) ($generated@@81 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@83 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@77 ($generated@@84 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@77 ($generated@@84 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@77 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@77 ($generated@@84 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@77 $generated@@108 $generated@@110)))
 :weight 0
)))) (forall (($generated@@111 T@U) ($generated@@112 Bool) ) (! (= (type ($generated@@78 $generated@@111 $generated@@112)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@78 $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 Bool) ($generated@@115 T@U) ) (!  (=> (and (= (type $generated@@113) $generated@@67) (= (type $generated@@115) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@78 $generated@@113 $generated@@114) $generated@@115))  (and ($generated@@80 $generated@@115 $generated@@113) $generated@@114)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@113 $generated@@114) $generated@@115))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@118) 13) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@123))))
(= (type ($generated@@120 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@120 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@119) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@121 $generated@@125 $generated@@126 $generated@@127)) $generated@@119)
 :pattern ( ($generated@@121 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@70 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@120 ($generated@@121 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@120 ($generated@@121 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@120 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@120 ($generated@@121 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@120 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@117 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@117 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@81 $generated@@118 $generated@@119))) ($generated@@116 $generated@@141 ($generated@@117 0) $generated@@142))
 :pattern ( ($generated@@116 $generated@@141 ($generated@@117 0) $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@118)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@118) (= (type $generated@@146) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@120 ($generated@@77 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@116 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@152 $generated@@153)) 15)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@150 ($generated@@149 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@149 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@151 ($generated@@149 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@149 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (let (($generated@@159 ($generated@@150 (type $generated@@158))))
(= (type ($generated@@147 $generated@@158)) ($generated@@81 $generated@@159 $generated@@4)))
 :pattern ( ($generated@@147 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@83 (type $generated@@161))))
(let (($generated@@164 ($generated@@82 (type $generated@@160))))
(= (type ($generated@@148 $generated@@160 $generated@@161 $generated@@162)) ($generated@@149 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@160 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@83 (type $generated@@166))))
(let (($generated@@169 ($generated@@82 (type $generated@@165))))
 (=> (and (and (= (type $generated@@165) ($generated@@81 $generated@@169 $generated@@4)) (= (type $generated@@166) ($generated@@81 $generated@@169 $generated@@168))) (= (type $generated@@167) $generated@@67)) (= ($generated@@147 ($generated@@148 $generated@@165 $generated@@166 $generated@@167)) $generated@@165))))
 :pattern ( ($generated@@147 ($generated@@148 $generated@@165 $generated@@166 $generated@@167)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@151 (type $generated@@171))))
(let (($generated@@173 ($generated@@150 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171)) ($generated@@81 $generated@@173 $generated@@172))))
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@83 (type $generated@@175))))
(let (($generated@@178 ($generated@@82 (type $generated@@174))))
 (=> (and (and (= (type $generated@@174) ($generated@@81 $generated@@178 $generated@@4)) (= (type $generated@@175) ($generated@@81 $generated@@178 $generated@@177))) (= (type $generated@@176) $generated@@67)) (= ($generated@@170 ($generated@@148 $generated@@174 $generated@@175 $generated@@176)) $generated@@175))))
 :pattern ( ($generated@@170 ($generated@@148 $generated@@174 $generated@@175 $generated@@176)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@179 $generated@@180 ($generated@@117 0)))
 :pattern ( ($generated@@179 $generated@@180 ($generated@@117 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 16) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@183)) ($generated@@179 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@179 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@79)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@79)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@200) $generated@@67)) ($generated@@179 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@179 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 17)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@118 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@70 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@118) (= (type $generated@@251) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@252) ($generated@@69 $generated@@4))) (= (type $generated@@254) $generated@@118)) (= (type $generated@@255) ($generated@@69 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@120 ($generated@@77 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (= (type $generated@@257) $generated@@67))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@118) (= (type $generated@@259) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@258 $generated@@257 $generated@@259) ($generated@@116 $generated@@258 $generated@@143 $generated@@259)))
 :pattern ( ($generated@@116 $generated@@258 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@261 $generated@@262)) $generated@@183)
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@79)) (= (type $generated@@266) $generated@@79)) (= ($generated@@179 ($generated@@260 $generated@@265 $generated@@266) ($generated@@182 $generated@@263 $generated@@264))  (and ($generated@@80 $generated@@265 $generated@@263) ($generated@@80 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@179 ($generated@@260 $generated@@265 $generated@@266) ($generated@@182 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@183) (= (type $generated@@268) $generated@@183)) (= ($generated@@189 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@189 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@67)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@272) $generated@@67)) (= ($generated@@179 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@79) ($generated@@0 ($generated@@77 $generated@@271 $generated@@273))) ($generated@@80 $generated@@273 $generated@@272))
 :pattern ( ($generated@@77 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@179 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@67)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@277) $generated@@67)) (= ($generated@@179 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@79) ($generated@@0 ($generated@@77 $generated@@276 $generated@@278))) ($generated@@80 $generated@@278 $generated@@277))
 :pattern ( ($generated@@77 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@179 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@279 $generated@@280) $generated@@280)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
(= (type ($generated@@281 $generated@@282)) $generated@@283))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= ($generated@@281 $generated@@284) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@67)) (= (type $generated@@289) $generated@@79)) (= (type $generated@@290) $generated@@79)) (= (type $generated@@291) ($generated@@81 $generated@@118 $generated@@119))) ($generated@@285 $generated@@291)) (= ($generated@@116 ($generated@@260 $generated@@289 $generated@@290) ($generated@@182 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@116 ($generated@@260 $generated@@289 $generated@@290) ($generated@@182 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@71)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@183) (= ($generated@@181 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@183) ($generated@@181 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@79) (= (type $generated@@297) $generated@@79)) (= $generated@@295 ($generated@@260 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@181 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 18)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@79)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@67) (= (type $generated@@310) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@286 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@116 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@286 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@81 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@82 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@81 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@77 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@317 $generated@@318 $generated@@319)) ($generated@@149 $generated@@318 $generated@@319))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@77 ($generated@@147 ($generated@@317 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@77 ($generated@@147 ($generated@@317 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@81 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@77 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@77 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@82 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@81 $generated@@342 $generated@@2)) (= ($generated@@197 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@77 $generated@@341 $generated@@343))) (<= ($generated ($generated@@77 $generated@@341 $generated@@343)) ($generated@@311 $generated@@341))))
 :pattern ( ($generated@@77 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@197 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@79) ($generated@@80 $generated@@347 $generated@@143)) (and (= ($generated@@306 ($generated@@344 $generated@@118 $generated@@347)) $generated@@347) ($generated@@179 ($generated@@344 $generated@@118 $generated@@347) $generated@@143)))
 :pattern ( ($generated@@80 $generated@@347 $generated@@143))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@79) ($generated@@80 $generated@@348 $generated@@257)) (and (= ($generated@@306 ($generated@@344 $generated@@118 $generated@@348)) $generated@@348) ($generated@@179 ($generated@@344 $generated@@118 $generated@@348) $generated@@257)))
 :pattern ( ($generated@@80 $generated@@348 $generated@@257))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@118) (= ($generated@@179 $generated@@349 $generated@@257)  (and ($generated@@179 $generated@@349 $generated@@143) (not (= $generated@@349 $generated@@144)))))
 :pattern ( ($generated@@179 $generated@@349 $generated@@257))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@151 (type $generated@@350))))
(let (($generated@@352 ($generated@@150 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@149 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@317 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@77 ($generated@@147 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@147 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@151 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@81 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@151 (type $generated@@357))))
(let (($generated@@359 ($generated@@150 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@149 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@77 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@327 (type $generated@@361))))
(let (($generated@@363 ($generated@@326 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@325 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@324 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@77 ($generated@@323 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@323 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@81 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@327 (type $generated@@368))))
(let (($generated@@370 ($generated@@326 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@325 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@324 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@77 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@179 $generated@@372 ($generated@@196 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (< 0 ($generated ($generated@@77 $generated@@372 $generated@@374)))) ($generated@@80 $generated@@374 $generated@@373))
 :pattern ( ($generated@@77 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@179 $generated@@372 ($generated@@196 $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@81 $generated@@79 $generated@@79))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@79) (= (type $generated@@378) $generated@@79)) (= ($generated@@77 ($generated@@375 $generated@@377) $generated@@378) $generated@@377))
 :pattern ( ($generated@@77 ($generated@@375 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@379 ($generated@@269 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@79) ($generated@@0 ($generated@@77 $generated@@379 $generated@@382))) ($generated@@286 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@77 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@116 $generated@@379 ($generated@@269 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@383 ($generated@@274 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@79) ($generated@@0 ($generated@@77 $generated@@383 $generated@@386))) ($generated@@286 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@77 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@116 $generated@@383 ($generated@@274 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@77 ($generated@@312 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@77 ($generated@@312 $generated@@388) $generated@@387)))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@392) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@389 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@77 ($generated@@147 $generated@@391) ($generated@@190 ($generated@@344 $generated@@183 $generated@@392)))) (= ($generated@@77 ($generated@@170 $generated@@391) ($generated@@190 ($generated@@344 $generated@@183 $generated@@392))) ($generated@@191 ($generated@@344 $generated@@183 $generated@@392))))))
 :pattern ( ($generated@@77 ($generated@@389 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@327 (type $generated@@396))))
(let (($generated@@398 ($generated@@326 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@81 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@400) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@77 ($generated@@323 $generated@@399) ($generated@@190 ($generated@@344 $generated@@183 $generated@@400)))) (= ($generated@@77 ($generated@@394 $generated@@399) ($generated@@190 ($generated@@344 $generated@@183 $generated@@400))) ($generated@@191 ($generated@@344 $generated@@183 $generated@@400))))))
 :pattern ( ($generated@@77 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@150 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@149 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@77 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@77 ($generated@@147 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@77 ($generated@@170 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@77 ($generated@@147 $generated@@401) $generated@@405))
 :pattern ( ($generated@@77 ($generated@@170 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@77 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@326 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@325 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@77 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@77 ($generated@@323 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@77 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@77 ($generated@@323 $generated@@406) $generated@@410))
 :pattern ( ($generated@@77 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@77 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@147 $generated@@414) $generated@@418))) (and ($generated@@286 ($generated@@77 ($generated@@170 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@286 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@77 ($generated@@170 $generated@@414) $generated@@418))
 :pattern ( ($generated@@77 ($generated@@147 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@116 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@67)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@323 $generated@@422) $generated@@426))) (and ($generated@@286 ($generated@@77 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@286 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@77 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@77 ($generated@@323 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@116 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 Int) ($generated@@429 Int) ) (! (= ($generated@@427 $generated@@428 $generated@@429) (div $generated@@428 $generated@@429))
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@81 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@327 (type $generated@@432))))
(let (($generated@@434 ($generated@@326 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@325 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@324 $generated@@434 $generated@@433)) (= ($generated@@323 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@323 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@393 $generated@@438) ($generated@@430 $generated@@79))))))
 :pattern ( ($generated@@393 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@151 (type $generated@@441))))
(let (($generated@@443 ($generated@@150 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@149 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@317 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@79) (= (type $generated@@445) $generated@@79)) ($generated@@0 ($generated@@77 ($generated@@389 $generated@@441) ($generated@@306 ($generated@@260 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@389 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@327 (type $generated@@446))))
(let (($generated@@448 ($generated@@326 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@325 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@324 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@79) (= (type $generated@@450) $generated@@79)) ($generated@@0 ($generated@@77 ($generated@@393 $generated@@446) ($generated@@306 ($generated@@260 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@393 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@79) ($generated@@80 $generated@@451 $generated@@46)) (and (= ($generated@@306 ($generated@@344 $generated@@2 $generated@@451)) $generated@@451) ($generated@@179 ($generated@@344 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@80 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@79) ($generated@@80 $generated@@452 $generated@@47)) (and (= ($generated@@306 ($generated@@344 $generated@@3 $generated@@452)) $generated@@452) ($generated@@179 ($generated@@344 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@80 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@79) ($generated@@80 $generated@@453 $generated@@44)) (and (= ($generated@@306 ($generated@@344 $generated@@4 $generated@@453)) $generated@@453) ($generated@@179 ($generated@@344 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@80 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@79) ($generated@@80 $generated@@455 $generated@@45)) (and (= ($generated@@306 ($generated@@344 $generated@@454 $generated@@455)) $generated@@455) ($generated@@179 ($generated@@344 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@80 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@80 ($generated@@306 $generated@@456) $generated@@457) ($generated@@179 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@80 ($generated@@306 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@82 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@81 $generated@@459 $generated@@2)) (<= 0 ($generated@@311 $generated@@458))))
 :pattern ( ($generated@@311 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@301 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@300 $generated@@461)) (<= 0 ($generated@@299 $generated@@460))))
 :pattern ( ($generated@@299 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@411 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@411 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@411 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@411 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@75 ($generated@@411 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@419 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@419 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@419 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@419 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@75 ($generated@@419 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@79) (= (type $generated@@483) $generated@@79)) (= ($generated@@292 ($generated@@260 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@260 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@182 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@182 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@182 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@79) (= (type $generated@@493) $generated@@79)) (= ($generated@@190 ($generated@@260 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@260 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@79) (= (type $generated@@495) $generated@@79)) (= ($generated@@191 ($generated@@260 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@260 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@301 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@300 $generated@@79)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@299 $generated@@502))) ($generated@@286 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@116 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@117 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@117 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@508 ($generated@@269 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@269 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@75 ($generated@@269 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@274 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@274 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@274 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@196 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@196 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@196 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@344 $generated@@525 ($generated@@306 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@306 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) (= ($generated@@179 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@147 $generated@@526) $generated@@529))) (and ($generated@@80 ($generated@@77 ($generated@@170 $generated@@526) $generated@@529) $generated@@528) ($generated@@80 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@77 ($generated@@170 $generated@@526) $generated@@529))
 :pattern ( ($generated@@77 ($generated@@147 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@179 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) (= ($generated@@179 $generated@@530 ($generated@@419 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@323 $generated@@530) $generated@@533))) (and ($generated@@80 ($generated@@77 ($generated@@394 $generated@@530) $generated@@533) $generated@@532) ($generated@@80 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@77 ($generated@@394 $generated@@530) $generated@@533))
 :pattern ( ($generated@@77 ($generated@@323 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@179 $generated@@530 ($generated@@419 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@79)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@260 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@260 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@79) (= (type $generated@@539) $generated@@79)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@260 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@260 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@79) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) ($generated@@80 $generated@@540 ($generated@@411 $generated@@541 $generated@@542))) (and (= ($generated@@306 ($generated@@344 ($generated@@149 $generated@@79 $generated@@79) $generated@@540)) $generated@@540) ($generated@@179 ($generated@@344 ($generated@@149 $generated@@79 $generated@@79) $generated@@540) ($generated@@411 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@80 $generated@@540 ($generated@@411 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@79) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) $generated@@67)) ($generated@@80 $generated@@543 ($generated@@419 $generated@@544 $generated@@545))) (and (= ($generated@@306 ($generated@@344 ($generated@@325 $generated@@79 $generated@@79) $generated@@543)) $generated@@543) ($generated@@179 ($generated@@344 ($generated@@325 $generated@@79 $generated@@79) $generated@@543) ($generated@@419 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@80 $generated@@543 ($generated@@419 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@79)) ($generated@@80 $generated@@548 ($generated@@182 $generated@@546 $generated@@547))) (and (= ($generated@@306 ($generated@@344 $generated@@183 $generated@@548)) $generated@@548) ($generated@@179 ($generated@@344 $generated@@183 $generated@@548) ($generated@@182 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@80 $generated@@548 ($generated@@182 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@77 ($generated@@430 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@77 ($generated@@430 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@551) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@552) ($generated@@81 $generated@@79 $generated@@79))) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@79) ($generated@@0 ($generated@@77 $generated@@551 $generated@@555))) (and ($generated@@80 $generated@@555 $generated@@553) ($generated@@80 ($generated@@77 $generated@@552 $generated@@555) $generated@@554)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))) ($generated@@179 ($generated@@148 $generated@@551 $generated@@552 ($generated@@411 $generated@@553 $generated@@554)) ($generated@@411 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@148 $generated@@551 $generated@@552 ($generated@@411 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@72)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (and (= ($generated@@75 ($generated@@182 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@182 $generated@@558 $generated@@559)) $generated@@65)))
 :pattern ( ($generated@@182 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@183) (= ($generated@@534 ($generated@@306 $generated@@560)) ($generated@@535 $generated@@560)))
 :pattern ( ($generated@@534 ($generated@@306 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@79) ($generated@@80 $generated@@561 ($generated@@117 0))) (and (= ($generated@@306 ($generated@@344 $generated@@2 $generated@@561)) $generated@@561) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@561) ($generated@@117 0))))
 :pattern ( ($generated@@80 $generated@@561 ($generated@@117 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@79) (= (type $generated@@563) $generated@@67)) ($generated@@80 $generated@@562 ($generated@@269 $generated@@563))) (and (= ($generated@@306 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@562)) $generated@@562) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@562) ($generated@@269 $generated@@563))))
 :pattern ( ($generated@@80 $generated@@562 ($generated@@269 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@79) (= (type $generated@@565) $generated@@67)) ($generated@@80 $generated@@564 ($generated@@274 $generated@@565))) (and (= ($generated@@306 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@564)) $generated@@564) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@564) ($generated@@274 $generated@@565))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@274 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@79) (= (type $generated@@567) $generated@@67)) ($generated@@80 $generated@@566 ($generated@@196 $generated@@567))) (and (= ($generated@@306 ($generated@@344 ($generated@@81 $generated@@79 $generated@@2) $generated@@566)) $generated@@566) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@2) $generated@@566) ($generated@@196 $generated@@567))))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@196 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@79) (= (type $generated@@569) $generated@@67)) ($generated@@80 $generated@@568 ($generated@@496 $generated@@569))) (and (= ($generated@@306 ($generated@@344 ($generated@@300 $generated@@79) $generated@@568)) $generated@@568) ($generated@@179 ($generated@@344 ($generated@@300 $generated@@79) $generated@@568) ($generated@@496 $generated@@569))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@496 $generated@@569)))
)))
(assert (= ($generated@@75 $generated@@143) $generated@@63))
(assert (= ($generated@@556 $generated@@143) $generated@@66))
(assert (= ($generated@@75 $generated@@257) $generated@@64))
(assert (= ($generated@@556 $generated@@257) $generated@@66))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@570 ($generated@@196 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@79) (< 0 ($generated ($generated@@77 $generated@@570 $generated@@573)))) ($generated@@286 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@77 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@116 $generated@@570 ($generated@@196 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@118) (= ($generated@@179 $generated@@577 $generated@@143)  (or (= $generated@@577 $generated@@144) ($generated@@574 ($generated@@575 $generated@@577)))))
 :pattern ( ($generated@@179 $generated@@577 $generated@@143))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@183) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) ($generated@@81 $generated@@118 $generated@@119))) (and ($generated@@285 $generated@@580) (and ($generated@@181 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@67) ($generated@@116 $generated@@578 ($generated@@182 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@116 $generated@@578 ($generated@@182 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@286 ($generated@@190 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@286 ($generated@@190 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@183) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@81 $generated@@118 $generated@@119))) (and ($generated@@285 $generated@@584) (and ($generated@@181 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@67) ($generated@@116 $generated@@582 ($generated@@182 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@116 $generated@@582 ($generated@@182 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@286 ($generated@@191 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@286 ($generated@@191 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@79) (= (type $generated@@587) $generated@@79)) (= ($generated@@260 ($generated@@281 $generated@@586) ($generated@@281 $generated@@587)) ($generated@@281 ($generated@@260 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@260 ($generated@@281 $generated@@586) ($generated@@281 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@279 $generated@@588))) ($generated@@281 ($generated@@306 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@279 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@306 ($generated@@281 $generated@@589)) ($generated@@281 ($generated@@306 $generated@@589)))
 :pattern ( ($generated@@306 ($generated@@281 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@301 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@300 $generated@@591)) (= ($generated@@299 $generated@@590) 0)) (= $generated@@590 ($generated@@298 $generated@@591))))
 :pattern ( ($generated@@299 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@81 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@311 ($generated@@84 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@311 $generated@@592) ($generated ($generated@@77 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@311 ($generated@@84 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@597) $generated@@2)) ($generated@@116 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@116 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@599) $generated@@3)) ($generated@@116 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@116 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@601) $generated@@4)) ($generated@@116 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@116 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@603) $generated@@454)) ($generated@@116 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@116 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@605) $generated@@79)) ($generated@@116 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@116 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@300 $generated@@79)) (= (type $generated@@607) $generated@@67)) (= ($generated@@179 $generated@@606 ($generated@@496 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@299 $generated@@606))) ($generated@@80 ($generated@@497 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@497 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@179 $generated@@606 ($generated@@496 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@300 $generated@@79)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@299 $generated@@610))) (< ($generated@@535 ($generated@@344 $generated@@183 ($generated@@497 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@535 ($generated@@344 $generated@@183 ($generated@@497 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@179 $generated@@612 ($generated@@411 $generated@@613 $generated@@614))) (and (and ($generated@@179 ($generated@@147 $generated@@612) ($generated@@269 $generated@@613)) ($generated@@179 ($generated@@354 $generated@@612) ($generated@@269 $generated@@614))) ($generated@@179 ($generated@@389 $generated@@612) ($generated@@269 ($generated@@182 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@179 $generated@@612 ($generated@@411 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@179 $generated@@615 ($generated@@419 $generated@@616 $generated@@617))) (and (and ($generated@@179 ($generated@@323 $generated@@615) ($generated@@274 $generated@@616)) ($generated@@179 ($generated@@365 $generated@@615) ($generated@@274 $generated@@617))) ($generated@@179 ($generated@@393 $generated@@615) ($generated@@274 ($generated@@182 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@179 $generated@@615 ($generated@@419 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@179 $generated@@618 $generated@@46))
 :pattern ( ($generated@@179 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@179 $generated@@619 $generated@@47))
 :pattern ( ($generated@@179 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@179 $generated@@620 $generated@@44))
 :pattern ( ($generated@@179 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@454) ($generated@@179 $generated@@621 $generated@@45))
 :pattern ( ($generated@@179 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@79) ($generated@@179 $generated@@622 $generated@@48))
 :pattern ( ($generated@@179 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (and (and (= (type $generated@@623) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@624) $generated@@118)) (= (type $generated@@625) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@626) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@628) ($generated@@203 $generated@@118 $generated@@4))) (= (type $generated@@629) ($generated@@149 $generated@@79 $generated@@79))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@631  (=> (and (= $generated@@623 ($generated@@148 ($generated@@78 $generated@@257 (= ($generated@@279 ($generated@@427 5 ($generated@@279 0))) ($generated@@279 19))) ($generated@@375 ($generated@@306 ($generated@@8 ($generated@@279 102)))) ($generated@@411 $generated@@257 $generated@@46))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@279 0) 0)))))
(let (($generated@@632  (=> (and (not (= ($generated@@279 ($generated@@427 5 ($generated@@279 0))) ($generated@@279 19))) (= (ControlFlow 0 5) 2)) $generated@@631)))
(let (($generated@@633  (=> (and (= ($generated@@279 ($generated@@427 5 ($generated@@279 0))) ($generated@@279 19)) (= (ControlFlow 0 4) 2)) $generated@@631)))
(let (($generated@@634  (=> (and ($generated@@179 $generated@@624 $generated@@257) ($generated@@116 $generated@@624 $generated@@257 $generated@@625)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (not (= $generated@@624 $generated@@144))) (=> (not (= $generated@@624 $generated@@144)) (=> (and (and ($generated@@285 $generated@@626) ($generated@@627 $generated@@626)) (and ($generated@@0 ($generated@@281 ($generated@@11 false))) (= $generated@@625 $generated@@626))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= ($generated@@279 0) 0))) (=> (not (= ($generated@@279 0) 0)) (and (=> (= (ControlFlow 0 6) 4) $generated@@633) (=> (= (ControlFlow 0 6) 5) $generated@@632))))))))))
(let (($generated@@635  (=> (and (not (and ($generated@@179 $generated@@624 $generated@@257) ($generated@@116 $generated@@624 $generated@@257 $generated@@625))) (= (ControlFlow 0 3) 2)) $generated@@631)))
(let (($generated@@636  (=> (= $generated@@628 ($generated@@202 $generated@@144 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 6) $generated@@634) (=> (= (ControlFlow 0 9) 3) $generated@@635)))))
(let (($generated@@637  (=> (and ($generated@@285 $generated@@625) ($generated@@627 $generated@@625)) (=> (and (and (and ($generated@@179 $generated@@629 ($generated@@411 $generated@@257 $generated@@46)) ($generated@@116 $generated@@629 ($generated@@411 $generated@@257 $generated@@46) $generated@@625)) true) (and (= 1 $generated@@630) (= (ControlFlow 0 10) 9))) $generated@@636))))
$generated@@637))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (Int Int) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@T T@U) T@U)
(declare-fun $generated@@176 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@169 Int) ($generated@@170 Int) ) (! (= ($generated@@168 $generated@@169 $generated@@170) (div $generated@@169 $generated@@170))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@171) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@172) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@173) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@171 $generated@@173))) (and ($generated@@44 $generated@@171 $generated@@172) ($generated@@44 $generated@@172 $generated@@173))) ($generated@@44 $generated@@171 $generated@@173))
 :pattern ( ($generated@@44 $generated@@171 $generated@@172) ($generated@@44 $generated@@172 $generated@@173))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 11) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@U) ) (! (= (type ($generated@@175 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@175 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(= ($generated@@175 $generated@@181 ($generated@@174 $generated@@180)) $generated@@180))
 :pattern ( ($generated@@174 $generated@@180))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@174 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@174 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@174 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@174 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@174 $generated@@183)))
 :pattern ( ($generated@@174 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(assert  (and (and (and (and (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@185) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@187) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@192  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@162 0) 0)))))
(let (($generated@@193  (=> (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (=> (and (and ($generated@@0 ($generated@@164 ($generated@@11 false))) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@46) (=> (and (not (= $generated@@194 $generated@@187)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@194) $generated@@50))) (= ($generated@@49 $generated@@185 $generated@@194) ($generated@@49 $generated@@188 $generated@@194))))
 :pattern ( ($generated@@49 $generated@@185 $generated@@194))
))) (and ($generated@@44 $generated@@188 $generated@@185) (= (ControlFlow 0 4) 2))) $generated@@192))))
(let (($generated@@195  (=> (and (and (and ($generated@@184 $generated@@189) ($generated@@186 $generated@@189)) ($generated@@0 ($generated@@164 ($generated@@11 false)))) (and (= $generated@@188 $generated@@189) (= (ControlFlow 0 3) 2))) $generated@@192)))
(let (($generated@@196  (=> (= $generated@@190 ($generated@@107 $generated@@187 $generated@@188 $generated@@50 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@195) (=> (= (ControlFlow 0 5) 4) $generated@@193)))))
(let (($generated@@197  (=> (and (and ($generated@@184 $generated@@188) ($generated@@186 $generated@@188)) (and (= 2 $generated@@191) (= (ControlFlow 0 6) 5))) $generated@@196)))
$generated@@197))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () Bool)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 (Int Int) Int)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (= (type $generated@@271) $generated@@64))
(assert ($generated@@270 $generated@@271))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@145)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@74 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) (= $generated@@285 ($generated@@243 ($generated@@286 40 ($generated@@243 0)))))))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) (= $generated@@285 ($generated@@243 ($generated@@286 40 ($generated@@243 0)))))))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@151 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@151 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@224 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@250 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@278 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@363 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@309 (type $generated@@375))))
(let (($generated@@377 ($generated@@308 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@290 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@289 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@308 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@307 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@250 ($generated@@81 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@250 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))) (and ($generated@@250 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@250 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 Int) ($generated@@407 Int) ) (! (= ($generated@@286 $generated@@406 $generated@@407) (div $generated@@406 $generated@@407))
 :pattern ( ($generated@@286 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) true)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@309 (type $generated@@410))))
(let (($generated@@412 ($generated@@308 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@307 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@306 $generated@@412 $generated@@411)) (= ($generated@@305 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@305 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@309 (type $generated@@413))))
(let (($generated@@415 ($generated@@308 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@307 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@306 $generated@@415 $generated@@414)) (= ($generated@@341 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@341 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@309 (type $generated@@416))))
(let (($generated@@418 ($generated@@308 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@307 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@306 $generated@@418 $generated@@417)) (= ($generated@@372 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@372 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@291 (type $generated@@419))))
(let (($generated@@421 ($generated@@290 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@289 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@288 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@419) ($generated@@272 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@361 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@309 (type $generated@@424))))
(let (($generated@@426 ($generated@@308 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@307 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@306 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@424) ($generated@@272 ($generated@@223 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@372 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@46)) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@362 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@47)) (and (= ($generated@@272 ($generated@@362 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@362 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@44)) (and (= ($generated@@272 ($generated@@362 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@362 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@45)) (and (= ($generated@@272 ($generated@@362 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@362 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@224 ($generated@@272 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@224 ($generated@@272 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@277 $generated@@436))))
 :pattern ( ($generated@@277 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@265 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@264 $generated@@439)) (<= 0 ($generated@@263 $generated@@438))))
 :pattern ( ($generated@@263 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) ($generated@@270 $generated@@440)) (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@442) $generated@@145)) ($generated@@224 $generated@@442 $generated@@440)) ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
)))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@390 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@390 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@398 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@265 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@264 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@263 $generated@@483))) ($generated@@250 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@233 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@238 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@362 $generated@@506 ($generated@@272 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@272 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@507) $generated@@510))) (and ($generated@@224 ($generated@@81 ($generated@@363 $generated@@507) $generated@@510) $generated@@509) ($generated@@224 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@223 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@223 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523))) (and (= ($generated@@272 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@521) ($generated@@390 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@272 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@145)) ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@362 $generated@@136 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@362 $generated@@136 $generated@@529) ($generated@@135 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@135 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@515 ($generated@@272 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@272 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@233 $generated@@539))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@233 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@238 $generated@@541))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@238 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@238 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@477 $generated@@545))) (and (= ($generated@@272 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544) ($generated@@477 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@477 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@250 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)) ($generated@@245 ($generated@@223 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))) ($generated@@245 ($generated@@272 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@561)) ($generated@@245 ($generated@@272 $generated@@561)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@265 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@264 $generated@@563)) (= ($generated@@263 $generated@@562) 0)) (= $generated@@562 ($generated@@262 $generated@@563))))
 :pattern ( ($generated@@263 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@277 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@264 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@263 $generated@@578))) ($generated@@224 ($generated@@478 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@478 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@263 $generated@@582))) (< ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@287 $generated@@584) ($generated@@233 $generated@@585)) ($generated@@132 ($generated@@330 $generated@@584) ($generated@@233 $generated@@586))) ($generated@@132 ($generated@@361 $generated@@584) ($generated@@233 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@305 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@132 ($generated@@341 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@132 ($generated@@372 $generated@@587) ($generated@@238 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () Bool)
(declare-fun $generated@@596 () Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@604  (=> (and (and (= $generated@@595 (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@145) ($generated@@224 $generated@@605 $generated@@271)) (= ($generated@@243 ($generated@@286 5 ($generated@@243 0))) ($generated@@243 19)))
 :no-pattern (type $generated@@605)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
))) ($generated@@132 ($generated@@11 $generated@@595) $generated@@44)) (and (= $generated@@596 $generated@@595) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@243 0) 0)))))
(let (($generated@@606  (=> (and (not (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598))) (= (ControlFlow 0 6) 3)) $generated@@604)))
(let (($generated@@607  (=> (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598)) (=> (and (and ($generated@@249 $generated@@599) ($generated@@600 $generated@@599)) (and ($generated@@0 ($generated@@245 ($generated@@11 false))) (= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@243 0) 0))) (=> (not (= ($generated@@243 0) 0)) (=> (= (ControlFlow 0 4) 3) $generated@@604)))))))
(let (($generated@@608  (=> (= $generated@@601 ($generated@@211 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 4) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@603 ($generated@@156 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@609) (=> (= (ControlFlow 0 8) 7) $generated@@608)))))
(let (($generated@@611  (=> (and (and ($generated@@249 $generated@@598) ($generated@@600 $generated@@598)) (and (= 1 $generated@@283) (= (ControlFlow 0 9) 8))) $generated@@610)))
$generated@@611))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U Bool) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) Bool)
(declare-fun $generated@@117 (Int) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T) T@T)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (Int) Int)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (Int Int) Int)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Bool)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@85 $generated@@86)) 12))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@81 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@83 ($generated@@81 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@81 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@83 (type $generated@@91))))
(= (type ($generated@@77 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@77 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@84 $generated@@94 $generated@@95 $generated@@96)) ($generated@@81 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@83 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@77 ($generated@@84 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@77 ($generated@@84 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@77 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@77 ($generated@@84 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@77 $generated@@108 $generated@@110)))
 :weight 0
)))) (forall (($generated@@111 T@U) ($generated@@112 Bool) ) (! (= (type ($generated@@78 $generated@@111 $generated@@112)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@78 $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 Bool) ($generated@@115 T@U) ) (!  (=> (and (= (type $generated@@113) $generated@@67) (= (type $generated@@115) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@78 $generated@@113 $generated@@114) $generated@@115))  (and ($generated@@80 $generated@@115 $generated@@113) $generated@@114)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@113 $generated@@114) $generated@@115))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@118) 13) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@123))))
(= (type ($generated@@120 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@120 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@119) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@121 $generated@@125 $generated@@126 $generated@@127)) $generated@@119)
 :pattern ( ($generated@@121 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@70 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@120 ($generated@@121 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@120 ($generated@@121 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@120 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@120 ($generated@@121 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@120 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@117 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@117 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@81 $generated@@118 $generated@@119))) ($generated@@116 $generated@@141 ($generated@@117 0) $generated@@142))
 :pattern ( ($generated@@116 $generated@@141 ($generated@@117 0) $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@118)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@118) (= (type $generated@@146) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@120 ($generated@@77 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@116 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@152 $generated@@153)) 15)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@150 ($generated@@149 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@149 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@151 ($generated@@149 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@149 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (let (($generated@@159 ($generated@@150 (type $generated@@158))))
(= (type ($generated@@147 $generated@@158)) ($generated@@81 $generated@@159 $generated@@4)))
 :pattern ( ($generated@@147 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@83 (type $generated@@161))))
(let (($generated@@164 ($generated@@82 (type $generated@@160))))
(= (type ($generated@@148 $generated@@160 $generated@@161 $generated@@162)) ($generated@@149 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@160 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@83 (type $generated@@166))))
(let (($generated@@169 ($generated@@82 (type $generated@@165))))
 (=> (and (and (= (type $generated@@165) ($generated@@81 $generated@@169 $generated@@4)) (= (type $generated@@166) ($generated@@81 $generated@@169 $generated@@168))) (= (type $generated@@167) $generated@@67)) (= ($generated@@147 ($generated@@148 $generated@@165 $generated@@166 $generated@@167)) $generated@@165))))
 :pattern ( ($generated@@147 ($generated@@148 $generated@@165 $generated@@166 $generated@@167)))
)))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@151 (type $generated@@171))))
(let (($generated@@173 ($generated@@150 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171)) ($generated@@81 $generated@@173 $generated@@172))))
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@83 (type $generated@@175))))
(let (($generated@@178 ($generated@@82 (type $generated@@174))))
 (=> (and (and (= (type $generated@@174) ($generated@@81 $generated@@178 $generated@@4)) (= (type $generated@@175) ($generated@@81 $generated@@178 $generated@@177))) (= (type $generated@@176) $generated@@67)) (= ($generated@@170 ($generated@@148 $generated@@174 $generated@@175 $generated@@176)) $generated@@175))))
 :pattern ( ($generated@@170 ($generated@@148 $generated@@174 $generated@@175 $generated@@176)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@179 $generated@@180 ($generated@@117 0)))
 :pattern ( ($generated@@179 $generated@@180 ($generated@@117 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 16) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@183)) ($generated@@179 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@179 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@79)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@79)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@200) $generated@@67)) ($generated@@179 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@179 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 17)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@118 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@70 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@118) (= (type $generated@@251) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@252) ($generated@@69 $generated@@4))) (= (type $generated@@254) $generated@@118)) (= (type $generated@@255) ($generated@@69 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@120 ($generated@@77 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (= (type $generated@@257) $generated@@67))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@118) (= (type $generated@@259) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@258 $generated@@257 $generated@@259) ($generated@@116 $generated@@258 $generated@@143 $generated@@259)))
 :pattern ( ($generated@@116 $generated@@258 $generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@261 $generated@@262)) $generated@@183)
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@79)) (= (type $generated@@266) $generated@@79)) (= ($generated@@179 ($generated@@260 $generated@@265 $generated@@266) ($generated@@182 $generated@@263 $generated@@264))  (and ($generated@@80 $generated@@265 $generated@@263) ($generated@@80 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@179 ($generated@@260 $generated@@265 $generated@@266) ($generated@@182 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@183) (= (type $generated@@268) $generated@@183)) (= ($generated@@189 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@189 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@67)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@272) $generated@@67)) (= ($generated@@179 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@79) ($generated@@0 ($generated@@77 $generated@@271 $generated@@273))) ($generated@@80 $generated@@273 $generated@@272))
 :pattern ( ($generated@@77 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@179 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@67)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@277) $generated@@67)) (= ($generated@@179 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@79) ($generated@@0 ($generated@@77 $generated@@276 $generated@@278))) ($generated@@80 $generated@@278 $generated@@277))
 :pattern ( ($generated@@77 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@179 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@279 $generated@@280) $generated@@280)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
(= (type ($generated@@281 $generated@@282)) $generated@@283))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= ($generated@@281 $generated@@284) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@67) (= (type $generated@@288) $generated@@67)) (= (type $generated@@289) $generated@@79)) (= (type $generated@@290) $generated@@79)) (= (type $generated@@291) ($generated@@81 $generated@@118 $generated@@119))) ($generated@@285 $generated@@291)) (= ($generated@@116 ($generated@@260 $generated@@289 $generated@@290) ($generated@@182 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@116 ($generated@@260 $generated@@289 $generated@@290) ($generated@@182 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@71)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@183) (= ($generated@@181 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@183) ($generated@@181 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@79) (= (type $generated@@297) $generated@@79)) (= $generated@@295 ($generated@@260 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@181 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 18)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@79)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@67) (= (type $generated@@310) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@286 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@116 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@286 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@81 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@82 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@81 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@77 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@317 $generated@@318 $generated@@319)) ($generated@@149 $generated@@318 $generated@@319))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@77 ($generated@@147 ($generated@@317 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@77 ($generated@@147 ($generated@@317 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@81 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@77 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@77 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@82 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@81 $generated@@342 $generated@@2)) (= ($generated@@197 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@77 $generated@@341 $generated@@343))) (<= ($generated ($generated@@77 $generated@@341 $generated@@343)) ($generated@@311 $generated@@341))))
 :pattern ( ($generated@@77 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@197 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@79) ($generated@@80 $generated@@347 $generated@@143)) (and (= ($generated@@306 ($generated@@344 $generated@@118 $generated@@347)) $generated@@347) ($generated@@179 ($generated@@344 $generated@@118 $generated@@347) $generated@@143)))
 :pattern ( ($generated@@80 $generated@@347 $generated@@143))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@79) ($generated@@80 $generated@@348 $generated@@257)) (and (= ($generated@@306 ($generated@@344 $generated@@118 $generated@@348)) $generated@@348) ($generated@@179 ($generated@@344 $generated@@118 $generated@@348) $generated@@257)))
 :pattern ( ($generated@@80 $generated@@348 $generated@@257))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@118) (= ($generated@@179 $generated@@349 $generated@@257)  (and ($generated@@179 $generated@@349 $generated@@143) (not (= $generated@@349 $generated@@144)))))
 :pattern ( ($generated@@179 $generated@@349 $generated@@257))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@151 (type $generated@@350))))
(let (($generated@@352 ($generated@@150 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@149 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@317 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@77 ($generated@@147 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@147 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@151 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@81 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@151 (type $generated@@357))))
(let (($generated@@359 ($generated@@150 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@149 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@77 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@327 (type $generated@@361))))
(let (($generated@@363 ($generated@@326 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@325 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@324 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@77 ($generated@@323 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@323 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@81 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@327 (type $generated@@368))))
(let (($generated@@370 ($generated@@326 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@325 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@324 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@77 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@179 $generated@@372 ($generated@@196 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (< 0 ($generated ($generated@@77 $generated@@372 $generated@@374)))) ($generated@@80 $generated@@374 $generated@@373))
 :pattern ( ($generated@@77 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@179 $generated@@372 ($generated@@196 $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@81 $generated@@79 $generated@@79))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@79) (= (type $generated@@378) $generated@@79)) (= ($generated@@77 ($generated@@375 $generated@@377) $generated@@378) $generated@@377))
 :pattern ( ($generated@@77 ($generated@@375 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@379 ($generated@@269 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@79) ($generated@@0 ($generated@@77 $generated@@379 $generated@@382))) ($generated@@286 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@77 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@116 $generated@@379 ($generated@@269 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@383 ($generated@@274 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@79) ($generated@@0 ($generated@@77 $generated@@383 $generated@@386))) ($generated@@286 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@77 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@116 $generated@@383 ($generated@@274 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@77 ($generated@@312 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@77 ($generated@@312 $generated@@388) $generated@@387)))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@392) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@389 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@77 ($generated@@147 $generated@@391) ($generated@@190 ($generated@@344 $generated@@183 $generated@@392)))) (= ($generated@@77 ($generated@@170 $generated@@391) ($generated@@190 ($generated@@344 $generated@@183 $generated@@392))) ($generated@@191 ($generated@@344 $generated@@183 $generated@@392))))))
 :pattern ( ($generated@@77 ($generated@@389 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@81 $generated@@79 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@327 (type $generated@@396))))
(let (($generated@@398 ($generated@@326 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@81 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@400) $generated@@79)) (= ($generated@@0 ($generated@@77 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@77 ($generated@@323 $generated@@399) ($generated@@190 ($generated@@344 $generated@@183 $generated@@400)))) (= ($generated@@77 ($generated@@394 $generated@@399) ($generated@@190 ($generated@@344 $generated@@183 $generated@@400))) ($generated@@191 ($generated@@344 $generated@@183 $generated@@400))))))
 :pattern ( ($generated@@77 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@150 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@149 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@77 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@77 ($generated@@147 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@77 ($generated@@170 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@77 ($generated@@147 $generated@@401) $generated@@405))
 :pattern ( ($generated@@77 ($generated@@170 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@77 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@326 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@325 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@77 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@77 ($generated@@323 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@77 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@77 ($generated@@323 $generated@@406) $generated@@410))
 :pattern ( ($generated@@77 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@77 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@147 $generated@@414) $generated@@418))) (and ($generated@@286 ($generated@@77 ($generated@@170 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@286 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@77 ($generated@@170 $generated@@414) $generated@@418))
 :pattern ( ($generated@@77 ($generated@@147 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@116 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@67)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@323 $generated@@422) $generated@@426))) (and ($generated@@286 ($generated@@77 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@286 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@77 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@77 ($generated@@323 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@116 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 Int) ($generated@@429 Int) ) (! (= ($generated@@427 $generated@@428 $generated@@429) (div $generated@@428 $generated@@429))
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@81 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@327 (type $generated@@432))))
(let (($generated@@434 ($generated@@326 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@325 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@324 $generated@@434 $generated@@433)) (= ($generated@@323 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@323 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@393 $generated@@438) ($generated@@430 $generated@@79))))))
 :pattern ( ($generated@@393 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@151 (type $generated@@441))))
(let (($generated@@443 ($generated@@150 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@149 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@317 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@79) (= (type $generated@@445) $generated@@79)) ($generated@@0 ($generated@@77 ($generated@@389 $generated@@441) ($generated@@306 ($generated@@260 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@389 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@327 (type $generated@@446))))
(let (($generated@@448 ($generated@@326 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@325 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@324 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@79) (= (type $generated@@450) $generated@@79)) ($generated@@0 ($generated@@77 ($generated@@393 $generated@@446) ($generated@@306 ($generated@@260 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@393 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@79) ($generated@@80 $generated@@451 $generated@@46)) (and (= ($generated@@306 ($generated@@344 $generated@@2 $generated@@451)) $generated@@451) ($generated@@179 ($generated@@344 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@80 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@79) ($generated@@80 $generated@@452 $generated@@47)) (and (= ($generated@@306 ($generated@@344 $generated@@3 $generated@@452)) $generated@@452) ($generated@@179 ($generated@@344 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@80 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@79) ($generated@@80 $generated@@453 $generated@@44)) (and (= ($generated@@306 ($generated@@344 $generated@@4 $generated@@453)) $generated@@453) ($generated@@179 ($generated@@344 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@80 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@79) ($generated@@80 $generated@@455 $generated@@45)) (and (= ($generated@@306 ($generated@@344 $generated@@454 $generated@@455)) $generated@@455) ($generated@@179 ($generated@@344 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@80 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@67) (= ($generated@@80 ($generated@@306 $generated@@456) $generated@@457) ($generated@@179 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@80 ($generated@@306 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@82 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@81 $generated@@459 $generated@@2)) (<= 0 ($generated@@311 $generated@@458))))
 :pattern ( ($generated@@311 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@301 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@300 $generated@@461)) (<= 0 ($generated@@299 $generated@@460))))
 :pattern ( ($generated@@299 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@411 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@411 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@411 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@411 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@75 ($generated@@411 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@419 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@419 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@419 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@419 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@75 ($generated@@419 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@79) (= (type $generated@@483) $generated@@79)) (= ($generated@@292 ($generated@@260 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@260 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@182 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@182 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@182 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@182 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@79) (= (type $generated@@493) $generated@@79)) (= ($generated@@190 ($generated@@260 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@260 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@79) (= (type $generated@@495) $generated@@79)) (= ($generated@@191 ($generated@@260 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@260 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@301 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@300 $generated@@79)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@299 $generated@@502))) ($generated@@286 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@116 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@117 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@117 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@508 ($generated@@269 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@269 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@75 ($generated@@269 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@274 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@274 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@274 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@196 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@196 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@196 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@344 $generated@@525 ($generated@@306 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@306 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) (= ($generated@@179 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@147 $generated@@526) $generated@@529))) (and ($generated@@80 ($generated@@77 ($generated@@170 $generated@@526) $generated@@529) $generated@@528) ($generated@@80 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@77 ($generated@@170 $generated@@526) $generated@@529))
 :pattern ( ($generated@@77 ($generated@@147 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@179 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) (= ($generated@@179 $generated@@530 ($generated@@419 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@79) ($generated@@0 ($generated@@77 ($generated@@323 $generated@@530) $generated@@533))) (and ($generated@@80 ($generated@@77 ($generated@@394 $generated@@530) $generated@@533) $generated@@532) ($generated@@80 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@77 ($generated@@394 $generated@@530) $generated@@533))
 :pattern ( ($generated@@77 ($generated@@323 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@179 $generated@@530 ($generated@@419 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@79)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@260 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@260 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@79) (= (type $generated@@539) $generated@@79)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@260 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@260 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@79) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) ($generated@@80 $generated@@540 ($generated@@411 $generated@@541 $generated@@542))) (and (= ($generated@@306 ($generated@@344 ($generated@@149 $generated@@79 $generated@@79) $generated@@540)) $generated@@540) ($generated@@179 ($generated@@344 ($generated@@149 $generated@@79 $generated@@79) $generated@@540) ($generated@@411 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@80 $generated@@540 ($generated@@411 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@79) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) $generated@@67)) ($generated@@80 $generated@@543 ($generated@@419 $generated@@544 $generated@@545))) (and (= ($generated@@306 ($generated@@344 ($generated@@325 $generated@@79 $generated@@79) $generated@@543)) $generated@@543) ($generated@@179 ($generated@@344 ($generated@@325 $generated@@79 $generated@@79) $generated@@543) ($generated@@419 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@80 $generated@@543 ($generated@@419 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@79)) ($generated@@80 $generated@@548 ($generated@@182 $generated@@546 $generated@@547))) (and (= ($generated@@306 ($generated@@344 $generated@@183 $generated@@548)) $generated@@548) ($generated@@179 ($generated@@344 $generated@@183 $generated@@548) ($generated@@182 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@80 $generated@@548 ($generated@@182 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@77 ($generated@@430 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@77 ($generated@@430 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@551) ($generated@@81 $generated@@79 $generated@@4)) (= (type $generated@@552) ($generated@@81 $generated@@79 $generated@@79))) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@79) ($generated@@0 ($generated@@77 $generated@@551 $generated@@555))) (and ($generated@@80 $generated@@555 $generated@@553) ($generated@@80 ($generated@@77 $generated@@552 $generated@@555) $generated@@554)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))) ($generated@@179 ($generated@@148 $generated@@551 $generated@@552 ($generated@@411 $generated@@553 $generated@@554)) ($generated@@411 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@148 $generated@@551 $generated@@552 ($generated@@411 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@72)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (and (= ($generated@@75 ($generated@@182 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@182 $generated@@558 $generated@@559)) $generated@@65)))
 :pattern ( ($generated@@182 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@183) (= ($generated@@534 ($generated@@306 $generated@@560)) ($generated@@535 $generated@@560)))
 :pattern ( ($generated@@534 ($generated@@306 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@79) ($generated@@80 $generated@@561 ($generated@@117 0))) (and (= ($generated@@306 ($generated@@344 $generated@@2 $generated@@561)) $generated@@561) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@561) ($generated@@117 0))))
 :pattern ( ($generated@@80 $generated@@561 ($generated@@117 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@79) (= (type $generated@@563) $generated@@67)) ($generated@@80 $generated@@562 ($generated@@269 $generated@@563))) (and (= ($generated@@306 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@562)) $generated@@562) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@562) ($generated@@269 $generated@@563))))
 :pattern ( ($generated@@80 $generated@@562 ($generated@@269 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@79) (= (type $generated@@565) $generated@@67)) ($generated@@80 $generated@@564 ($generated@@274 $generated@@565))) (and (= ($generated@@306 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@564)) $generated@@564) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@4) $generated@@564) ($generated@@274 $generated@@565))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@274 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@79) (= (type $generated@@567) $generated@@67)) ($generated@@80 $generated@@566 ($generated@@196 $generated@@567))) (and (= ($generated@@306 ($generated@@344 ($generated@@81 $generated@@79 $generated@@2) $generated@@566)) $generated@@566) ($generated@@179 ($generated@@344 ($generated@@81 $generated@@79 $generated@@2) $generated@@566) ($generated@@196 $generated@@567))))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@196 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@79) (= (type $generated@@569) $generated@@67)) ($generated@@80 $generated@@568 ($generated@@496 $generated@@569))) (and (= ($generated@@306 ($generated@@344 ($generated@@300 $generated@@79) $generated@@568)) $generated@@568) ($generated@@179 ($generated@@344 ($generated@@300 $generated@@79) $generated@@568) ($generated@@496 $generated@@569))))
 :pattern ( ($generated@@80 $generated@@568 ($generated@@496 $generated@@569)))
)))
(assert (= ($generated@@75 $generated@@143) $generated@@63))
(assert (= ($generated@@556 $generated@@143) $generated@@66))
(assert (= ($generated@@75 $generated@@257) $generated@@64))
(assert (= ($generated@@556 $generated@@257) $generated@@66))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@81 $generated@@79 $generated@@2)) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) ($generated@@81 $generated@@118 $generated@@119))) (= ($generated@@116 $generated@@570 ($generated@@196 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@79) (< 0 ($generated ($generated@@77 $generated@@570 $generated@@573)))) ($generated@@286 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@77 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@116 $generated@@570 ($generated@@196 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@118) (= ($generated@@179 $generated@@577 $generated@@143)  (or (= $generated@@577 $generated@@144) ($generated@@574 ($generated@@575 $generated@@577)))))
 :pattern ( ($generated@@179 $generated@@577 $generated@@143))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@183) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) ($generated@@81 $generated@@118 $generated@@119))) (and ($generated@@285 $generated@@580) (and ($generated@@181 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@67) ($generated@@116 $generated@@578 ($generated@@182 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@116 $generated@@578 ($generated@@182 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@286 ($generated@@190 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@286 ($generated@@190 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@183) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@81 $generated@@118 $generated@@119))) (and ($generated@@285 $generated@@584) (and ($generated@@181 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@67) ($generated@@116 $generated@@582 ($generated@@182 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@116 $generated@@582 ($generated@@182 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@286 ($generated@@191 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@286 ($generated@@191 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@79) (= (type $generated@@587) $generated@@79)) (= ($generated@@260 ($generated@@281 $generated@@586) ($generated@@281 $generated@@587)) ($generated@@281 ($generated@@260 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@260 ($generated@@281 $generated@@586) ($generated@@281 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@279 $generated@@588))) ($generated@@281 ($generated@@306 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@279 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@306 ($generated@@281 $generated@@589)) ($generated@@281 ($generated@@306 $generated@@589)))
 :pattern ( ($generated@@306 ($generated@@281 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@301 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@300 $generated@@591)) (= ($generated@@299 $generated@@590) 0)) (= $generated@@590 ($generated@@298 $generated@@591))))
 :pattern ( ($generated@@299 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@81 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@311 ($generated@@84 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@311 $generated@@592) ($generated ($generated@@77 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@311 ($generated@@84 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@597) $generated@@2)) ($generated@@116 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@116 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@599) $generated@@3)) ($generated@@116 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@116 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@601) $generated@@4)) ($generated@@116 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@116 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@603) $generated@@454)) ($generated@@116 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@116 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@81 $generated@@118 $generated@@119)) (= (type $generated@@605) $generated@@79)) ($generated@@116 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@116 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@300 $generated@@79)) (= (type $generated@@607) $generated@@67)) (= ($generated@@179 $generated@@606 ($generated@@496 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@299 $generated@@606))) ($generated@@80 ($generated@@497 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@497 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@179 $generated@@606 ($generated@@496 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@300 $generated@@79)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@299 $generated@@610))) (< ($generated@@535 ($generated@@344 $generated@@183 ($generated@@497 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@535 ($generated@@344 $generated@@183 ($generated@@497 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@179 $generated@@612 ($generated@@411 $generated@@613 $generated@@614))) (and (and ($generated@@179 ($generated@@147 $generated@@612) ($generated@@269 $generated@@613)) ($generated@@179 ($generated@@354 $generated@@612) ($generated@@269 $generated@@614))) ($generated@@179 ($generated@@389 $generated@@612) ($generated@@269 ($generated@@182 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@179 $generated@@612 ($generated@@411 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@325 $generated@@79 $generated@@79)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@179 $generated@@615 ($generated@@419 $generated@@616 $generated@@617))) (and (and ($generated@@179 ($generated@@323 $generated@@615) ($generated@@274 $generated@@616)) ($generated@@179 ($generated@@365 $generated@@615) ($generated@@274 $generated@@617))) ($generated@@179 ($generated@@393 $generated@@615) ($generated@@274 ($generated@@182 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@179 $generated@@615 ($generated@@419 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@179 $generated@@618 $generated@@46))
 :pattern ( ($generated@@179 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@179 $generated@@619 $generated@@47))
 :pattern ( ($generated@@179 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@179 $generated@@620 $generated@@44))
 :pattern ( ($generated@@179 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@454) ($generated@@179 $generated@@621 $generated@@45))
 :pattern ( ($generated@@179 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@79) ($generated@@179 $generated@@622 $generated@@48))
 :pattern ( ($generated@@179 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (and (and (= (type $generated@@623) ($generated@@149 $generated@@79 $generated@@79)) (= (type $generated@@624) $generated@@118)) (= (type $generated@@627) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@625) ($generated@@81 $generated@@118 $generated@@119))) (= (type $generated@@628) ($generated@@203 $generated@@118 $generated@@4))) (= (type $generated@@629) ($generated@@149 $generated@@79 $generated@@79))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@631  (=> (and (= $generated@@623 ($generated@@148 ($generated@@78 $generated@@257 ($generated@@0 ($generated@@281 ($generated@@11 true)))) ($generated@@375 ($generated@@306 ($generated@@11 (= ($generated@@279 ($generated@@427 5 ($generated@@279 0))) ($generated@@279 19))))) ($generated@@411 $generated@@257 $generated@@44))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@279 0) 0)))))
(let (($generated@@632  (=> (and (not ($generated@@0 ($generated@@281 ($generated@@11 true)))) (= (ControlFlow 0 7) 2)) $generated@@631)))
(let (($generated@@633  (=> ($generated@@0 ($generated@@281 ($generated@@11 true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not (= $generated@@624 $generated@@144))) (=> (not (= $generated@@624 $generated@@144)) (=> (and (and ($generated@@285 $generated@@625) ($generated@@626 $generated@@625)) (and ($generated@@0 ($generated@@281 ($generated@@11 false))) (= $generated@@627 $generated@@625))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@279 0) 0))) (=> (not (= ($generated@@279 0) 0)) (=> (= (ControlFlow 0 4) 2) $generated@@631)))))))))
(let (($generated@@634  (=> (and ($generated@@179 $generated@@624 $generated@@257) ($generated@@116 $generated@@624 $generated@@257 $generated@@627)) (and (=> (= (ControlFlow 0 8) 4) $generated@@633) (=> (= (ControlFlow 0 8) 7) $generated@@632)))))
(let (($generated@@635  (=> (and (not (and ($generated@@179 $generated@@624 $generated@@257) ($generated@@116 $generated@@624 $generated@@257 $generated@@627))) (= (ControlFlow 0 3) 2)) $generated@@631)))
(let (($generated@@636  (=> (= $generated@@628 ($generated@@202 $generated@@144 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@634) (=> (= (ControlFlow 0 9) 3) $generated@@635)))))
(let (($generated@@637  (=> (and ($generated@@285 $generated@@627) ($generated@@626 $generated@@627)) (=> (and (and (and ($generated@@179 $generated@@629 ($generated@@411 $generated@@257 $generated@@44)) ($generated@@116 $generated@@629 ($generated@@411 $generated@@257 $generated@@44) $generated@@627)) true) (and (= 1 $generated@@630) (= (ControlFlow 0 10) 9))) $generated@@636))))
$generated@@637))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 () Int)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@320 (T@U) Bool)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@353 () Bool)
(declare-fun $generated@@354 () Bool)
(declare-fun $generated@@355 () Bool)
(declare-fun $generated@@356 () T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (Int Int) Int)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Bool)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert  (=> (<= 0 $generated@@318) (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@80) (or ($generated@@320 $generated@@321) (and (not (= 0 $generated@@318)) (and (not (= $generated@@321 $generated@@136)) ($generated@@139 $generated@@321 $generated@@218))))) ($generated@@0 ($generated@@243 ($generated@@11 false))))
 :pattern ( ($generated@@319 $generated@@321))
))))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@222 $generated@@325 $generated@@135)) (and (= ($generated@@268 ($generated@@322 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@322 $generated@@80 $generated@@325) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@325 $generated@@135))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@152) ($generated@@222 $generated@@326 $generated@@218)) (and (= ($generated@@268 ($generated@@322 $generated@@80 $generated@@326)) $generated@@326) ($generated@@139 ($generated@@322 $generated@@80 $generated@@326) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@326 $generated@@218))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@80) (= ($generated@@139 $generated@@327 $generated@@218)  (and ($generated@@139 $generated@@327 $generated@@135) (not (= $generated@@327 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@327 $generated@@218))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(let (($generated@@330 ($generated@@282 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@281 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@280 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@279 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@283 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@79 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@283 (type $generated@@335))))
(let (($generated@@337 ($generated@@282 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@281 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@280 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@84 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@301 (type $generated@@339))))
(let (($generated@@341 ($generated@@300 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@299 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@298 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@297 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@301 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@301 (type $generated@@346))))
(let (($generated@@348 ($generated@@300 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@299 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@298 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@351) $generated@@67)) (= ($generated@@139 $generated@@350 ($generated@@157 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@350 $generated@@352)))) ($generated@@222 $generated@@352 $generated@@351))
 :pattern ( ($generated@@84 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@139 $generated@@350 ($generated@@157 $generated@@351)))
)))
(assert (= (type $generated@@356) $generated@@80))
(assert  (=> (<= 1 $generated@@318) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81)) (or $generated@@354 (and (not (= 1 $generated@@318)) ($generated@@247 $generated@@357)))) (and (and $generated@@355 ($generated@@320 $generated@@356)) (= $generated@@353 (let (($generated@@358 $generated@@356))
($generated@@319 $generated@@358)))))
 :pattern ( $generated@@353 ($generated@@247 $generated@@357))
))))
(assert  (=> (<= 1 $generated@@318) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81)) (or $generated@@354 (and (not (= 1 $generated@@318)) ($generated@@247 $generated@@359)))) (and (and $generated@@355 ($generated@@320 $generated@@356)) (= $generated@@353 (let (($generated@@360 $generated@@356))
($generated@@319 $generated@@360)))))
 :weight 3
 :pattern ( $generated@@353 ($generated@@247 $generated@@359))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@152) ($generated@@0 ($generated@@84 $generated@@361 $generated@@364))) ($generated@@248 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@84 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@77 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@365 ($generated@@236 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@152) ($generated@@0 ($generated@@84 $generated@@365 $generated@@368))) ($generated@@248 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@84 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@236 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@84 ($generated@@274 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@283 (type $generated@@374))))
(let (($generated@@376 ($generated@@282 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@378) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@377) ($generated@@150 ($generated@@322 $generated@@143 $generated@@378)))) (= ($generated@@84 ($generated@@372 $generated@@377) ($generated@@150 ($generated@@322 $generated@@143 $generated@@378))) ($generated@@151 ($generated@@322 $generated@@143 $generated@@378))))))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@301 (type $generated@@382))))
(let (($generated@@384 ($generated@@300 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@386) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@385) ($generated@@150 ($generated@@322 $generated@@143 $generated@@386)))) (= ($generated@@84 ($generated@@380 $generated@@385) ($generated@@150 ($generated@@322 $generated@@143 $generated@@386))) ($generated@@151 ($generated@@322 $generated@@143 $generated@@386))))))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@282 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@281 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@332 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@300 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@299 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@67)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@400) $generated@@404))) (and ($generated@@248 ($generated@@84 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@248 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@67)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@408) $generated@@412))) (and ($generated@@248 ($generated@@84 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@248 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@77 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 Int) ($generated@@415 Int) ) (! (= ($generated@@413 $generated@@414 $generated@@415) (div $generated@@414 $generated@@415))
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@79 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@301 (type $generated@@418))))
(let (($generated@@420 ($generated@@300 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@299 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@298 $generated@@420 $generated@@419)) (= ($generated@@297 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@297 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@301 (type $generated@@421))))
(let (($generated@@423 ($generated@@300 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@299 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@298 $generated@@423 $generated@@422)) (= ($generated@@343 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@343 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@301 (type $generated@@424))))
(let (($generated@@426 ($generated@@300 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@299 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@298 $generated@@426 $generated@@425)) (= ($generated@@379 $generated@@424) ($generated@@416 $generated@@152))))))
 :pattern ( ($generated@@379 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@283 (type $generated@@427))))
(let (($generated@@429 ($generated@@282 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@281 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@280 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@152) (= (type $generated@@431) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@371 $generated@@427) ($generated@@268 ($generated@@221 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@301 (type $generated@@432))))
(let (($generated@@434 ($generated@@300 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@299 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@298 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@152) (= (type $generated@@436) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@379 $generated@@432) ($generated@@268 ($generated@@221 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@379 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@152) ($generated@@222 $generated@@437 $generated@@46)) (and (= ($generated@@268 ($generated@@322 $generated@@2 $generated@@437)) $generated@@437) ($generated@@139 ($generated@@322 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@152) ($generated@@222 $generated@@438 $generated@@47)) (and (= ($generated@@268 ($generated@@322 $generated@@3 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@322 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@152) ($generated@@222 $generated@@439 $generated@@44)) (and (= ($generated@@268 ($generated@@322 $generated@@4 $generated@@439)) $generated@@439) ($generated@@139 ($generated@@322 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@152) ($generated@@222 $generated@@441 $generated@@45)) (and (= ($generated@@268 ($generated@@322 $generated@@440 $generated@@441)) $generated@@441) ($generated@@139 ($generated@@322 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@442) $generated@@443) ($generated@@139 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@82 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@79 $generated@@445 $generated@@2)) (<= 0 ($generated@@273 $generated@@444))))
 :pattern ( ($generated@@273 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@263 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@262 $generated@@447)) (<= 0 ($generated@@261 $generated@@446))))
 :pattern ( ($generated@@261 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@397 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@397 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@397 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@397 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@75 ($generated@@397 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@405 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@405 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@405 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@75 ($generated@@405 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@142 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@142 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@142 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@142 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@152) (= (type $generated@@479) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@221 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@152) (= (type $generated@@481) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@221 $generated@@480 $generated@@481))
)))
(assert  (=> $generated@@355 (and ($generated@@139 $generated@@356 $generated@@218) ($generated@@0 ($generated@@243 ($generated@@11 true))))))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@263 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@262 $generated@@152)) (= (type $generated@@489) $generated@@67)) (= (type $generated@@490) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@261 $generated@@488))) ($generated@@248 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@77 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@78 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@78 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@231 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@231 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@236 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@236 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@157 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@157 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@75 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@322 $generated@@511 ($generated@@268 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@268 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@139 $generated@@512 ($generated@@397 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@512) $generated@@515))) (and ($generated@@222 ($generated@@84 ($generated@@372 $generated@@512) $generated@@515) $generated@@514) ($generated@@222 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@512) $generated@@515))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@139 $generated@@512 ($generated@@397 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@139 $generated@@516 ($generated@@405 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@516) $generated@@519))) (and ($generated@@222 ($generated@@84 ($generated@@380 $generated@@516) $generated@@519) $generated@@518) ($generated@@222 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@139 $generated@@516 ($generated@@405 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@152) (= (type $generated@@523) $generated@@152)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@221 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@221 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@152) (= (type $generated@@525) $generated@@152)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@221 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@524 $generated@@525))
)))
(assert  (=> (<= 1 $generated@@318) (=> (or $generated@@354 (not (= 1 $generated@@318))) ($generated@@0 ($generated@@243 ($generated@@11 false))))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@222 $generated@@526 ($generated@@397 $generated@@527 $generated@@528))) (and (= ($generated@@268 ($generated@@322 ($generated@@281 $generated@@152 $generated@@152) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@322 ($generated@@281 $generated@@152 $generated@@152) $generated@@526) ($generated@@397 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@397 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@222 $generated@@529 ($generated@@405 $generated@@530 $generated@@531))) (and (= ($generated@@268 ($generated@@322 ($generated@@299 $generated@@152 $generated@@152) $generated@@529)) $generated@@529) ($generated@@139 ($generated@@322 ($generated@@299 $generated@@152 $generated@@152) $generated@@529) ($generated@@405 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@529 ($generated@@405 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@152)) ($generated@@222 $generated@@534 ($generated@@142 $generated@@532 $generated@@533))) (and (= ($generated@@268 ($generated@@322 $generated@@143 $generated@@534)) $generated@@534) ($generated@@139 ($generated@@322 $generated@@143 $generated@@534) ($generated@@142 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@534 ($generated@@142 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@84 ($generated@@416 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@84 ($generated@@416 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@72)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@539 $generated@@540)) $generated@@62) (= ($generated@@537 ($generated@@142 $generated@@539 $generated@@540)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@143) (= ($generated@@520 ($generated@@268 $generated@@541)) ($generated@@521 $generated@@541)))
 :pattern ( ($generated@@520 ($generated@@268 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) ($generated@@222 $generated@@542 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@322 $generated@@2 $generated@@542)) $generated@@542) ($generated@@139 ($generated@@322 ($generated@@79 $generated@@152 $generated@@4) $generated@@542) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@542 ($generated@@78 0)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@67)) ($generated@@222 $generated@@543 ($generated@@231 $generated@@544))) (and (= ($generated@@268 ($generated@@322 ($generated@@79 $generated@@152 $generated@@4) $generated@@543)) $generated@@543) ($generated@@139 ($generated@@322 ($generated@@79 $generated@@152 $generated@@4) $generated@@543) ($generated@@231 $generated@@544))))
 :pattern ( ($generated@@222 $generated@@543 ($generated@@231 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@152) (= (type $generated@@546) $generated@@67)) ($generated@@222 $generated@@545 ($generated@@236 $generated@@546))) (and (= ($generated@@268 ($generated@@322 ($generated@@79 $generated@@152 $generated@@4) $generated@@545)) $generated@@545) ($generated@@139 ($generated@@322 ($generated@@79 $generated@@152 $generated@@4) $generated@@545) ($generated@@236 $generated@@546))))
 :pattern ( ($generated@@222 $generated@@545 ($generated@@236 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@152) (= (type $generated@@548) $generated@@67)) ($generated@@222 $generated@@547 ($generated@@157 $generated@@548))) (and (= ($generated@@268 ($generated@@322 ($generated@@79 $generated@@152 $generated@@2) $generated@@547)) $generated@@547) ($generated@@139 ($generated@@322 ($generated@@79 $generated@@152 $generated@@2) $generated@@547) ($generated@@157 $generated@@548))))
 :pattern ( ($generated@@222 $generated@@547 ($generated@@157 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@67)) ($generated@@222 $generated@@549 ($generated@@482 $generated@@550))) (and (= ($generated@@268 ($generated@@322 ($generated@@262 $generated@@152) $generated@@549)) $generated@@549) ($generated@@139 ($generated@@322 ($generated@@262 $generated@@152) $generated@@549) ($generated@@482 $generated@@550))))
 :pattern ( ($generated@@222 $generated@@549 ($generated@@482 $generated@@550)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@537 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@537 $generated@@218) $generated@@66))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@551 ($generated@@157 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@551 $generated@@554)))) ($generated@@248 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@84 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@157 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@80) (= ($generated@@139 $generated@@558 $generated@@135)  (or (= $generated@@558 $generated@@136) ($generated@@555 ($generated@@556 $generated@@558)))))
 :pattern ( ($generated@@139 $generated@@558 $generated@@135))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@561) (and ($generated@@141 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@67) ($generated@@77 $generated@@559 ($generated@@142 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@77 $generated@@559 ($generated@@142 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@248 ($generated@@150 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@143) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@565) (and ($generated@@141 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@67) ($generated@@77 $generated@@563 ($generated@@142 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@142 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@248 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@152) (= (type $generated@@568) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@567) ($generated@@243 $generated@@568)) ($generated@@243 ($generated@@221 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@567) ($generated@@243 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@569))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@570)) ($generated@@243 ($generated@@268 $generated@@570)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@263 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@262 $generated@@572)) (= ($generated@@261 $generated@@571) 0)) (= $generated@@571 ($generated@@260 $generated@@572))))
 :pattern ( ($generated@@261 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@79 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@273 ($generated@@85 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@273 $generated@@573) ($generated ($generated@@84 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@2)) ($generated@@77 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@3)) ($generated@@77 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@4)) ($generated@@77 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@440)) ($generated@@77 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@152)) ($generated@@77 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@262 $generated@@152)) (= (type $generated@@588) $generated@@67)) (= ($generated@@139 $generated@@587 ($generated@@482 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@261 $generated@@587))) ($generated@@222 ($generated@@483 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@483 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@139 $generated@@587 ($generated@@482 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@261 $generated@@591))) (< ($generated@@521 ($generated@@322 $generated@@143 ($generated@@483 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@521 ($generated@@322 $generated@@143 ($generated@@483 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@67)) ($generated@@139 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@139 ($generated@@279 $generated@@593) ($generated@@231 $generated@@594)) ($generated@@139 ($generated@@332 $generated@@593) ($generated@@231 $generated@@595))) ($generated@@139 ($generated@@371 $generated@@593) ($generated@@231 ($generated@@142 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@139 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@139 $generated@@596 ($generated@@405 $generated@@597 $generated@@598))) (and (and ($generated@@139 ($generated@@297 $generated@@596) ($generated@@236 $generated@@597)) ($generated@@139 ($generated@@343 $generated@@596) ($generated@@236 $generated@@598))) ($generated@@139 ($generated@@379 $generated@@596) ($generated@@236 ($generated@@142 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@139 $generated@@596 ($generated@@405 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@139 $generated@@599 $generated@@46))
 :pattern ( ($generated@@139 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@139 $generated@@600 $generated@@47))
 :pattern ( ($generated@@139 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@139 $generated@@601 $generated@@44))
 :pattern ( ($generated@@139 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@440) ($generated@@139 $generated@@602 $generated@@45))
 :pattern ( ($generated@@139 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@152) ($generated@@139 $generated@@603 $generated@@48))
 :pattern ( ($generated@@139 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 (T@U) Bool)
(assert  (and (= (type $generated@@604) ($generated@@164 $generated@@80 $generated@@4)) (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@608  (=> (= $generated@@604 ($generated@@163 $generated@@136 $generated@@605 $generated@@60 false)) (=> (and (and $generated@@354 $generated@@354) (and (= $generated@@606 ($generated@@0 ($generated@@243 ($generated@@11 $generated@@353)))) (= (ControlFlow 0 2) (- 0 1)))) (not (= ($generated@@241 0) 0))))))
(let (($generated@@609  (=> (and (and ($generated@@247 $generated@@605) ($generated@@607 $generated@@605)) (and (= 2 $generated@@318) (= (ControlFlow 0 3) 2))) $generated@@608)))
$generated@@609)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@338 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (Int Int) Int)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@564 (T@U Bool Bool) T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert  (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@144 $generated@@145)) 14)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@141 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@141 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@142 (type $generated@@150))))
(= (type ($generated@@139 $generated@@150)) ($generated@@79 $generated@@151 $generated@@4)))
 :pattern ( ($generated@@139 $generated@@150))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (let (($generated@@155 ($generated@@83 (type $generated@@153))))
(let (($generated@@156 ($generated@@82 (type $generated@@152))))
(= (type ($generated@@140 $generated@@152 $generated@@153 $generated@@154)) ($generated@@141 $generated@@156 $generated@@155))))
 :pattern ( ($generated@@140 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
(let (($generated@@161 ($generated@@82 (type $generated@@157))))
 (=> (and (and (= (type $generated@@157) ($generated@@79 $generated@@161 $generated@@4)) (= (type $generated@@158) ($generated@@79 $generated@@161 $generated@@160))) (= (type $generated@@159) $generated@@67)) (= ($generated@@139 ($generated@@140 $generated@@157 $generated@@158 $generated@@159)) $generated@@157))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@157 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@143 (type $generated@@163))))
(let (($generated@@165 ($generated@@142 (type $generated@@163))))
(= (type ($generated@@162 $generated@@163)) ($generated@@79 $generated@@165 $generated@@164))))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@83 (type $generated@@167))))
(let (($generated@@170 ($generated@@82 (type $generated@@166))))
 (=> (and (and (= (type $generated@@166) ($generated@@79 $generated@@170 $generated@@4)) (= (type $generated@@167) ($generated@@79 $generated@@170 $generated@@169))) (= (type $generated@@168) $generated@@67)) (= ($generated@@162 ($generated@@140 $generated@@166 $generated@@167 $generated@@168)) $generated@@167))))
 :pattern ( ($generated@@162 ($generated@@140 $generated@@166 $generated@@167 $generated@@168)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@2) ($generated@@171 $generated@@172 ($generated@@78 0)))
 :pattern ( ($generated@@171 $generated@@172 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@175) 15) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@67) (= (type $generated@@179) $generated@@67)) (= (type $generated@@180) $generated@@175)) ($generated@@171 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@171 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 16) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@175) (= (type $generated@@188) $generated@@175)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@67)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@79 $generated@@184 $generated@@2)) (= (type $generated@@193) $generated@@67)) ($generated@@171 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@171 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 17)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@80 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@70 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@80) (= (type $generated@@244) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) ($generated@@69 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= (type $generated@@250) $generated@@67))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@80) (= (type $generated@@252) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@251 $generated@@250 $generated@@252) ($generated@@77 $generated@@251 $generated@@135 $generated@@252)))
 :pattern ( ($generated@@77 $generated@@251 $generated@@250 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@175)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@67) (= (type $generated@@258) $generated@@67)) (= (type $generated@@259) $generated@@184)) (= (type $generated@@260) $generated@@184)) (= ($generated@@171 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258))  (and ($generated@@254 $generated@@259 $generated@@257) ($generated@@254 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@171 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@175) (= (type $generated@@262) $generated@@175)) (= ($generated@@181 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@181 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@67)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@79 $generated@@184 $generated@@4)) (= (type $generated@@266) $generated@@67)) (= ($generated@@171 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@184) ($generated@@0 ($generated@@84 $generated@@265 $generated@@267))) ($generated@@254 $generated@@267 $generated@@266))
 :pattern ( ($generated@@84 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@171 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@67)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@79 $generated@@184 $generated@@4)) (= (type $generated@@271) $generated@@67)) (= ($generated@@171 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@184) ($generated@@0 ($generated@@84 $generated@@270 $generated@@272))) ($generated@@254 $generated@@272 $generated@@271))
 :pattern ( ($generated@@84 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@171 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@67) (= (type $generated@@282) $generated@@67)) (= (type $generated@@283) $generated@@184)) (= (type $generated@@284) $generated@@184)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@279 $generated@@285)) (= ($generated@@77 ($generated@@253 $generated@@283 $generated@@284) ($generated@@174 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@77 ($generated@@253 $generated@@283 $generated@@284) ($generated@@174 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@71)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@175) (= ($generated@@173 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@175) ($generated@@173 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@184) (= (type $generated@@291) $generated@@184)) (= $generated@@289 ($generated@@253 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@173 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 18)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@184)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@67) (= (type $generated@@304) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@280 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@77 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@280 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@79 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@82 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@79 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@84 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@311 $generated@@312 $generated@@313)) ($generated@@141 $generated@@312 $generated@@313))
 :pattern ( ($generated@@311 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@84 ($generated@@139 ($generated@@311 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@84 ($generated@@139 ($generated@@311 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@79 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@84 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@84 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@82 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@79 $generated@@336 $generated@@2)) (= ($generated@@190 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@84 $generated@@335 $generated@@337))) (<= ($generated ($generated@@84 $generated@@335 $generated@@337)) ($generated@@305 $generated@@335))))
 :pattern ( ($generated@@84 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@190 $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@184) ($generated@@254 $generated@@341 $generated@@135)) (and (= ($generated@@300 ($generated@@338 $generated@@80 $generated@@341)) $generated@@341) ($generated@@171 ($generated@@338 $generated@@80 $generated@@341) $generated@@135)))
 :pattern ( ($generated@@254 $generated@@341 $generated@@135))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@184) ($generated@@254 $generated@@342 $generated@@250)) (and (= ($generated@@300 ($generated@@338 $generated@@80 $generated@@342)) $generated@@342) ($generated@@171 ($generated@@338 $generated@@80 $generated@@342) $generated@@250)))
 :pattern ( ($generated@@254 $generated@@342 $generated@@250))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@80) (= ($generated@@171 $generated@@343 $generated@@250)  (and ($generated@@171 $generated@@343 $generated@@135) (not (= $generated@@343 $generated@@136)))))
 :pattern ( ($generated@@171 $generated@@343 $generated@@250))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@143 (type $generated@@344))))
(let (($generated@@346 ($generated@@142 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@141 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@311 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@139 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@139 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@143 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@79 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@143 (type $generated@@351))))
(let (($generated@@353 ($generated@@142 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@141 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@321 (type $generated@@355))))
(let (($generated@@357 ($generated@@320 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@319 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@318 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@317 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@79 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@321 (type $generated@@362))))
(let (($generated@@364 ($generated@@320 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@319 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@318 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@79 $generated@@184 $generated@@2)) (= (type $generated@@367) $generated@@67)) (= ($generated@@171 $generated@@366 ($generated@@189 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@184) (< 0 ($generated ($generated@@84 $generated@@366 $generated@@368)))) ($generated@@254 $generated@@368 $generated@@367))
 :pattern ( ($generated@@84 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@171 $generated@@366 ($generated@@189 $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) ($generated@@79 $generated@@184 $generated@@184))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@184) (= (type $generated@@372) $generated@@184)) (= ($generated@@84 ($generated@@369 $generated@@371) $generated@@372) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@79 $generated@@184 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@373 ($generated@@263 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@184) ($generated@@0 ($generated@@84 $generated@@373 $generated@@376))) ($generated@@280 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@84 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@77 $generated@@373 ($generated@@263 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@79 $generated@@184 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@377 ($generated@@268 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@184) ($generated@@0 ($generated@@84 $generated@@377 $generated@@380))) ($generated@@280 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@268 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@84 ($generated@@306 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@84 ($generated@@306 $generated@@382) $generated@@381)))
)))
(assert (forall (($generated@@384 T@U) ) (! (= (type ($generated@@383 $generated@@384)) ($generated@@79 $generated@@184 $generated@@4))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@141 $generated@@184 $generated@@184)) (= (type $generated@@386) $generated@@184)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@84 ($generated@@139 $generated@@385) ($generated@@182 ($generated@@338 $generated@@175 $generated@@386)))) (= ($generated@@84 ($generated@@162 $generated@@385) ($generated@@182 ($generated@@338 $generated@@175 $generated@@386))) ($generated@@183 ($generated@@338 $generated@@175 $generated@@386))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@79 $generated@@184 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@321 (type $generated@@390))))
(let (($generated@@392 ($generated@@320 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@79 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@319 $generated@@184 $generated@@184)) (= (type $generated@@394) $generated@@184)) (= ($generated@@0 ($generated@@84 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@84 ($generated@@317 $generated@@393) ($generated@@182 ($generated@@338 $generated@@175 $generated@@394)))) (= ($generated@@84 ($generated@@388 $generated@@393) ($generated@@182 ($generated@@338 $generated@@175 $generated@@394))) ($generated@@183 ($generated@@338 $generated@@175 $generated@@394))))))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@142 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@141 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@84 ($generated@@348 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@84 ($generated@@139 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@84 ($generated@@162 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@84 ($generated@@139 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@162 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@320 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@319 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@84 ($generated@@359 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@84 ($generated@@317 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@84 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@400) $generated@@404))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@84 ($generated@@359 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@67)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@141 $generated@@184 $generated@@184)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@184) ($generated@@0 ($generated@@84 ($generated@@139 $generated@@408) $generated@@412))) (and ($generated@@280 ($generated@@84 ($generated@@162 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@280 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@84 ($generated@@162 $generated@@408) $generated@@412))
 :pattern ( ($generated@@84 ($generated@@139 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@77 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@67)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@319 $generated@@184 $generated@@184)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@184) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@416) $generated@@420))) (and ($generated@@280 ($generated@@84 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@280 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@77 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 Int) ($generated@@423 Int) ) (! (= ($generated@@421 $generated@@422 $generated@@423) (div $generated@@422 $generated@@423))
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@79 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@321 (type $generated@@426))))
(let (($generated@@428 ($generated@@320 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@319 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@318 $generated@@428 $generated@@427)) (= ($generated@@317 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@317 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@321 (type $generated@@429))))
(let (($generated@@431 ($generated@@320 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@319 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@318 $generated@@431 $generated@@430)) (= ($generated@@359 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@359 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@321 (type $generated@@432))))
(let (($generated@@434 ($generated@@320 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@319 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@318 $generated@@434 $generated@@433)) (= ($generated@@387 $generated@@432) ($generated@@424 $generated@@184))))))
 :pattern ( ($generated@@387 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@143 (type $generated@@435))))
(let (($generated@@437 ($generated@@142 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@141 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@311 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@184) (= (type $generated@@439) $generated@@184)) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@435) ($generated@@300 ($generated@@253 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@383 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@321 (type $generated@@440))))
(let (($generated@@442 ($generated@@320 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@319 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@318 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@184) (= (type $generated@@444) $generated@@184)) ($generated@@0 ($generated@@84 ($generated@@387 $generated@@440) ($generated@@300 ($generated@@253 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@184) ($generated@@254 $generated@@445 $generated@@46)) (and (= ($generated@@300 ($generated@@338 $generated@@2 $generated@@445)) $generated@@445) ($generated@@171 ($generated@@338 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@254 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@184) ($generated@@254 $generated@@446 $generated@@47)) (and (= ($generated@@300 ($generated@@338 $generated@@3 $generated@@446)) $generated@@446) ($generated@@171 ($generated@@338 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@254 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@184) ($generated@@254 $generated@@447 $generated@@44)) (and (= ($generated@@300 ($generated@@338 $generated@@4 $generated@@447)) $generated@@447) ($generated@@171 ($generated@@338 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@254 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@184) ($generated@@254 $generated@@449 $generated@@45)) (and (= ($generated@@300 ($generated@@338 $generated@@448 $generated@@449)) $generated@@449) ($generated@@171 ($generated@@338 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@254 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@67) (= ($generated@@254 ($generated@@300 $generated@@450) $generated@@451) ($generated@@171 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@254 ($generated@@300 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@82 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@79 $generated@@453 $generated@@2)) (<= 0 ($generated@@305 $generated@@452))))
 :pattern ( ($generated@@305 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@295 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@294 $generated@@455)) (<= 0 ($generated@@293 $generated@@454))))
 :pattern ( ($generated@@293 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@405 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@405 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@75 ($generated@@405 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@413 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@413 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@413 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@413 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@184) (= (type $generated@@477) $generated@@184)) (= ($generated@@286 ($generated@@253 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@174 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@174 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@482 ($generated@@174 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@174 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@184) (= (type $generated@@487) $generated@@184)) (= ($generated@@182 ($generated@@253 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@253 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@184) (= (type $generated@@489) $generated@@184)) (= ($generated@@183 ($generated@@253 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@253 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@295 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@294 $generated@@184)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@293 $generated@@496))) ($generated@@280 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@77 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@78 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@78 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@263 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@263 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@263 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@268 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@75 ($generated@@268 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@189 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@189 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@189 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@338 $generated@@519 ($generated@@300 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@300 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@141 $generated@@184 $generated@@184)) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) (= ($generated@@171 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@184) ($generated@@0 ($generated@@84 ($generated@@139 $generated@@520) $generated@@523))) (and ($generated@@254 ($generated@@84 ($generated@@162 $generated@@520) $generated@@523) $generated@@522) ($generated@@254 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@84 ($generated@@162 $generated@@520) $generated@@523))
 :pattern ( ($generated@@84 ($generated@@139 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@171 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@319 $generated@@184 $generated@@184)) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) $generated@@67)) (= ($generated@@171 $generated@@524 ($generated@@413 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@184) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@524) $generated@@527))) (and ($generated@@254 ($generated@@84 ($generated@@388 $generated@@524) $generated@@527) $generated@@526) ($generated@@254 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@524) $generated@@527))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@171 $generated@@524 ($generated@@413 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@184) (= (type $generated@@531) $generated@@184)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@253 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@253 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@184) (= (type $generated@@533) $generated@@184)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@253 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@253 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@184) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) $generated@@67)) ($generated@@254 $generated@@534 ($generated@@405 $generated@@535 $generated@@536))) (and (= ($generated@@300 ($generated@@338 ($generated@@141 $generated@@184 $generated@@184) $generated@@534)) $generated@@534) ($generated@@171 ($generated@@338 ($generated@@141 $generated@@184 $generated@@184) $generated@@534) ($generated@@405 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@254 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@184) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) $generated@@67)) ($generated@@254 $generated@@537 ($generated@@413 $generated@@538 $generated@@539))) (and (= ($generated@@300 ($generated@@338 ($generated@@319 $generated@@184 $generated@@184) $generated@@537)) $generated@@537) ($generated@@171 ($generated@@338 ($generated@@319 $generated@@184 $generated@@184) $generated@@537) ($generated@@413 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@254 $generated@@537 ($generated@@413 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@184)) ($generated@@254 $generated@@542 ($generated@@174 $generated@@540 $generated@@541))) (and (= ($generated@@300 ($generated@@338 $generated@@175 $generated@@542)) $generated@@542) ($generated@@171 ($generated@@338 $generated@@175 $generated@@542) ($generated@@174 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@254 $generated@@542 ($generated@@174 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@84 ($generated@@424 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@84 ($generated@@424 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@545) ($generated@@79 $generated@@184 $generated@@4)) (= (type $generated@@546) ($generated@@79 $generated@@184 $generated@@184))) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@184) ($generated@@0 ($generated@@84 $generated@@545 $generated@@549))) (and ($generated@@254 $generated@@549 $generated@@547) ($generated@@254 ($generated@@84 $generated@@546 $generated@@549) $generated@@548)))
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))) ($generated@@171 ($generated@@140 $generated@@545 $generated@@546 ($generated@@405 $generated@@547 $generated@@548)) ($generated@@405 $generated@@547 $generated@@548)))
 :pattern ( ($generated@@140 $generated@@545 $generated@@546 ($generated@@405 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@72)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@67) (= (type $generated@@553) $generated@@67)) (and (= ($generated@@75 ($generated@@174 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@174 $generated@@552 $generated@@553)) $generated@@65)))
 :pattern ( ($generated@@174 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@175) (= ($generated@@528 ($generated@@300 $generated@@554)) ($generated@@529 $generated@@554)))
 :pattern ( ($generated@@528 ($generated@@300 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@184) ($generated@@254 $generated@@555 ($generated@@78 0))) (and (= ($generated@@300 ($generated@@338 $generated@@2 $generated@@555)) $generated@@555) ($generated@@171 ($generated@@338 ($generated@@79 $generated@@184 $generated@@4) $generated@@555) ($generated@@78 0))))
 :pattern ( ($generated@@254 $generated@@555 ($generated@@78 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@184) (= (type $generated@@557) $generated@@67)) ($generated@@254 $generated@@556 ($generated@@263 $generated@@557))) (and (= ($generated@@300 ($generated@@338 ($generated@@79 $generated@@184 $generated@@4) $generated@@556)) $generated@@556) ($generated@@171 ($generated@@338 ($generated@@79 $generated@@184 $generated@@4) $generated@@556) ($generated@@263 $generated@@557))))
 :pattern ( ($generated@@254 $generated@@556 ($generated@@263 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@184) (= (type $generated@@559) $generated@@67)) ($generated@@254 $generated@@558 ($generated@@268 $generated@@559))) (and (= ($generated@@300 ($generated@@338 ($generated@@79 $generated@@184 $generated@@4) $generated@@558)) $generated@@558) ($generated@@171 ($generated@@338 ($generated@@79 $generated@@184 $generated@@4) $generated@@558) ($generated@@268 $generated@@559))))
 :pattern ( ($generated@@254 $generated@@558 ($generated@@268 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@184) (= (type $generated@@561) $generated@@67)) ($generated@@254 $generated@@560 ($generated@@189 $generated@@561))) (and (= ($generated@@300 ($generated@@338 ($generated@@79 $generated@@184 $generated@@2) $generated@@560)) $generated@@560) ($generated@@171 ($generated@@338 ($generated@@79 $generated@@184 $generated@@2) $generated@@560) ($generated@@189 $generated@@561))))
 :pattern ( ($generated@@254 $generated@@560 ($generated@@189 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@184) (= (type $generated@@563) $generated@@67)) ($generated@@254 $generated@@562 ($generated@@490 $generated@@563))) (and (= ($generated@@300 ($generated@@338 ($generated@@294 $generated@@184) $generated@@562)) $generated@@562) ($generated@@171 ($generated@@338 ($generated@@294 $generated@@184) $generated@@562) ($generated@@490 $generated@@563))))
 :pattern ( ($generated@@254 $generated@@562 ($generated@@490 $generated@@563)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@550 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@250) $generated@@64))
(assert (= ($generated@@550 $generated@@250) $generated@@66))
(assert (forall (($generated@@565 T@U) ($generated@@566 Bool) ($generated@@567 Bool) ) (! (= (type ($generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@79 $generated@@184 $generated@@4))
 :pattern ( ($generated@@564 $generated@@565 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Bool) ($generated@@570 Bool) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@67) (= (type $generated@@571) $generated@@184)) (= ($generated@@0 ($generated@@84 ($generated@@564 $generated@@568 $generated@@569 $generated@@570) $generated@@571))  (and ($generated@@254 $generated@@571 $generated@@568) (and $generated@@569 (= ($generated@@0 ($generated@@338 $generated@@4 $generated@@571)) $generated@@570)))))
 :pattern ( ($generated@@84 ($generated@@564 $generated@@568 $generated@@569 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@79 $generated@@184 $generated@@2)) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@572 ($generated@@189 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@184) (< 0 ($generated ($generated@@84 $generated@@572 $generated@@575)))) ($generated@@280 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@84 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@77 $generated@@572 ($generated@@189 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@67)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@80) (= ($generated@@171 $generated@@579 $generated@@135)  (or (= $generated@@579 $generated@@136) ($generated@@576 ($generated@@577 $generated@@579)))))
 :pattern ( ($generated@@171 $generated@@579 $generated@@135))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@175) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@279 $generated@@582) (and ($generated@@173 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@67) ($generated@@77 $generated@@580 ($generated@@174 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@77 $generated@@580 ($generated@@174 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@280 ($generated@@182 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@280 ($generated@@182 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@175) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@279 $generated@@586) (and ($generated@@173 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@67) ($generated@@77 $generated@@584 ($generated@@174 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@77 $generated@@584 ($generated@@174 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@280 ($generated@@183 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@280 ($generated@@183 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@184) (= (type $generated@@589) $generated@@184)) (= ($generated@@253 ($generated@@275 $generated@@588) ($generated@@275 $generated@@589)) ($generated@@275 ($generated@@253 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 ($generated@@275 $generated@@588) ($generated@@275 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@273 $generated@@590))) ($generated@@275 ($generated@@300 ($generated@@8 $generated@@590))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@273 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@300 ($generated@@275 $generated@@591)) ($generated@@275 ($generated@@300 $generated@@591)))
 :pattern ( ($generated@@300 ($generated@@275 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@295 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@294 $generated@@593)) (= ($generated@@293 $generated@@592) 0)) (= $generated@@592 ($generated@@292 $generated@@593))))
 :pattern ( ($generated@@293 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@79 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@305 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@305 $generated@@594) ($generated ($generated@@84 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@305 ($generated@@85 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) $generated@@2)) ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@77 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@3)) ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@4)) ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@448)) ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@184)) ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@294 $generated@@184)) (= (type $generated@@609) $generated@@67)) (= ($generated@@171 $generated@@608 ($generated@@490 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@293 $generated@@608))) ($generated@@254 ($generated@@491 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@491 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@171 $generated@@608 ($generated@@490 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@294 $generated@@184)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@293 $generated@@612))) (< ($generated@@529 ($generated@@338 $generated@@175 ($generated@@491 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@529 ($generated@@338 $generated@@175 ($generated@@491 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@141 $generated@@184 $generated@@184)) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) $generated@@67)) ($generated@@171 $generated@@614 ($generated@@405 $generated@@615 $generated@@616))) (and (and ($generated@@171 ($generated@@139 $generated@@614) ($generated@@263 $generated@@615)) ($generated@@171 ($generated@@348 $generated@@614) ($generated@@263 $generated@@616))) ($generated@@171 ($generated@@383 $generated@@614) ($generated@@263 ($generated@@174 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@171 $generated@@614 ($generated@@405 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@319 $generated@@184 $generated@@184)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@171 $generated@@617 ($generated@@413 $generated@@618 $generated@@619))) (and (and ($generated@@171 ($generated@@317 $generated@@617) ($generated@@268 $generated@@618)) ($generated@@171 ($generated@@359 $generated@@617) ($generated@@268 $generated@@619))) ($generated@@171 ($generated@@387 $generated@@617) ($generated@@268 ($generated@@174 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@171 $generated@@617 ($generated@@413 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@171 $generated@@620 $generated@@46))
 :pattern ( ($generated@@171 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@171 $generated@@621 $generated@@47))
 :pattern ( ($generated@@171 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@171 $generated@@622 $generated@@44))
 :pattern ( ($generated@@171 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@448) ($generated@@171 $generated@@623 $generated@@45))
 :pattern ( ($generated@@171 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@184) ($generated@@171 $generated@@624 $generated@@48))
 :pattern ( ($generated@@171 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@625) ($generated@@141 $generated@@184 $generated@@184)) (= (type $generated@@626) $generated@@80)) (= (type $generated@@629) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@627) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@630) $generated@@80)) (= (type $generated@@631) ($generated@@196 $generated@@80 $generated@@4))) (= (type $generated@@632) ($generated@@141 $generated@@184 $generated@@184))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@634  (=> (=> ($generated@@0 ($generated@@275 ($generated@@11 true))) (and ($generated@@0 ($generated@@275 ($generated@@11 true))) (= (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19)) (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19))))) (=> (and (= $generated@@625 ($generated@@140 ($generated@@564 $generated@@44 ($generated@@0 ($generated@@275 ($generated@@11 true))) (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19))) ($generated@@369 ($generated@@300 ($generated@@8 ($generated@@273 20)))) ($generated@@405 $generated@@44 $generated@@46))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@273 0) 0))))))
(let (($generated@@635  (=> (and (not (and ($generated@@0 ($generated@@275 ($generated@@11 true))) ($generated@@0 ($generated@@275 ($generated@@11 true))))) (= (ControlFlow 0 6) 2)) $generated@@634)))
(let (($generated@@636  (=> (and ($generated@@0 ($generated@@275 ($generated@@11 true))) ($generated@@0 ($generated@@275 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (= (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19))  (not (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19)))) (= ($generated@@273 20) ($generated@@273 20)))) (=> (or (= (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19))  (not (= ($generated@@273 ($generated@@421 5 ($generated@@273 0))) ($generated@@273 19)))) (= ($generated@@273 20) ($generated@@273 20))) (=> (= (ControlFlow 0 4) 2) $generated@@634))))))
(let (($generated@@637  (=> (not ($generated@@0 ($generated@@275 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@636) (=> (= (ControlFlow 0 8) 6) $generated@@635)))))
(let (($generated@@638  (=> ($generated@@0 ($generated@@275 ($generated@@11 true))) (and (=> (= (ControlFlow 0 7) 4) $generated@@636) (=> (= (ControlFlow 0 7) 6) $generated@@635)))))
(let (($generated@@639  (=> (not ($generated@@0 ($generated@@275 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 12) 7) $generated@@638) (=> (= (ControlFlow 0 12) 8) $generated@@637)))))
(let (($generated@@640  (=> ($generated@@0 ($generated@@275 ($generated@@11 true))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (not (= $generated@@626 $generated@@136))) (=> (not (= $generated@@626 $generated@@136)) (=> (and (and ($generated@@279 $generated@@627) ($generated@@628 $generated@@627)) (and ($generated@@0 ($generated@@275 ($generated@@11 false))) (= $generated@@629 $generated@@627))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not (= ($generated@@273 0) 0))) (=> (not (= ($generated@@273 0) 0)) (and (=> (= (ControlFlow 0 9) 7) $generated@@638) (=> (= (ControlFlow 0 9) 8) $generated@@637))))))))))
(let (($generated@@641  (=> (and (and ($generated@@171 $generated@@626 $generated@@250) ($generated@@77 $generated@@626 $generated@@250 $generated@@629)) (and ($generated@@171 $generated@@630 $generated@@250) ($generated@@77 $generated@@630 $generated@@250 $generated@@629))) (and (=> (= (ControlFlow 0 13) 9) $generated@@640) (=> (= (ControlFlow 0 13) 12) $generated@@639)))))
(let (($generated@@642  (=> (and (not (and ($generated@@171 $generated@@626 $generated@@250) ($generated@@77 $generated@@626 $generated@@250 $generated@@629))) (= (ControlFlow 0 3) 2)) $generated@@634)))
(let (($generated@@643  (=> (= $generated@@631 ($generated@@195 $generated@@136 $generated@@629 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@641) (=> (= (ControlFlow 0 14) 3) $generated@@642)))))
(let (($generated@@644  (=> (and ($generated@@279 $generated@@629) ($generated@@628 $generated@@629)) (=> (and (and (and ($generated@@171 $generated@@632 ($generated@@405 $generated@@44 $generated@@46)) ($generated@@77 $generated@@632 ($generated@@405 $generated@@44 $generated@@46) $generated@@629)) true) (and (= 1 $generated@@633) (= (ControlFlow 0 15) 14))) $generated@@643))))
$generated@@644))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () Bool)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 (Int Int) Int)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (= (type $generated@@271) $generated@@64))
(assert ($generated@@270 $generated@@271))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@145)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@74 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) (= $generated@@285 ($generated@@243 ($generated@@286 40 ($generated@@243 0)))))))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) (= $generated@@285 ($generated@@243 ($generated@@286 40 ($generated@@243 0)))))))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@151 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@277 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@151 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@224 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@250 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@278 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@363 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@309 (type $generated@@375))))
(let (($generated@@377 ($generated@@308 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@290 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@289 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@308 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@307 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@250 ($generated@@81 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@250 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))) (and ($generated@@250 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@250 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 Int) ($generated@@407 Int) ) (! (= ($generated@@286 $generated@@406 $generated@@407) (div $generated@@406 $generated@@407))
 :pattern ( ($generated@@286 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 1 $generated@@283) (=> (or $generated@@284 (not (= 1 $generated@@283))) true)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@309 (type $generated@@410))))
(let (($generated@@412 ($generated@@308 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@307 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@306 $generated@@412 $generated@@411)) (= ($generated@@305 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@305 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@309 (type $generated@@413))))
(let (($generated@@415 ($generated@@308 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@307 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@306 $generated@@415 $generated@@414)) (= ($generated@@341 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@341 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@309 (type $generated@@416))))
(let (($generated@@418 ($generated@@308 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@307 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@306 $generated@@418 $generated@@417)) (= ($generated@@372 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@372 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@291 (type $generated@@419))))
(let (($generated@@421 ($generated@@290 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@289 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@288 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@419) ($generated@@272 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@361 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@309 (type $generated@@424))))
(let (($generated@@426 ($generated@@308 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@307 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@306 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@424) ($generated@@272 ($generated@@223 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@372 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@46)) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@362 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@47)) (and (= ($generated@@272 ($generated@@362 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@362 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@44)) (and (= ($generated@@272 ($generated@@362 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@362 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@45)) (and (= ($generated@@272 ($generated@@362 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@362 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@224 ($generated@@272 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@224 ($generated@@272 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@277 $generated@@436))))
 :pattern ( ($generated@@277 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@265 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@264 $generated@@439)) (<= 0 ($generated@@263 $generated@@438))))
 :pattern ( ($generated@@263 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) ($generated@@270 $generated@@440)) (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@442) $generated@@145)) ($generated@@224 $generated@@442 $generated@@440)) ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
)))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@390 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@390 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@398 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@265 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@264 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@263 $generated@@483))) ($generated@@250 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@233 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@238 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@362 $generated@@506 ($generated@@272 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@272 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@507) $generated@@510))) (and ($generated@@224 ($generated@@81 ($generated@@363 $generated@@507) $generated@@510) $generated@@509) ($generated@@224 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@223 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@223 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523))) (and (= ($generated@@272 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@521) ($generated@@390 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@272 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@145)) ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@362 $generated@@136 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@362 $generated@@136 $generated@@529) ($generated@@135 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@135 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@515 ($generated@@272 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@272 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@233 $generated@@539))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@233 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@238 $generated@@541))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@238 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@238 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@477 $generated@@545))) (and (= ($generated@@272 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544) ($generated@@477 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@477 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@250 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)) ($generated@@245 ($generated@@223 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))) ($generated@@245 ($generated@@272 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@561)) ($generated@@245 ($generated@@272 $generated@@561)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@265 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@264 $generated@@563)) (= ($generated@@263 $generated@@562) 0)) (= $generated@@562 ($generated@@262 $generated@@563))))
 :pattern ( ($generated@@263 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@277 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@264 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@263 $generated@@578))) ($generated@@224 ($generated@@478 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@478 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@263 $generated@@582))) (< ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@287 $generated@@584) ($generated@@233 $generated@@585)) ($generated@@132 ($generated@@330 $generated@@584) ($generated@@233 $generated@@586))) ($generated@@132 ($generated@@361 $generated@@584) ($generated@@233 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@305 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@132 ($generated@@341 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@132 ($generated@@372 $generated@@587) ($generated@@238 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () Bool)
(declare-fun $generated@@596 () Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@604  (=> (and (and (= $generated@@595 (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@145) ($generated@@224 $generated@@605 $generated@@271)) (= ($generated@@243 ($generated@@286 5 ($generated@@243 0))) ($generated@@243 19)))
 :no-pattern (type $generated@@605)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
))) ($generated@@132 ($generated@@11 $generated@@595) $generated@@44)) (and (= $generated@@596 $generated@@595) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@243 0) 0)))))
(let (($generated@@606  (=> (and (not (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598))) (= (ControlFlow 0 6) 3)) $generated@@604)))
(let (($generated@@607  (=> (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598)) (=> (and (and ($generated@@249 $generated@@599) ($generated@@600 $generated@@599)) (and ($generated@@0 ($generated@@245 ($generated@@11 false))) (= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@243 0) 0))) (=> (not (= ($generated@@243 0) 0)) (=> (= (ControlFlow 0 4) 3) $generated@@604)))))))
(let (($generated@@608  (=> (= $generated@@601 ($generated@@211 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 4) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@603 ($generated@@156 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@609) (=> (= (ControlFlow 0 8) 7) $generated@@608)))))
(let (($generated@@611  (=> (and (and ($generated@@249 $generated@@598) ($generated@@600 $generated@@598)) (and (= 1 $generated@@283) (= (ControlFlow 0 9) 8))) $generated@@610)))
$generated@@611))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@203 (T@U T@U) Bool)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U) T@U)
(declare-fun $generated@@207 () T@T)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 () T@T)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@286 (T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Bool)
(declare-fun $generated@@312 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (Int Int) Int)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@507 (T@U Int) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@607 (T@U Bool Int) T@U)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert  (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@144 $generated@@145)) 14)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@141 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@141 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@142 (type $generated@@150))))
(= (type ($generated@@139 $generated@@150)) ($generated@@79 $generated@@151 $generated@@4)))
 :pattern ( ($generated@@139 $generated@@150))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (let (($generated@@155 ($generated@@83 (type $generated@@153))))
(let (($generated@@156 ($generated@@82 (type $generated@@152))))
(= (type ($generated@@140 $generated@@152 $generated@@153 $generated@@154)) ($generated@@141 $generated@@156 $generated@@155))))
 :pattern ( ($generated@@140 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@83 (type $generated@@158))))
(let (($generated@@161 ($generated@@82 (type $generated@@157))))
 (=> (and (and (= (type $generated@@157) ($generated@@79 $generated@@161 $generated@@4)) (= (type $generated@@158) ($generated@@79 $generated@@161 $generated@@160))) (= (type $generated@@159) $generated@@67)) (= ($generated@@139 ($generated@@140 $generated@@157 $generated@@158 $generated@@159)) $generated@@157))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@157 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@143 (type $generated@@163))))
(let (($generated@@165 ($generated@@142 (type $generated@@163))))
(= (type ($generated@@162 $generated@@163)) ($generated@@79 $generated@@165 $generated@@164))))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@83 (type $generated@@167))))
(let (($generated@@170 ($generated@@82 (type $generated@@166))))
 (=> (and (and (= (type $generated@@166) ($generated@@79 $generated@@170 $generated@@4)) (= (type $generated@@167) ($generated@@79 $generated@@170 $generated@@169))) (= (type $generated@@168) $generated@@67)) (= ($generated@@162 ($generated@@140 $generated@@166 $generated@@167 $generated@@168)) $generated@@167))))
 :pattern ( ($generated@@162 ($generated@@140 $generated@@166 $generated@@167 $generated@@168)))
)))
(assert  (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@176 $generated@@177)) 15)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@173 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@171 $generated@@182)) ($generated@@79 $generated@@183 $generated@@4)))
 :pattern ( ($generated@@171 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@83 (type $generated@@185))))
(let (($generated@@188 ($generated@@82 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) ($generated@@173 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@83 (type $generated@@190))))
(let (($generated@@193 ($generated@@82 (type $generated@@189))))
 (=> (and (and (= (type $generated@@189) ($generated@@79 $generated@@193 $generated@@4)) (= (type $generated@@190) ($generated@@79 $generated@@193 $generated@@192))) (= (type $generated@@191) $generated@@67)) (= ($generated@@171 ($generated@@172 $generated@@189 $generated@@190 $generated@@191)) $generated@@189))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@189 $generated@@190 $generated@@191)))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@175 (type $generated@@195))))
(let (($generated@@197 ($generated@@174 (type $generated@@195))))
(= (type ($generated@@194 $generated@@195)) ($generated@@79 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@83 (type $generated@@199))))
(let (($generated@@202 ($generated@@82 (type $generated@@198))))
 (=> (and (and (= (type $generated@@198) ($generated@@79 $generated@@202 $generated@@4)) (= (type $generated@@199) ($generated@@79 $generated@@202 $generated@@201))) (= (type $generated@@200) $generated@@67)) (= ($generated@@194 ($generated@@172 $generated@@198 $generated@@199 $generated@@200)) $generated@@199))))
 :pattern ( ($generated@@194 ($generated@@172 $generated@@198 $generated@@199 $generated@@200)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@2) ($generated@@203 $generated@@204 ($generated@@78 0)))
 :pattern ( ($generated@@203 $generated@@204 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@207) 16) (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= (type ($generated@@206 $generated@@208 $generated@@209)) $generated@@67)
 :pattern ( ($generated@@206 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@207)) ($generated@@203 $generated@@212 ($generated@@206 $generated@@210 $generated@@211))) ($generated@@205 $generated@@212))
 :pattern ( ($generated@@205 $generated@@212) ($generated@@203 $generated@@212 ($generated@@206 $generated@@210 $generated@@211)))
)))
(assert  (and (and (= ($generated@@1 $generated@@216) 17) (forall (($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@214 $generated@@217))
))) (forall (($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@218)) $generated@@216)
 :pattern ( ($generated@@215 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) $generated@@207) (= (type $generated@@220) $generated@@207)) true) (= ($generated@@213 $generated@@219 $generated@@220)  (and (= ($generated@@214 $generated@@219) ($generated@@214 $generated@@220)) (= ($generated@@215 $generated@@219) ($generated@@215 $generated@@220)))))
 :pattern ( ($generated@@213 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@223)) $generated@@67)
 :pattern ( ($generated@@221 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (= (type $generated@@224) ($generated@@79 $generated@@216 $generated@@2)) (= (type $generated@@225) $generated@@67)) ($generated@@203 $generated@@224 ($generated@@221 $generated@@225))) ($generated@@222 $generated@@224))
 :pattern ( ($generated@@203 $generated@@224 ($generated@@221 $generated@@225)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@232 $generated@@233)) 18)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@228 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@228 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@226 $generated@@238 $generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@226 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(let (($generated@@247 (type $generated@@243)))
(= (type ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@228 $generated@@247 $generated@@246))))
 :pattern ( ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@230 (type $generated@@248))))
 (=> (= (type $generated@@251) $generated@@252) (= ($generated@@226 ($generated@@231 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@249 $generated@@250) $generated@@251)))
 :weight 0
))) (and (and (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@226 ($generated@@231 $generated@@254 $generated@@255 $generated@@256 $generated@@253) $generated@@257 $generated@@258) ($generated@@226 $generated@@254 $generated@@257 $generated@@258)))
 :weight 0
)) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (or (= $generated@@262 $generated@@264) (= ($generated@@226 ($generated@@231 $generated@@260 $generated@@261 $generated@@262 $generated@@259) $generated@@263 $generated@@264) ($generated@@226 $generated@@260 $generated@@263 $generated@@264)))
 :weight 0
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (or true (= ($generated@@226 ($generated@@231 $generated@@266 $generated@@267 $generated@@268 $generated@@265) $generated@@269 $generated@@270) ($generated@@226 $generated@@266 $generated@@269 $generated@@270)))
 :weight 0
)))) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ) (! (= (type ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274)) ($generated@@228 $generated@@80 $generated@@4))
 :pattern ( ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Bool) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@70 (type $generated@@280))))
 (=> (and (and (and (and (= (type $generated@@275) $generated@@80) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@277) ($generated@@69 $generated@@4))) (= (type $generated@@279) $generated@@80)) (= (type $generated@@280) ($generated@@69 $generated@@281))) (= ($generated@@0 ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))  (=> (and (not (= $generated@@279 $generated@@275)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@276 $generated@@279) $generated@@277))) $generated@@278))))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (= (type $generated@@282) $generated@@67))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@80) (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@283 $generated@@282 $generated@@284) ($generated@@77 $generated@@283 $generated@@135 $generated@@284)))
 :pattern ( ($generated@@77 $generated@@283 $generated@@282 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (! (= (type ($generated@@285 $generated@@287 $generated@@288)) $generated@@207)
 :pattern ( ($generated@@285 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) $generated@@67)) (= (type $generated@@291) $generated@@216)) (= (type $generated@@292) $generated@@216)) (= ($generated@@203 ($generated@@285 $generated@@291 $generated@@292) ($generated@@206 $generated@@289 $generated@@290))  (and ($generated@@286 $generated@@291 $generated@@289) ($generated@@286 $generated@@292 $generated@@290))))
 :pattern ( ($generated@@203 ($generated@@285 $generated@@291 $generated@@292) ($generated@@206 $generated@@289 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@207) (= (type $generated@@294) $generated@@207)) (= ($generated@@213 $generated@@293 $generated@@294) (= $generated@@293 $generated@@294)))
 :pattern ( ($generated@@213 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@67)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@79 $generated@@216 $generated@@4)) (= (type $generated@@298) $generated@@67)) (= ($generated@@203 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@216) ($generated@@0 ($generated@@84 $generated@@297 $generated@@299))) ($generated@@286 $generated@@299 $generated@@298))
 :pattern ( ($generated@@84 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@203 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@67)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@79 $generated@@216 $generated@@4)) (= (type $generated@@303) $generated@@67)) (= ($generated@@203 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@216) ($generated@@0 ($generated@@84 $generated@@302 $generated@@304))) ($generated@@286 $generated@@304 $generated@@303))
 :pattern ( ($generated@@84 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@203 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
(= (type ($generated@@307 $generated@@308)) $generated@@309))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= ($generated@@307 $generated@@310) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) $generated@@67) (= (type $generated@@314) $generated@@67)) (= (type $generated@@315) $generated@@216)) (= (type $generated@@316) $generated@@216)) (= (type $generated@@317) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@311 $generated@@317)) (= ($generated@@77 ($generated@@285 $generated@@315 $generated@@316) ($generated@@206 $generated@@313 $generated@@314) $generated@@317)  (and ($generated@@312 $generated@@315 $generated@@313 $generated@@317) ($generated@@312 $generated@@316 $generated@@314 $generated@@317))))
 :pattern ( ($generated@@77 ($generated@@285 $generated@@315 $generated@@316) ($generated@@206 $generated@@313 $generated@@314) $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@71)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@207) (= ($generated@@205 $generated@@320) (= ($generated@@318 $generated@@320) $generated@@61)))
 :pattern ( ($generated@@205 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@207) ($generated@@205 $generated@@321)) (exists (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@216) (= (type $generated@@323) $generated@@216)) (= $generated@@321 ($generated@@285 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@205 $generated@@321))
)))
(assert  (and (and (forall (($generated@@328 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@328)) 19)) (forall (($generated@@329 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@324 $generated@@330)) ($generated@@326 $generated@@330))
 :pattern ( ($generated@@324 $generated@@330))
))))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@331)) 0)
 :pattern ( ($generated@@324 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@216)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@67) (= (type $generated@@336) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@312 ($generated@@332 $generated@@334) $generated@@335 $generated@@336) ($generated@@77 $generated@@334 $generated@@335 $generated@@336)))
 :pattern ( ($generated@@312 ($generated@@332 $generated@@334) $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@79 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@82 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@79 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@84 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) ($generated@@141 $generated@@344 $generated@@345))
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@84 ($generated@@139 ($generated@@343 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@84 ($generated@@139 ($generated@@343 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) ($generated@@173 $generated@@350 $generated@@351))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@84 ($generated@@171 ($generated@@349 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@84 ($generated@@171 ($generated@@349 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@82 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@79 $generated@@356 $generated@@2)) (= ($generated@@222 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@84 $generated@@355 $generated@@357))) (<= ($generated ($generated@@84 $generated@@355 $generated@@357)) ($generated@@337 $generated@@355))))
 :pattern ( ($generated@@84 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@222 $generated@@355))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@216) ($generated@@286 $generated@@361 $generated@@135)) (and (= ($generated@@332 ($generated@@358 $generated@@80 $generated@@361)) $generated@@361) ($generated@@203 ($generated@@358 $generated@@80 $generated@@361) $generated@@135)))
 :pattern ( ($generated@@286 $generated@@361 $generated@@135))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@216) ($generated@@286 $generated@@362 $generated@@282)) (and (= ($generated@@332 ($generated@@358 $generated@@80 $generated@@362)) $generated@@362) ($generated@@203 ($generated@@358 $generated@@80 $generated@@362) $generated@@282)))
 :pattern ( ($generated@@286 $generated@@362 $generated@@282))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@80) (= ($generated@@203 $generated@@363 $generated@@282)  (and ($generated@@203 $generated@@363 $generated@@135) (not (= $generated@@363 $generated@@136)))))
 :pattern ( ($generated@@203 $generated@@363 $generated@@282))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@143 (type $generated@@364))))
(let (($generated@@366 ($generated@@142 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@141 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@343 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@84 ($generated@@139 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@139 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@143 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@79 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@143 (type $generated@@371))))
(let (($generated@@373 ($generated@@142 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@141 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@343 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@175 (type $generated@@375))))
(let (($generated@@377 ($generated@@174 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@173 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@349 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@84 ($generated@@171 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@171 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@175 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@79 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@175 (type $generated@@382))))
(let (($generated@@384 ($generated@@174 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@173 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@349 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@84 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@79 $generated@@216 $generated@@2)) (= (type $generated@@387) $generated@@67)) (= ($generated@@203 $generated@@386 ($generated@@221 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@216) (< 0 ($generated ($generated@@84 $generated@@386 $generated@@388)))) ($generated@@286 $generated@@388 $generated@@387))
 :pattern ( ($generated@@84 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@203 $generated@@386 ($generated@@221 $generated@@387)))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) ($generated@@79 $generated@@216 $generated@@216))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@216) (= (type $generated@@392) $generated@@216)) (= ($generated@@84 ($generated@@389 $generated@@391) $generated@@392) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@79 $generated@@216 $generated@@4)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@393 ($generated@@295 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@216) ($generated@@0 ($generated@@84 $generated@@393 $generated@@396))) ($generated@@312 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@84 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@77 $generated@@393 ($generated@@295 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@79 $generated@@216 $generated@@4)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@300 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@216) ($generated@@0 ($generated@@84 $generated@@397 $generated@@400))) ($generated@@312 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@84 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@300 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@84 ($generated@@338 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@84 ($generated@@338 $generated@@402) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@79 $generated@@216 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@141 $generated@@216 $generated@@216)) (= (type $generated@@406) $generated@@216)) (= ($generated@@0 ($generated@@84 ($generated@@403 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@84 ($generated@@139 $generated@@405) ($generated@@214 ($generated@@358 $generated@@207 $generated@@406)))) (= ($generated@@84 ($generated@@162 $generated@@405) ($generated@@214 ($generated@@358 $generated@@207 $generated@@406))) ($generated@@215 ($generated@@358 $generated@@207 $generated@@406))))))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@79 $generated@@216 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@173 $generated@@216 $generated@@216)) (= (type $generated@@410) $generated@@216)) (= ($generated@@0 ($generated@@84 ($generated@@407 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@84 ($generated@@171 $generated@@409) ($generated@@214 ($generated@@358 $generated@@207 $generated@@410)))) (= ($generated@@84 ($generated@@194 $generated@@409) ($generated@@214 ($generated@@358 $generated@@207 $generated@@410))) ($generated@@215 ($generated@@358 $generated@@207 $generated@@410))))))
 :pattern ( ($generated@@84 ($generated@@407 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@142 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@141 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@84 ($generated@@139 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@84 ($generated@@162 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@84 ($generated@@139 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@162 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@174 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@173 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@84 ($generated@@379 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@84 ($generated@@171 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@84 ($generated@@194 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@84 ($generated@@171 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@194 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@141 $generated@@216 $generated@@216)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@216) ($generated@@0 ($generated@@84 ($generated@@139 $generated@@424) $generated@@428))) (and ($generated@@312 ($generated@@84 ($generated@@162 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@312 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@84 ($generated@@162 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@139 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@173 $generated@@216 $generated@@216)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) $generated@@67)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@216) ($generated@@0 ($generated@@84 ($generated@@171 $generated@@432) $generated@@436))) (and ($generated@@312 ($generated@@84 ($generated@@194 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@312 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@84 ($generated@@194 $generated@@432) $generated@@436))
 :pattern ( ($generated@@84 ($generated@@171 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 Int) ($generated@@439 Int) ) (! (= ($generated@@437 $generated@@438 $generated@@439) (div $generated@@438 $generated@@439))
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@79 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@175 (type $generated@@442))))
(let (($generated@@444 ($generated@@174 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@173 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@349 $generated@@444 $generated@@443)) (= ($generated@@171 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@171 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@175 (type $generated@@445))))
(let (($generated@@447 ($generated@@174 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@173 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@349 $generated@@447 $generated@@446)) (= ($generated@@379 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@379 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@175 (type $generated@@448))))
(let (($generated@@450 ($generated@@174 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@173 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@349 $generated@@450 $generated@@449)) (= ($generated@@407 $generated@@448) ($generated@@440 $generated@@216))))))
 :pattern ( ($generated@@407 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@143 (type $generated@@451))))
(let (($generated@@453 ($generated@@142 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@141 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@343 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@216) (= (type $generated@@455) $generated@@216)) ($generated@@0 ($generated@@84 ($generated@@403 $generated@@451) ($generated@@332 ($generated@@285 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@403 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@175 (type $generated@@456))))
(let (($generated@@458 ($generated@@174 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@173 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@349 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@216) (= (type $generated@@460) $generated@@216)) ($generated@@0 ($generated@@84 ($generated@@407 $generated@@456) ($generated@@332 ($generated@@285 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@407 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@216) ($generated@@286 $generated@@461 $generated@@46)) (and (= ($generated@@332 ($generated@@358 $generated@@2 $generated@@461)) $generated@@461) ($generated@@203 ($generated@@358 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@286 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@216) ($generated@@286 $generated@@462 $generated@@47)) (and (= ($generated@@332 ($generated@@358 $generated@@3 $generated@@462)) $generated@@462) ($generated@@203 ($generated@@358 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@286 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@216) ($generated@@286 $generated@@463 $generated@@44)) (and (= ($generated@@332 ($generated@@358 $generated@@4 $generated@@463)) $generated@@463) ($generated@@203 ($generated@@358 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@286 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@216) ($generated@@286 $generated@@465 $generated@@45)) (and (= ($generated@@332 ($generated@@358 $generated@@464 $generated@@465)) $generated@@465) ($generated@@203 ($generated@@358 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@286 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@286 ($generated@@332 $generated@@466) $generated@@467) ($generated@@203 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@286 ($generated@@332 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@82 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@79 $generated@@469 $generated@@2)) (<= 0 ($generated@@337 $generated@@468))))
 :pattern ( ($generated@@337 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@327 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@326 $generated@@471)) (<= 0 ($generated@@325 $generated@@470))))
 :pattern ( ($generated@@325 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@421 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@421 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@421 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@421 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@75 ($generated@@421 $generated@@480 $generated@@481)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@482 ($generated@@429 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@429 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@429 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@429 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@75 ($generated@@429 $generated@@490 $generated@@491)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@216) (= (type $generated@@493) $generated@@216)) (= ($generated@@318 ($generated@@285 $generated@@492 $generated@@493)) $generated@@61))
 :pattern ( ($generated@@285 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@206 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@206 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@206 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@206 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@216) (= (type $generated@@503) $generated@@216)) (= ($generated@@214 ($generated@@285 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@285 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@216) (= (type $generated@@505) $generated@@216)) (= ($generated@@215 ($generated@@285 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@285 $generated@@504 $generated@@505))
)))
(assert  (and (forall (($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@508))
)) (forall (($generated@@509 T@U) ($generated@@510 Int) ) (! (let (($generated@@511 ($generated@@327 (type $generated@@509))))
(= (type ($generated@@507 $generated@@509 $generated@@510)) $generated@@511))
 :pattern ( ($generated@@507 $generated@@509 $generated@@510))
))))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@326 $generated@@216)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@512 ($generated@@506 $generated@@513) $generated@@514) (forall (($generated@@515 Int) ) (!  (=> (and (<= 0 $generated@@515) (< $generated@@515 ($generated@@325 $generated@@512))) ($generated@@312 ($generated@@507 $generated@@512 $generated@@515) $generated@@513 $generated@@514))
 :pattern ( ($generated@@507 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@77 $generated@@512 ($generated@@506 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@516 ($generated@@78 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@78 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@295 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@295 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@75 ($generated@@295 $generated@@521)) $generated@@54))
 :pattern ( ($generated@@295 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@300 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@300 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@75 ($generated@@300 $generated@@525)) $generated@@55))
 :pattern ( ($generated@@300 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@221 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@221 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@75 ($generated@@221 $generated@@529)) $generated@@56))
 :pattern ( ($generated@@221 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@530 ($generated@@506 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@506 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@75 ($generated@@506 $generated@@533)) $generated@@57))
 :pattern ( ($generated@@506 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@358 $generated@@535 ($generated@@332 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@332 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@141 $generated@@216 $generated@@216)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@203 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@216) ($generated@@0 ($generated@@84 ($generated@@139 $generated@@536) $generated@@539))) (and ($generated@@286 ($generated@@84 ($generated@@162 $generated@@536) $generated@@539) $generated@@538) ($generated@@286 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@162 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@139 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@203 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@173 $generated@@216 $generated@@216)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@203 $generated@@540 ($generated@@429 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@216) ($generated@@0 ($generated@@84 ($generated@@171 $generated@@540) $generated@@543))) (and ($generated@@286 ($generated@@84 ($generated@@194 $generated@@540) $generated@@543) $generated@@542) ($generated@@286 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@194 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@171 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@203 $generated@@540 ($generated@@429 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@216) (= (type $generated@@547) $generated@@216)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@285 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@285 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@216) (= (type $generated@@549) $generated@@216)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@285 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@285 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@216) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@286 $generated@@550 ($generated@@421 $generated@@551 $generated@@552))) (and (= ($generated@@332 ($generated@@358 ($generated@@141 $generated@@216 $generated@@216) $generated@@550)) $generated@@550) ($generated@@203 ($generated@@358 ($generated@@141 $generated@@216 $generated@@216) $generated@@550) ($generated@@421 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@286 $generated@@550 ($generated@@421 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@216) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@286 $generated@@553 ($generated@@429 $generated@@554 $generated@@555))) (and (= ($generated@@332 ($generated@@358 ($generated@@173 $generated@@216 $generated@@216) $generated@@553)) $generated@@553) ($generated@@203 ($generated@@358 ($generated@@173 $generated@@216 $generated@@216) $generated@@553) ($generated@@429 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@286 $generated@@553 ($generated@@429 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@216)) ($generated@@286 $generated@@558 ($generated@@206 $generated@@556 $generated@@557))) (and (= ($generated@@332 ($generated@@358 $generated@@207 $generated@@558)) $generated@@558) ($generated@@203 ($generated@@358 $generated@@207 $generated@@558) ($generated@@206 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@286 $generated@@558 ($generated@@206 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@440 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@440 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@561) ($generated@@79 $generated@@216 $generated@@4)) (= (type $generated@@562) ($generated@@79 $generated@@216 $generated@@216))) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) $generated@@67)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@216) ($generated@@0 ($generated@@84 $generated@@561 $generated@@565))) (and ($generated@@286 $generated@@565 $generated@@563) ($generated@@286 ($generated@@84 $generated@@562 $generated@@565) $generated@@564)))
 :no-pattern (type $generated@@565)
 :no-pattern ($generated $generated@@565)
 :no-pattern ($generated@@0 $generated@@565)
))) ($generated@@203 ($generated@@140 $generated@@561 $generated@@562 ($generated@@421 $generated@@563 $generated@@564)) ($generated@@421 $generated@@563 $generated@@564)))
 :pattern ( ($generated@@140 $generated@@561 $generated@@562 ($generated@@421 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@566) ($generated@@79 $generated@@216 $generated@@4)) (= (type $generated@@567) ($generated@@79 $generated@@216 $generated@@216))) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@216) ($generated@@0 ($generated@@84 $generated@@566 $generated@@570))) (and ($generated@@286 $generated@@570 $generated@@568) ($generated@@286 ($generated@@84 $generated@@567 $generated@@570) $generated@@569)))
 :no-pattern (type $generated@@570)
 :no-pattern ($generated $generated@@570)
 :no-pattern ($generated@@0 $generated@@570)
))) ($generated@@203 ($generated@@140 $generated@@566 $generated@@567 ($generated@@429 $generated@@568 $generated@@569)) ($generated@@429 $generated@@568 $generated@@569)))
 :pattern ( ($generated@@172 $generated@@566 $generated@@567 ($generated@@429 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@72)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@67)) (and (= ($generated@@75 ($generated@@206 $generated@@573 $generated@@574)) $generated@@62) (= ($generated@@571 ($generated@@206 $generated@@573 $generated@@574)) $generated@@65)))
 :pattern ( ($generated@@206 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@207) (= ($generated@@544 ($generated@@332 $generated@@575)) ($generated@@545 $generated@@575)))
 :pattern ( ($generated@@544 ($generated@@332 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@216) ($generated@@286 $generated@@576 ($generated@@78 0))) (and (= ($generated@@332 ($generated@@358 $generated@@2 $generated@@576)) $generated@@576) ($generated@@203 ($generated@@358 ($generated@@79 $generated@@216 $generated@@4) $generated@@576) ($generated@@78 0))))
 :pattern ( ($generated@@286 $generated@@576 ($generated@@78 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@216) (= (type $generated@@578) $generated@@67)) ($generated@@286 $generated@@577 ($generated@@295 $generated@@578))) (and (= ($generated@@332 ($generated@@358 ($generated@@79 $generated@@216 $generated@@4) $generated@@577)) $generated@@577) ($generated@@203 ($generated@@358 ($generated@@79 $generated@@216 $generated@@4) $generated@@577) ($generated@@295 $generated@@578))))
 :pattern ( ($generated@@286 $generated@@577 ($generated@@295 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@216) (= (type $generated@@580) $generated@@67)) ($generated@@286 $generated@@579 ($generated@@300 $generated@@580))) (and (= ($generated@@332 ($generated@@358 ($generated@@79 $generated@@216 $generated@@4) $generated@@579)) $generated@@579) ($generated@@203 ($generated@@358 ($generated@@79 $generated@@216 $generated@@4) $generated@@579) ($generated@@300 $generated@@580))))
 :pattern ( ($generated@@286 $generated@@579 ($generated@@300 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@216) (= (type $generated@@582) $generated@@67)) ($generated@@286 $generated@@581 ($generated@@221 $generated@@582))) (and (= ($generated@@332 ($generated@@358 ($generated@@79 $generated@@216 $generated@@2) $generated@@581)) $generated@@581) ($generated@@203 ($generated@@358 ($generated@@79 $generated@@216 $generated@@2) $generated@@581) ($generated@@221 $generated@@582))))
 :pattern ( ($generated@@286 $generated@@581 ($generated@@221 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@216) (= (type $generated@@584) $generated@@67)) ($generated@@286 $generated@@583 ($generated@@506 $generated@@584))) (and (= ($generated@@332 ($generated@@358 ($generated@@326 $generated@@216) $generated@@583)) $generated@@583) ($generated@@203 ($generated@@358 ($generated@@326 $generated@@216) $generated@@583) ($generated@@506 $generated@@584))))
 :pattern ( ($generated@@286 $generated@@583 ($generated@@506 $generated@@584)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@571 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@282) $generated@@64))
(assert (= ($generated@@571 $generated@@282) $generated@@66))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@79 $generated@@216 $generated@@2)) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@585 ($generated@@221 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@216) (< 0 ($generated ($generated@@84 $generated@@585 $generated@@588)))) ($generated@@312 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@84 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@221 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@67)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@80) (= ($generated@@203 $generated@@592 $generated@@135)  (or (= $generated@@592 $generated@@136) ($generated@@589 ($generated@@590 $generated@@592)))))
 :pattern ( ($generated@@203 $generated@@592 $generated@@135))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@207) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@311 $generated@@595) (and ($generated@@205 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@67) ($generated@@77 $generated@@593 ($generated@@206 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@77 $generated@@593 ($generated@@206 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@312 ($generated@@214 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@312 ($generated@@214 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@207) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@311 $generated@@599) (and ($generated@@205 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@67) ($generated@@77 $generated@@597 ($generated@@206 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@77 $generated@@597 ($generated@@206 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@312 ($generated@@215 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@312 ($generated@@215 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@216) (= (type $generated@@602) $generated@@216)) (= ($generated@@285 ($generated@@307 $generated@@601) ($generated@@307 $generated@@602)) ($generated@@307 ($generated@@285 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@285 ($generated@@307 $generated@@601) ($generated@@307 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@305 $generated@@603))) ($generated@@307 ($generated@@332 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@305 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@332 ($generated@@307 $generated@@604)) ($generated@@307 ($generated@@332 $generated@@604)))
 :pattern ( ($generated@@332 ($generated@@307 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@327 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@326 $generated@@606)) (= ($generated@@325 $generated@@605) 0)) (= $generated@@605 ($generated@@324 $generated@@606))))
 :pattern ( ($generated@@325 $generated@@605))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Bool) ($generated@@610 Int) ) (! (= (type ($generated@@607 $generated@@608 $generated@@609 $generated@@610)) ($generated@@79 $generated@@216 $generated@@4))
 :pattern ( ($generated@@607 $generated@@608 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Bool) ($generated@@613 Int) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@67) (= (type $generated@@614) $generated@@216)) (= ($generated@@0 ($generated@@84 ($generated@@607 $generated@@611 $generated@@612 $generated@@613) $generated@@614))  (and ($generated@@286 $generated@@614 $generated@@611) (and $generated@@612 (= ($generated ($generated@@358 $generated@@2 $generated@@614)) $generated@@613)))))
 :pattern ( ($generated@@84 ($generated@@607 $generated@@611 $generated@@612 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@79 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@337 ($generated@@85 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@337 $generated@@615) ($generated ($generated@@84 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@337 ($generated@@85 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@620) $generated@@2)) ($generated@@77 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@77 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@622) $generated@@3)) ($generated@@77 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@77 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@624) $generated@@4)) ($generated@@77 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@77 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@626) $generated@@464)) ($generated@@77 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@77 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@628) $generated@@216)) ($generated@@77 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@77 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@326 $generated@@216)) (= (type $generated@@630) $generated@@67)) (= ($generated@@203 $generated@@629 ($generated@@506 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@325 $generated@@629))) ($generated@@286 ($generated@@507 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@507 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@203 $generated@@629 ($generated@@506 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@326 $generated@@216)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@325 $generated@@633))) (< ($generated@@545 ($generated@@358 $generated@@207 ($generated@@507 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@545 ($generated@@358 $generated@@207 ($generated@@507 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@141 $generated@@216 $generated@@216)) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@67)) ($generated@@203 $generated@@635 ($generated@@421 $generated@@636 $generated@@637))) (and (and ($generated@@203 ($generated@@139 $generated@@635) ($generated@@295 $generated@@636)) ($generated@@203 ($generated@@368 $generated@@635) ($generated@@295 $generated@@637))) ($generated@@203 ($generated@@403 $generated@@635) ($generated@@295 ($generated@@206 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@203 $generated@@635 ($generated@@421 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@173 $generated@@216 $generated@@216)) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) $generated@@67)) ($generated@@203 $generated@@638 ($generated@@429 $generated@@639 $generated@@640))) (and (and ($generated@@203 ($generated@@171 $generated@@638) ($generated@@300 $generated@@639)) ($generated@@203 ($generated@@379 $generated@@638) ($generated@@300 $generated@@640))) ($generated@@203 ($generated@@407 $generated@@638) ($generated@@300 ($generated@@206 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@203 $generated@@638 ($generated@@429 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@203 $generated@@641 $generated@@46))
 :pattern ( ($generated@@203 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@203 $generated@@642 $generated@@47))
 :pattern ( ($generated@@203 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@203 $generated@@643 $generated@@44))
 :pattern ( ($generated@@203 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@464) ($generated@@203 $generated@@644 $generated@@45))
 :pattern ( ($generated@@203 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@216) ($generated@@203 $generated@@645 $generated@@48))
 :pattern ( ($generated@@203 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@646) ($generated@@173 $generated@@216 $generated@@216)) (= (type $generated@@647) $generated@@80)) (= (type $generated@@650) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@648) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@651) $generated@@80)) (= (type $generated@@652) ($generated@@228 $generated@@80 $generated@@4))) (= (type $generated@@653) ($generated@@173 $generated@@216 $generated@@216))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@655  (=> (=> ($generated@@0 ($generated@@307 ($generated@@11 true))) (and ($generated@@0 ($generated@@307 ($generated@@11 true))) (= ($generated@@305 20) ($generated@@305 20)))) (=> (and (= $generated@@646 ($generated@@172 ($generated@@607 $generated@@46 ($generated@@0 ($generated@@307 ($generated@@11 true))) ($generated@@305 20)) ($generated@@389 ($generated@@332 ($generated@@11 (= ($generated@@305 ($generated@@437 5 ($generated@@305 0))) ($generated@@305 19))))) ($generated@@429 $generated@@46 $generated@@44))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@305 0) 0))))))
(let (($generated@@656  (=> (and (not (and ($generated@@0 ($generated@@307 ($generated@@11 true))) ($generated@@0 ($generated@@307 ($generated@@11 true))))) (= (ControlFlow 0 6) 2)) $generated@@655)))
(let (($generated@@657  (=> (and ($generated@@0 ($generated@@307 ($generated@@11 true))) ($generated@@0 ($generated@@307 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= ($generated@@305 20) ($generated@@305 20))) (= (= ($generated@@305 ($generated@@437 5 ($generated@@305 0))) ($generated@@305 19)) (= ($generated@@305 ($generated@@437 5 ($generated@@305 0))) ($generated@@305 19))))) (=> (or (not (= ($generated@@305 20) ($generated@@305 20))) (= (= ($generated@@305 ($generated@@437 5 ($generated@@305 0))) ($generated@@305 19)) (= ($generated@@305 ($generated@@437 5 ($generated@@305 0))) ($generated@@305 19)))) (=> (= (ControlFlow 0 4) 2) $generated@@655))))))
(let (($generated@@658  (=> (not ($generated@@0 ($generated@@307 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 10) 4) $generated@@657) (=> (= (ControlFlow 0 10) 6) $generated@@656)))))
(let (($generated@@659  (=> ($generated@@0 ($generated@@307 ($generated@@11 true))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= $generated@@647 $generated@@136))) (=> (not (= $generated@@647 $generated@@136)) (=> (and (and ($generated@@311 $generated@@648) ($generated@@649 $generated@@648)) (and ($generated@@0 ($generated@@307 ($generated@@11 false))) (= $generated@@650 $generated@@648))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not (= ($generated@@305 0) 0))) (=> (not (= ($generated@@305 0) 0)) (and (=> (= (ControlFlow 0 7) 4) $generated@@657) (=> (= (ControlFlow 0 7) 6) $generated@@656))))))))))
(let (($generated@@660  (=> (not ($generated@@0 ($generated@@307 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 12) 7) $generated@@659) (=> (= (ControlFlow 0 12) 10) $generated@@658)))))
(let (($generated@@661  (=> ($generated@@0 ($generated@@307 ($generated@@11 true))) (and (=> (= (ControlFlow 0 11) 7) $generated@@659) (=> (= (ControlFlow 0 11) 10) $generated@@658)))))
(let (($generated@@662  (=> (and (and ($generated@@203 $generated@@647 $generated@@282) ($generated@@77 $generated@@647 $generated@@282 $generated@@650)) (and ($generated@@203 $generated@@651 $generated@@282) ($generated@@77 $generated@@651 $generated@@282 $generated@@650))) (and (=> (= (ControlFlow 0 13) 11) $generated@@661) (=> (= (ControlFlow 0 13) 12) $generated@@660)))))
(let (($generated@@663  (=> (and (not (and ($generated@@203 $generated@@647 $generated@@282) ($generated@@77 $generated@@647 $generated@@282 $generated@@650))) (= (ControlFlow 0 3) 2)) $generated@@655)))
(let (($generated@@664  (=> (= $generated@@652 ($generated@@227 $generated@@136 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@662) (=> (= (ControlFlow 0 14) 3) $generated@@663)))))
(let (($generated@@665  (=> (and ($generated@@311 $generated@@650) ($generated@@649 $generated@@650)) (=> (and (and (and ($generated@@203 $generated@@653 ($generated@@429 $generated@@46 $generated@@44)) ($generated@@77 $generated@@653 ($generated@@429 $generated@@46 $generated@@44) $generated@@650)) true) (and (= 1 $generated@@654) (= (ControlFlow 0 15) 14))) $generated@@664))))
$generated@@665))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@322 () Int)
(declare-fun $generated@@323 () Bool)
(declare-fun $generated@@324 () Int)
(declare-fun $generated@@325 (Int Int) Int)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (= (type $generated@@271) $generated@@64))
(assert ($generated@@270 $generated@@271))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@145)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@74 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@76 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@76 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@79 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@76 $generated@@320 $generated@@2)) (= ($generated@@151 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@81 $generated@@319 $generated@@321))) (<= ($generated ($generated@@81 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@81 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@151 $generated@@319))
)))
(assert  (=> (<= 1 $generated@@322) (=> (or $generated@@323 (not (= 1 $generated@@322))) (= $generated@@324 ($generated@@243 ($generated@@325 40 ($generated@@243 0)))))))
(assert  (=> (<= 1 $generated@@322) (=> (or $generated@@323 (not (= 1 $generated@@322))) (= $generated@@324 ($generated@@243 ($generated@@325 40 ($generated@@243 0)))))))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@287 (type $generated@@326))))
(let (($generated@@328 ($generated@@286 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@285 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@284 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@283 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@287 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@287 (type $generated@@333))))
(let (($generated@@335 ($generated@@286 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@285 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@284 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@305 (type $generated@@337))))
(let (($generated@@339 ($generated@@304 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@303 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@302 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@301 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@305 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@224 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@250 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@233 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@238 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@278 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@287 (type $generated@@367))))
(let (($generated@@369 ($generated@@286 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@363 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@305 (type $generated@@375))))
(let (($generated@@377 ($generated@@304 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@286 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@285 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@304 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@303 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@393) $generated@@397))) (and ($generated@@250 ($generated@@81 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@250 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@401) $generated@@405))) (and ($generated@@250 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@250 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 Int) ($generated@@407 Int) ) (! (= ($generated@@325 $generated@@406 $generated@@407) (div $generated@@406 $generated@@407))
 :pattern ( ($generated@@325 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 1 $generated@@322) (=> (or $generated@@323 (not (= 1 $generated@@322))) true)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@305 (type $generated@@410))))
(let (($generated@@412 ($generated@@304 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@303 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@302 $generated@@412 $generated@@411)) (= ($generated@@301 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@301 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@305 (type $generated@@413))))
(let (($generated@@415 ($generated@@304 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@303 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@302 $generated@@415 $generated@@414)) (= ($generated@@341 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@341 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@305 (type $generated@@416))))
(let (($generated@@418 ($generated@@304 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@303 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@302 $generated@@418 $generated@@417)) (= ($generated@@372 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@372 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@287 (type $generated@@419))))
(let (($generated@@421 ($generated@@286 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@285 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@284 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@419) ($generated@@272 ($generated@@223 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@361 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@305 (type $generated@@424))))
(let (($generated@@426 ($generated@@304 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@303 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@302 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@424) ($generated@@272 ($generated@@223 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@372 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@46)) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@362 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@47)) (and (= ($generated@@272 ($generated@@362 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@362 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@44)) (and (= ($generated@@272 ($generated@@362 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@362 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@45)) (and (= ($generated@@272 ($generated@@362 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@362 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@224 ($generated@@272 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@224 ($generated@@272 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@277 $generated@@436))))
 :pattern ( ($generated@@277 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@265 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@264 $generated@@439)) (<= 0 ($generated@@263 $generated@@438))))
 :pattern ( ($generated@@263 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) ($generated@@270 $generated@@440)) (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@442) $generated@@145)) ($generated@@224 $generated@@442 $generated@@440)) ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@250 $generated@@442 $generated@@440 $generated@@441))
)))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@390 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@390 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@390 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@398 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@265 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@264 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@263 $generated@@483))) ($generated@@250 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@233 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@238 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@362 $generated@@506 ($generated@@272 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@272 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@507) $generated@@510))) (and ($generated@@224 ($generated@@81 ($generated@@363 $generated@@507) $generated@@510) $generated@@509) ($generated@@224 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@390 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@223 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@223 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523))) (and (= ($generated@@272 ($generated@@362 ($generated@@285 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@362 ($generated@@285 $generated@@145 $generated@@145) $generated@@521) ($generated@@390 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@390 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@272 ($generated@@362 ($generated@@303 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@362 ($generated@@303 $generated@@145 $generated@@145) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@145)) ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@362 $generated@@136 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@362 $generated@@136 $generated@@529) ($generated@@135 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@135 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@135 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@515 ($generated@@272 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@272 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@272 ($generated@@362 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@233 $generated@@539))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@233 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@238 $generated@@541))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@238 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@238 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@272 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@477 $generated@@545))) (and (= ($generated@@272 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@362 ($generated@@264 $generated@@145) $generated@@544) ($generated@@477 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@477 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@250 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)) ($generated@@245 ($generated@@223 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))) ($generated@@245 ($generated@@272 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@243 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@272 ($generated@@245 $generated@@561)) ($generated@@245 ($generated@@272 $generated@@561)))
 :pattern ( ($generated@@272 ($generated@@245 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@265 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@264 $generated@@563)) (= ($generated@@263 $generated@@562) 0)) (= $generated@@562 ($generated@@262 $generated@@563))))
 :pattern ( ($generated@@263 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@277 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@264 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@263 $generated@@578))) ($generated@@224 ($generated@@478 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@478 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@477 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@263 $generated@@582))) (< ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@362 $generated@@136 ($generated@@478 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@283 $generated@@584) ($generated@@233 $generated@@585)) ($generated@@132 ($generated@@330 $generated@@584) ($generated@@233 $generated@@586))) ($generated@@132 ($generated@@361 $generated@@584) ($generated@@233 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@390 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@301 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@132 ($generated@@341 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@132 ($generated@@372 $generated@@587) ($generated@@238 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@398 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () Bool)
(declare-fun $generated@@596 () Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@604  (=> (and (and (= $generated@@595 (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@145) (and ($generated@@224 $generated@@605 $generated@@271) (= ($generated@@243 ($generated@@325 5 ($generated@@243 0))) ($generated@@243 19))))
 :no-pattern (type $generated@@605)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
))) ($generated@@132 ($generated@@11 $generated@@595) $generated@@44)) (and (= $generated@@596 $generated@@595) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@243 0) 0)))))
(let (($generated@@606  (=> (and (not (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598))) (= (ControlFlow 0 6) 3)) $generated@@604)))
(let (($generated@@607  (=> (and ($generated@@224 $generated@@597 $generated@@271) ($generated@@250 $generated@@597 $generated@@271 $generated@@598)) (=> (and (and ($generated@@249 $generated@@599) ($generated@@600 $generated@@599)) (and ($generated@@0 ($generated@@245 ($generated@@11 false))) (= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@243 0) 0))) (=> (not (= ($generated@@243 0) 0)) (=> (= (ControlFlow 0 4) 3) $generated@@604)))))))
(let (($generated@@608  (=> (= $generated@@601 ($generated@@211 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 4) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@603 ($generated@@156 $generated@@602 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@609) (=> (= (ControlFlow 0 8) 7) $generated@@608)))))
(let (($generated@@611  (=> (and (and ($generated@@249 $generated@@598) ($generated@@600 $generated@@598)) (and (= 1 $generated@@322) (= (ControlFlow 0 9) 8))) $generated@@610)))
$generated@@611))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@T T@T T@T) T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 () T@T)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@T T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@303 (T@U T@U) T@U)
(declare-fun $generated@@304 () T@T)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (Int) Int)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@343 () T@U)
(declare-fun $generated@@344 (T@U) Bool)
(declare-fun $generated@@345 (T@U T@U) Bool)
(declare-fun $generated@@346 (T@T) T@U)
(declare-fun $generated@@358 (T@U T@U T@U) Bool)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@370 (T@T) T@U)
(declare-fun $generated@@371 (T@U) Int)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@386 () T@T)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@406 (T@U) Int)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@T) T@U)
(declare-fun $generated@@414 (T@T T@T) T@T)
(declare-fun $generated@@415 (T@T) T@T)
(declare-fun $generated@@416 (T@T) T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 (T@T T@T) T@U)
(declare-fun $generated@@432 (T@T T@T) T@T)
(declare-fun $generated@@433 (T@T) T@T)
(declare-fun $generated@@434 (T@T) T@T)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@515 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@527 (Bool) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@579 (T@U T@U) T@U)
(declare-fun $generated@@587 (T@U T@U) T@U)
(declare-fun $generated@@595 (Int Int) Int)
(declare-fun $generated@@609 (T@T) T@U)
(declare-fun $generated@@633 () T@T)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@658 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@672 (T@U) T@U)
(declare-fun $generated@@676 (T@U) T@U)
(declare-fun $generated@@680 (T@U) T@U)
(declare-fun $generated@@684 (T@U) T@U)
(declare-fun $generated@@688 (T@U) T@U)
(declare-fun $generated@@694 (T@U) T@U)
(declare-fun $generated@@698 (T@U) T@U)
(declare-fun $generated@@707 (T@U) T@U)
(declare-fun $generated@@708 (T@U Int) T@U)
(declare-fun $generated@@717 (T@U) Int)
(declare-fun $generated@@719 (T@U) T@U)
(declare-fun $generated@@723 (T@U) T@U)
(declare-fun $generated@@727 (T@U) T@U)
(declare-fun $generated@@731 (T@U) T@U)
(declare-fun $generated@@745 (T@U) Int)
(declare-fun $generated@@746 (T@U) Int)
(declare-fun $generated@@759 (T@U) T@U)
(declare-fun $generated@@786 (T@U) T@U)
(declare-fun $generated@@834 (T@U) Bool)
(declare-fun $generated@@835 (T@U) T@U)
(declare-fun $generated@@905 (T@U) T@U)
(declare-fun $generated@@910 (T@U) T@U)
(declare-fun $generated@@915 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@1 ($generated@@147 $generated@@152 $generated@@153 $generated@@154)) 15))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@148 ($generated@@147 $generated@@155 $generated@@156 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@147 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@149 ($generated@@147 $generated@@158 $generated@@159 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@147 $generated@@158 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@150 ($generated@@147 $generated@@161 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@147 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@150 (type $generated@@164))))
(= (type ($generated@@143 $generated@@164 $generated@@165 $generated@@166)) $generated@@167))
 :pattern ( ($generated@@143 $generated@@164 $generated@@165 $generated@@166))
))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(let (($generated@@173 (type $generated@@170)))
(let (($generated@@174 (type $generated@@169)))
(= (type ($generated@@151 $generated@@168 $generated@@169 $generated@@170 $generated@@171)) ($generated@@147 $generated@@174 $generated@@173 $generated@@172)))))
 :pattern ( ($generated@@151 $generated@@168 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@150 (type $generated@@175))))
 (=> (= (type $generated@@178) $generated@@179) (= ($generated@@143 ($generated@@151 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@176 $generated@@177) $generated@@178)))
 :weight 0
))) (and (and (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@143 ($generated@@151 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@143 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@143 ($generated@@151 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@143 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or true (= ($generated@@143 ($generated@@151 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@143 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (forall (($generated@@198 T@U) ) (! (= (type ($generated@@144 $generated@@198)) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@4))
 :pattern ( ($generated@@144 $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@199) $generated@@75) (= (type $generated@@200) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@201) $generated@@145)) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@199) $generated@@200 $generated@@201)) ($generated@@146 $generated@@201 $generated@@199)))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@204) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@202 $generated@@203 $generated@@204)) (forall (($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@203 $generated@@205) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@204 $generated@@205) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@204 $generated@@205) $generated@@60))
)))
 :pattern ( ($generated@@202 $generated@@203 $generated@@204))
)))
(assert  (and (= (type $generated@@206) $generated@@75) (= (type $generated@@207) $generated@@88)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@88) (= (type $generated@@209) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@208 $generated@@206 $generated@@209)  (or (= $generated@@208 $generated@@207) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@209 $generated@@208) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@208 $generated@@206 $generated@@209))
)))
(assert (= (type $generated@@210) $generated@@75))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@88) (= (type $generated@@212) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@211 $generated@@210 $generated@@212)  (or (= $generated@@211 $generated@@207) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@212 $generated@@211) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@211 $generated@@210 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@2) ($generated@@213 $generated@@214 ($generated@@86 0)))
 :pattern ( ($generated@@213 $generated@@214 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@217) 16) (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@75)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@75) (= (type $generated@@221) $generated@@75)) (= (type $generated@@222) $generated@@217)) ($generated@@213 $generated@@222 ($generated@@216 $generated@@220 $generated@@221))) ($generated@@215 $generated@@222))
 :pattern ( ($generated@@215 $generated@@222) ($generated@@213 $generated@@222 ($generated@@216 $generated@@220 $generated@@221)))
)))
(assert  (and (forall (($generated@@226 T@U) ) (! (= (type ($generated@@224 $generated@@226)) $generated@@145)
 :pattern ( ($generated@@224 $generated@@226))
)) (forall (($generated@@227 T@U) ) (! (= (type ($generated@@225 $generated@@227)) $generated@@145)
 :pattern ( ($generated@@225 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (= (type $generated@@228) $generated@@217) (= (type $generated@@229) $generated@@217)) true) (= ($generated@@223 $generated@@228 $generated@@229)  (and (= ($generated@@224 $generated@@228) ($generated@@224 $generated@@229)) (= ($generated@@225 $generated@@228) ($generated@@225 $generated@@229)))))
 :pattern ( ($generated@@223 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@232)) $generated@@75)
 :pattern ( ($generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (= (type $generated@@233) ($generated@@87 $generated@@145 $generated@@2)) (= (type $generated@@234) $generated@@75)) ($generated@@213 $generated@@233 ($generated@@230 $generated@@234))) ($generated@@231 $generated@@233))
 :pattern ( ($generated@@213 $generated@@233 ($generated@@230 $generated@@234)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@237 $generated@@241 $generated@@242)) 17)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@238 ($generated@@237 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@239 ($generated@@237 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@237 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@235 $generated@@247 $generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@235 $generated@@247 $generated@@248 $generated@@249))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(let (($generated@@256 (type $generated@@252)))
(= (type ($generated@@240 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@237 $generated@@256 $generated@@255))))
 :pattern ( ($generated@@240 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@239 (type $generated@@257))))
 (=> (= (type $generated@@260) $generated@@261) (= ($generated@@235 ($generated@@240 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@258 $generated@@259) $generated@@260)))
 :weight 0
))) (and (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or (= $generated@@264 $generated@@266) (= ($generated@@235 ($generated@@240 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@235 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
)) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@235 ($generated@@240 $generated@@269 $generated@@270 $generated@@271 $generated@@268) $generated@@272 $generated@@273) ($generated@@235 $generated@@269 $generated@@272 $generated@@273)))
 :weight 0
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (or true (= ($generated@@235 ($generated@@240 $generated@@275 $generated@@276 $generated@@277 $generated@@274) $generated@@278 $generated@@279) ($generated@@235 $generated@@275 $generated@@278 $generated@@279)))
 :weight 0
)))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Bool) ) (! (= (type ($generated@@236 $generated@@280 $generated@@281 $generated@@282 $generated@@283)) ($generated@@237 $generated@@88 $generated@@4))
 :pattern ( ($generated@@236 $generated@@280 $generated@@281 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 Bool) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@78 (type $generated@@289))))
 (=> (and (and (and (and (= (type $generated@@284) $generated@@88) (= (type $generated@@285) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@286) ($generated@@77 $generated@@4))) (= (type $generated@@288) $generated@@88)) (= (type $generated@@289) ($generated@@77 $generated@@290))) (= ($generated@@0 ($generated@@235 ($generated@@236 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))  (=> (and (not (= $generated@@288 $generated@@284)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@285 $generated@@288) $generated@@286))) $generated@@287))))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 Bool) ) (! (= (type ($generated@@291 $generated@@292 $generated@@293 $generated@@294 $generated@@295)) ($generated@@237 $generated@@88 $generated@@4))
 :pattern ( ($generated@@291 $generated@@292 $generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 Bool) ($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@78 (type $generated@@301))))
 (=> (and (and (and (and (= (type $generated@@296) $generated@@88) (= (type $generated@@297) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@298) ($generated@@77 $generated@@4))) (= (type $generated@@300) $generated@@88)) (= (type $generated@@301) ($generated@@77 $generated@@302))) (= ($generated@@0 ($generated@@235 ($generated@@291 $generated@@296 $generated@@297 $generated@@298 $generated@@299) $generated@@300 $generated@@301))  (=> (and (not (= $generated@@300 $generated@@296)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@297 $generated@@300) $generated@@298))) $generated@@299))))
 :pattern ( ($generated@@235 ($generated@@291 $generated@@296 $generated@@297 $generated@@298 $generated@@299) $generated@@300 $generated@@301))
)))
(assert  (and (= ($generated@@1 $generated@@304) 18) (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (= (type ($generated@@303 $generated@@305 $generated@@306)) $generated@@75)
 :pattern ( ($generated@@303 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@304) (= (type $generated@@308) $generated@@75)) (= (type $generated@@309) $generated@@75)) (= (type $generated@@310) $generated@@75)) (= (type $generated@@311) $generated@@75)) (and (and ($generated@@213 $generated@@307 ($generated@@303 $generated@@308 $generated@@309)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@145) ($generated@@146 $generated@@312 $generated@@310)) ($generated@@146 $generated@@312 $generated@@308))
 :pattern ( ($generated@@146 $generated@@312 $generated@@310))
 :pattern ( ($generated@@146 $generated@@312 $generated@@308))
))) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@145) ($generated@@146 $generated@@313 $generated@@309)) ($generated@@146 $generated@@313 $generated@@311))
 :pattern ( ($generated@@146 $generated@@313 $generated@@309))
 :pattern ( ($generated@@146 $generated@@313 $generated@@311))
)))) ($generated@@213 $generated@@307 ($generated@@303 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@213 $generated@@307 ($generated@@303 $generated@@308 $generated@@309)) ($generated@@213 $generated@@307 ($generated@@303 $generated@@310 $generated@@311)))
)))
(assert (= (type $generated@@314) $generated@@75))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@88) (= (type $generated@@316) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@315 $generated@@314 $generated@@316) ($generated@@85 $generated@@315 $generated@@210 $generated@@316)))
 :pattern ( ($generated@@85 $generated@@315 $generated@@314 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (= (type ($generated@@317 $generated@@318 $generated@@319)) $generated@@217)
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (= (type $generated@@320) $generated@@75) (= (type $generated@@321) $generated@@75)) (= (type $generated@@322) $generated@@145)) (= (type $generated@@323) $generated@@145)) (= ($generated@@213 ($generated@@317 $generated@@322 $generated@@323) ($generated@@216 $generated@@320 $generated@@321))  (and ($generated@@146 $generated@@322 $generated@@320) ($generated@@146 $generated@@323 $generated@@321))))
 :pattern ( ($generated@@213 ($generated@@317 $generated@@322 $generated@@323) ($generated@@216 $generated@@320 $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@217) (= (type $generated@@325) $generated@@217)) (= ($generated@@223 $generated@@324 $generated@@325) (= $generated@@324 $generated@@325)))
 :pattern ( ($generated@@223 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@75)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@87 $generated@@145 $generated@@4)) (= (type $generated@@329) $generated@@75)) (= ($generated@@213 $generated@@328 ($generated@@326 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) ($generated@@0 ($generated@@92 $generated@@328 $generated@@330))) ($generated@@146 $generated@@330 $generated@@329))
 :pattern ( ($generated@@92 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@213 $generated@@328 ($generated@@326 $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@75)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@87 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@75)) (= ($generated@@213 $generated@@333 ($generated@@331 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) ($generated@@0 ($generated@@92 $generated@@333 $generated@@335))) ($generated@@146 $generated@@335 $generated@@334))
 :pattern ( ($generated@@92 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@213 $generated@@333 ($generated@@331 $generated@@334)))
)))
(assert (forall (($generated@@337 Int) ) (! (= ($generated@@336 $generated@@337) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= (type ($generated@@338 $generated@@339)) $generated@@340))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= ($generated@@338 $generated@@341) $generated@@341)
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert  (and (and (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (! (= (type ($generated@@342 $generated@@347 $generated@@348 $generated@@349 $generated@@350 $generated@@351)) ($generated@@87 $generated@@145 $generated@@4))
 :pattern ( ($generated@@342 $generated@@347 $generated@@348 $generated@@349 $generated@@350 $generated@@351))
)) (= (type $generated@@343) ($generated@@87 $generated@@88 $generated@@89))) (forall (($generated@@352 T@T) ) (! (= (type ($generated@@346 $generated@@352)) ($generated@@87 $generated@@352 $generated@@4))
 :pattern ( ($generated@@346 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@353) $generated@@75) (= (type $generated@@354) $generated@@75)) (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@356) $generated@@304)) (= (type $generated@@357) $generated@@145)) (and ($generated@@344 $generated@@355) (and ($generated@@146 $generated@@357 $generated@@353) ($generated@@213 $generated@@356 ($generated@@303 $generated@@353 $generated@@354))))) (= ($generated@@345 ($generated@@342 $generated@@353 $generated@@354 $generated@@343 $generated@@356 $generated@@357) ($generated@@346 $generated@@145)) ($generated@@345 ($generated@@342 $generated@@353 $generated@@354 $generated@@355 $generated@@356 $generated@@357) ($generated@@346 $generated@@145))))
 :pattern ( ($generated@@342 $generated@@353 $generated@@354 $generated@@343 $generated@@356 $generated@@357) ($generated@@344 $generated@@355))
 :pattern ( ($generated@@342 $generated@@353 $generated@@354 $generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@359) $generated@@75) (= (type $generated@@360) $generated@@75)) (= (type $generated@@361) $generated@@145)) (= (type $generated@@362) $generated@@145)) (= (type $generated@@363) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@344 $generated@@363)) (= ($generated@@85 ($generated@@317 $generated@@361 $generated@@362) ($generated@@216 $generated@@359 $generated@@360) $generated@@363)  (and ($generated@@358 $generated@@361 $generated@@359 $generated@@363) ($generated@@358 $generated@@362 $generated@@360 $generated@@363))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@361 $generated@@362) ($generated@@216 $generated@@359 $generated@@360) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@79)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@217) (= ($generated@@215 $generated@@366) (= ($generated@@364 $generated@@366) $generated@@65)))
 :pattern ( ($generated@@215 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@217) ($generated@@215 $generated@@367)) (exists (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (and (and (= (type $generated@@368) $generated@@145) (= (type $generated@@369) $generated@@145)) (= $generated@@367 ($generated@@317 $generated@@368 $generated@@369)))
 :no-pattern (type $generated@@368)
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
)))
 :pattern ( ($generated@@215 $generated@@367))
)))
(assert  (and (and (forall (($generated@@374 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@374)) 19)) (forall (($generated@@375 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375))
))) (forall (($generated@@376 T@T) ) (! (= (type ($generated@@370 $generated@@376)) ($generated@@372 $generated@@376))
 :pattern ( ($generated@@370 $generated@@376))
))))
(assert (forall (($generated@@377 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@377)) 0)
 :pattern ( ($generated@@370 $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@87 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@T) ($generated@@382 T@U) ) (! (= (type ($generated@@379 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@379 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@4)) (= (type $generated@@384) $generated@@145)) (= ($generated@@0 ($generated@@92 ($generated@@378 $generated@@383) $generated@@384)) ($generated@@0 ($generated@@92 $generated@@383 ($generated@@379 $generated@@88 $generated@@384)))))
 :pattern ( ($generated@@92 ($generated@@378 $generated@@383) $generated@@384))
)))
(assert  (and (= ($generated@@1 $generated@@386) 20) (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@91 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387 $generated@@388)) $generated@@389))
 :pattern ( ($generated@@385 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@91 (type $generated@@390))))
 (=> (and (= (type $generated@@390) ($generated@@87 $generated@@386 $generated@@392)) (= (type $generated@@391) $generated@@386)) (= ($generated@@385 $generated@@390 $generated@@391) ($generated@@92 $generated@@390 $generated@@391))))
 :pattern ( ($generated@@385 $generated@@390 $generated@@391))
)))
(assert ($generated@@344 $generated@@343))
(assert (forall (($generated@@394 T@U) ) (! (= (type ($generated@@393 $generated@@394)) $generated@@145)
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@75) (= (type $generated@@397) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@358 ($generated@@393 $generated@@395) $generated@@396 $generated@@397) ($generated@@85 $generated@@395 $generated@@396 $generated@@397)))
 :pattern ( ($generated@@358 ($generated@@393 $generated@@395) $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@400) $generated@@145)) (= (type $generated@@401) $generated@@75)) ($generated@@202 $generated@@398 $generated@@399)) ($generated@@358 $generated@@400 $generated@@401 $generated@@398)) ($generated@@358 $generated@@400 $generated@@401 $generated@@399))
 :pattern ( ($generated@@202 $generated@@398 $generated@@399) ($generated@@358 $generated@@400 $generated@@401 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@403) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@405) $generated@@75)) ($generated@@202 $generated@@402 $generated@@403)) ($generated@@85 $generated@@404 $generated@@405 $generated@@402)) ($generated@@85 $generated@@404 $generated@@405 $generated@@403))
 :pattern ( ($generated@@202 $generated@@402 $generated@@403) ($generated@@85 $generated@@404 $generated@@405 $generated@@402))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@87 $generated@@408 $generated@@2))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@90 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@87 $generated@@410 $generated@@2)) (and (= (= ($generated@@406 $generated@@409) 0) (= $generated@@409 ($generated@@407 $generated@@410))) (=> (not (= ($generated@@406 $generated@@409) 0)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (< 0 ($generated ($generated@@92 $generated@@409 $generated@@411))))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@406 $generated@@409))
)))
(assert  (and (and (and (and (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (= ($generated@@1 ($generated@@414 $generated@@417 $generated@@418)) 21)) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@415 ($generated@@414 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@414 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (! (= ($generated@@416 ($generated@@414 $generated@@421 $generated@@422)) $generated@@422)
 :pattern ( ($generated@@414 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@415 (type $generated@@423))))
(= (type ($generated@@412 $generated@@423)) ($generated@@87 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@423))
))) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= (type ($generated@@413 $generated@@425 $generated@@426)) ($generated@@414 $generated@@425 $generated@@426))
 :pattern ( ($generated@@413 $generated@@425 $generated@@426))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@T) ) (! (let (($generated@@429 (type $generated@@427)))
 (not ($generated@@0 ($generated@@92 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427))))
 :pattern ( (let (($generated@@429 (type $generated@@427)))
($generated@@92 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427)))
)))
(assert  (and (and (and (and (forall (($generated@@435 T@T) ($generated@@436 T@T) ) (= ($generated@@1 ($generated@@432 $generated@@435 $generated@@436)) 22)) (forall (($generated@@437 T@T) ($generated@@438 T@T) ) (! (= ($generated@@433 ($generated@@432 $generated@@437 $generated@@438)) $generated@@437)
 :pattern ( ($generated@@432 $generated@@437 $generated@@438))
))) (forall (($generated@@439 T@T) ($generated@@440 T@T) ) (! (= ($generated@@434 ($generated@@432 $generated@@439 $generated@@440)) $generated@@440)
 :pattern ( ($generated@@432 $generated@@439 $generated@@440))
))) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@433 (type $generated@@441))))
(= (type ($generated@@430 $generated@@441)) ($generated@@87 $generated@@442 $generated@@4)))
 :pattern ( ($generated@@430 $generated@@441))
))) (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (! (= (type ($generated@@431 $generated@@443 $generated@@444)) ($generated@@432 $generated@@443 $generated@@444))
 :pattern ( ($generated@@431 $generated@@443 $generated@@444))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@T) ) (! (let (($generated@@447 (type $generated@@445)))
 (not ($generated@@0 ($generated@@92 ($generated@@430 ($generated@@431 $generated@@447 $generated@@446)) $generated@@445))))
 :pattern ( (let (($generated@@447 (type $generated@@445)))
($generated@@92 ($generated@@430 ($generated@@431 $generated@@447 $generated@@446)) $generated@@445)))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@90 (type $generated@@448))))
 (=> (and (= (type $generated@@448) ($generated@@87 $generated@@450 $generated@@4)) (= (type $generated@@449) ($generated@@87 $generated@@450 $generated@@4))) (= ($generated@@345 $generated@@448 $generated@@449) (forall (($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@450) (= ($generated@@0 ($generated@@92 $generated@@448 $generated@@451)) ($generated@@0 ($generated@@92 $generated@@449 $generated@@451))))
 :pattern ( ($generated@@92 $generated@@448 $generated@@451))
 :pattern ( ($generated@@92 $generated@@449 $generated@@451))
)))))
 :pattern ( ($generated@@345 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@75)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) $generated@@75) (= (type $generated@@456) $generated@@75)) (= (type $generated@@457) $generated@@304)) (= (type $generated@@458) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@457 ($generated@@452 $generated@@455 $generated@@456) $generated@@458) ($generated@@85 $generated@@457 ($generated@@303 $generated@@455 $generated@@456) $generated@@458)))
 :pattern ( ($generated@@85 $generated@@457 ($generated@@452 $generated@@455 $generated@@456) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@75)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) $generated@@75) (= (type $generated@@463) $generated@@75)) (= (type $generated@@464) $generated@@304)) (= (type $generated@@465) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@464 ($generated@@459 $generated@@462 $generated@@463) $generated@@465) ($generated@@85 $generated@@464 ($generated@@452 $generated@@462 $generated@@463) $generated@@465)))
 :pattern ( ($generated@@85 $generated@@464 ($generated@@459 $generated@@462 $generated@@463) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@90 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@87 $generated@@467 $generated@@2)) (= ($generated@@231 $generated@@466) (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@467) (and (<= 0 ($generated ($generated@@92 $generated@@466 $generated@@468))) (<= ($generated ($generated@@92 $generated@@466 $generated@@468)) ($generated@@406 $generated@@466))))
 :pattern ( ($generated@@92 $generated@@466 $generated@@468))
)))))
 :pattern ( ($generated@@231 $generated@@466))
)))
(assert  (and (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@469 $generated@@471 $generated@@472 $generated@@473 $generated@@474 $generated@@475)) $generated@@145)
 :pattern ( ($generated@@469 $generated@@471 $generated@@472 $generated@@473 $generated@@474 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (! (= (type ($generated@@470 $generated@@476 $generated@@477 $generated@@478)) $generated@@304)
 :pattern ( ($generated@@470 $generated@@476 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@479) $generated@@75) (= (type $generated@@480) $generated@@75)) (= (type $generated@@481) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@482) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@145))) (= (type $generated@@483) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@4))) (= (type $generated@@484) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 ($generated@@87 $generated@@145 $generated@@4)))) (= (type $generated@@485) $generated@@145)) (= ($generated@@469 $generated@@479 $generated@@480 $generated@@481 ($generated@@470 $generated@@482 $generated@@483 $generated@@484) $generated@@485) ($generated@@143 $generated@@482 $generated@@481 $generated@@485)))
 :pattern ( ($generated@@469 $generated@@479 $generated@@480 $generated@@481 ($generated@@470 $generated@@482 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@145) ($generated@@146 $generated@@486 $generated@@206)) (and (= ($generated@@393 ($generated@@379 $generated@@88 $generated@@486)) $generated@@486) ($generated@@213 ($generated@@379 $generated@@88 $generated@@486) $generated@@206)))
 :pattern ( ($generated@@146 $generated@@486 $generated@@206))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@146 $generated@@487 $generated@@210)) (and (= ($generated@@393 ($generated@@379 $generated@@88 $generated@@487)) $generated@@487) ($generated@@213 ($generated@@379 $generated@@88 $generated@@487) $generated@@210)))
 :pattern ( ($generated@@146 $generated@@487 $generated@@210))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) ($generated@@146 $generated@@488 $generated@@314)) (and (= ($generated@@393 ($generated@@379 $generated@@88 $generated@@488)) $generated@@488) ($generated@@213 ($generated@@379 $generated@@88 $generated@@488) $generated@@314)))
 :pattern ( ($generated@@146 $generated@@488 $generated@@314))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@88) (= ($generated@@213 $generated@@489 $generated@@314)  (and ($generated@@213 $generated@@489 $generated@@210) (not (= $generated@@489 $generated@@207)))))
 :pattern ( ($generated@@213 $generated@@489 $generated@@314))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@416 (type $generated@@490))))
(let (($generated@@492 ($generated@@415 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@414 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@413 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ) (!  (and (= (type $generated@@493) $generated@@492) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@490) $generated@@493)))
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@412 $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@416 (type $generated@@495))))
(= (type ($generated@@494 $generated@@495)) ($generated@@87 $generated@@496 $generated@@4)))
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@416 (type $generated@@497))))
(let (($generated@@499 ($generated@@415 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@414 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@413 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ) (!  (and (= (type $generated@@500) $generated@@498) ($generated@@0 ($generated@@92 ($generated@@494 $generated@@497) $generated@@500)))
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@494 $generated@@497))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@434 (type $generated@@501))))
(let (($generated@@503 ($generated@@433 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@432 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@431 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) ($generated@@0 ($generated@@92 ($generated@@430 $generated@@501) $generated@@504)))
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@430 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@434 (type $generated@@506))))
(= (type ($generated@@505 $generated@@506)) ($generated@@87 $generated@@507 $generated@@4)))
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@434 (type $generated@@508))))
(let (($generated@@510 ($generated@@433 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@432 $generated@@510 $generated@@509)) (or (= $generated@@508 ($generated@@431 $generated@@510 $generated@@509)) (exists (($generated@@511 T@U) ) (!  (and (= (type $generated@@511) $generated@@509) ($generated@@0 ($generated@@92 ($generated@@505 $generated@@508) $generated@@511)))
 :no-pattern (type $generated@@511)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
))))))
 :pattern ( ($generated@@505 $generated@@508))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) ($generated@@87 $generated@@145 $generated@@2)) (= (type $generated@@513) $generated@@75)) (= ($generated@@213 $generated@@512 ($generated@@230 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) (< 0 ($generated ($generated@@92 $generated@@512 $generated@@514)))) ($generated@@146 $generated@@514 $generated@@513))
 :pattern ( ($generated@@92 $generated@@512 $generated@@514))
))))
 :pattern ( ($generated@@213 $generated@@512 ($generated@@230 $generated@@513)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@516) $generated@@304) (= (type $generated@@517) $generated@@75)) (= (type $generated@@518) $generated@@75)) (= (type $generated@@519) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@344 $generated@@519) ($generated@@85 $generated@@516 ($generated@@303 $generated@@517 $generated@@518) $generated@@519))) (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@145) (=> (and ($generated@@358 $generated@@520 $generated@@517 $generated@@519) ($generated@@515 $generated@@517 $generated@@518 $generated@@519 $generated@@516 $generated@@520)) ($generated@@358 ($generated@@469 $generated@@517 $generated@@518 $generated@@519 $generated@@516 $generated@@520) $generated@@518 $generated@@519)))
 :pattern ( ($generated@@469 $generated@@517 $generated@@518 $generated@@519 $generated@@516 $generated@@520))
)))
 :pattern ( ($generated@@85 $generated@@516 ($generated@@303 $generated@@517 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@521) $generated@@304) (= (type $generated@@522) $generated@@75)) (= (type $generated@@523) $generated@@75)) (= (type $generated@@524) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@344 $generated@@524)) (= ($generated@@85 $generated@@521 ($generated@@303 $generated@@522 $generated@@523) $generated@@524) (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@145) (=> (and (and ($generated@@146 $generated@@525 $generated@@522) ($generated@@358 $generated@@525 $generated@@522 $generated@@524)) ($generated@@515 $generated@@522 $generated@@523 $generated@@524 $generated@@521 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@88) (=> (and (not (= $generated@@526 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@522 $generated@@523 $generated@@524 $generated@@521 $generated@@525) ($generated@@393 $generated@@526)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@524 $generated@@526) $generated@@60))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@522 $generated@@523 $generated@@524 $generated@@521 $generated@@525) ($generated@@393 $generated@@526)))
))))
 :pattern ( ($generated@@469 $generated@@522 $generated@@523 $generated@@524 $generated@@521 $generated@@525))
 :pattern ( ($generated@@342 $generated@@522 $generated@@523 $generated@@524 $generated@@521 $generated@@525))
))))
 :pattern ( ($generated@@85 $generated@@521 ($generated@@303 $generated@@522 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@528 Bool) ) (! (= (type ($generated@@527 $generated@@528)) ($generated@@87 $generated@@88 $generated@@4))
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 Bool) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@88) (= ($generated@@0 ($generated@@92 ($generated@@527 $generated@@529) $generated@@530)) $generated@@529))
 :pattern ( ($generated@@92 ($generated@@527 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) ($generated@@87 $generated@@386 $generated@@304))
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@304) (= (type $generated@@534) $generated@@386)) (= ($generated@@92 ($generated@@531 $generated@@533) $generated@@534) $generated@@533))
 :pattern ( ($generated@@92 ($generated@@531 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@87 $generated@@145 $generated@@4)) (= (type $generated@@536) $generated@@75)) (= (type $generated@@537) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@535 ($generated@@326 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) ($generated@@0 ($generated@@92 $generated@@535 $generated@@538))) ($generated@@358 $generated@@538 $generated@@536 $generated@@537))
 :pattern ( ($generated@@92 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@85 $generated@@535 ($generated@@326 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@87 $generated@@145 $generated@@4)) (= (type $generated@@540) $generated@@75)) (= (type $generated@@541) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@539 ($generated@@331 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) ($generated@@0 ($generated@@92 $generated@@539 $generated@@542))) ($generated@@358 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@92 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@85 $generated@@539 ($generated@@331 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated ($generated@@92 ($generated@@407 $generated@@544) $generated@@543)) 0))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@92 ($generated@@407 $generated@@544) $generated@@543)))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) ($generated@@87 $generated@@145 $generated@@4))
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@416 (type $generated@@548))))
(let (($generated@@550 ($generated@@415 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548)) ($generated@@87 $generated@@550 $generated@@549))))
 :pattern ( ($generated@@546 $generated@@548))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@414 $generated@@145 $generated@@145)) (= (type $generated@@552) $generated@@145)) (= ($generated@@0 ($generated@@92 ($generated@@545 $generated@@551) $generated@@552))  (and ($generated@@0 ($generated@@92 ($generated@@412 $generated@@551) ($generated@@224 ($generated@@379 $generated@@217 $generated@@552)))) (= ($generated@@92 ($generated@@546 $generated@@551) ($generated@@224 ($generated@@379 $generated@@217 $generated@@552))) ($generated@@225 ($generated@@379 $generated@@217 $generated@@552))))))
 :pattern ( ($generated@@92 ($generated@@545 $generated@@551) $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) ($generated@@87 $generated@@145 $generated@@4))
 :pattern ( ($generated@@553 $generated@@555))
)) (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@434 (type $generated@@556))))
(let (($generated@@558 ($generated@@433 (type $generated@@556))))
(= (type ($generated@@554 $generated@@556)) ($generated@@87 $generated@@558 $generated@@557))))
 :pattern ( ($generated@@554 $generated@@556))
))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@432 $generated@@145 $generated@@145)) (= (type $generated@@560) $generated@@145)) (= ($generated@@0 ($generated@@92 ($generated@@553 $generated@@559) $generated@@560))  (and ($generated@@0 ($generated@@92 ($generated@@430 $generated@@559) ($generated@@224 ($generated@@379 $generated@@217 $generated@@560)))) (= ($generated@@92 ($generated@@554 $generated@@559) ($generated@@224 ($generated@@379 $generated@@217 $generated@@560))) ($generated@@225 ($generated@@379 $generated@@217 $generated@@560))))))
 :pattern ( ($generated@@92 ($generated@@553 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(let (($generated@@564 ($generated@@415 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@414 $generated@@564 $generated@@563)) (= ($generated@@0 ($generated@@92 ($generated@@494 $generated@@561) $generated@@562)) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@564) (and ($generated@@0 ($generated@@92 ($generated@@412 $generated@@561) $generated@@565)) (= $generated@@562 ($generated@@92 ($generated@@546 $generated@@561) $generated@@565))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@561) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@546 $generated@@561) $generated@@565))
))))))
 :pattern ( ($generated@@92 ($generated@@494 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(let (($generated@@569 ($generated@@433 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@432 $generated@@569 $generated@@568)) (= ($generated@@0 ($generated@@92 ($generated@@505 $generated@@566) $generated@@567)) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@569) (and ($generated@@0 ($generated@@92 ($generated@@430 $generated@@566) $generated@@570)) (= $generated@@567 ($generated@@92 ($generated@@554 $generated@@566) $generated@@570))))
 :pattern ( ($generated@@92 ($generated@@430 $generated@@566) $generated@@570))
 :pattern ( ($generated@@92 ($generated@@554 $generated@@566) $generated@@570))
))))))
 :pattern ( ($generated@@92 ($generated@@505 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@571) $generated@@75) (= (type $generated@@572) $generated@@75)) (= (type $generated@@573) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@574) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@145))) (= (type $generated@@575) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@4))) (= (type $generated@@576) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 ($generated@@87 $generated@@145 $generated@@4)))) (= (type $generated@@577) $generated@@145)) (= (type $generated@@578) $generated@@145)) (= ($generated@@0 ($generated@@92 ($generated@@342 $generated@@571 $generated@@572 $generated@@573 ($generated@@470 $generated@@574 $generated@@575 $generated@@576) $generated@@577) $generated@@578)) ($generated@@0 ($generated@@92 ($generated@@143 $generated@@576 $generated@@573 $generated@@577) $generated@@578))))
 :pattern ( ($generated@@92 ($generated@@342 $generated@@571 $generated@@572 $generated@@573 ($generated@@470 $generated@@574 $generated@@575 $generated@@576) $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (! (= (type ($generated@@579 $generated@@580 $generated@@581)) $generated@@75)
 :pattern ( ($generated@@579 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@414 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@75)) (= (type $generated@@584) $generated@@75)) (= (type $generated@@585) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@582 ($generated@@579 $generated@@583 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@145) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@582) $generated@@586))) (and ($generated@@358 ($generated@@92 ($generated@@546 $generated@@582) $generated@@586) $generated@@584 $generated@@585) ($generated@@358 $generated@@586 $generated@@583 $generated@@585)))
 :pattern ( ($generated@@92 ($generated@@546 $generated@@582) $generated@@586))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@582) $generated@@586))
))))
 :pattern ( ($generated@@85 $generated@@582 ($generated@@579 $generated@@583 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (! (= (type ($generated@@587 $generated@@588 $generated@@589)) $generated@@75)
 :pattern ( ($generated@@587 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@432 $generated@@145 $generated@@145)) (= (type $generated@@591) $generated@@75)) (= (type $generated@@592) $generated@@75)) (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@590 ($generated@@587 $generated@@591 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@145) ($generated@@0 ($generated@@92 ($generated@@430 $generated@@590) $generated@@594))) (and ($generated@@358 ($generated@@92 ($generated@@554 $generated@@590) $generated@@594) $generated@@592 $generated@@593) ($generated@@358 $generated@@594 $generated@@591 $generated@@593)))
 :pattern ( ($generated@@92 ($generated@@554 $generated@@590) $generated@@594))
 :pattern ( ($generated@@92 ($generated@@430 $generated@@590) $generated@@594))
))))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@587 $generated@@591 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@596 Int) ($generated@@597 Int) ) (! (= ($generated@@595 $generated@@596 $generated@@597) (div $generated@@596 $generated@@597))
 :pattern ( ($generated@@595 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@90 (type $generated@@598))))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@600 $generated@@4)) (= (type $generated@@599) ($generated@@87 $generated@@600 $generated@@4))) ($generated@@345 $generated@@598 $generated@@599)) (= $generated@@598 $generated@@599)))
 :pattern ( ($generated@@345 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@603) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@601 $generated@@603))) (and ($generated@@202 $generated@@601 $generated@@602) ($generated@@202 $generated@@602 $generated@@603))) ($generated@@202 $generated@@601 $generated@@603))
 :pattern ( ($generated@@202 $generated@@601 $generated@@602) ($generated@@202 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@304) (= (type $generated@@605) $generated@@75)) (= (type $generated@@606) $generated@@75)) (= ($generated@@213 $generated@@604 ($generated@@303 $generated@@605 $generated@@606)) (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@145)) (=> (and (and ($generated@@344 $generated@@607) ($generated@@146 $generated@@608 $generated@@605)) ($generated@@515 $generated@@605 $generated@@606 $generated@@607 $generated@@604 $generated@@608)) ($generated@@146 ($generated@@469 $generated@@605 $generated@@606 $generated@@607 $generated@@604 $generated@@608) $generated@@606)))
 :pattern ( ($generated@@469 $generated@@605 $generated@@606 $generated@@607 $generated@@604 $generated@@608))
))))
 :pattern ( ($generated@@213 $generated@@604 ($generated@@303 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@610 T@T) ) (! (= (type ($generated@@609 $generated@@610)) ($generated@@87 $generated@@610 $generated@@4))
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@434 (type $generated@@611))))
(let (($generated@@613 ($generated@@433 (type $generated@@611))))
 (=> (= (type $generated@@611) ($generated@@432 $generated@@613 $generated@@612)) (= (= $generated@@611 ($generated@@431 $generated@@613 $generated@@612)) (= ($generated@@430 $generated@@611) ($generated@@609 $generated@@613))))))
 :pattern ( ($generated@@430 $generated@@611))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@434 (type $generated@@614))))
(let (($generated@@616 ($generated@@433 (type $generated@@614))))
 (=> (= (type $generated@@614) ($generated@@432 $generated@@616 $generated@@615)) (= (= $generated@@614 ($generated@@431 $generated@@616 $generated@@615)) (= ($generated@@505 $generated@@614) ($generated@@609 $generated@@615))))))
 :pattern ( ($generated@@505 $generated@@614))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@434 (type $generated@@617))))
(let (($generated@@619 ($generated@@433 (type $generated@@617))))
 (=> (= (type $generated@@617) ($generated@@432 $generated@@619 $generated@@618)) (= (= $generated@@617 ($generated@@431 $generated@@619 $generated@@618)) (= ($generated@@553 $generated@@617) ($generated@@609 $generated@@145))))))
 :pattern ( ($generated@@553 $generated@@617))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@416 (type $generated@@620))))
(let (($generated@@622 ($generated@@415 (type $generated@@620))))
 (=> (= (type $generated@@620) ($generated@@414 $generated@@622 $generated@@621)) (or (= $generated@@620 ($generated@@413 $generated@@622 $generated@@621)) (exists (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (and (and (= (type $generated@@623) $generated@@145) (= (type $generated@@624) $generated@@145)) ($generated@@0 ($generated@@92 ($generated@@545 $generated@@620) ($generated@@393 ($generated@@317 $generated@@623 $generated@@624)))))
 :no-pattern (type $generated@@623)
 :no-pattern (type $generated@@624)
 :no-pattern ($generated $generated@@623)
 :no-pattern ($generated@@0 $generated@@623)
 :no-pattern ($generated $generated@@624)
 :no-pattern ($generated@@0 $generated@@624)
))))))
 :pattern ( ($generated@@545 $generated@@620))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@434 (type $generated@@625))))
(let (($generated@@627 ($generated@@433 (type $generated@@625))))
 (=> (= (type $generated@@625) ($generated@@432 $generated@@627 $generated@@626)) (or (= $generated@@625 ($generated@@431 $generated@@627 $generated@@626)) (exists (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (and (and (= (type $generated@@628) $generated@@145) (= (type $generated@@629) $generated@@145)) ($generated@@0 ($generated@@92 ($generated@@553 $generated@@625) ($generated@@393 ($generated@@317 $generated@@628 $generated@@629)))))
 :no-pattern (type $generated@@628)
 :no-pattern (type $generated@@629)
 :no-pattern ($generated $generated@@628)
 :no-pattern ($generated@@0 $generated@@628)
 :no-pattern ($generated $generated@@629)
 :no-pattern ($generated@@0 $generated@@629)
))))))
 :pattern ( ($generated@@553 $generated@@625))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@145) ($generated@@146 $generated@@630 $generated@@46)) (and (= ($generated@@393 ($generated@@379 $generated@@2 $generated@@630)) $generated@@630) ($generated@@213 ($generated@@379 $generated@@2 $generated@@630) $generated@@46)))
 :pattern ( ($generated@@146 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@145) ($generated@@146 $generated@@631 $generated@@47)) (and (= ($generated@@393 ($generated@@379 $generated@@3 $generated@@631)) $generated@@631) ($generated@@213 ($generated@@379 $generated@@3 $generated@@631) $generated@@47)))
 :pattern ( ($generated@@146 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@145) ($generated@@146 $generated@@632 $generated@@44)) (and (= ($generated@@393 ($generated@@379 $generated@@4 $generated@@632)) $generated@@632) ($generated@@213 ($generated@@379 $generated@@4 $generated@@632) $generated@@44)))
 :pattern ( ($generated@@146 $generated@@632 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@633) 23))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@145) ($generated@@146 $generated@@634 $generated@@45)) (and (= ($generated@@393 ($generated@@379 $generated@@633 $generated@@634)) $generated@@634) ($generated@@213 ($generated@@379 $generated@@633 $generated@@634) $generated@@45)))
 :pattern ( ($generated@@146 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@75) (= ($generated@@146 ($generated@@393 $generated@@635) $generated@@636) ($generated@@213 $generated@@635 $generated@@636)))
 :pattern ( ($generated@@146 ($generated@@393 $generated@@635) $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@637) $generated@@75) (= (type $generated@@638) $generated@@75)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@640) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@145))) (= (type $generated@@641) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@4))) (= (type $generated@@642) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 ($generated@@87 $generated@@145 $generated@@4)))) (= (type $generated@@643) $generated@@145)) ($generated@@0 ($generated@@143 $generated@@641 $generated@@639 $generated@@643))) ($generated@@515 $generated@@637 $generated@@638 $generated@@639 ($generated@@470 $generated@@640 $generated@@641 $generated@@642) $generated@@643))
 :pattern ( ($generated@@515 $generated@@637 $generated@@638 $generated@@639 ($generated@@470 $generated@@640 $generated@@641 $generated@@642) $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@90 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@87 $generated@@645 $generated@@2)) (<= 0 ($generated@@406 $generated@@644))))
 :pattern ( ($generated@@406 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@373 (type $generated@@646))))
 (=> (= (type $generated@@646) ($generated@@372 $generated@@647)) (<= 0 ($generated@@371 $generated@@646))))
 :pattern ( ($generated@@371 $generated@@646))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@75)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@75) (= (type $generated@@651) $generated@@75)) (= ($generated@@648 ($generated@@579 $generated@@650 $generated@@651)) $generated@@650))
 :pattern ( ($generated@@579 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@75)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@75) (= (type $generated@@655) $generated@@75)) (= ($generated@@652 ($generated@@579 $generated@@654 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@579 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@75) (= (type $generated@@657) $generated@@75)) (= ($generated@@83 ($generated@@579 $generated@@656 $generated@@657)) $generated@@58))
 :pattern ( ($generated@@579 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ) (! (= (type ($generated@@658 $generated@@659)) $generated@@75)
 :pattern ( ($generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@75) (= (type $generated@@661) $generated@@75)) (= ($generated@@658 ($generated@@587 $generated@@660 $generated@@661)) $generated@@660))
 :pattern ( ($generated@@587 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ) (! (= (type ($generated@@662 $generated@@663)) $generated@@75)
 :pattern ( ($generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@75) (= (type $generated@@665) $generated@@75)) (= ($generated@@662 ($generated@@587 $generated@@664 $generated@@665)) $generated@@665))
 :pattern ( ($generated@@587 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@75) (= (type $generated@@667) $generated@@75)) (= ($generated@@83 ($generated@@587 $generated@@666 $generated@@667)) $generated@@59))
 :pattern ( ($generated@@587 $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ) (! (= (type ($generated@@668 $generated@@669)) $generated@@75)
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@75) (= (type $generated@@671) $generated@@75)) (= ($generated@@668 ($generated@@303 $generated@@670 $generated@@671)) $generated@@670))
 :pattern ( ($generated@@303 $generated@@670 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ) (! (= (type ($generated@@672 $generated@@673)) $generated@@75)
 :pattern ( ($generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@75) (= (type $generated@@675) $generated@@75)) (= ($generated@@672 ($generated@@303 $generated@@674 $generated@@675)) $generated@@675))
 :pattern ( ($generated@@303 $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ) (! (= (type ($generated@@676 $generated@@677)) $generated@@75)
 :pattern ( ($generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) $generated@@75) (= (type $generated@@679) $generated@@75)) (= ($generated@@676 ($generated@@452 $generated@@678 $generated@@679)) $generated@@678))
 :pattern ( ($generated@@452 $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ) (! (= (type ($generated@@680 $generated@@681)) $generated@@75)
 :pattern ( ($generated@@680 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@75) (= (type $generated@@683) $generated@@75)) (= ($generated@@680 ($generated@@452 $generated@@682 $generated@@683)) $generated@@683))
 :pattern ( ($generated@@452 $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ) (! (= (type ($generated@@684 $generated@@685)) $generated@@75)
 :pattern ( ($generated@@684 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@75) (= (type $generated@@687) $generated@@75)) (= ($generated@@684 ($generated@@459 $generated@@686 $generated@@687)) $generated@@686))
 :pattern ( ($generated@@459 $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ) (! (= (type ($generated@@688 $generated@@689)) $generated@@75)
 :pattern ( ($generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@75) (= (type $generated@@691) $generated@@75)) (= ($generated@@688 ($generated@@459 $generated@@690 $generated@@691)) $generated@@691))
 :pattern ( ($generated@@459 $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@145) (= (type $generated@@693) $generated@@145)) (= ($generated@@364 ($generated@@317 $generated@@692 $generated@@693)) $generated@@65))
 :pattern ( ($generated@@317 $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ) (! (= (type ($generated@@694 $generated@@695)) $generated@@75)
 :pattern ( ($generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@75) (= (type $generated@@697) $generated@@75)) (= ($generated@@694 ($generated@@216 $generated@@696 $generated@@697)) $generated@@696))
 :pattern ( ($generated@@216 $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ) (! (= (type ($generated@@698 $generated@@699)) $generated@@75)
 :pattern ( ($generated@@698 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@75) (= (type $generated@@701) $generated@@75)) (= ($generated@@698 ($generated@@216 $generated@@700 $generated@@701)) $generated@@701))
 :pattern ( ($generated@@216 $generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@145) (= (type $generated@@703) $generated@@145)) (= ($generated@@224 ($generated@@317 $generated@@702 $generated@@703)) $generated@@702))
 :pattern ( ($generated@@317 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) $generated@@145) (= (type $generated@@705) $generated@@145)) (= ($generated@@225 ($generated@@317 $generated@@704 $generated@@705)) $generated@@705))
 :pattern ( ($generated@@317 $generated@@704 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@88) ($generated@@213 $generated@@706 $generated@@206))
 :pattern ( ($generated@@213 $generated@@706 $generated@@206))
)))
(assert  (and (forall (($generated@@709 T@U) ) (! (= (type ($generated@@707 $generated@@709)) $generated@@75)
 :pattern ( ($generated@@707 $generated@@709))
)) (forall (($generated@@710 T@U) ($generated@@711 Int) ) (! (let (($generated@@712 ($generated@@373 (type $generated@@710))))
(= (type ($generated@@708 $generated@@710 $generated@@711)) $generated@@712))
 :pattern ( ($generated@@708 $generated@@710 $generated@@711))
))))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@713) ($generated@@372 $generated@@145)) (= (type $generated@@714) $generated@@75)) (= (type $generated@@715) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@713 ($generated@@707 $generated@@714) $generated@@715) (forall (($generated@@716 Int) ) (!  (=> (and (<= 0 $generated@@716) (< $generated@@716 ($generated@@371 $generated@@713))) ($generated@@358 ($generated@@708 $generated@@713 $generated@@716) $generated@@714 $generated@@715))
 :pattern ( ($generated@@708 $generated@@713 $generated@@716))
))))
 :pattern ( ($generated@@85 $generated@@713 ($generated@@707 $generated@@714) $generated@@715))
)))
(assert (forall (($generated@@718 Int) ) (! (= ($generated@@717 ($generated@@86 $generated@@718)) $generated@@718)
 :pattern ( ($generated@@86 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ) (! (= (type ($generated@@719 $generated@@720)) $generated@@75)
 :pattern ( ($generated@@719 $generated@@720))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@75) (= ($generated@@719 ($generated@@326 $generated@@721)) $generated@@721))
 :pattern ( ($generated@@326 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@75) (= ($generated@@83 ($generated@@326 $generated@@722)) $generated@@54))
 :pattern ( ($generated@@326 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ) (! (= (type ($generated@@723 $generated@@724)) $generated@@75)
 :pattern ( ($generated@@723 $generated@@724))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@75) (= ($generated@@723 ($generated@@331 $generated@@725)) $generated@@725))
 :pattern ( ($generated@@331 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@75) (= ($generated@@83 ($generated@@331 $generated@@726)) $generated@@55))
 :pattern ( ($generated@@331 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ) (! (= (type ($generated@@727 $generated@@728)) $generated@@75)
 :pattern ( ($generated@@727 $generated@@728))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@75) (= ($generated@@727 ($generated@@230 $generated@@729)) $generated@@729))
 :pattern ( ($generated@@230 $generated@@729))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@75) (= ($generated@@83 ($generated@@230 $generated@@730)) $generated@@56))
 :pattern ( ($generated@@230 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ) (! (= (type ($generated@@731 $generated@@732)) $generated@@75)
 :pattern ( ($generated@@731 $generated@@732))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@75) (= ($generated@@731 ($generated@@707 $generated@@733)) $generated@@733))
 :pattern ( ($generated@@707 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@75) (= ($generated@@83 ($generated@@707 $generated@@734)) $generated@@57))
 :pattern ( ($generated@@707 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ) (! (let (($generated@@736 (type $generated@@735)))
(= ($generated@@379 $generated@@736 ($generated@@393 $generated@@735)) $generated@@735))
 :pattern ( ($generated@@393 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@737) ($generated@@414 $generated@@145 $generated@@145)) (= (type $generated@@738) $generated@@75)) (= (type $generated@@739) $generated@@75)) (= ($generated@@213 $generated@@737 ($generated@@579 $generated@@738 $generated@@739)) (forall (($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@145) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@737) $generated@@740))) (and ($generated@@146 ($generated@@92 ($generated@@546 $generated@@737) $generated@@740) $generated@@739) ($generated@@146 $generated@@740 $generated@@738)))
 :pattern ( ($generated@@92 ($generated@@546 $generated@@737) $generated@@740))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@737) $generated@@740))
))))
 :pattern ( ($generated@@213 $generated@@737 ($generated@@579 $generated@@738 $generated@@739)))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@741) ($generated@@432 $generated@@145 $generated@@145)) (= (type $generated@@742) $generated@@75)) (= (type $generated@@743) $generated@@75)) (= ($generated@@213 $generated@@741 ($generated@@587 $generated@@742 $generated@@743)) (forall (($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@145) ($generated@@0 ($generated@@92 ($generated@@430 $generated@@741) $generated@@744))) (and ($generated@@146 ($generated@@92 ($generated@@554 $generated@@741) $generated@@744) $generated@@743) ($generated@@146 $generated@@744 $generated@@742)))
 :pattern ( ($generated@@92 ($generated@@554 $generated@@741) $generated@@744))
 :pattern ( ($generated@@92 ($generated@@430 $generated@@741) $generated@@744))
))))
 :pattern ( ($generated@@213 $generated@@741 ($generated@@587 $generated@@742 $generated@@743)))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) $generated@@145) (= (type $generated@@748) $generated@@145)) (< ($generated@@745 $generated@@747) ($generated@@746 ($generated@@317 $generated@@747 $generated@@748))))
 :pattern ( ($generated@@317 $generated@@747 $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@145) (= (type $generated@@750) $generated@@145)) (< ($generated@@745 $generated@@750) ($generated@@746 ($generated@@317 $generated@@749 $generated@@750))))
 :pattern ( ($generated@@317 $generated@@749 $generated@@750))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (= (type $generated@@751) $generated@@75) (= (type $generated@@752) $generated@@75)) (= (type $generated@@753) $generated@@304)) (= ($generated@@213 $generated@@753 ($generated@@459 $generated@@751 $generated@@752))  (and ($generated@@213 $generated@@753 ($generated@@452 $generated@@751 $generated@@752)) (forall (($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@754) $generated@@145) ($generated@@146 $generated@@754 $generated@@751)) ($generated@@515 $generated@@751 $generated@@752 $generated@@343 $generated@@753 $generated@@754))
 :no-pattern (type $generated@@754)
 :no-pattern ($generated $generated@@754)
 :no-pattern ($generated@@0 $generated@@754)
)))))
 :pattern ( ($generated@@213 $generated@@753 ($generated@@459 $generated@@751 $generated@@752)))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (= (type $generated@@755) $generated@@75) (= (type $generated@@756) $generated@@75)) (= (type $generated@@757) $generated@@304)) (= ($generated@@213 $generated@@757 ($generated@@452 $generated@@755 $generated@@756))  (and ($generated@@213 $generated@@757 ($generated@@303 $generated@@755 $generated@@756)) (forall (($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@145) ($generated@@146 $generated@@758 $generated@@755)) ($generated@@345 ($generated@@342 $generated@@755 $generated@@756 $generated@@343 $generated@@757 $generated@@758) ($generated@@346 $generated@@145)))
 :no-pattern (type $generated@@758)
 :no-pattern ($generated $generated@@758)
 :no-pattern ($generated@@0 $generated@@758)
)))))
 :pattern ( ($generated@@213 $generated@@757 ($generated@@452 $generated@@755 $generated@@756)))
)))
(assert (forall (($generated@@760 T@U) ) (! (= (type ($generated@@759 $generated@@760)) $generated@@386)
 :pattern ( ($generated@@759 $generated@@760))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (! (let (($generated@@763 ($generated@@91 (type $generated@@761))))
 (=> (and (= (type $generated@@761) ($generated@@87 $generated@@386 $generated@@763)) (= (type $generated@@762) $generated@@386)) (= ($generated@@385 $generated@@761 ($generated@@759 $generated@@762)) ($generated@@385 $generated@@761 $generated@@762))))
 :pattern ( ($generated@@385 $generated@@761 ($generated@@759 $generated@@762)))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (and (= (type $generated@@764) $generated@@145) (= (type $generated@@765) $generated@@75)) (= (type $generated@@766) $generated@@75)) ($generated@@146 $generated@@764 ($generated@@579 $generated@@765 $generated@@766))) (and (= ($generated@@393 ($generated@@379 ($generated@@414 $generated@@145 $generated@@145) $generated@@764)) $generated@@764) ($generated@@213 ($generated@@379 ($generated@@414 $generated@@145 $generated@@145) $generated@@764) ($generated@@579 $generated@@765 $generated@@766))))
 :pattern ( ($generated@@146 $generated@@764 ($generated@@579 $generated@@765 $generated@@766)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (and (= (type $generated@@767) $generated@@145) (= (type $generated@@768) $generated@@75)) (= (type $generated@@769) $generated@@75)) ($generated@@146 $generated@@767 ($generated@@587 $generated@@768 $generated@@769))) (and (= ($generated@@393 ($generated@@379 ($generated@@432 $generated@@145 $generated@@145) $generated@@767)) $generated@@767) ($generated@@213 ($generated@@379 ($generated@@432 $generated@@145 $generated@@145) $generated@@767) ($generated@@587 $generated@@768 $generated@@769))))
 :pattern ( ($generated@@146 $generated@@767 ($generated@@587 $generated@@768 $generated@@769)))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (and (= (type $generated@@770) $generated@@75) (= (type $generated@@771) $generated@@75)) (= (type $generated@@772) $generated@@145)) ($generated@@146 $generated@@772 ($generated@@303 $generated@@770 $generated@@771))) (and (= ($generated@@393 ($generated@@379 $generated@@304 $generated@@772)) $generated@@772) ($generated@@213 ($generated@@379 $generated@@304 $generated@@772) ($generated@@303 $generated@@770 $generated@@771))))
 :pattern ( ($generated@@146 $generated@@772 ($generated@@303 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (= (type $generated@@773) $generated@@75) (= (type $generated@@774) $generated@@75)) (= (type $generated@@775) $generated@@145)) ($generated@@146 $generated@@775 ($generated@@452 $generated@@773 $generated@@774))) (and (= ($generated@@393 ($generated@@379 $generated@@304 $generated@@775)) $generated@@775) ($generated@@213 ($generated@@379 $generated@@304 $generated@@775) ($generated@@452 $generated@@773 $generated@@774))))
 :pattern ( ($generated@@146 $generated@@775 ($generated@@452 $generated@@773 $generated@@774)))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) $generated@@75) (= (type $generated@@777) $generated@@75)) (= (type $generated@@778) $generated@@145)) ($generated@@146 $generated@@778 ($generated@@459 $generated@@776 $generated@@777))) (and (= ($generated@@393 ($generated@@379 $generated@@304 $generated@@778)) $generated@@778) ($generated@@213 ($generated@@379 $generated@@304 $generated@@778) ($generated@@459 $generated@@776 $generated@@777))))
 :pattern ( ($generated@@146 $generated@@778 ($generated@@459 $generated@@776 $generated@@777)))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (and (and (= (type $generated@@779) $generated@@75) (= (type $generated@@780) $generated@@75)) (= (type $generated@@781) $generated@@145)) ($generated@@146 $generated@@781 ($generated@@216 $generated@@779 $generated@@780))) (and (= ($generated@@393 ($generated@@379 $generated@@217 $generated@@781)) $generated@@781) ($generated@@213 ($generated@@379 $generated@@217 $generated@@781) ($generated@@216 $generated@@779 $generated@@780))))
 :pattern ( ($generated@@146 $generated@@781 ($generated@@216 $generated@@779 $generated@@780)))
)))
(assert (forall (($generated@@782 T@U) ) (! (let (($generated@@783 (type $generated@@782)))
 (not ($generated@@0 ($generated@@92 ($generated@@346 $generated@@783) $generated@@782))))
 :pattern ( (let (($generated@@783 (type $generated@@782)))
($generated@@92 ($generated@@346 $generated@@783) $generated@@782)))
)))
(assert (forall (($generated@@784 T@U) ) (! (let (($generated@@785 (type $generated@@784)))
 (not ($generated@@0 ($generated@@92 ($generated@@609 $generated@@785) $generated@@784))))
 :pattern ( (let (($generated@@785 (type $generated@@784)))
($generated@@92 ($generated@@609 $generated@@785) $generated@@784)))
)))
(assert (forall (($generated@@787 T@U) ) (! (= (type ($generated@@786 $generated@@787)) $generated@@80)
 :pattern ( ($generated@@786 $generated@@787))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) $generated@@75) (= (type $generated@@789) $generated@@75)) (and (= ($generated@@83 ($generated@@303 $generated@@788 $generated@@789)) $generated@@62) (= ($generated@@786 ($generated@@303 $generated@@788 $generated@@789)) $generated@@70)))
 :pattern ( ($generated@@303 $generated@@788 $generated@@789))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) $generated@@75) (= (type $generated@@791) $generated@@75)) (and (= ($generated@@83 ($generated@@452 $generated@@790 $generated@@791)) $generated@@63) (= ($generated@@786 ($generated@@452 $generated@@790 $generated@@791)) $generated@@71)))
 :pattern ( ($generated@@452 $generated@@790 $generated@@791))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) $generated@@75) (= (type $generated@@793) $generated@@75)) (and (= ($generated@@83 ($generated@@459 $generated@@792 $generated@@793)) $generated@@64) (= ($generated@@786 ($generated@@459 $generated@@792 $generated@@793)) $generated@@72)))
 :pattern ( ($generated@@459 $generated@@792 $generated@@793))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) $generated@@75) (= (type $generated@@795) $generated@@75)) (and (= ($generated@@83 ($generated@@216 $generated@@794 $generated@@795)) $generated@@66) (= ($generated@@786 ($generated@@216 $generated@@794 $generated@@795)) $generated@@73)))
 :pattern ( ($generated@@216 $generated@@794 $generated@@795))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@796) $generated@@75) (= (type $generated@@797) $generated@@75)) (= (type $generated@@798) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@799) $generated@@304)) (= (type $generated@@800) $generated@@145)) (and (and ($generated@@344 $generated@@798) (and ($generated@@146 $generated@@800 $generated@@796) ($generated@@213 $generated@@799 ($generated@@303 $generated@@796 $generated@@797)))) ($generated@@345 ($generated@@342 $generated@@796 $generated@@797 $generated@@343 $generated@@799 $generated@@800) ($generated@@346 $generated@@145)))) (= ($generated@@515 $generated@@796 $generated@@797 $generated@@343 $generated@@799 $generated@@800) ($generated@@515 $generated@@796 $generated@@797 $generated@@798 $generated@@799 $generated@@800)))
 :pattern ( ($generated@@515 $generated@@796 $generated@@797 $generated@@343 $generated@@799 $generated@@800) ($generated@@344 $generated@@798))
 :pattern ( ($generated@@515 $generated@@796 $generated@@797 $generated@@798 $generated@@799 $generated@@800))
)))
(assert (forall (($generated@@801 T@U) ) (!  (=> (= (type $generated@@801) $generated@@217) (= ($generated@@745 ($generated@@393 $generated@@801)) ($generated@@746 $generated@@801)))
 :pattern ( ($generated@@745 ($generated@@393 $generated@@801)))
)))
(assert (forall (($generated@@802 T@U) ) (!  (=> (and (= (type $generated@@802) $generated@@145) ($generated@@146 $generated@@802 ($generated@@86 0))) (and (= ($generated@@393 ($generated@@379 $generated@@2 $generated@@802)) $generated@@802) ($generated@@213 ($generated@@379 ($generated@@87 $generated@@145 $generated@@4) $generated@@802) ($generated@@86 0))))
 :pattern ( ($generated@@146 $generated@@802 ($generated@@86 0)))
)))
(assert (forall (($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (= (type $generated@@803) $generated@@145) (= (type $generated@@804) $generated@@75)) ($generated@@146 $generated@@803 ($generated@@326 $generated@@804))) (and (= ($generated@@393 ($generated@@379 ($generated@@87 $generated@@145 $generated@@4) $generated@@803)) $generated@@803) ($generated@@213 ($generated@@379 ($generated@@87 $generated@@145 $generated@@4) $generated@@803) ($generated@@326 $generated@@804))))
 :pattern ( ($generated@@146 $generated@@803 ($generated@@326 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ) (!  (=> (and (and (= (type $generated@@805) $generated@@145) (= (type $generated@@806) $generated@@75)) ($generated@@146 $generated@@805 ($generated@@331 $generated@@806))) (and (= ($generated@@393 ($generated@@379 ($generated@@87 $generated@@145 $generated@@4) $generated@@805)) $generated@@805) ($generated@@213 ($generated@@379 ($generated@@87 $generated@@145 $generated@@4) $generated@@805) ($generated@@331 $generated@@806))))
 :pattern ( ($generated@@146 $generated@@805 ($generated@@331 $generated@@806)))
)))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ) (!  (=> (and (and (= (type $generated@@807) $generated@@145) (= (type $generated@@808) $generated@@75)) ($generated@@146 $generated@@807 ($generated@@230 $generated@@808))) (and (= ($generated@@393 ($generated@@379 ($generated@@87 $generated@@145 $generated@@2) $generated@@807)) $generated@@807) ($generated@@213 ($generated@@379 ($generated@@87 $generated@@145 $generated@@2) $generated@@807) ($generated@@230 $generated@@808))))
 :pattern ( ($generated@@146 $generated@@807 ($generated@@230 $generated@@808)))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (= (type $generated@@809) $generated@@145) (= (type $generated@@810) $generated@@75)) ($generated@@146 $generated@@809 ($generated@@707 $generated@@810))) (and (= ($generated@@393 ($generated@@379 ($generated@@372 $generated@@145) $generated@@809)) $generated@@809) ($generated@@213 ($generated@@379 ($generated@@372 $generated@@145) $generated@@809) ($generated@@707 $generated@@810))))
 :pattern ( ($generated@@146 $generated@@809 ($generated@@707 $generated@@810)))
)))
(assert (= ($generated@@83 $generated@@206) $generated@@61))
(assert (= ($generated@@786 $generated@@206) $generated@@69))
(assert (= ($generated@@83 $generated@@210) $generated@@67))
(assert (= ($generated@@786 $generated@@210) $generated@@74))
(assert (= ($generated@@83 $generated@@314) $generated@@68))
(assert (= ($generated@@786 $generated@@314) $generated@@74))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ($generated@@813 T@U) ) (!  (=> (and (and (= (type $generated@@811) ($generated@@87 $generated@@145 $generated@@2)) (= (type $generated@@812) $generated@@75)) (= (type $generated@@813) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@811 ($generated@@230 $generated@@812) $generated@@813) (forall (($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@814) $generated@@145) (< 0 ($generated ($generated@@92 $generated@@811 $generated@@814)))) ($generated@@358 $generated@@814 $generated@@812 $generated@@813))
 :pattern ( ($generated@@92 $generated@@811 $generated@@814))
))))
 :pattern ( ($generated@@85 $generated@@811 ($generated@@230 $generated@@812) $generated@@813))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (= (type $generated@@815) ($generated@@87 $generated@@88 $generated@@4)) ($generated@@213 ($generated@@378 $generated@@815) ($generated@@326 $generated@@206)))
 :pattern ( ($generated@@378 $generated@@815))
)))
(assert (forall (($generated@@816 T@U) ($generated@@817 T@U) ($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 T@U) ($generated@@821 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@816) $generated@@75) (= (type $generated@@817) $generated@@75)) (= (type $generated@@818) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@819) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@820) $generated@@304)) (= (type $generated@@821) $generated@@145)) (and (and (and ($generated@@202 $generated@@818 $generated@@819) (and ($generated@@344 $generated@@818) ($generated@@344 $generated@@819))) (and ($generated@@146 $generated@@821 $generated@@816) ($generated@@213 $generated@@820 ($generated@@303 $generated@@816 $generated@@817)))) (forall (($generated@@822 T@U) ($generated@@823 T@U) ) (! (let (($generated@@824 ($generated@@78 (type $generated@@823))))
 (=> (and (and (= (type $generated@@822) $generated@@88) (= (type $generated@@823) ($generated@@77 $generated@@824))) (and (not (= $generated@@822 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@816 $generated@@817 $generated@@818 $generated@@820 $generated@@821) ($generated@@393 $generated@@822))))) (= ($generated@@94 ($generated@@92 $generated@@818 $generated@@822) $generated@@823) ($generated@@94 ($generated@@92 $generated@@819 $generated@@822) $generated@@823))))
 :no-pattern (type $generated@@822)
 :no-pattern (type $generated@@823)
 :no-pattern ($generated $generated@@822)
 :no-pattern ($generated@@0 $generated@@822)
 :no-pattern ($generated $generated@@823)
 :no-pattern ($generated@@0 $generated@@823)
)))) (= ($generated@@515 $generated@@816 $generated@@817 $generated@@818 $generated@@820 $generated@@821) ($generated@@515 $generated@@816 $generated@@817 $generated@@819 $generated@@820 $generated@@821)))
 :pattern ( ($generated@@202 $generated@@818 $generated@@819) ($generated@@515 $generated@@816 $generated@@817 $generated@@819 $generated@@820 $generated@@821))
)))
(assert (forall (($generated@@825 T@U) ($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ($generated@@829 T@U) ($generated@@830 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@825) $generated@@75) (= (type $generated@@826) $generated@@75)) (= (type $generated@@827) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@828) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@829) $generated@@304)) (= (type $generated@@830) $generated@@145)) (and (and (and ($generated@@202 $generated@@827 $generated@@828) (and ($generated@@344 $generated@@827) ($generated@@344 $generated@@828))) (and ($generated@@146 $generated@@830 $generated@@825) ($generated@@213 $generated@@829 ($generated@@303 $generated@@825 $generated@@826)))) (forall (($generated@@831 T@U) ($generated@@832 T@U) ) (! (let (($generated@@833 ($generated@@78 (type $generated@@832))))
 (=> (and (and (= (type $generated@@831) $generated@@88) (= (type $generated@@832) ($generated@@77 $generated@@833))) (and (not (= $generated@@831 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@825 $generated@@826 $generated@@828 $generated@@829 $generated@@830) ($generated@@393 $generated@@831))))) (= ($generated@@94 ($generated@@92 $generated@@827 $generated@@831) $generated@@832) ($generated@@94 ($generated@@92 $generated@@828 $generated@@831) $generated@@832))))
 :no-pattern (type $generated@@831)
 :no-pattern (type $generated@@832)
 :no-pattern ($generated $generated@@831)
 :no-pattern ($generated@@0 $generated@@831)
 :no-pattern ($generated $generated@@832)
 :no-pattern ($generated@@0 $generated@@832)
)))) (= ($generated@@515 $generated@@825 $generated@@826 $generated@@827 $generated@@829 $generated@@830) ($generated@@515 $generated@@825 $generated@@826 $generated@@828 $generated@@829 $generated@@830)))
 :pattern ( ($generated@@202 $generated@@827 $generated@@828) ($generated@@515 $generated@@825 $generated@@826 $generated@@828 $generated@@829 $generated@@830))
)))
(assert (forall (($generated@@836 T@U) ) (! (= (type ($generated@@835 $generated@@836)) $generated@@75)
 :pattern ( ($generated@@835 $generated@@836))
)))
(assert (forall (($generated@@837 T@U) ) (!  (=> (= (type $generated@@837) $generated@@88) (= ($generated@@213 $generated@@837 $generated@@210)  (or (= $generated@@837 $generated@@207) ($generated@@834 ($generated@@835 $generated@@837)))))
 :pattern ( ($generated@@213 $generated@@837 $generated@@210))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ($generated@@840 T@U) ) (!  (=> (and (and (and (= (type $generated@@838) $generated@@217) (= (type $generated@@839) $generated@@75)) (= (type $generated@@840) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@344 $generated@@840) (and ($generated@@215 $generated@@838) (exists (($generated@@841 T@U) ) (!  (and (= (type $generated@@841) $generated@@75) ($generated@@85 $generated@@838 ($generated@@216 $generated@@839 $generated@@841) $generated@@840))
 :pattern ( ($generated@@85 $generated@@838 ($generated@@216 $generated@@839 $generated@@841) $generated@@840))
))))) ($generated@@358 ($generated@@224 $generated@@838) $generated@@839 $generated@@840))
 :pattern ( ($generated@@358 ($generated@@224 $generated@@838) $generated@@839 $generated@@840))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ($generated@@844 T@U) ) (!  (=> (and (and (and (= (type $generated@@842) $generated@@217) (= (type $generated@@843) $generated@@75)) (= (type $generated@@844) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@344 $generated@@844) (and ($generated@@215 $generated@@842) (exists (($generated@@845 T@U) ) (!  (and (= (type $generated@@845) $generated@@75) ($generated@@85 $generated@@842 ($generated@@216 $generated@@845 $generated@@843) $generated@@844))
 :pattern ( ($generated@@85 $generated@@842 ($generated@@216 $generated@@845 $generated@@843) $generated@@844))
))))) ($generated@@358 ($generated@@225 $generated@@842) $generated@@843 $generated@@844))
 :pattern ( ($generated@@358 ($generated@@225 $generated@@842) $generated@@843 $generated@@844))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (= (type $generated@@846) $generated@@145) (= (type $generated@@847) $generated@@145)) (= ($generated@@317 ($generated@@338 $generated@@846) ($generated@@338 $generated@@847)) ($generated@@338 ($generated@@317 $generated@@846 $generated@@847))))
 :pattern ( ($generated@@317 ($generated@@338 $generated@@846) ($generated@@338 $generated@@847)))
)))
(assert (forall (($generated@@848 Int) ) (! (= ($generated@@393 ($generated@@8 ($generated@@336 $generated@@848))) ($generated@@338 ($generated@@393 ($generated@@8 $generated@@848))))
 :pattern ( ($generated@@393 ($generated@@8 ($generated@@336 $generated@@848))))
)))
(assert (forall (($generated@@849 T@U) ) (! (= ($generated@@393 ($generated@@338 $generated@@849)) ($generated@@338 ($generated@@393 $generated@@849)))
 :pattern ( ($generated@@393 ($generated@@338 $generated@@849)))
)))
(assert (forall (($generated@@850 T@U) ) (! (let (($generated@@851 ($generated@@373 (type $generated@@850))))
 (=> (and (= (type $generated@@850) ($generated@@372 $generated@@851)) (= ($generated@@371 $generated@@850) 0)) (= $generated@@850 ($generated@@370 $generated@@851))))
 :pattern ( ($generated@@371 $generated@@850))
)))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ($generated@@854 T@U) ) (! (let (($generated@@855 (type $generated@@853)))
 (=> (and (and (= (type $generated@@852) ($generated@@87 $generated@@855 $generated@@2)) (= (type $generated@@854) $generated@@2)) (<= 0 ($generated $generated@@854))) (= ($generated@@406 ($generated@@93 $generated@@852 $generated@@853 $generated@@854)) (+ (- ($generated@@406 $generated@@852) ($generated ($generated@@92 $generated@@852 $generated@@853))) ($generated $generated@@854)))))
 :pattern ( ($generated@@406 ($generated@@93 $generated@@852 $generated@@853 $generated@@854)))
)))
(assert (forall (($generated@@856 T@U) ($generated@@857 T@U) ($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ($generated@@861 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@856) $generated@@75) (= (type $generated@@857) $generated@@75)) (= (type $generated@@858) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@859) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@860) $generated@@304)) (= (type $generated@@861) $generated@@145)) (and (and (and ($generated@@202 $generated@@858 $generated@@859) (and ($generated@@344 $generated@@858) ($generated@@344 $generated@@859))) (and ($generated@@146 $generated@@861 $generated@@856) ($generated@@213 $generated@@860 ($generated@@303 $generated@@856 $generated@@857)))) (forall (($generated@@862 T@U) ($generated@@863 T@U) ) (! (let (($generated@@864 ($generated@@78 (type $generated@@863))))
 (=> (and (and (= (type $generated@@862) $generated@@88) (= (type $generated@@863) ($generated@@77 $generated@@864))) (and (not (= $generated@@862 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@856 $generated@@857 $generated@@858 $generated@@860 $generated@@861) ($generated@@393 $generated@@862))))) (= ($generated@@94 ($generated@@92 $generated@@858 $generated@@862) $generated@@863) ($generated@@94 ($generated@@92 $generated@@859 $generated@@862) $generated@@863))))
 :no-pattern (type $generated@@862)
 :no-pattern (type $generated@@863)
 :no-pattern ($generated $generated@@862)
 :no-pattern ($generated@@0 $generated@@862)
 :no-pattern ($generated $generated@@863)
 :no-pattern ($generated@@0 $generated@@863)
)))) (= ($generated@@342 $generated@@856 $generated@@857 $generated@@858 $generated@@860 $generated@@861) ($generated@@342 $generated@@856 $generated@@857 $generated@@859 $generated@@860 $generated@@861)))
 :pattern ( ($generated@@202 $generated@@858 $generated@@859) ($generated@@342 $generated@@856 $generated@@857 $generated@@859 $generated@@860 $generated@@861))
)))
(assert (forall (($generated@@865 T@U) ($generated@@866 T@U) ($generated@@867 T@U) ($generated@@868 T@U) ($generated@@869 T@U) ($generated@@870 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@865) $generated@@75) (= (type $generated@@866) $generated@@75)) (= (type $generated@@867) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@868) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@869) $generated@@304)) (= (type $generated@@870) $generated@@145)) (and (and (and ($generated@@202 $generated@@867 $generated@@868) (and ($generated@@344 $generated@@867) ($generated@@344 $generated@@868))) (and ($generated@@146 $generated@@870 $generated@@865) ($generated@@213 $generated@@869 ($generated@@303 $generated@@865 $generated@@866)))) (forall (($generated@@871 T@U) ($generated@@872 T@U) ) (! (let (($generated@@873 ($generated@@78 (type $generated@@872))))
 (=> (and (and (= (type $generated@@871) $generated@@88) (= (type $generated@@872) ($generated@@77 $generated@@873))) (and (not (= $generated@@871 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@865 $generated@@866 $generated@@868 $generated@@869 $generated@@870) ($generated@@393 $generated@@871))))) (= ($generated@@94 ($generated@@92 $generated@@867 $generated@@871) $generated@@872) ($generated@@94 ($generated@@92 $generated@@868 $generated@@871) $generated@@872))))
 :no-pattern (type $generated@@871)
 :no-pattern (type $generated@@872)
 :no-pattern ($generated $generated@@871)
 :no-pattern ($generated@@0 $generated@@871)
 :no-pattern ($generated $generated@@872)
 :no-pattern ($generated@@0 $generated@@872)
)))) (= ($generated@@342 $generated@@865 $generated@@866 $generated@@867 $generated@@869 $generated@@870) ($generated@@342 $generated@@865 $generated@@866 $generated@@868 $generated@@869 $generated@@870)))
 :pattern ( ($generated@@202 $generated@@867 $generated@@868) ($generated@@342 $generated@@865 $generated@@866 $generated@@868 $generated@@869 $generated@@870))
)))
(assert (forall (($generated@@874 T@U) ($generated@@875 T@U) ($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ($generated@@879 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@874) $generated@@75) (= (type $generated@@875) $generated@@75)) (= (type $generated@@876) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@877) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@878) $generated@@304)) (= (type $generated@@879) $generated@@145)) (and (and (and ($generated@@202 $generated@@876 $generated@@877) (and ($generated@@344 $generated@@876) ($generated@@344 $generated@@877))) (and ($generated@@146 $generated@@879 $generated@@874) ($generated@@213 $generated@@878 ($generated@@303 $generated@@874 $generated@@875)))) (forall (($generated@@880 T@U) ($generated@@881 T@U) ) (! (let (($generated@@882 ($generated@@78 (type $generated@@881))))
 (=> (and (and (= (type $generated@@880) $generated@@88) (= (type $generated@@881) ($generated@@77 $generated@@882))) (and (not (= $generated@@880 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@874 $generated@@875 $generated@@876 $generated@@878 $generated@@879) ($generated@@393 $generated@@880))))) (= ($generated@@94 ($generated@@92 $generated@@876 $generated@@880) $generated@@881) ($generated@@94 ($generated@@92 $generated@@877 $generated@@880) $generated@@881))))
 :no-pattern (type $generated@@880)
 :no-pattern (type $generated@@881)
 :no-pattern ($generated $generated@@880)
 :no-pattern ($generated@@0 $generated@@880)
 :no-pattern ($generated $generated@@881)
 :no-pattern ($generated@@0 $generated@@881)
)))) (= ($generated@@469 $generated@@874 $generated@@875 $generated@@876 $generated@@878 $generated@@879) ($generated@@469 $generated@@874 $generated@@875 $generated@@877 $generated@@878 $generated@@879)))
 :pattern ( ($generated@@202 $generated@@876 $generated@@877) ($generated@@469 $generated@@874 $generated@@875 $generated@@877 $generated@@878 $generated@@879))
)))
(assert (forall (($generated@@883 T@U) ($generated@@884 T@U) ($generated@@885 T@U) ($generated@@886 T@U) ($generated@@887 T@U) ($generated@@888 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@883) $generated@@75) (= (type $generated@@884) $generated@@75)) (= (type $generated@@885) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@886) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@887) $generated@@304)) (= (type $generated@@888) $generated@@145)) (and (and (and ($generated@@202 $generated@@885 $generated@@886) (and ($generated@@344 $generated@@885) ($generated@@344 $generated@@886))) (and ($generated@@146 $generated@@888 $generated@@883) ($generated@@213 $generated@@887 ($generated@@303 $generated@@883 $generated@@884)))) (forall (($generated@@889 T@U) ($generated@@890 T@U) ) (! (let (($generated@@891 ($generated@@78 (type $generated@@890))))
 (=> (and (and (= (type $generated@@889) $generated@@88) (= (type $generated@@890) ($generated@@77 $generated@@891))) (and (not (= $generated@@889 $generated@@207)) ($generated@@0 ($generated@@92 ($generated@@342 $generated@@883 $generated@@884 $generated@@886 $generated@@887 $generated@@888) ($generated@@393 $generated@@889))))) (= ($generated@@94 ($generated@@92 $generated@@885 $generated@@889) $generated@@890) ($generated@@94 ($generated@@92 $generated@@886 $generated@@889) $generated@@890))))
 :no-pattern (type $generated@@889)
 :no-pattern (type $generated@@890)
 :no-pattern ($generated $generated@@889)
 :no-pattern ($generated@@0 $generated@@889)
 :no-pattern ($generated $generated@@890)
 :no-pattern ($generated@@0 $generated@@890)
)))) (= ($generated@@469 $generated@@883 $generated@@884 $generated@@885 $generated@@887 $generated@@888) ($generated@@469 $generated@@883 $generated@@884 $generated@@886 $generated@@887 $generated@@888)))
 :pattern ( ($generated@@202 $generated@@885 $generated@@886) ($generated@@469 $generated@@883 $generated@@884 $generated@@886 $generated@@887 $generated@@888))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 T@U) ) (!  (=> (and (= (type $generated@@892) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@893) $generated@@2)) ($generated@@85 $generated@@893 $generated@@46 $generated@@892))
 :pattern ( ($generated@@85 $generated@@893 $generated@@46 $generated@@892))
)))
(assert (forall (($generated@@894 T@U) ($generated@@895 T@U) ) (!  (=> (and (= (type $generated@@894) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@895) $generated@@3)) ($generated@@85 $generated@@895 $generated@@47 $generated@@894))
 :pattern ( ($generated@@85 $generated@@895 $generated@@47 $generated@@894))
)))
(assert (forall (($generated@@896 T@U) ($generated@@897 T@U) ) (!  (=> (and (= (type $generated@@896) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@897) $generated@@4)) ($generated@@85 $generated@@897 $generated@@44 $generated@@896))
 :pattern ( ($generated@@85 $generated@@897 $generated@@44 $generated@@896))
)))
(assert (forall (($generated@@898 T@U) ($generated@@899 T@U) ) (!  (=> (and (= (type $generated@@898) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@899) $generated@@633)) ($generated@@85 $generated@@899 $generated@@45 $generated@@898))
 :pattern ( ($generated@@85 $generated@@899 $generated@@45 $generated@@898))
)))
(assert (forall (($generated@@900 T@U) ($generated@@901 T@U) ) (!  (=> (and (= (type $generated@@900) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@901) $generated@@145)) ($generated@@85 $generated@@901 $generated@@48 $generated@@900))
 :pattern ( ($generated@@85 $generated@@901 $generated@@48 $generated@@900))
)))
(assert (forall (($generated@@902 T@U) ($generated@@903 T@U) ) (!  (=> (and (= (type $generated@@902) ($generated@@372 $generated@@145)) (= (type $generated@@903) $generated@@75)) (= ($generated@@213 $generated@@902 ($generated@@707 $generated@@903)) (forall (($generated@@904 Int) ) (!  (=> (and (<= 0 $generated@@904) (< $generated@@904 ($generated@@371 $generated@@902))) ($generated@@146 ($generated@@708 $generated@@902 $generated@@904) $generated@@903))
 :pattern ( ($generated@@708 $generated@@902 $generated@@904))
))))
 :pattern ( ($generated@@213 $generated@@902 ($generated@@707 $generated@@903)))
)))
(assert (forall (($generated@@906 T@U) ) (! (= (type ($generated@@905 $generated@@906)) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 $generated@@145))
 :pattern ( ($generated@@905 $generated@@906))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ($generated@@909 T@U) ) (!  (=> (and (and (= (type $generated@@907) $generated@@145) (= (type $generated@@908) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@909) $generated@@145)) (= ($generated@@143 ($generated@@905 $generated@@907) $generated@@908 $generated@@909) $generated@@907))
 :pattern ( ($generated@@143 ($generated@@905 $generated@@907) $generated@@908 $generated@@909))
)))
(assert (forall (($generated@@911 T@U) ) (! (= (type ($generated@@910 $generated@@911)) ($generated@@147 ($generated@@87 $generated@@88 $generated@@89) $generated@@145 ($generated@@87 $generated@@145 $generated@@4)))
 :pattern ( ($generated@@910 $generated@@911))
)))
(assert (forall (($generated@@912 T@U) ($generated@@913 T@U) ($generated@@914 T@U) ) (!  (=> (and (and (= (type $generated@@912) ($generated@@87 $generated@@145 $generated@@4)) (= (type $generated@@913) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@914) $generated@@145)) (= ($generated@@143 ($generated@@910 $generated@@912) $generated@@913 $generated@@914) $generated@@912))
 :pattern ( ($generated@@143 ($generated@@910 $generated@@912) $generated@@913 $generated@@914))
)))
(assert (forall (($generated@@916 T@U) ($generated@@917 Int) ) (!  (=> (= (type $generated@@916) ($generated@@372 $generated@@145)) (=> (and (<= 0 $generated@@917) (< $generated@@917 ($generated@@371 $generated@@916))) (< ($generated@@746 ($generated@@379 $generated@@217 ($generated@@708 $generated@@916 $generated@@917))) ($generated@@915 $generated@@916))))
 :pattern ( ($generated@@746 ($generated@@379 $generated@@217 ($generated@@708 $generated@@916 $generated@@917))))
)))
(assert (forall (($generated@@918 T@U) ($generated@@919 T@U) ($generated@@920 T@U) ) (!  (=> (and (and (and (= (type $generated@@918) ($generated@@414 $generated@@145 $generated@@145)) (= (type $generated@@919) $generated@@75)) (= (type $generated@@920) $generated@@75)) ($generated@@213 $generated@@918 ($generated@@579 $generated@@919 $generated@@920))) (and (and ($generated@@213 ($generated@@412 $generated@@918) ($generated@@326 $generated@@919)) ($generated@@213 ($generated@@494 $generated@@918) ($generated@@326 $generated@@920))) ($generated@@213 ($generated@@545 $generated@@918) ($generated@@326 ($generated@@216 $generated@@919 $generated@@920)))))
 :pattern ( ($generated@@213 $generated@@918 ($generated@@579 $generated@@919 $generated@@920)))
)))
(assert (forall (($generated@@921 T@U) ($generated@@922 T@U) ($generated@@923 T@U) ) (!  (=> (and (and (and (= (type $generated@@921) ($generated@@432 $generated@@145 $generated@@145)) (= (type $generated@@922) $generated@@75)) (= (type $generated@@923) $generated@@75)) ($generated@@213 $generated@@921 ($generated@@587 $generated@@922 $generated@@923))) (and (and ($generated@@213 ($generated@@430 $generated@@921) ($generated@@331 $generated@@922)) ($generated@@213 ($generated@@505 $generated@@921) ($generated@@331 $generated@@923))) ($generated@@213 ($generated@@553 $generated@@921) ($generated@@331 ($generated@@216 $generated@@922 $generated@@923)))))
 :pattern ( ($generated@@213 $generated@@921 ($generated@@587 $generated@@922 $generated@@923)))
)))
(assert (forall (($generated@@924 T@U) ) (!  (=> (= (type $generated@@924) $generated@@2) ($generated@@213 $generated@@924 $generated@@46))
 :pattern ( ($generated@@213 $generated@@924 $generated@@46))
)))
(assert (forall (($generated@@925 T@U) ) (!  (=> (= (type $generated@@925) $generated@@3) ($generated@@213 $generated@@925 $generated@@47))
 :pattern ( ($generated@@213 $generated@@925 $generated@@47))
)))
(assert (forall (($generated@@926 T@U) ) (!  (=> (= (type $generated@@926) $generated@@4) ($generated@@213 $generated@@926 $generated@@44))
 :pattern ( ($generated@@213 $generated@@926 $generated@@44))
)))
(assert (forall (($generated@@927 T@U) ) (!  (=> (= (type $generated@@927) $generated@@633) ($generated@@213 $generated@@927 $generated@@45))
 :pattern ( ($generated@@213 $generated@@927 $generated@@45))
)))
(assert (forall (($generated@@928 T@U) ) (!  (=> (= (type $generated@@928) $generated@@145) ($generated@@213 $generated@@928 $generated@@48))
 :pattern ( ($generated@@213 $generated@@928 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@929 () T@U)
(declare-fun $generated@@930 () T@U)
(declare-fun $generated@@931 () T@U)
(declare-fun $generated@@932 () T@U)
(declare-fun $generated@@933 (T@U) Bool)
(declare-fun $generated@@934 () T@U)
(declare-fun $generated@@935 () Bool)
(declare-fun $generated@@936 () T@U)
(declare-fun $generated@@937 () T@U)
(declare-fun $generated@@938 () T@U)
(declare-fun $generated@@939 () T@U)
(declare-fun $generated@@940 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@936) $generated@@304) (= (type $generated@@937) $generated@@386)) (= (type $generated@@929) $generated@@88)) (= (type $generated@@930) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@931) ($generated@@237 $generated@@88 $generated@@4))) (= (type $generated@@932) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@934) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@938) ($generated@@237 $generated@@88 $generated@@4))) (= (type $generated@@939) $generated@@304)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@941 true))
(let (($generated@@942  (=> (and (not (and ($generated@@213 $generated@@929 $generated@@314) ($generated@@85 $generated@@929 $generated@@314 $generated@@930))) (= (ControlFlow 0 7) 3)) $generated@@941)))
(let (($generated@@943  (=> (and (and ($generated@@213 $generated@@929 $generated@@314) ($generated@@85 $generated@@929 $generated@@314 $generated@@930)) (= $generated@@931 ($generated@@291 $generated@@207 $generated@@930 $generated@@60 false))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not (= $generated@@929 $generated@@207))) (=> (not (= $generated@@929 $generated@@207)) (=> (and (and ($generated@@344 $generated@@932) ($generated@@933 $generated@@932)) (and ($generated@@0 ($generated@@338 ($generated@@11 false))) (= $generated@@934 $generated@@932))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not (= ($generated@@336 0) 0))) (=> (not (= ($generated@@336 0) 0)) (=> (= $generated@@935 (= ($generated@@336 ($generated@@595 5 ($generated@@336 0))) ($generated@@336 19))) (=> (and ($generated@@213 ($generated@@11 $generated@@935) $generated@@44) (= (ControlFlow 0 4) 3)) $generated@@941))))))))))
(let (($generated@@944  (=> (and ($generated@@344 $generated@@930) (or (= $generated@@934 $generated@@930) ($generated@@202 $generated@@934 $generated@@930))) (and (=> (= (ControlFlow 0 8) 4) $generated@@943) (=> (= (ControlFlow 0 8) 7) $generated@@942)))))
(let (($generated@@945  (=> (and (= $generated@@936 ($generated@@338 ($generated@@385 ($generated@@531 ($generated@@470 ($generated@@905 ($generated@@393 ($generated@@11 (= ($generated@@336 ($generated@@595 5 ($generated@@336 0))) ($generated@@336 19))))) ($generated@@144 $generated@@314) ($generated@@910 ($generated@@378 ($generated@@527 false))))) ($generated@@759 $generated@@937)))) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@336 0) 0)))))
(let (($generated@@946  (=> (= $generated@@938 ($generated@@236 $generated@@207 $generated@@934 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@944) (=> (= (ControlFlow 0 9) 2) $generated@@945)))))
(let (($generated@@947  (=> (and ($generated@@344 $generated@@934) ($generated@@933 $generated@@934)) (=> (and (and (and ($generated@@213 $generated@@939 ($generated@@459 $generated@@314 $generated@@44)) ($generated@@85 $generated@@939 ($generated@@459 $generated@@314 $generated@@44) $generated@@934)) true) (and (= 1 $generated@@940) (= (ControlFlow 0 10) 9))) $generated@@946))))
$generated@@947))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U Bool) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (Int) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (Int Int) Int)
(declare-fun $generated@@411 () Int)
(declare-fun $generated@@412 () Bool)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@551 () Int)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 11) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82 $generated@@83)) 12))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@78 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@78 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (let (($generated@@90 ($generated@@80 (type $generated@@88))))
(= (type ($generated@@74 $generated@@88 $generated@@89)) $generated@@90))
 :pattern ( ($generated@@74 $generated@@88 $generated@@89))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 (type $generated@@93)))
(let (($generated@@95 (type $generated@@92)))
(= (type ($generated@@81 $generated@@91 $generated@@92 $generated@@93)) ($generated@@78 $generated@@95 $generated@@94))))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92 $generated@@93))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@80 (type $generated@@96))))
 (=> (= (type $generated@@98) $generated@@99) (= ($generated@@74 ($generated@@81 $generated@@96 $generated@@97 $generated@@98) $generated@@97) $generated@@98)))
 :weight 0
))) (and (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@102 $generated@@103) (= ($generated@@74 ($generated@@81 $generated@@101 $generated@@102 $generated@@100) $generated@@103) ($generated@@74 $generated@@101 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or true (= ($generated@@74 ($generated@@81 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@74 $generated@@105 $generated@@107)))
 :weight 0
)))) (forall (($generated@@108 T@U) ($generated@@109 Bool) ) (! (= (type ($generated@@75 $generated@@108 $generated@@109)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@75 $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 Bool) ($generated@@112 T@U) ) (!  (=> (and (= (type $generated@@110) $generated@@64) (= (type $generated@@112) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))  (and ($generated@@77 $generated@@112 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@115) 13) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@117 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@117 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@116) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@118 $generated@@122 $generated@@123 $generated@@124)) $generated@@116)
 :pattern ( ($generated@@118 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@117 ($generated@@118 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@117 ($generated@@118 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@117 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@117 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@114 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@114 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
 :pattern ( ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@114 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@114 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@76)
 :pattern ( ($generated@@151 $generated@@153))
)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@76)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@144) (= (type $generated@@156) $generated@@144)) true) (= ($generated@@150 $generated@@155 $generated@@156)  (and (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156)))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@140 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@140 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@115 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@115) (= (type $generated@@212) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@115)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@115 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@115) (= (type $generated@@224) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@115)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232)) $generated@@144)
 :pattern ( ($generated@@230 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@76)) (= (type $generated@@236) $generated@@76)) (= ($generated@@140 ($generated@@230 $generated@@235 $generated@@236) ($generated@@143 $generated@@233 $generated@@234))  (and ($generated@@77 $generated@@235 $generated@@233) ($generated@@77 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@140 ($generated@@230 $generated@@235 $generated@@236) ($generated@@143 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@144) (= (type $generated@@238) $generated@@144)) (= ($generated@@150 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@150 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@76) ($generated@@0 ($generated@@74 $generated@@241 $generated@@243))) ($generated@@77 $generated@@243 $generated@@242))
 :pattern ( ($generated@@74 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@76) ($generated@@0 ($generated@@74 $generated@@246 $generated@@248))) ($generated@@77 $generated@@248 $generated@@247))
 :pattern ( ($generated@@74 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@76)) (= (type $generated@@260) $generated@@76)) (= (type $generated@@261) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@255 $generated@@261)) (= ($generated@@113 ($generated@@230 $generated@@259 $generated@@260) ($generated@@143 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@113 ($generated@@230 $generated@@259 $generated@@260) ($generated@@143 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@144) (= ($generated@@142 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@144) ($generated@@142 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@76) (= (type $generated@@267) $generated@@76)) (= $generated@@265 ($generated@@230 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@142 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (= (type $generated@@277) $generated@@64))
(assert ($generated@@276 $generated@@277))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@76)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@256 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@113 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@256 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@79 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@74 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@74 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@74 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@74 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@74 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@158 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@74 $generated@@325 $generated@@327))) (<= ($generated ($generated@@74 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@74 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@158 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@74 ($generated@@289 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@289 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@293 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@293 (type $generated@@335))))
(let (($generated@@337 ($generated@@292 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@291 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@290 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@74 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@311 (type $generated@@339))))
(let (($generated@@341 ($generated@@310 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@309 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@308 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@74 ($generated@@307 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@307 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@311 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@74 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@140 $generated@@350 ($generated@@157 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@350 $generated@@352)))) ($generated@@77 $generated@@352 $generated@@351))
 :pattern ( ($generated@@74 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@157 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@353 ($generated@@239 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@76) ($generated@@0 ($generated@@74 $generated@@353 $generated@@356))) ($generated@@256 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@74 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@113 $generated@@353 ($generated@@239 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@357 ($generated@@244 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@76) ($generated@@0 ($generated@@74 $generated@@357 $generated@@360))) ($generated@@256 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@74 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@113 $generated@@357 ($generated@@244 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@74 ($generated@@284 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@74 ($generated@@284 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@293 (type $generated@@369))))
(let (($generated@@371 ($generated@@292 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@78 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@291 $generated@@76 $generated@@76)) (= (type $generated@@373) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@74 ($generated@@289 $generated@@372) ($generated@@151 ($generated@@364 $generated@@144 $generated@@373)))) (= ($generated@@74 ($generated@@365 $generated@@372) ($generated@@151 ($generated@@364 $generated@@144 $generated@@373))) ($generated@@152 ($generated@@364 $generated@@144 $generated@@373))))))
 :pattern ( ($generated@@74 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@311 (type $generated@@377))))
(let (($generated@@379 ($generated@@310 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@309 $generated@@76 $generated@@76)) (= (type $generated@@381) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@74 ($generated@@307 $generated@@380) ($generated@@151 ($generated@@364 $generated@@144 $generated@@381)))) (= ($generated@@74 ($generated@@375 $generated@@380) ($generated@@151 ($generated@@364 $generated@@144 $generated@@381))) ($generated@@152 ($generated@@364 $generated@@144 $generated@@381))))))
 :pattern ( ($generated@@74 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@292 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@291 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@74 ($generated@@332 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@74 ($generated@@289 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@74 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@74 ($generated@@289 $generated@@382) $generated@@386))
 :pattern ( ($generated@@74 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@74 ($generated@@332 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@310 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@309 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@74 ($generated@@343 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@74 ($generated@@307 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@74 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@74 ($generated@@307 $generated@@387) $generated@@391))
 :pattern ( ($generated@@74 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@74 ($generated@@343 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@291 $generated@@76 $generated@@76)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@289 $generated@@395) $generated@@399))) (and ($generated@@256 ($generated@@74 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@256 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@74 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@74 ($generated@@289 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@113 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@309 $generated@@76 $generated@@76)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@307 $generated@@403) $generated@@407))) (and ($generated@@256 ($generated@@74 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@256 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@74 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@74 ($generated@@307 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@113 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 Int) ($generated@@410 Int) ) (! (= ($generated@@408 $generated@@409 $generated@@410) (div $generated@@409 $generated@@410))
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert  (=> (<= 1 $generated@@411) (=> (or $generated@@412 (not (= 1 $generated@@411))) true)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@78 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@311 (type $generated@@415))))
(let (($generated@@417 ($generated@@310 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@309 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@308 $generated@@417 $generated@@416)) (= ($generated@@307 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@307 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@311 (type $generated@@418))))
(let (($generated@@420 ($generated@@310 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@309 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@308 $generated@@420 $generated@@419)) (= ($generated@@343 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@343 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@311 (type $generated@@421))))
(let (($generated@@423 ($generated@@310 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@309 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@308 $generated@@423 $generated@@422)) (= ($generated@@374 $generated@@421) ($generated@@413 $generated@@76))))))
 :pattern ( ($generated@@374 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@293 (type $generated@@424))))
(let (($generated@@426 ($generated@@292 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@291 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@290 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@76) (= (type $generated@@428) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@363 $generated@@424) ($generated@@278 ($generated@@230 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@363 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@311 (type $generated@@429))))
(let (($generated@@431 ($generated@@310 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@309 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@308 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@76) (= (type $generated@@433) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@374 $generated@@429) ($generated@@278 ($generated@@230 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@374 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@76) ($generated@@77 $generated@@434 $generated@@46)) (and (= ($generated@@278 ($generated@@364 $generated@@2 $generated@@434)) $generated@@434) ($generated@@140 ($generated@@364 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@77 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@76) ($generated@@77 $generated@@435 $generated@@47)) (and (= ($generated@@278 ($generated@@364 $generated@@3 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@364 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@77 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@76) ($generated@@77 $generated@@436 $generated@@44)) (and (= ($generated@@278 ($generated@@364 $generated@@4 $generated@@436)) $generated@@436) ($generated@@140 ($generated@@364 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@77 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@76) ($generated@@77 $generated@@438 $generated@@45)) (and (= ($generated@@278 ($generated@@364 $generated@@437 $generated@@438)) $generated@@438) ($generated@@140 ($generated@@364 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@77 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@77 ($generated@@278 $generated@@439) $generated@@440) ($generated@@140 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@77 ($generated@@278 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@78 $generated@@442 $generated@@2)) (<= 0 ($generated@@283 $generated@@441))))
 :pattern ( ($generated@@283 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@271 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@270 $generated@@444)) (<= 0 ($generated@@269 $generated@@443))))
 :pattern ( ($generated@@269 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) ($generated@@276 $generated@@445)) (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@447) $generated@@76)) ($generated@@77 $generated@@447 $generated@@445)) ($generated@@256 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@256 $generated@@447 $generated@@445 $generated@@446))
)))
 :pattern ( ($generated@@276 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@392 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@392 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@392 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@392 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@400 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@400 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@400 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@76) (= (type $generated@@469) $generated@@76)) (= ($generated@@262 ($generated@@230 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@143 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@143 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@143 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@143 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@76) (= (type $generated@@479) $generated@@76)) (= ($generated@@151 ($generated@@230 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@230 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@76) (= (type $generated@@481) $generated@@76)) (= ($generated@@152 ($generated@@230 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@230 $generated@@480 $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@271 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@270 $generated@@76)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@269 $generated@@488))) ($generated@@256 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@113 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@114 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@114 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@239 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@239 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@244 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@244 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@157 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@157 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@364 $generated@@511 ($generated@@278 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@278 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@291 $generated@@76 $generated@@76)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@140 $generated@@512 ($generated@@392 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@289 $generated@@512) $generated@@515))) (and ($generated@@77 ($generated@@74 ($generated@@365 $generated@@512) $generated@@515) $generated@@514) ($generated@@77 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@74 ($generated@@365 $generated@@512) $generated@@515))
 :pattern ( ($generated@@74 ($generated@@289 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@140 $generated@@512 ($generated@@392 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@309 $generated@@76 $generated@@76)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@140 $generated@@516 ($generated@@400 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@307 $generated@@516) $generated@@519))) (and ($generated@@77 ($generated@@74 ($generated@@375 $generated@@516) $generated@@519) $generated@@518) ($generated@@77 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@74 ($generated@@375 $generated@@516) $generated@@519))
 :pattern ( ($generated@@74 ($generated@@307 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@140 $generated@@516 ($generated@@400 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@76) (= (type $generated@@523) $generated@@76)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@230 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@230 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@76) (= (type $generated@@525) $generated@@76)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@230 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@230 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@76) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@77 $generated@@526 ($generated@@392 $generated@@527 $generated@@528))) (and (= ($generated@@278 ($generated@@364 ($generated@@291 $generated@@76 $generated@@76) $generated@@526)) $generated@@526) ($generated@@140 ($generated@@364 ($generated@@291 $generated@@76 $generated@@76) $generated@@526) ($generated@@392 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@77 $generated@@526 ($generated@@392 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@76) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@77 $generated@@529 ($generated@@400 $generated@@530 $generated@@531))) (and (= ($generated@@278 ($generated@@364 ($generated@@309 $generated@@76 $generated@@76) $generated@@529)) $generated@@529) ($generated@@140 ($generated@@364 ($generated@@309 $generated@@76 $generated@@76) $generated@@529) ($generated@@400 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@77 $generated@@529 ($generated@@400 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@76)) ($generated@@77 $generated@@534 ($generated@@143 $generated@@532 $generated@@533))) (and (= ($generated@@278 ($generated@@364 $generated@@144 $generated@@534)) $generated@@534) ($generated@@140 ($generated@@364 $generated@@144 $generated@@534) ($generated@@143 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@143 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@74 ($generated@@413 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@74 ($generated@@413 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@539 $generated@@540)) $generated@@62) (= ($generated@@537 ($generated@@143 $generated@@539 $generated@@540)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@144) (= ($generated@@520 ($generated@@278 $generated@@541)) ($generated@@521 $generated@@541)))
 :pattern ( ($generated@@520 ($generated@@278 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@76) ($generated@@77 $generated@@542 ($generated@@114 0))) (and (= ($generated@@278 ($generated@@364 $generated@@2 $generated@@542)) $generated@@542) ($generated@@140 ($generated@@364 ($generated@@78 $generated@@76 $generated@@4) $generated@@542) ($generated@@114 0))))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@114 0)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@76) (= (type $generated@@544) $generated@@64)) ($generated@@77 $generated@@543 ($generated@@239 $generated@@544))) (and (= ($generated@@278 ($generated@@364 ($generated@@78 $generated@@76 $generated@@4) $generated@@543)) $generated@@543) ($generated@@140 ($generated@@364 ($generated@@78 $generated@@76 $generated@@4) $generated@@543) ($generated@@239 $generated@@544))))
 :pattern ( ($generated@@77 $generated@@543 ($generated@@239 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@76) (= (type $generated@@546) $generated@@64)) ($generated@@77 $generated@@545 ($generated@@244 $generated@@546))) (and (= ($generated@@278 ($generated@@364 ($generated@@78 $generated@@76 $generated@@4) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@364 ($generated@@78 $generated@@76 $generated@@4) $generated@@545) ($generated@@244 $generated@@546))))
 :pattern ( ($generated@@77 $generated@@545 ($generated@@244 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@76) (= (type $generated@@548) $generated@@64)) ($generated@@77 $generated@@547 ($generated@@157 $generated@@548))) (and (= ($generated@@278 ($generated@@364 ($generated@@78 $generated@@76 $generated@@2) $generated@@547)) $generated@@547) ($generated@@140 ($generated@@364 ($generated@@78 $generated@@76 $generated@@2) $generated@@547) ($generated@@157 $generated@@548))))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@157 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@76) (= (type $generated@@550) $generated@@64)) ($generated@@77 $generated@@549 ($generated@@482 $generated@@550))) (and (= ($generated@@278 ($generated@@364 ($generated@@270 $generated@@76) $generated@@549)) $generated@@549) ($generated@@140 ($generated@@364 ($generated@@270 $generated@@76) $generated@@549) ($generated@@482 $generated@@550))))
 :pattern ( ($generated@@77 $generated@@549 ($generated@@482 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@411) (=> (or $generated@@412 (not (= 1 $generated@@411))) (= $generated@@551 ($generated@@249 ($generated@@408 40 ($generated@@249 0)))))))
(assert  (=> (<= 1 $generated@@411) (=> (or $generated@@412 (not (= 1 $generated@@411))) (= $generated@@551 ($generated@@249 ($generated@@408 40 ($generated@@249 0)))))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@552 ($generated@@157 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@552 $generated@@555)))) ($generated@@256 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@113 $generated@@552 ($generated@@157 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@144) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@255 $generated@@558) (and ($generated@@142 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@113 $generated@@556 ($generated@@143 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@113 $generated@@556 ($generated@@143 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@256 ($generated@@151 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@256 ($generated@@151 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@144) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@255 $generated@@562) (and ($generated@@142 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@113 $generated@@560 ($generated@@143 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@113 $generated@@560 ($generated@@143 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@256 ($generated@@152 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@256 ($generated@@152 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@76) (= (type $generated@@565) $generated@@76)) (= ($generated@@230 ($generated@@251 $generated@@564) ($generated@@251 $generated@@565)) ($generated@@251 ($generated@@230 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@230 ($generated@@251 $generated@@564) ($generated@@251 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@249 $generated@@566))) ($generated@@251 ($generated@@278 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@249 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@278 ($generated@@251 $generated@@567)) ($generated@@251 ($generated@@278 $generated@@567)))
 :pattern ( ($generated@@278 ($generated@@251 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@271 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@270 $generated@@569)) (= ($generated@@269 $generated@@568) 0)) (= $generated@@568 ($generated@@268 $generated@@569))))
 :pattern ( ($generated@@269 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@283 ($generated@@81 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@283 $generated@@570) ($generated ($generated@@74 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@283 ($generated@@81 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@575) $generated@@2)) ($generated@@113 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@113 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@577) $generated@@3)) ($generated@@113 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@113 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@579) $generated@@4)) ($generated@@113 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@113 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@581) $generated@@437)) ($generated@@113 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@113 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@583) $generated@@76)) ($generated@@113 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@113 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@270 $generated@@76)) (= (type $generated@@585) $generated@@64)) (= ($generated@@140 $generated@@584 ($generated@@482 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@269 $generated@@584))) ($generated@@77 ($generated@@483 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@483 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@140 $generated@@584 ($generated@@482 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@270 $generated@@76)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@269 $generated@@588))) (< ($generated@@521 ($generated@@364 $generated@@144 ($generated@@483 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@521 ($generated@@364 $generated@@144 ($generated@@483 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@291 $generated@@76 $generated@@76)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@140 $generated@@590 ($generated@@392 $generated@@591 $generated@@592))) (and (and ($generated@@140 ($generated@@289 $generated@@590) ($generated@@239 $generated@@591)) ($generated@@140 ($generated@@332 $generated@@590) ($generated@@239 $generated@@592))) ($generated@@140 ($generated@@363 $generated@@590) ($generated@@239 ($generated@@143 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@140 $generated@@590 ($generated@@392 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@309 $generated@@76 $generated@@76)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@140 $generated@@593 ($generated@@400 $generated@@594 $generated@@595))) (and (and ($generated@@140 ($generated@@307 $generated@@593) ($generated@@244 $generated@@594)) ($generated@@140 ($generated@@343 $generated@@593) ($generated@@244 $generated@@595))) ($generated@@140 ($generated@@374 $generated@@593) ($generated@@244 ($generated@@143 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@140 $generated@@593 ($generated@@400 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@140 $generated@@596 $generated@@46))
 :pattern ( ($generated@@140 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@140 $generated@@597 $generated@@47))
 :pattern ( ($generated@@140 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@140 $generated@@598 $generated@@44))
 :pattern ( ($generated@@140 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@437) ($generated@@140 $generated@@599 $generated@@45))
 :pattern ( ($generated@@140 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@76) ($generated@@140 $generated@@600 $generated@@48))
 :pattern ( ($generated@@140 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 (T@U) Bool)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@601) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@602) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@603) $generated@@76)) (= (type $generated@@604) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@605) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@607) ($generated@@164 $generated@@115 $generated@@4))) (= (type $generated@@608) $generated@@115)) (= (type $generated@@609) ($generated@@164 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@610  (=> (and (and (= $generated@@601 ($generated@@75 $generated@@277 (= ($generated@@249 ($generated@@408 5 ($generated@@249 0))) ($generated@@249 19)))) ($generated@@140 $generated@@601 ($generated@@244 $generated@@277))) (and (= $generated@@602 $generated@@601) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@249 0) 0)))))
(let (($generated@@611  (=> (and (not (= ($generated@@249 ($generated@@408 5 ($generated@@249 0))) ($generated@@249 19))) (= (ControlFlow 0 6) 3)) $generated@@610)))
(let (($generated@@612  (=> (and (= ($generated@@249 ($generated@@408 5 ($generated@@249 0))) ($generated@@249 19)) (= (ControlFlow 0 5) 3)) $generated@@610)))
(let (($generated@@613  (=> (and ($generated@@77 $generated@@603 $generated@@277) ($generated@@256 $generated@@603 $generated@@277 $generated@@604)) (=> (and (and ($generated@@255 $generated@@605) ($generated@@606 $generated@@605)) (and ($generated@@0 ($generated@@251 ($generated@@11 false))) (= $generated@@604 $generated@@605))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not (= ($generated@@249 0) 0))) (=> (not (= ($generated@@249 0) 0)) (and (=> (= (ControlFlow 0 7) 5) $generated@@612) (=> (= (ControlFlow 0 7) 6) $generated@@611))))))))
(let (($generated@@614  (=> (and (not (and ($generated@@77 $generated@@603 $generated@@277) ($generated@@256 $generated@@603 $generated@@277 $generated@@604))) (= (ControlFlow 0 4) 3)) $generated@@610)))
(let (($generated@@615  (=> (= $generated@@607 ($generated@@218 $generated@@608 $generated@@604 $generated@@60 false)) (=> (and ($generated@@140 $generated@@602 ($generated@@244 $generated@@277)) ($generated@@113 $generated@@602 ($generated@@244 $generated@@277) $generated@@604)) (and (=> (= (ControlFlow 0 9) 7) $generated@@613) (=> (= (ControlFlow 0 9) 4) $generated@@614))))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (= $generated@@609 ($generated@@163 $generated@@608 $generated@@604 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@616) (=> (= (ControlFlow 0 10) 9) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@255 $generated@@604) ($generated@@606 $generated@@604)) (and (= 1 $generated@@411) (= (ControlFlow 0 11) 10))) $generated@@617)))
$generated@@618))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U Bool T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (Int Int) Int)
(declare-fun $generated@@414 () Int)
(declare-fun $generated@@415 () Bool)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@64) (= (type $generated@@255) $generated@@145)) (= (type $generated@@256) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@249 $generated@@253 $generated@@254 $generated@@255) $generated@@256)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@145) (and (and ($generated@@224 $generated@@257 $generated@@253) $generated@@254) (= $generated@@256 $generated@@255)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))
 :pattern ( ($generated@@81 ($generated@@249 $generated@@253 $generated@@254 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@145)) (= (type $generated@@263) $generated@@145)) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@258 $generated@@264)) (= ($generated@@74 ($generated@@223 $generated@@262 $generated@@263) ($generated@@135 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@262 $generated@@263) ($generated@@135 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@136) (= ($generated@@134 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@136) ($generated@@134 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@145) (= (type $generated@@270) $generated@@145)) (= $generated@@268 ($generated@@223 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@134 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (= (type $generated@@280) $generated@@64))
(assert ($generated@@279 $generated@@280))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@145)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@259 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@74 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@259 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@76 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@81 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@76 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (= ($generated@@151 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@81 $generated@@328 $generated@@330))) (<= ($generated ($generated@@81 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@151 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@292 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@296 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@296 (type $generated@@338))))
(let (($generated@@340 ($generated@@295 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@294 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@293 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@314 (type $generated@@342))))
(let (($generated@@344 ($generated@@313 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@312 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@311 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@310 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@314 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@314 (type $generated@@349))))
(let (($generated@@351 ($generated@@313 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@312 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@311 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@354) $generated@@64)) (= ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@353 $generated@@355)))) ($generated@@224 $generated@@355 $generated@@354))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@233 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@259 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@233 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@238 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@259 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@238 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@81 ($generated@@287 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@81 ($generated@@287 $generated@@365) $generated@@364)))
)))
(assert  (and (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@366 $generated@@369)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@366 $generated@@369))
)) (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@367 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@296 (type $generated@@372))))
(let (($generated@@374 ($generated@@295 (type $generated@@372))))
(= (type ($generated@@368 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@368 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@375) ($generated@@143 ($generated@@367 $generated@@136 $generated@@376)))) (= ($generated@@81 ($generated@@368 $generated@@375) ($generated@@143 ($generated@@367 $generated@@136 $generated@@376))) ($generated@@144 ($generated@@367 $generated@@136 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@314 (type $generated@@380))))
(let (($generated@@382 ($generated@@313 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@383) ($generated@@143 ($generated@@367 $generated@@136 $generated@@384)))) (= ($generated@@81 ($generated@@378 $generated@@383) ($generated@@143 ($generated@@367 $generated@@136 $generated@@384))) ($generated@@144 ($generated@@367 $generated@@136 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@295 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@294 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@313 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@312 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@398) $generated@@402))) (and ($generated@@259 ($generated@@81 ($generated@@368 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@259 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@406) $generated@@410))) (and ($generated@@259 ($generated@@81 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@259 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 Int) ($generated@@413 Int) ) (! (= ($generated@@411 $generated@@412 $generated@@413) (div $generated@@412 $generated@@413))
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert  (=> (<= 1 $generated@@414) (=> (or $generated@@415 (not (= 1 $generated@@414))) true)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@314 (type $generated@@418))))
(let (($generated@@420 ($generated@@313 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@312 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@311 $generated@@420 $generated@@419)) (= ($generated@@310 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@310 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@314 (type $generated@@421))))
(let (($generated@@423 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@311 $generated@@423 $generated@@422)) (= ($generated@@346 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@346 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@314 (type $generated@@424))))
(let (($generated@@426 ($generated@@313 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@312 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@311 $generated@@426 $generated@@425)) (= ($generated@@377 $generated@@424) ($generated@@416 $generated@@145))))))
 :pattern ( ($generated@@377 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@296 (type $generated@@427))))
(let (($generated@@429 ($generated@@295 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@294 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@293 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@427) ($generated@@281 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@366 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@314 (type $generated@@432))))
(let (($generated@@434 ($generated@@313 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@312 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@311 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@145) (= (type $generated@@436) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@432) ($generated@@281 ($generated@@223 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@377 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@46)) (and (= ($generated@@281 ($generated@@367 $generated@@2 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@367 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@47)) (and (= ($generated@@281 ($generated@@367 $generated@@3 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@367 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@44)) (and (= ($generated@@281 ($generated@@367 $generated@@4 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@367 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@224 $generated@@441 $generated@@45)) (and (= ($generated@@281 ($generated@@367 $generated@@440 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@367 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@224 ($generated@@281 $generated@@442) $generated@@443) ($generated@@132 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@224 ($generated@@281 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@286 $generated@@444))))
 :pattern ( ($generated@@286 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@274 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@273 $generated@@447)) (<= 0 ($generated@@272 $generated@@446))))
 :pattern ( ($generated@@272 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) ($generated@@279 $generated@@448)) (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@450) $generated@@145)) ($generated@@224 $generated@@450 $generated@@448)) ($generated@@259 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@259 $generated@@450 $generated@@448 $generated@@449))
)))
 :pattern ( ($generated@@279 $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@395 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@395 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@395 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@403 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@403 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@403 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@265 ($generated@@223 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@223 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@274 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@273 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@272 $generated@@491))) ($generated@@259 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@233 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@238 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@150 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@367 $generated@@514 ($generated@@281 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@281 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@368 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@403 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@519) $generated@@522))) (and ($generated@@224 ($generated@@81 ($generated@@378 $generated@@519) $generated@@522) $generated@@521) ($generated@@224 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@403 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@223 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@223 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@529 ($generated@@395 $generated@@530 $generated@@531))) (and (= ($generated@@281 ($generated@@367 ($generated@@294 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@367 ($generated@@294 $generated@@145 $generated@@145) $generated@@529) ($generated@@395 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@395 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@403 $generated@@533 $generated@@534))) (and (= ($generated@@281 ($generated@@367 ($generated@@312 $generated@@145 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@367 ($generated@@312 $generated@@145 $generated@@145) $generated@@532) ($generated@@403 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@403 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@145)) ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536))) (and (= ($generated@@281 ($generated@@367 $generated@@136 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@367 $generated@@136 $generated@@537) ($generated@@135 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@416 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@135 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@136) (= ($generated@@523 ($generated@@281 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@281 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@224 $generated@@545 ($generated@@75 0))) (and (= ($generated@@281 ($generated@@367 $generated@@2 $generated@@545)) $generated@@545) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@224 $generated@@546 ($generated@@233 $generated@@547))) (and (= ($generated@@281 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@233 $generated@@547))))
 :pattern ( ($generated@@224 $generated@@546 ($generated@@233 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@238 $generated@@549))) (and (= ($generated@@281 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@238 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@238 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@150 $generated@@551))) (and (= ($generated@@281 ($generated@@367 ($generated@@76 $generated@@145 $generated@@2) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@2) $generated@@550) ($generated@@150 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@150 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@281 ($generated@@367 ($generated@@273 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@367 ($generated@@273 $generated@@145) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@259 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@258 $generated@@560) (and ($generated@@134 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@259 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@259 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@258 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@259 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@259 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@566) ($generated@@245 $generated@@567)) ($generated@@245 ($generated@@223 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@566) ($generated@@245 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@281 ($generated@@8 ($generated@@243 $generated@@568))) ($generated@@245 ($generated@@281 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@281 ($generated@@8 ($generated@@243 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@281 ($generated@@245 $generated@@569)) ($generated@@245 ($generated@@281 $generated@@569)))
 :pattern ( ($generated@@281 ($generated@@245 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@274 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@273 $generated@@571)) (= ($generated@@272 $generated@@570) 0)) (= $generated@@570 ($generated@@271 $generated@@571))))
 :pattern ( ($generated@@272 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@286 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@286 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@286 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@440)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@273 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@485 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@272 $generated@@586))) ($generated@@224 ($generated@@486 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@486 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@485 $generated@@587)))
)))
(assert  (=> (<= 1 $generated@@414) (=> (or $generated@@415 (not (= 1 $generated@@414))) (= $generated@@589 ($generated@@243 ($generated@@411 40 ($generated@@243 0)))))))
(assert  (=> (<= 1 $generated@@414) (=> (or $generated@@415 (not (= 1 $generated@@414))) (= $generated@@589 ($generated@@243 ($generated@@411 40 ($generated@@243 0)))))))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@273 $generated@@145)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@272 $generated@@591))) (< ($generated@@524 ($generated@@367 $generated@@136 ($generated@@486 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@524 ($generated@@367 $generated@@136 ($generated@@486 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@132 $generated@@593 ($generated@@395 $generated@@594 $generated@@595))) (and (and ($generated@@132 ($generated@@292 $generated@@593) ($generated@@233 $generated@@594)) ($generated@@132 ($generated@@335 $generated@@593) ($generated@@233 $generated@@595))) ($generated@@132 ($generated@@366 $generated@@593) ($generated@@233 ($generated@@135 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@395 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@132 $generated@@596 ($generated@@403 $generated@@597 $generated@@598))) (and (and ($generated@@132 ($generated@@310 $generated@@596) ($generated@@238 $generated@@597)) ($generated@@132 ($generated@@346 $generated@@596) ($generated@@238 $generated@@598))) ($generated@@132 ($generated@@377 $generated@@596) ($generated@@238 ($generated@@135 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@132 $generated@@596 ($generated@@403 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@132 $generated@@599 $generated@@46))
 :pattern ( ($generated@@132 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@132 $generated@@600 $generated@@47))
 :pattern ( ($generated@@132 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@132 $generated@@601 $generated@@44))
 :pattern ( ($generated@@132 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@440) ($generated@@132 $generated@@602 $generated@@45))
 :pattern ( ($generated@@132 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@145) ($generated@@132 $generated@@603 $generated@@48))
 :pattern ( ($generated@@132 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@604) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@605) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@609) $generated@@145)) (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@610) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@611) $generated@@77)) (= (type $generated@@612) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@613  (=> (and (and (= $generated@@604 ($generated@@249 $generated@@280 ($generated@@0 ($generated@@245 ($generated@@11 true))) ($generated@@281 ($generated@@11 (= ($generated@@243 ($generated@@411 5 ($generated@@243 0))) ($generated@@243 19)))))) ($generated@@132 $generated@@604 ($generated@@233 $generated@@44))) (and (= $generated@@605 $generated@@604) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@243 0) 0)))))
(let (($generated@@614  (=> (and (not ($generated@@0 ($generated@@245 ($generated@@11 true)))) (= (ControlFlow 0 7) 3)) $generated@@613)))
(let (($generated@@615  (=> ($generated@@0 ($generated@@245 ($generated@@11 true))) (=> (and (and ($generated@@258 $generated@@606) ($generated@@607 $generated@@606)) (and ($generated@@0 ($generated@@245 ($generated@@11 false))) (= $generated@@608 $generated@@606))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= ($generated@@243 0) 0))) (=> (not (= ($generated@@243 0) 0)) (=> (= (ControlFlow 0 5) 3) $generated@@613)))))))
(let (($generated@@616  (=> (and ($generated@@224 $generated@@609 $generated@@280) ($generated@@259 $generated@@609 $generated@@280 $generated@@608)) (and (=> (= (ControlFlow 0 8) 5) $generated@@615) (=> (= (ControlFlow 0 8) 7) $generated@@614)))))
(let (($generated@@617  (=> (and (not (and ($generated@@224 $generated@@609 $generated@@280) ($generated@@259 $generated@@609 $generated@@280 $generated@@608))) (= (ControlFlow 0 4) 3)) $generated@@613)))
(let (($generated@@618  (=> (= $generated@@610 ($generated@@211 $generated@@611 $generated@@608 $generated@@60 false)) (=> (and ($generated@@132 $generated@@605 ($generated@@233 $generated@@44)) ($generated@@74 $generated@@605 ($generated@@233 $generated@@44) $generated@@608)) (and (=> (= (ControlFlow 0 9) 8) $generated@@616) (=> (= (ControlFlow 0 9) 4) $generated@@617))))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (= $generated@@612 ($generated@@156 $generated@@611 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@619) (=> (= (ControlFlow 0 10) 9) $generated@@618)))))
(let (($generated@@621  (=> (and (and ($generated@@258 $generated@@608) ($generated@@607 $generated@@608)) (and (= 1 $generated@@414) (= (ControlFlow 0 11) 10))) $generated@@620)))
$generated@@621))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U Bool) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (Int) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@204 (T@U T@U) Bool)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 (T@U T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@294 (T@U T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@313 (Int) Int)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 () T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@347 (T@U) Int)
(declare-fun $generated@@348 (T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Bool)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 (Int Int) Int)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@T T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@633 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 11) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82 $generated@@83)) 12))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@78 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@78 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (let (($generated@@90 ($generated@@80 (type $generated@@88))))
(= (type ($generated@@74 $generated@@88 $generated@@89)) $generated@@90))
 :pattern ( ($generated@@74 $generated@@88 $generated@@89))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 (type $generated@@93)))
(let (($generated@@95 (type $generated@@92)))
(= (type ($generated@@81 $generated@@91 $generated@@92 $generated@@93)) ($generated@@78 $generated@@95 $generated@@94))))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92 $generated@@93))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@80 (type $generated@@96))))
 (=> (= (type $generated@@98) $generated@@99) (= ($generated@@74 ($generated@@81 $generated@@96 $generated@@97 $generated@@98) $generated@@97) $generated@@98)))
 :weight 0
))) (and (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@102 $generated@@103) (= ($generated@@74 ($generated@@81 $generated@@101 $generated@@102 $generated@@100) $generated@@103) ($generated@@74 $generated@@101 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or true (= ($generated@@74 ($generated@@81 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@74 $generated@@105 $generated@@107)))
 :weight 0
)))) (forall (($generated@@108 T@U) ($generated@@109 Bool) ) (! (= (type ($generated@@75 $generated@@108 $generated@@109)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@75 $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 Bool) ($generated@@112 T@U) ) (!  (=> (and (= (type $generated@@110) $generated@@64) (= (type $generated@@112) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))  (and ($generated@@77 $generated@@112 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@115) 13) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@117 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@117 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@116) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@118 $generated@@122 $generated@@123 $generated@@124)) $generated@@116)
 :pattern ( ($generated@@118 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@117 ($generated@@118 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@117 ($generated@@118 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@117 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@117 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@114 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@114 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
 :pattern ( ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
)))
(assert  (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@145 $generated@@146)) 15)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@143 ($generated@@142 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@144 ($generated@@142 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151)) ($generated@@78 $generated@@152 $generated@@4)))
 :pattern ( ($generated@@140 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@80 (type $generated@@154))))
(let (($generated@@157 ($generated@@79 (type $generated@@153))))
(= (type ($generated@@141 $generated@@153 $generated@@154 $generated@@155)) ($generated@@142 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@141 $generated@@153 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@80 (type $generated@@159))))
(let (($generated@@162 ($generated@@79 (type $generated@@158))))
 (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@159) ($generated@@78 $generated@@162 $generated@@161))) (= (type $generated@@160) $generated@@64)) (= ($generated@@140 ($generated@@141 $generated@@158 $generated@@159 $generated@@160)) $generated@@158))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@158 $generated@@159 $generated@@160)))
)))
(assert (forall (($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@144 (type $generated@@164))))
(let (($generated@@166 ($generated@@143 (type $generated@@164))))
(= (type ($generated@@163 $generated@@164)) ($generated@@78 $generated@@166 $generated@@165))))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@80 (type $generated@@168))))
(let (($generated@@171 ($generated@@79 (type $generated@@167))))
 (=> (and (and (= (type $generated@@167) ($generated@@78 $generated@@171 $generated@@4)) (= (type $generated@@168) ($generated@@78 $generated@@171 $generated@@170))) (= (type $generated@@169) $generated@@64)) (= ($generated@@163 ($generated@@141 $generated@@167 $generated@@168 $generated@@169)) $generated@@168))))
 :pattern ( ($generated@@163 ($generated@@141 $generated@@167 $generated@@168 $generated@@169)))
)))
(assert  (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@174 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@172 $generated@@183)) ($generated@@78 $generated@@184 $generated@@4)))
 :pattern ( ($generated@@172 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@80 (type $generated@@186))))
(let (($generated@@189 ($generated@@79 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) ($generated@@174 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@80 (type $generated@@191))))
(let (($generated@@194 ($generated@@79 (type $generated@@190))))
 (=> (and (and (= (type $generated@@190) ($generated@@78 $generated@@194 $generated@@4)) (= (type $generated@@191) ($generated@@78 $generated@@194 $generated@@193))) (= (type $generated@@192) $generated@@64)) (= ($generated@@172 ($generated@@173 $generated@@190 $generated@@191 $generated@@192)) $generated@@190))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@190 $generated@@191 $generated@@192)))
)))
(assert (forall (($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@176 (type $generated@@196))))
(let (($generated@@198 ($generated@@175 (type $generated@@196))))
(= (type ($generated@@195 $generated@@196)) ($generated@@78 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@80 (type $generated@@200))))
(let (($generated@@203 ($generated@@79 (type $generated@@199))))
 (=> (and (and (= (type $generated@@199) ($generated@@78 $generated@@203 $generated@@4)) (= (type $generated@@200) ($generated@@78 $generated@@203 $generated@@202))) (= (type $generated@@201) $generated@@64)) (= ($generated@@195 ($generated@@173 $generated@@199 $generated@@200 $generated@@201)) $generated@@200))))
 :pattern ( ($generated@@195 ($generated@@173 $generated@@199 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@2) ($generated@@204 $generated@@205 ($generated@@114 0)))
 :pattern ( ($generated@@204 $generated@@205 ($generated@@114 0)))
)))
(assert  (and (= ($generated@@1 $generated@@208) 17) (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@209 $generated@@210)) $generated@@64)
 :pattern ( ($generated@@207 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@64) (= (type $generated@@212) $generated@@64)) (= (type $generated@@213) $generated@@208)) ($generated@@204 $generated@@213 ($generated@@207 $generated@@211 $generated@@212))) ($generated@@206 $generated@@213))
 :pattern ( ($generated@@206 $generated@@213) ($generated@@204 $generated@@213 ($generated@@207 $generated@@211 $generated@@212)))
)))
(assert  (and (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@76)
 :pattern ( ($generated@@215 $generated@@217))
)) (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@76)
 :pattern ( ($generated@@216 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) $generated@@208) (= (type $generated@@220) $generated@@208)) true) (= ($generated@@214 $generated@@219 $generated@@220)  (and (= ($generated@@215 $generated@@219) ($generated@@215 $generated@@220)) (= ($generated@@216 $generated@@219) ($generated@@216 $generated@@220)))))
 :pattern ( ($generated@@214 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@223)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (= (type $generated@@224) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@225) $generated@@64)) ($generated@@204 $generated@@224 ($generated@@221 $generated@@225))) ($generated@@222 $generated@@224))
 :pattern ( ($generated@@204 $generated@@224 ($generated@@221 $generated@@225)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@232 $generated@@233)) 18)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@228 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@228 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@226 $generated@@238 $generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@226 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(let (($generated@@247 (type $generated@@243)))
(= (type ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@228 $generated@@247 $generated@@246))))
 :pattern ( ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@230 (type $generated@@248))))
 (=> (= (type $generated@@251) $generated@@252) (= ($generated@@226 ($generated@@231 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@249 $generated@@250) $generated@@251)))
 :weight 0
))) (and (and (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@226 ($generated@@231 $generated@@254 $generated@@255 $generated@@256 $generated@@253) $generated@@257 $generated@@258) ($generated@@226 $generated@@254 $generated@@257 $generated@@258)))
 :weight 0
)) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (or (= $generated@@262 $generated@@264) (= ($generated@@226 ($generated@@231 $generated@@260 $generated@@261 $generated@@262 $generated@@259) $generated@@263 $generated@@264) ($generated@@226 $generated@@260 $generated@@263 $generated@@264)))
 :weight 0
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (or true (= ($generated@@226 ($generated@@231 $generated@@266 $generated@@267 $generated@@268 $generated@@265) $generated@@269 $generated@@270) ($generated@@226 $generated@@266 $generated@@269 $generated@@270)))
 :weight 0
)))) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ) (! (= (type ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274)) ($generated@@228 $generated@@115 $generated@@4))
 :pattern ( ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Bool) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@67 (type $generated@@280))))
 (=> (and (and (and (and (= (type $generated@@275) $generated@@115) (= (type $generated@@276) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@277) ($generated@@66 $generated@@4))) (= (type $generated@@279) $generated@@115)) (= (type $generated@@280) ($generated@@66 $generated@@281))) (= ($generated@@0 ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))  (=> (and (not (= $generated@@279 $generated@@275)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@276 $generated@@279) $generated@@277))) $generated@@278))))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 Bool) ) (! (= (type ($generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286)) ($generated@@228 $generated@@115 $generated@@4))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@67 (type $generated@@292))))
 (=> (and (and (and (and (= (type $generated@@287) $generated@@115) (= (type $generated@@288) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@289) ($generated@@66 $generated@@4))) (= (type $generated@@291) $generated@@115)) (= (type $generated@@292) ($generated@@66 $generated@@293))) (= ($generated@@0 ($generated@@226 ($generated@@282 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291 $generated@@292))  (=> (and (not (= $generated@@291 $generated@@287)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@288 $generated@@291) $generated@@289))) $generated@@290))))
 :pattern ( ($generated@@226 ($generated@@282 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (= (type ($generated@@294 $generated@@295 $generated@@296)) $generated@@208)
 :pattern ( ($generated@@294 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@64)) (= (type $generated@@299) $generated@@76)) (= (type $generated@@300) $generated@@76)) (= ($generated@@204 ($generated@@294 $generated@@299 $generated@@300) ($generated@@207 $generated@@297 $generated@@298))  (and ($generated@@77 $generated@@299 $generated@@297) ($generated@@77 $generated@@300 $generated@@298))))
 :pattern ( ($generated@@204 ($generated@@294 $generated@@299 $generated@@300) ($generated@@207 $generated@@297 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@208) (= (type $generated@@302) $generated@@208)) (= ($generated@@214 $generated@@301 $generated@@302) (= $generated@@301 $generated@@302)))
 :pattern ( ($generated@@214 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@64)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@306) $generated@@64)) (= ($generated@@204 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@76) ($generated@@0 ($generated@@74 $generated@@305 $generated@@307))) ($generated@@77 $generated@@307 $generated@@306))
 :pattern ( ($generated@@74 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@204 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@64)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@311) $generated@@64)) (= ($generated@@204 $generated@@310 ($generated@@308 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@76) ($generated@@0 ($generated@@74 $generated@@310 $generated@@312))) ($generated@@77 $generated@@312 $generated@@311))
 :pattern ( ($generated@@74 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@204 $generated@@310 ($generated@@308 $generated@@311)))
)))
(assert (forall (($generated@@314 Int) ) (! (= ($generated@@313 $generated@@314) $generated@@314)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 (type $generated@@316)))
(= (type ($generated@@315 $generated@@316)) $generated@@317))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= ($generated@@315 $generated@@318) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@64) (= (type $generated@@322) $generated@@64)) (= (type $generated@@323) $generated@@76)) (= (type $generated@@324) $generated@@76)) (= (type $generated@@325) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@319 $generated@@325)) (= ($generated@@113 ($generated@@294 $generated@@323 $generated@@324) ($generated@@207 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@113 ($generated@@294 $generated@@323 $generated@@324) ($generated@@207 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@68)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@208) (= ($generated@@206 $generated@@328) (= ($generated@@326 $generated@@328) $generated@@61)))
 :pattern ( ($generated@@206 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@208) ($generated@@206 $generated@@329)) (exists (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (and (and (= (type $generated@@330) $generated@@76) (= (type $generated@@331) $generated@@76)) (= $generated@@329 ($generated@@294 $generated@@330 $generated@@331)))
 :no-pattern (type $generated@@330)
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
)))
 :pattern ( ($generated@@206 $generated@@329))
)))
(assert  (and (and (forall (($generated@@336 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@336)) 19)) (forall (($generated@@337 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@334 $generated@@337))
))) (forall (($generated@@338 T@T) ) (! (= (type ($generated@@332 $generated@@338)) ($generated@@334 $generated@@338))
 :pattern ( ($generated@@332 $generated@@338))
))))
(assert (forall (($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@339)) 0)
 :pattern ( ($generated@@332 $generated@@339))
)))
(assert (= (type $generated@@341) $generated@@64))
(assert ($generated@@340 $generated@@341))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@76)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@64) (= (type $generated@@346) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@320 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@113 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@320 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@349 T@T) ) (! (= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@349 $generated@@2))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@78 $generated@@351 $generated@@2)) (and (= (= ($generated@@347 $generated@@350) 0) (= $generated@@350 ($generated@@348 $generated@@351))) (=> (not (= ($generated@@347 $generated@@350) 0)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) (< 0 ($generated ($generated@@74 $generated@@350 $generated@@352))))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) ($generated@@142 $generated@@354 $generated@@355))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@74 ($generated@@140 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@74 ($generated@@140 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) ($generated@@174 $generated@@360 $generated@@361))
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@74 ($generated@@172 ($generated@@359 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@74 ($generated@@172 ($generated@@359 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@78 $generated@@366 $generated@@2)) (= ($generated@@222 $generated@@365) (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@366) (and (<= 0 ($generated ($generated@@74 $generated@@365 $generated@@367))) (<= ($generated ($generated@@74 $generated@@365 $generated@@367)) ($generated@@347 $generated@@365))))
 :pattern ( ($generated@@74 $generated@@365 $generated@@367))
)))))
 :pattern ( ($generated@@222 $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@144 (type $generated@@368))))
(let (($generated@@370 ($generated@@143 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@142 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@353 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@140 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@144 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@78 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@144 (type $generated@@375))))
(let (($generated@@377 ($generated@@143 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@142 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@353 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@74 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@176 (type $generated@@379))))
(let (($generated@@381 ($generated@@175 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@174 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@359 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@172 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@176 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@78 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@176 (type $generated@@386))))
(let (($generated@@388 ($generated@@175 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@174 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@359 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@74 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@391) $generated@@64)) (= ($generated@@204 $generated@@390 ($generated@@221 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@390 $generated@@392)))) ($generated@@77 $generated@@392 $generated@@391))
 :pattern ( ($generated@@74 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@204 $generated@@390 ($generated@@221 $generated@@391)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@78 $generated@@76 $generated@@76))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@398 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@400 $generated@@401))
))))
(assert  (=> (<= 1 $generated@@393) (=> (or $generated@@394 (not (= 1 $generated@@393))) (= $generated@@395 ($generated@@313 ($generated@@396 40 ($generated@@313 0)))))))
(assert  (=> (<= 1 $generated@@393) (=> (or $generated@@394 (not (= 1 $generated@@393))) (= $generated@@395 ($generated@@313 ($generated@@396 40 ($generated@@313 0)))))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@76) (= (type $generated@@403) $generated@@76)) (= ($generated@@74 ($generated@@397 $generated@@402) $generated@@403) $generated@@402))
 :pattern ( ($generated@@74 ($generated@@397 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@404 ($generated@@303 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@76) ($generated@@0 ($generated@@74 $generated@@404 $generated@@407))) ($generated@@320 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@74 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@113 $generated@@404 ($generated@@303 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@408 ($generated@@308 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@76) ($generated@@0 ($generated@@74 $generated@@408 $generated@@411))) ($generated@@320 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@74 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@113 $generated@@408 ($generated@@308 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@74 ($generated@@348 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@74 ($generated@@348 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@T) ($generated@@418 T@U) ) (! (= (type ($generated@@415 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@415 $generated@@417 $generated@@418))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@420) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@414 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@74 ($generated@@140 $generated@@419) ($generated@@215 ($generated@@415 $generated@@208 $generated@@420)))) (= ($generated@@74 ($generated@@163 $generated@@419) ($generated@@215 ($generated@@415 $generated@@208 $generated@@420))) ($generated@@216 ($generated@@415 $generated@@208 $generated@@420))))))
 :pattern ( ($generated@@74 ($generated@@414 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@424) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@421 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@74 ($generated@@172 $generated@@423) ($generated@@215 ($generated@@415 $generated@@208 $generated@@424)))) (= ($generated@@74 ($generated@@195 $generated@@423) ($generated@@215 ($generated@@415 $generated@@208 $generated@@424))) ($generated@@216 ($generated@@415 $generated@@208 $generated@@424))))))
 :pattern ( ($generated@@74 ($generated@@421 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@143 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@142 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@74 ($generated@@372 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@74 ($generated@@140 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@74 ($generated@@163 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@425) $generated@@429))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@74 ($generated@@372 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@175 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@174 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@74 ($generated@@383 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@74 ($generated@@172 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@74 ($generated@@195 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@430) $generated@@434))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@74 ($generated@@383 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@439) $generated@@64)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@438) $generated@@442))) (and ($generated@@320 ($generated@@74 ($generated@@163 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@320 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@438) $generated@@442))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@113 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@444) $generated@@64)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@443 ($generated@@398 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@443) $generated@@447))) (and ($generated@@320 ($generated@@74 ($generated@@195 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@320 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@443) $generated@@447))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@113 $generated@@443 ($generated@@398 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 Int) ($generated@@449 Int) ) (! (= ($generated@@396 $generated@@448 $generated@@449) (div $generated@@448 $generated@@449))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert  (=> (<= 1 $generated@@393) (=> (or $generated@@394 (not (= 1 $generated@@393))) true)))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@78 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@176 (type $generated@@452))))
(let (($generated@@454 ($generated@@175 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@174 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@359 $generated@@454 $generated@@453)) (= ($generated@@172 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@172 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@176 (type $generated@@455))))
(let (($generated@@457 ($generated@@175 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@174 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@359 $generated@@457 $generated@@456)) (= ($generated@@383 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@383 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@176 (type $generated@@458))))
(let (($generated@@460 ($generated@@175 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@174 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@359 $generated@@460 $generated@@459)) (= ($generated@@421 $generated@@458) ($generated@@450 $generated@@76))))))
 :pattern ( ($generated@@421 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@144 (type $generated@@461))))
(let (($generated@@463 ($generated@@143 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@142 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@353 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@76) (= (type $generated@@465) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@414 $generated@@461) ($generated@@342 ($generated@@294 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@414 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@176 (type $generated@@466))))
(let (($generated@@468 ($generated@@175 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@174 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@359 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@76) (= (type $generated@@470) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@421 $generated@@466) ($generated@@342 ($generated@@294 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@421 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@76) ($generated@@77 $generated@@471 $generated@@46)) (and (= ($generated@@342 ($generated@@415 $generated@@2 $generated@@471)) $generated@@471) ($generated@@204 ($generated@@415 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@77 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@76) ($generated@@77 $generated@@472 $generated@@47)) (and (= ($generated@@342 ($generated@@415 $generated@@3 $generated@@472)) $generated@@472) ($generated@@204 ($generated@@415 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@77 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@76) ($generated@@77 $generated@@473 $generated@@44)) (and (= ($generated@@342 ($generated@@415 $generated@@4 $generated@@473)) $generated@@473) ($generated@@204 ($generated@@415 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@77 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 20))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@76) ($generated@@77 $generated@@475 $generated@@45)) (and (= ($generated@@342 ($generated@@415 $generated@@474 $generated@@475)) $generated@@475) ($generated@@204 ($generated@@415 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@77 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@77 ($generated@@342 $generated@@476) $generated@@477) ($generated@@204 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@77 ($generated@@342 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@79 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@78 $generated@@479 $generated@@2)) (<= 0 ($generated@@347 $generated@@478))))
 :pattern ( ($generated@@347 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@335 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@334 $generated@@481)) (<= 0 ($generated@@333 $generated@@480))))
 :pattern ( ($generated@@333 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) ($generated@@340 $generated@@482)) (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@484) $generated@@76)) ($generated@@77 $generated@@484 $generated@@482)) ($generated@@320 $generated@@484 $generated@@482 $generated@@483))
 :pattern ( ($generated@@320 $generated@@484 $generated@@482 $generated@@483))
)))
 :pattern ( ($generated@@340 $generated@@482))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@435 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@435 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@435 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@72 ($generated@@435 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@398 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@398 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@398 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@398 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@76) (= (type $generated@@506) $generated@@76)) (= ($generated@@326 ($generated@@294 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@294 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@507 ($generated@@207 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@207 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= ($generated@@511 ($generated@@207 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@207 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@76) (= (type $generated@@516) $generated@@76)) (= ($generated@@215 ($generated@@294 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@294 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@76) (= (type $generated@@518) $generated@@76)) (= ($generated@@216 ($generated@@294 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@294 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@335 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@334 $generated@@76)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@333 $generated@@525))) ($generated@@320 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@113 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@114 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@114 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@303 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@303 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@303 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@303 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@308 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@308 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@308 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@308 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@221 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@221 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@221 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@415 $generated@@548 ($generated@@342 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@342 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (= ($generated@@204 $generated@@549 ($generated@@435 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@549) $generated@@552))) (and ($generated@@77 ($generated@@74 ($generated@@163 $generated@@549) $generated@@552) $generated@@551) ($generated@@77 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@549) $generated@@552))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@204 $generated@@549 ($generated@@435 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@64)) (= ($generated@@204 $generated@@553 ($generated@@398 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@553) $generated@@556))) (and ($generated@@77 ($generated@@74 ($generated@@195 $generated@@553) $generated@@556) $generated@@555) ($generated@@77 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@553) $generated@@556))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@204 $generated@@553 ($generated@@398 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@76) (= (type $generated@@560) $generated@@76)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@294 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@294 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@76) (= (type $generated@@562) $generated@@76)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@294 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@294 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@76) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@77 $generated@@563 ($generated@@435 $generated@@564 $generated@@565))) (and (= ($generated@@342 ($generated@@415 ($generated@@142 $generated@@76 $generated@@76) $generated@@563)) $generated@@563) ($generated@@204 ($generated@@415 ($generated@@142 $generated@@76 $generated@@76) $generated@@563) ($generated@@435 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@435 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@76) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@77 $generated@@566 ($generated@@398 $generated@@567 $generated@@568))) (and (= ($generated@@342 ($generated@@415 ($generated@@174 $generated@@76 $generated@@76) $generated@@566)) $generated@@566) ($generated@@204 ($generated@@415 ($generated@@174 $generated@@76 $generated@@76) $generated@@566) ($generated@@398 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@398 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@76)) ($generated@@77 $generated@@571 ($generated@@207 $generated@@569 $generated@@570))) (and (= ($generated@@342 ($generated@@415 $generated@@208 $generated@@571)) $generated@@571) ($generated@@204 ($generated@@415 $generated@@208 $generated@@571) ($generated@@207 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@77 $generated@@571 ($generated@@207 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@74 ($generated@@450 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@74 ($generated@@450 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@574) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@575) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@76) ($generated@@0 ($generated@@74 $generated@@574 $generated@@578))) (and ($generated@@77 $generated@@578 $generated@@576) ($generated@@77 ($generated@@74 $generated@@575 $generated@@578) $generated@@577)))
 :no-pattern (type $generated@@578)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
))) ($generated@@204 ($generated@@141 $generated@@574 $generated@@575 ($generated@@435 $generated@@576 $generated@@577)) ($generated@@435 $generated@@576 $generated@@577)))
 :pattern ( ($generated@@141 $generated@@574 $generated@@575 ($generated@@435 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@579) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) $generated@@64)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@76) ($generated@@0 ($generated@@74 $generated@@579 $generated@@583))) (and ($generated@@77 $generated@@583 $generated@@581) ($generated@@77 ($generated@@74 $generated@@580 $generated@@583) $generated@@582)))
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
))) ($generated@@204 ($generated@@141 $generated@@579 $generated@@580 ($generated@@398 $generated@@581 $generated@@582)) ($generated@@398 $generated@@581 $generated@@582)))
 :pattern ( ($generated@@173 $generated@@579 $generated@@580 ($generated@@398 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@69)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@64) (= (type $generated@@587) $generated@@64)) (and (= ($generated@@72 ($generated@@207 $generated@@586 $generated@@587)) $generated@@62) (= ($generated@@584 ($generated@@207 $generated@@586 $generated@@587)) $generated@@63)))
 :pattern ( ($generated@@207 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@208) (= ($generated@@557 ($generated@@342 $generated@@588)) ($generated@@558 $generated@@588)))
 :pattern ( ($generated@@557 ($generated@@342 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@76) ($generated@@77 $generated@@589 ($generated@@114 0))) (and (= ($generated@@342 ($generated@@415 $generated@@2 $generated@@589)) $generated@@589) ($generated@@204 ($generated@@415 ($generated@@78 $generated@@76 $generated@@4) $generated@@589) ($generated@@114 0))))
 :pattern ( ($generated@@77 $generated@@589 ($generated@@114 0)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@76) (= (type $generated@@591) $generated@@64)) ($generated@@77 $generated@@590 ($generated@@303 $generated@@591))) (and (= ($generated@@342 ($generated@@415 ($generated@@78 $generated@@76 $generated@@4) $generated@@590)) $generated@@590) ($generated@@204 ($generated@@415 ($generated@@78 $generated@@76 $generated@@4) $generated@@590) ($generated@@303 $generated@@591))))
 :pattern ( ($generated@@77 $generated@@590 ($generated@@303 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@76) (= (type $generated@@593) $generated@@64)) ($generated@@77 $generated@@592 ($generated@@308 $generated@@593))) (and (= ($generated@@342 ($generated@@415 ($generated@@78 $generated@@76 $generated@@4) $generated@@592)) $generated@@592) ($generated@@204 ($generated@@415 ($generated@@78 $generated@@76 $generated@@4) $generated@@592) ($generated@@308 $generated@@593))))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@76) (= (type $generated@@595) $generated@@64)) ($generated@@77 $generated@@594 ($generated@@221 $generated@@595))) (and (= ($generated@@342 ($generated@@415 ($generated@@78 $generated@@76 $generated@@2) $generated@@594)) $generated@@594) ($generated@@204 ($generated@@415 ($generated@@78 $generated@@76 $generated@@2) $generated@@594) ($generated@@221 $generated@@595))))
 :pattern ( ($generated@@77 $generated@@594 ($generated@@221 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@76) (= (type $generated@@597) $generated@@64)) ($generated@@77 $generated@@596 ($generated@@519 $generated@@597))) (and (= ($generated@@342 ($generated@@415 ($generated@@334 $generated@@76) $generated@@596)) $generated@@596) ($generated@@204 ($generated@@415 ($generated@@334 $generated@@76) $generated@@596) ($generated@@519 $generated@@597))))
 :pattern ( ($generated@@77 $generated@@596 ($generated@@519 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@598 ($generated@@221 $generated@@599) $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@598 $generated@@601)))) ($generated@@320 $generated@@601 $generated@@599 $generated@@600))
 :pattern ( ($generated@@74 $generated@@598 $generated@@601))
))))
 :pattern ( ($generated@@113 $generated@@598 ($generated@@221 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@208) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@319 $generated@@604) (and ($generated@@206 $generated@@602) (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@64) ($generated@@113 $generated@@602 ($generated@@207 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@113 $generated@@602 ($generated@@207 $generated@@603 $generated@@605) $generated@@604))
))))) ($generated@@320 ($generated@@215 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@320 ($generated@@215 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@208) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@319 $generated@@608) (and ($generated@@206 $generated@@606) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) $generated@@64) ($generated@@113 $generated@@606 ($generated@@207 $generated@@609 $generated@@607) $generated@@608))
 :pattern ( ($generated@@113 $generated@@606 ($generated@@207 $generated@@609 $generated@@607) $generated@@608))
))))) ($generated@@320 ($generated@@216 $generated@@606) $generated@@607 $generated@@608))
 :pattern ( ($generated@@320 ($generated@@216 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@76) (= (type $generated@@611) $generated@@76)) (= ($generated@@294 ($generated@@315 $generated@@610) ($generated@@315 $generated@@611)) ($generated@@315 ($generated@@294 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@294 ($generated@@315 $generated@@610) ($generated@@315 $generated@@611)))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@342 ($generated@@8 ($generated@@313 $generated@@612))) ($generated@@315 ($generated@@342 ($generated@@8 $generated@@612))))
 :pattern ( ($generated@@342 ($generated@@8 ($generated@@313 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@342 ($generated@@315 $generated@@613)) ($generated@@315 ($generated@@342 $generated@@613)))
 :pattern ( ($generated@@342 ($generated@@315 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@335 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@334 $generated@@615)) (= ($generated@@333 $generated@@614) 0)) (= $generated@@614 ($generated@@332 $generated@@615))))
 :pattern ( ($generated@@333 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@78 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@347 ($generated@@81 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@347 $generated@@616) ($generated ($generated@@74 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@347 ($generated@@81 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@621) $generated@@2)) ($generated@@113 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@113 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@623) $generated@@3)) ($generated@@113 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@113 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@625) $generated@@4)) ($generated@@113 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@113 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@627) $generated@@474)) ($generated@@113 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@113 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@629) $generated@@76)) ($generated@@113 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@113 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@334 $generated@@76)) (= (type $generated@@631) $generated@@64)) (= ($generated@@204 $generated@@630 ($generated@@519 $generated@@631)) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@333 $generated@@630))) ($generated@@77 ($generated@@520 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@520 $generated@@630 $generated@@632))
))))
 :pattern ( ($generated@@204 $generated@@630 ($generated@@519 $generated@@631)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (= (type $generated@@634) ($generated@@334 $generated@@76)) (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@333 $generated@@634))) (< ($generated@@558 ($generated@@415 $generated@@208 ($generated@@520 $generated@@634 $generated@@635))) ($generated@@633 $generated@@634))))
 :pattern ( ($generated@@558 ($generated@@415 $generated@@208 ($generated@@520 $generated@@634 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@637) $generated@@64)) (= (type $generated@@638) $generated@@64)) ($generated@@204 $generated@@636 ($generated@@435 $generated@@637 $generated@@638))) (and (and ($generated@@204 ($generated@@140 $generated@@636) ($generated@@303 $generated@@637)) ($generated@@204 ($generated@@372 $generated@@636) ($generated@@303 $generated@@638))) ($generated@@204 ($generated@@414 $generated@@636) ($generated@@303 ($generated@@207 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@204 $generated@@636 ($generated@@435 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) $generated@@64)) ($generated@@204 $generated@@639 ($generated@@398 $generated@@640 $generated@@641))) (and (and ($generated@@204 ($generated@@172 $generated@@639) ($generated@@308 $generated@@640)) ($generated@@204 ($generated@@383 $generated@@639) ($generated@@308 $generated@@641))) ($generated@@204 ($generated@@421 $generated@@639) ($generated@@308 ($generated@@207 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@204 $generated@@639 ($generated@@398 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@2) ($generated@@204 $generated@@642 $generated@@46))
 :pattern ( ($generated@@204 $generated@@642 $generated@@46))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@3) ($generated@@204 $generated@@643 $generated@@47))
 :pattern ( ($generated@@204 $generated@@643 $generated@@47))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@4) ($generated@@204 $generated@@644 $generated@@44))
 :pattern ( ($generated@@204 $generated@@644 $generated@@44))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@474) ($generated@@204 $generated@@645 $generated@@45))
 :pattern ( ($generated@@204 $generated@@645 $generated@@45))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@76) ($generated@@204 $generated@@646 $generated@@48))
 :pattern ( ($generated@@204 $generated@@646 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@647) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@648) ($generated@@174 $generated@@76 $generated@@76))) (= (type $generated@@649) $generated@@76)) (= (type $generated@@650) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@651) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@653) ($generated@@228 $generated@@115 $generated@@4))) (= (type $generated@@654) $generated@@115)) (= (type $generated@@655) ($generated@@228 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@656  (=> (and (and (= $generated@@647 ($generated@@173 ($generated@@75 $generated@@341 (= ($generated@@313 ($generated@@396 5 ($generated@@313 0))) ($generated@@313 19))) ($generated@@397 ($generated@@342 ($generated@@8 ($generated@@313 102)))) ($generated@@398 $generated@@341 $generated@@46))) ($generated@@204 $generated@@647 ($generated@@398 $generated@@341 $generated@@46))) (and (= $generated@@648 $generated@@647) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@313 0) 0)))))
(let (($generated@@657  (=> (and (not (= ($generated@@313 ($generated@@396 5 ($generated@@313 0))) ($generated@@313 19))) (= (ControlFlow 0 6) 3)) $generated@@656)))
(let (($generated@@658  (=> (and (= ($generated@@313 ($generated@@396 5 ($generated@@313 0))) ($generated@@313 19)) (= (ControlFlow 0 5) 3)) $generated@@656)))
(let (($generated@@659  (=> (and ($generated@@77 $generated@@649 $generated@@341) ($generated@@320 $generated@@649 $generated@@341 $generated@@650)) (=> (and (and ($generated@@319 $generated@@651) ($generated@@652 $generated@@651)) (and ($generated@@0 ($generated@@315 ($generated@@11 false))) (= $generated@@650 $generated@@651))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not (= ($generated@@313 0) 0))) (=> (not (= ($generated@@313 0) 0)) (and (=> (= (ControlFlow 0 7) 5) $generated@@658) (=> (= (ControlFlow 0 7) 6) $generated@@657))))))))
(let (($generated@@660  (=> (and (not (and ($generated@@77 $generated@@649 $generated@@341) ($generated@@320 $generated@@649 $generated@@341 $generated@@650))) (= (ControlFlow 0 4) 3)) $generated@@656)))
(let (($generated@@661  (=> (= $generated@@653 ($generated@@282 $generated@@654 $generated@@650 $generated@@60 false)) (=> (and ($generated@@204 $generated@@648 ($generated@@398 $generated@@341 $generated@@46)) ($generated@@113 $generated@@648 ($generated@@398 $generated@@341 $generated@@46) $generated@@650)) (and (=> (= (ControlFlow 0 9) 7) $generated@@659) (=> (= (ControlFlow 0 9) 4) $generated@@660))))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (= $generated@@655 ($generated@@227 $generated@@654 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@662) (=> (= (ControlFlow 0 10) 9) $generated@@661)))))
(let (($generated@@664  (=> (and (and ($generated@@319 $generated@@650) ($generated@@652 $generated@@650)) (and (= 1 $generated@@393) (= (ControlFlow 0 11) 10))) $generated@@663)))
$generated@@664))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U Bool) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (Int) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@204 (T@U T@U) Bool)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 (T@U T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@294 (T@U T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@313 (Int) Int)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 () T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@347 (T@U) Int)
(declare-fun $generated@@348 (T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (Int Int) Int)
(declare-fun $generated@@447 () Int)
(declare-fun $generated@@448 () Bool)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@473 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 () Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@633 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 11) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82 $generated@@83)) 12))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@78 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@78 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (let (($generated@@90 ($generated@@80 (type $generated@@88))))
(= (type ($generated@@74 $generated@@88 $generated@@89)) $generated@@90))
 :pattern ( ($generated@@74 $generated@@88 $generated@@89))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 (type $generated@@93)))
(let (($generated@@95 (type $generated@@92)))
(= (type ($generated@@81 $generated@@91 $generated@@92 $generated@@93)) ($generated@@78 $generated@@95 $generated@@94))))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92 $generated@@93))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@80 (type $generated@@96))))
 (=> (= (type $generated@@98) $generated@@99) (= ($generated@@74 ($generated@@81 $generated@@96 $generated@@97 $generated@@98) $generated@@97) $generated@@98)))
 :weight 0
))) (and (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@102 $generated@@103) (= ($generated@@74 ($generated@@81 $generated@@101 $generated@@102 $generated@@100) $generated@@103) ($generated@@74 $generated@@101 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or true (= ($generated@@74 ($generated@@81 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@74 $generated@@105 $generated@@107)))
 :weight 0
)))) (forall (($generated@@108 T@U) ($generated@@109 Bool) ) (! (= (type ($generated@@75 $generated@@108 $generated@@109)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@75 $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 Bool) ($generated@@112 T@U) ) (!  (=> (and (= (type $generated@@110) $generated@@64) (= (type $generated@@112) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))  (and ($generated@@77 $generated@@112 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@115) 13) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@117 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@117 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@116) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@118 $generated@@122 $generated@@123 $generated@@124)) $generated@@116)
 :pattern ( ($generated@@118 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@117 ($generated@@118 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@117 ($generated@@118 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@117 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@117 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@114 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@114 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
 :pattern ( ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
)))
(assert  (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@145 $generated@@146)) 15)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@143 ($generated@@142 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@144 ($generated@@142 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151)) ($generated@@78 $generated@@152 $generated@@4)))
 :pattern ( ($generated@@140 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@80 (type $generated@@154))))
(let (($generated@@157 ($generated@@79 (type $generated@@153))))
(= (type ($generated@@141 $generated@@153 $generated@@154 $generated@@155)) ($generated@@142 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@141 $generated@@153 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@80 (type $generated@@159))))
(let (($generated@@162 ($generated@@79 (type $generated@@158))))
 (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@159) ($generated@@78 $generated@@162 $generated@@161))) (= (type $generated@@160) $generated@@64)) (= ($generated@@140 ($generated@@141 $generated@@158 $generated@@159 $generated@@160)) $generated@@158))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@158 $generated@@159 $generated@@160)))
)))
(assert (forall (($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@144 (type $generated@@164))))
(let (($generated@@166 ($generated@@143 (type $generated@@164))))
(= (type ($generated@@163 $generated@@164)) ($generated@@78 $generated@@166 $generated@@165))))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@80 (type $generated@@168))))
(let (($generated@@171 ($generated@@79 (type $generated@@167))))
 (=> (and (and (= (type $generated@@167) ($generated@@78 $generated@@171 $generated@@4)) (= (type $generated@@168) ($generated@@78 $generated@@171 $generated@@170))) (= (type $generated@@169) $generated@@64)) (= ($generated@@163 ($generated@@141 $generated@@167 $generated@@168 $generated@@169)) $generated@@168))))
 :pattern ( ($generated@@163 ($generated@@141 $generated@@167 $generated@@168 $generated@@169)))
)))
(assert  (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@174 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@172 $generated@@183)) ($generated@@78 $generated@@184 $generated@@4)))
 :pattern ( ($generated@@172 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@80 (type $generated@@186))))
(let (($generated@@189 ($generated@@79 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) ($generated@@174 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@80 (type $generated@@191))))
(let (($generated@@194 ($generated@@79 (type $generated@@190))))
 (=> (and (and (= (type $generated@@190) ($generated@@78 $generated@@194 $generated@@4)) (= (type $generated@@191) ($generated@@78 $generated@@194 $generated@@193))) (= (type $generated@@192) $generated@@64)) (= ($generated@@172 ($generated@@173 $generated@@190 $generated@@191 $generated@@192)) $generated@@190))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@190 $generated@@191 $generated@@192)))
)))
(assert (forall (($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@176 (type $generated@@196))))
(let (($generated@@198 ($generated@@175 (type $generated@@196))))
(= (type ($generated@@195 $generated@@196)) ($generated@@78 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@80 (type $generated@@200))))
(let (($generated@@203 ($generated@@79 (type $generated@@199))))
 (=> (and (and (= (type $generated@@199) ($generated@@78 $generated@@203 $generated@@4)) (= (type $generated@@200) ($generated@@78 $generated@@203 $generated@@202))) (= (type $generated@@201) $generated@@64)) (= ($generated@@195 ($generated@@173 $generated@@199 $generated@@200 $generated@@201)) $generated@@200))))
 :pattern ( ($generated@@195 ($generated@@173 $generated@@199 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= (type $generated@@205) $generated@@2) ($generated@@204 $generated@@205 ($generated@@114 0)))
 :pattern ( ($generated@@204 $generated@@205 ($generated@@114 0)))
)))
(assert  (and (= ($generated@@1 $generated@@208) 17) (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@209 $generated@@210)) $generated@@64)
 :pattern ( ($generated@@207 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@64) (= (type $generated@@212) $generated@@64)) (= (type $generated@@213) $generated@@208)) ($generated@@204 $generated@@213 ($generated@@207 $generated@@211 $generated@@212))) ($generated@@206 $generated@@213))
 :pattern ( ($generated@@206 $generated@@213) ($generated@@204 $generated@@213 ($generated@@207 $generated@@211 $generated@@212)))
)))
(assert  (and (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@76)
 :pattern ( ($generated@@215 $generated@@217))
)) (forall (($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@218)) $generated@@76)
 :pattern ( ($generated@@216 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (= (type $generated@@219) $generated@@208) (= (type $generated@@220) $generated@@208)) true) (= ($generated@@214 $generated@@219 $generated@@220)  (and (= ($generated@@215 $generated@@219) ($generated@@215 $generated@@220)) (= ($generated@@216 $generated@@219) ($generated@@216 $generated@@220)))))
 :pattern ( ($generated@@214 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@223)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (= (type $generated@@224) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@225) $generated@@64)) ($generated@@204 $generated@@224 ($generated@@221 $generated@@225))) ($generated@@222 $generated@@224))
 :pattern ( ($generated@@204 $generated@@224 ($generated@@221 $generated@@225)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@232 $generated@@233)) 18)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@228 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@228 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@226 $generated@@238 $generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@226 $generated@@238 $generated@@239 $generated@@240))
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(let (($generated@@247 (type $generated@@243)))
(= (type ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@228 $generated@@247 $generated@@246))))
 :pattern ( ($generated@@231 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@230 (type $generated@@248))))
 (=> (= (type $generated@@251) $generated@@252) (= ($generated@@226 ($generated@@231 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@249 $generated@@250) $generated@@251)))
 :weight 0
))) (and (and (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@226 ($generated@@231 $generated@@254 $generated@@255 $generated@@256 $generated@@253) $generated@@257 $generated@@258) ($generated@@226 $generated@@254 $generated@@257 $generated@@258)))
 :weight 0
)) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (or (= $generated@@262 $generated@@264) (= ($generated@@226 ($generated@@231 $generated@@260 $generated@@261 $generated@@262 $generated@@259) $generated@@263 $generated@@264) ($generated@@226 $generated@@260 $generated@@263 $generated@@264)))
 :weight 0
))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (or true (= ($generated@@226 ($generated@@231 $generated@@266 $generated@@267 $generated@@268 $generated@@265) $generated@@269 $generated@@270) ($generated@@226 $generated@@266 $generated@@269 $generated@@270)))
 :weight 0
)))) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ) (! (= (type ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274)) ($generated@@228 $generated@@115 $generated@@4))
 :pattern ( ($generated@@227 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Bool) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@67 (type $generated@@280))))
 (=> (and (and (and (and (= (type $generated@@275) $generated@@115) (= (type $generated@@276) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@277) ($generated@@66 $generated@@4))) (= (type $generated@@279) $generated@@115)) (= (type $generated@@280) ($generated@@66 $generated@@281))) (= ($generated@@0 ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))  (=> (and (not (= $generated@@279 $generated@@275)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@276 $generated@@279) $generated@@277))) $generated@@278))))
 :pattern ( ($generated@@226 ($generated@@227 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 Bool) ) (! (= (type ($generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286)) ($generated@@228 $generated@@115 $generated@@4))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@67 (type $generated@@292))))
 (=> (and (and (and (and (= (type $generated@@287) $generated@@115) (= (type $generated@@288) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@289) ($generated@@66 $generated@@4))) (= (type $generated@@291) $generated@@115)) (= (type $generated@@292) ($generated@@66 $generated@@293))) (= ($generated@@0 ($generated@@226 ($generated@@282 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291 $generated@@292))  (=> (and (not (= $generated@@291 $generated@@287)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@288 $generated@@291) $generated@@289))) $generated@@290))))
 :pattern ( ($generated@@226 ($generated@@282 $generated@@287 $generated@@288 $generated@@289 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (= (type ($generated@@294 $generated@@295 $generated@@296)) $generated@@208)
 :pattern ( ($generated@@294 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@64)) (= (type $generated@@299) $generated@@76)) (= (type $generated@@300) $generated@@76)) (= ($generated@@204 ($generated@@294 $generated@@299 $generated@@300) ($generated@@207 $generated@@297 $generated@@298))  (and ($generated@@77 $generated@@299 $generated@@297) ($generated@@77 $generated@@300 $generated@@298))))
 :pattern ( ($generated@@204 ($generated@@294 $generated@@299 $generated@@300) ($generated@@207 $generated@@297 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@208) (= (type $generated@@302) $generated@@208)) (= ($generated@@214 $generated@@301 $generated@@302) (= $generated@@301 $generated@@302)))
 :pattern ( ($generated@@214 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@64)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@306) $generated@@64)) (= ($generated@@204 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@76) ($generated@@0 ($generated@@74 $generated@@305 $generated@@307))) ($generated@@77 $generated@@307 $generated@@306))
 :pattern ( ($generated@@74 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@204 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@64)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@311) $generated@@64)) (= ($generated@@204 $generated@@310 ($generated@@308 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@76) ($generated@@0 ($generated@@74 $generated@@310 $generated@@312))) ($generated@@77 $generated@@312 $generated@@311))
 :pattern ( ($generated@@74 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@204 $generated@@310 ($generated@@308 $generated@@311)))
)))
(assert (forall (($generated@@314 Int) ) (! (= ($generated@@313 $generated@@314) $generated@@314)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 (type $generated@@316)))
(= (type ($generated@@315 $generated@@316)) $generated@@317))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= ($generated@@315 $generated@@318) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@64) (= (type $generated@@322) $generated@@64)) (= (type $generated@@323) $generated@@76)) (= (type $generated@@324) $generated@@76)) (= (type $generated@@325) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@319 $generated@@325)) (= ($generated@@113 ($generated@@294 $generated@@323 $generated@@324) ($generated@@207 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@113 ($generated@@294 $generated@@323 $generated@@324) ($generated@@207 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@68)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@208) (= ($generated@@206 $generated@@328) (= ($generated@@326 $generated@@328) $generated@@61)))
 :pattern ( ($generated@@206 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@208) ($generated@@206 $generated@@329)) (exists (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (and (and (= (type $generated@@330) $generated@@76) (= (type $generated@@331) $generated@@76)) (= $generated@@329 ($generated@@294 $generated@@330 $generated@@331)))
 :no-pattern (type $generated@@330)
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
)))
 :pattern ( ($generated@@206 $generated@@329))
)))
(assert  (and (and (forall (($generated@@336 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@336)) 19)) (forall (($generated@@337 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@334 $generated@@337))
))) (forall (($generated@@338 T@T) ) (! (= (type ($generated@@332 $generated@@338)) ($generated@@334 $generated@@338))
 :pattern ( ($generated@@332 $generated@@338))
))))
(assert (forall (($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@339)) 0)
 :pattern ( ($generated@@332 $generated@@339))
)))
(assert (= (type $generated@@341) $generated@@64))
(assert ($generated@@340 $generated@@341))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@76)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@64) (= (type $generated@@346) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@320 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@113 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@320 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@349 T@T) ) (! (= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@349 $generated@@2))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@78 $generated@@351 $generated@@2)) (and (= (= ($generated@@347 $generated@@350) 0) (= $generated@@350 ($generated@@348 $generated@@351))) (=> (not (= ($generated@@347 $generated@@350) 0)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) (< 0 ($generated ($generated@@74 $generated@@350 $generated@@352))))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) ($generated@@142 $generated@@354 $generated@@355))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@74 ($generated@@140 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@74 ($generated@@140 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) ($generated@@174 $generated@@360 $generated@@361))
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@74 ($generated@@172 ($generated@@359 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@74 ($generated@@172 ($generated@@359 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@78 $generated@@366 $generated@@2)) (= ($generated@@222 $generated@@365) (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@366) (and (<= 0 ($generated ($generated@@74 $generated@@365 $generated@@367))) (<= ($generated ($generated@@74 $generated@@365 $generated@@367)) ($generated@@347 $generated@@365))))
 :pattern ( ($generated@@74 $generated@@365 $generated@@367))
)))))
 :pattern ( ($generated@@222 $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@144 (type $generated@@368))))
(let (($generated@@370 ($generated@@143 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@142 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@353 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@140 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@144 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@78 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@144 (type $generated@@375))))
(let (($generated@@377 ($generated@@143 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@142 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@353 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@74 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@176 (type $generated@@379))))
(let (($generated@@381 ($generated@@175 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@174 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@359 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@172 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@176 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@78 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@176 (type $generated@@386))))
(let (($generated@@388 ($generated@@175 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@174 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@359 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@74 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@391) $generated@@64)) (= ($generated@@204 $generated@@390 ($generated@@221 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@390 $generated@@392)))) ($generated@@77 $generated@@392 $generated@@391))
 :pattern ( ($generated@@74 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@204 $generated@@390 ($generated@@221 $generated@@391)))
)))
(assert (forall (($generated@@394 T@U) ) (! (= (type ($generated@@393 $generated@@394)) ($generated@@78 $generated@@76 $generated@@76))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@76) (= (type $generated@@396) $generated@@76)) (= ($generated@@74 ($generated@@393 $generated@@395) $generated@@396) $generated@@395))
 :pattern ( ($generated@@74 ($generated@@393 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@397 ($generated@@303 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@76) ($generated@@0 ($generated@@74 $generated@@397 $generated@@400))) ($generated@@320 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@74 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@113 $generated@@397 ($generated@@303 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@401 ($generated@@308 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@76) ($generated@@0 ($generated@@74 $generated@@401 $generated@@404))) ($generated@@320 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@74 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@113 $generated@@401 ($generated@@308 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@74 ($generated@@348 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@74 ($generated@@348 $generated@@406) $generated@@405)))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@T) ($generated@@411 T@U) ) (! (= (type ($generated@@408 $generated@@410 $generated@@411)) $generated@@410)
 :pattern ( ($generated@@408 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@413) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@407 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@74 ($generated@@140 $generated@@412) ($generated@@215 ($generated@@408 $generated@@208 $generated@@413)))) (= ($generated@@74 ($generated@@163 $generated@@412) ($generated@@215 ($generated@@408 $generated@@208 $generated@@413))) ($generated@@216 ($generated@@408 $generated@@208 $generated@@413))))))
 :pattern ( ($generated@@74 ($generated@@407 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@417) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@414 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@74 ($generated@@172 $generated@@416) ($generated@@215 ($generated@@408 $generated@@208 $generated@@417)))) (= ($generated@@74 ($generated@@195 $generated@@416) ($generated@@215 ($generated@@408 $generated@@208 $generated@@417))) ($generated@@216 ($generated@@408 $generated@@208 $generated@@417))))))
 :pattern ( ($generated@@74 ($generated@@414 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@143 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@142 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@74 ($generated@@372 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@74 ($generated@@140 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@74 ($generated@@163 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@418) $generated@@422))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@74 ($generated@@372 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@175 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@174 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@74 ($generated@@383 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@74 ($generated@@172 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@74 ($generated@@195 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@423) $generated@@427))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@74 ($generated@@383 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@431) $generated@@435))) (and ($generated@@320 ($generated@@74 ($generated@@163 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@320 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@431) $generated@@435))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@113 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@439) $generated@@443))) (and ($generated@@320 ($generated@@74 ($generated@@195 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@320 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@439) $generated@@443))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@113 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 Int) ($generated@@446 Int) ) (! (= ($generated@@444 $generated@@445 $generated@@446) (div $generated@@445 $generated@@446))
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert  (=> (<= 1 $generated@@447) (=> (or $generated@@448 (not (= 1 $generated@@447))) true)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@78 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@176 (type $generated@@451))))
(let (($generated@@453 ($generated@@175 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@174 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@359 $generated@@453 $generated@@452)) (= ($generated@@172 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@172 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@176 (type $generated@@454))))
(let (($generated@@456 ($generated@@175 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@174 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@359 $generated@@456 $generated@@455)) (= ($generated@@383 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@383 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@176 (type $generated@@457))))
(let (($generated@@459 ($generated@@175 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@174 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@359 $generated@@459 $generated@@458)) (= ($generated@@414 $generated@@457) ($generated@@449 $generated@@76))))))
 :pattern ( ($generated@@414 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@144 (type $generated@@460))))
(let (($generated@@462 ($generated@@143 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@142 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@353 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@76) (= (type $generated@@464) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@407 $generated@@460) ($generated@@342 ($generated@@294 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@407 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@176 (type $generated@@465))))
(let (($generated@@467 ($generated@@175 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@174 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@359 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@76) (= (type $generated@@469) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@414 $generated@@465) ($generated@@342 ($generated@@294 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@414 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@76) ($generated@@77 $generated@@470 $generated@@46)) (and (= ($generated@@342 ($generated@@408 $generated@@2 $generated@@470)) $generated@@470) ($generated@@204 ($generated@@408 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@77 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@76) ($generated@@77 $generated@@471 $generated@@47)) (and (= ($generated@@342 ($generated@@408 $generated@@3 $generated@@471)) $generated@@471) ($generated@@204 ($generated@@408 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@77 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@76) ($generated@@77 $generated@@472 $generated@@44)) (and (= ($generated@@342 ($generated@@408 $generated@@4 $generated@@472)) $generated@@472) ($generated@@204 ($generated@@408 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@77 $generated@@472 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@473) 20))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@76) ($generated@@77 $generated@@474 $generated@@45)) (and (= ($generated@@342 ($generated@@408 $generated@@473 $generated@@474)) $generated@@474) ($generated@@204 ($generated@@408 $generated@@473 $generated@@474) $generated@@45)))
 :pattern ( ($generated@@77 $generated@@474 $generated@@45))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@77 ($generated@@342 $generated@@475) $generated@@476) ($generated@@204 $generated@@475 $generated@@476)))
 :pattern ( ($generated@@77 ($generated@@342 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@79 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@78 $generated@@478 $generated@@2)) (<= 0 ($generated@@347 $generated@@477))))
 :pattern ( ($generated@@347 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@335 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@334 $generated@@480)) (<= 0 ($generated@@333 $generated@@479))))
 :pattern ( ($generated@@333 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) ($generated@@340 $generated@@481)) (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@483) $generated@@76)) ($generated@@77 $generated@@483 $generated@@481)) ($generated@@320 $generated@@483 $generated@@481 $generated@@482))
 :pattern ( ($generated@@320 $generated@@483 $generated@@481 $generated@@482))
)))
 :pattern ( ($generated@@340 $generated@@481))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@428 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@428 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@428 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@72 ($generated@@428 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@64) (= (type $generated@@501) $generated@@64)) (= ($generated@@498 ($generated@@436 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@72 ($generated@@436 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@76) (= (type $generated@@505) $generated@@76)) (= ($generated@@326 ($generated@@294 $generated@@504 $generated@@505)) $generated@@61))
 :pattern ( ($generated@@294 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@506 ($generated@@207 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@207 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@510 ($generated@@207 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@207 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@76) (= (type $generated@@515) $generated@@76)) (= ($generated@@215 ($generated@@294 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@294 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@76) (= (type $generated@@517) $generated@@76)) (= ($generated@@216 ($generated@@294 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@294 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@335 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@334 $generated@@76)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@333 $generated@@524))) ($generated@@320 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@113 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@114 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@114 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@530 ($generated@@303 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@303 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@72 ($generated@@303 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@303 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@64) (= ($generated@@534 ($generated@@308 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@308 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@72 ($generated@@308 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@308 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@64) (= ($generated@@538 ($generated@@221 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@221 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@221 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@64)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@64) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@72 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@408 $generated@@547 ($generated@@342 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@342 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) (= ($generated@@204 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@140 $generated@@548) $generated@@551))) (and ($generated@@77 ($generated@@74 ($generated@@163 $generated@@548) $generated@@551) $generated@@550) ($generated@@77 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@74 ($generated@@163 $generated@@548) $generated@@551))
 :pattern ( ($generated@@74 ($generated@@140 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@204 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) (= ($generated@@204 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@172 $generated@@552) $generated@@555))) (and ($generated@@77 ($generated@@74 ($generated@@195 $generated@@552) $generated@@555) $generated@@554) ($generated@@77 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@74 ($generated@@195 $generated@@552) $generated@@555))
 :pattern ( ($generated@@74 ($generated@@172 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@204 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)))
)))
(assert  (=> (<= 1 $generated@@447) (=> (or $generated@@448 (not (= 1 $generated@@447))) (= $generated@@556 ($generated@@313 ($generated@@444 40 ($generated@@313 0)))))))
(assert  (=> (<= 1 $generated@@447) (=> (or $generated@@448 (not (= 1 $generated@@447))) (= $generated@@556 ($generated@@313 ($generated@@444 40 ($generated@@313 0)))))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@76) (= (type $generated@@560) $generated@@76)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@294 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@294 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@76) (= (type $generated@@562) $generated@@76)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@294 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@294 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@76) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@77 $generated@@563 ($generated@@428 $generated@@564 $generated@@565))) (and (= ($generated@@342 ($generated@@408 ($generated@@142 $generated@@76 $generated@@76) $generated@@563)) $generated@@563) ($generated@@204 ($generated@@408 ($generated@@142 $generated@@76 $generated@@76) $generated@@563) ($generated@@428 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@428 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@76) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@77 $generated@@566 ($generated@@436 $generated@@567 $generated@@568))) (and (= ($generated@@342 ($generated@@408 ($generated@@174 $generated@@76 $generated@@76) $generated@@566)) $generated@@566) ($generated@@204 ($generated@@408 ($generated@@174 $generated@@76 $generated@@76) $generated@@566) ($generated@@436 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@436 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@76)) ($generated@@77 $generated@@571 ($generated@@207 $generated@@569 $generated@@570))) (and (= ($generated@@342 ($generated@@408 $generated@@208 $generated@@571)) $generated@@571) ($generated@@204 ($generated@@408 $generated@@208 $generated@@571) ($generated@@207 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@77 $generated@@571 ($generated@@207 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@74 ($generated@@449 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@74 ($generated@@449 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@574) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@575) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@76) ($generated@@0 ($generated@@74 $generated@@574 $generated@@578))) (and ($generated@@77 $generated@@578 $generated@@576) ($generated@@77 ($generated@@74 $generated@@575 $generated@@578) $generated@@577)))
 :no-pattern (type $generated@@578)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
))) ($generated@@204 ($generated@@141 $generated@@574 $generated@@575 ($generated@@428 $generated@@576 $generated@@577)) ($generated@@428 $generated@@576 $generated@@577)))
 :pattern ( ($generated@@141 $generated@@574 $generated@@575 ($generated@@428 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@579) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) $generated@@64)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@76) ($generated@@0 ($generated@@74 $generated@@579 $generated@@583))) (and ($generated@@77 $generated@@583 $generated@@581) ($generated@@77 ($generated@@74 $generated@@580 $generated@@583) $generated@@582)))
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
))) ($generated@@204 ($generated@@141 $generated@@579 $generated@@580 ($generated@@436 $generated@@581 $generated@@582)) ($generated@@436 $generated@@581 $generated@@582)))
 :pattern ( ($generated@@173 $generated@@579 $generated@@580 ($generated@@436 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@69)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@64) (= (type $generated@@587) $generated@@64)) (and (= ($generated@@72 ($generated@@207 $generated@@586 $generated@@587)) $generated@@62) (= ($generated@@584 ($generated@@207 $generated@@586 $generated@@587)) $generated@@63)))
 :pattern ( ($generated@@207 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@208) (= ($generated@@557 ($generated@@342 $generated@@588)) ($generated@@558 $generated@@588)))
 :pattern ( ($generated@@557 ($generated@@342 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@76) ($generated@@77 $generated@@589 ($generated@@114 0))) (and (= ($generated@@342 ($generated@@408 $generated@@2 $generated@@589)) $generated@@589) ($generated@@204 ($generated@@408 ($generated@@78 $generated@@76 $generated@@4) $generated@@589) ($generated@@114 0))))
 :pattern ( ($generated@@77 $generated@@589 ($generated@@114 0)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@76) (= (type $generated@@591) $generated@@64)) ($generated@@77 $generated@@590 ($generated@@303 $generated@@591))) (and (= ($generated@@342 ($generated@@408 ($generated@@78 $generated@@76 $generated@@4) $generated@@590)) $generated@@590) ($generated@@204 ($generated@@408 ($generated@@78 $generated@@76 $generated@@4) $generated@@590) ($generated@@303 $generated@@591))))
 :pattern ( ($generated@@77 $generated@@590 ($generated@@303 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@76) (= (type $generated@@593) $generated@@64)) ($generated@@77 $generated@@592 ($generated@@308 $generated@@593))) (and (= ($generated@@342 ($generated@@408 ($generated@@78 $generated@@76 $generated@@4) $generated@@592)) $generated@@592) ($generated@@204 ($generated@@408 ($generated@@78 $generated@@76 $generated@@4) $generated@@592) ($generated@@308 $generated@@593))))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@76) (= (type $generated@@595) $generated@@64)) ($generated@@77 $generated@@594 ($generated@@221 $generated@@595))) (and (= ($generated@@342 ($generated@@408 ($generated@@78 $generated@@76 $generated@@2) $generated@@594)) $generated@@594) ($generated@@204 ($generated@@408 ($generated@@78 $generated@@76 $generated@@2) $generated@@594) ($generated@@221 $generated@@595))))
 :pattern ( ($generated@@77 $generated@@594 ($generated@@221 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@76) (= (type $generated@@597) $generated@@64)) ($generated@@77 $generated@@596 ($generated@@518 $generated@@597))) (and (= ($generated@@342 ($generated@@408 ($generated@@334 $generated@@76) $generated@@596)) $generated@@596) ($generated@@204 ($generated@@408 ($generated@@334 $generated@@76) $generated@@596) ($generated@@518 $generated@@597))))
 :pattern ( ($generated@@77 $generated@@596 ($generated@@518 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@598 ($generated@@221 $generated@@599) $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@598 $generated@@601)))) ($generated@@320 $generated@@601 $generated@@599 $generated@@600))
 :pattern ( ($generated@@74 $generated@@598 $generated@@601))
))))
 :pattern ( ($generated@@113 $generated@@598 ($generated@@221 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@208) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@319 $generated@@604) (and ($generated@@206 $generated@@602) (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@64) ($generated@@113 $generated@@602 ($generated@@207 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@113 $generated@@602 ($generated@@207 $generated@@603 $generated@@605) $generated@@604))
))))) ($generated@@320 ($generated@@215 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@320 ($generated@@215 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@208) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@319 $generated@@608) (and ($generated@@206 $generated@@606) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) $generated@@64) ($generated@@113 $generated@@606 ($generated@@207 $generated@@609 $generated@@607) $generated@@608))
 :pattern ( ($generated@@113 $generated@@606 ($generated@@207 $generated@@609 $generated@@607) $generated@@608))
))))) ($generated@@320 ($generated@@216 $generated@@606) $generated@@607 $generated@@608))
 :pattern ( ($generated@@320 ($generated@@216 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@76) (= (type $generated@@611) $generated@@76)) (= ($generated@@294 ($generated@@315 $generated@@610) ($generated@@315 $generated@@611)) ($generated@@315 ($generated@@294 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@294 ($generated@@315 $generated@@610) ($generated@@315 $generated@@611)))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@342 ($generated@@8 ($generated@@313 $generated@@612))) ($generated@@315 ($generated@@342 ($generated@@8 $generated@@612))))
 :pattern ( ($generated@@342 ($generated@@8 ($generated@@313 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@342 ($generated@@315 $generated@@613)) ($generated@@315 ($generated@@342 $generated@@613)))
 :pattern ( ($generated@@342 ($generated@@315 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@335 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@334 $generated@@615)) (= ($generated@@333 $generated@@614) 0)) (= $generated@@614 ($generated@@332 $generated@@615))))
 :pattern ( ($generated@@333 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@78 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@347 ($generated@@81 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@347 $generated@@616) ($generated ($generated@@74 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@347 ($generated@@81 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@621) $generated@@2)) ($generated@@113 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@113 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@623) $generated@@3)) ($generated@@113 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@113 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@625) $generated@@4)) ($generated@@113 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@113 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@627) $generated@@473)) ($generated@@113 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@113 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@629) $generated@@76)) ($generated@@113 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@113 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@334 $generated@@76)) (= (type $generated@@631) $generated@@64)) (= ($generated@@204 $generated@@630 ($generated@@518 $generated@@631)) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@333 $generated@@630))) ($generated@@77 ($generated@@519 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@519 $generated@@630 $generated@@632))
))))
 :pattern ( ($generated@@204 $generated@@630 ($generated@@518 $generated@@631)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (= (type $generated@@634) ($generated@@334 $generated@@76)) (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@333 $generated@@634))) (< ($generated@@558 ($generated@@408 $generated@@208 ($generated@@519 $generated@@634 $generated@@635))) ($generated@@633 $generated@@634))))
 :pattern ( ($generated@@558 ($generated@@408 $generated@@208 ($generated@@519 $generated@@634 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@142 $generated@@76 $generated@@76)) (= (type $generated@@637) $generated@@64)) (= (type $generated@@638) $generated@@64)) ($generated@@204 $generated@@636 ($generated@@428 $generated@@637 $generated@@638))) (and (and ($generated@@204 ($generated@@140 $generated@@636) ($generated@@303 $generated@@637)) ($generated@@204 ($generated@@372 $generated@@636) ($generated@@303 $generated@@638))) ($generated@@204 ($generated@@407 $generated@@636) ($generated@@303 ($generated@@207 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@204 $generated@@636 ($generated@@428 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) $generated@@64)) ($generated@@204 $generated@@639 ($generated@@436 $generated@@640 $generated@@641))) (and (and ($generated@@204 ($generated@@172 $generated@@639) ($generated@@308 $generated@@640)) ($generated@@204 ($generated@@383 $generated@@639) ($generated@@308 $generated@@641))) ($generated@@204 ($generated@@414 $generated@@639) ($generated@@308 ($generated@@207 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@204 $generated@@639 ($generated@@436 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@2) ($generated@@204 $generated@@642 $generated@@46))
 :pattern ( ($generated@@204 $generated@@642 $generated@@46))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@3) ($generated@@204 $generated@@643 $generated@@47))
 :pattern ( ($generated@@204 $generated@@643 $generated@@47))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@4) ($generated@@204 $generated@@644 $generated@@44))
 :pattern ( ($generated@@204 $generated@@644 $generated@@44))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@473) ($generated@@204 $generated@@645 $generated@@45))
 :pattern ( ($generated@@204 $generated@@645 $generated@@45))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@76) ($generated@@204 $generated@@646 $generated@@48))
 :pattern ( ($generated@@204 $generated@@646 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@647) ($generated@@174 $generated@@76 $generated@@76)) (= (type $generated@@648) ($generated@@174 $generated@@76 $generated@@76))) (= (type $generated@@652) $generated@@76)) (= (type $generated@@651) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@649) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@653) ($generated@@228 $generated@@115 $generated@@4))) (= (type $generated@@654) $generated@@115)) (= (type $generated@@655) ($generated@@228 $generated@@115 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@656  (=> (and (and (= $generated@@647 ($generated@@173 ($generated@@75 $generated@@341 ($generated@@0 ($generated@@315 ($generated@@11 true)))) ($generated@@393 ($generated@@342 ($generated@@11 (= ($generated@@313 ($generated@@444 5 ($generated@@313 0))) ($generated@@313 19))))) ($generated@@436 $generated@@341 $generated@@44))) ($generated@@204 $generated@@647 ($generated@@436 $generated@@341 $generated@@44))) (and (= $generated@@648 $generated@@647) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@313 0) 0)))))
(let (($generated@@657  (=> (and (not ($generated@@0 ($generated@@315 ($generated@@11 true)))) (= (ControlFlow 0 7) 3)) $generated@@656)))
(let (($generated@@658  (=> ($generated@@0 ($generated@@315 ($generated@@11 true))) (=> (and (and ($generated@@319 $generated@@649) ($generated@@650 $generated@@649)) (and ($generated@@0 ($generated@@315 ($generated@@11 false))) (= $generated@@651 $generated@@649))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= ($generated@@313 0) 0))) (=> (not (= ($generated@@313 0) 0)) (=> (= (ControlFlow 0 5) 3) $generated@@656)))))))
(let (($generated@@659  (=> (and ($generated@@77 $generated@@652 $generated@@341) ($generated@@320 $generated@@652 $generated@@341 $generated@@651)) (and (=> (= (ControlFlow 0 8) 5) $generated@@658) (=> (= (ControlFlow 0 8) 7) $generated@@657)))))
(let (($generated@@660  (=> (and (not (and ($generated@@77 $generated@@652 $generated@@341) ($generated@@320 $generated@@652 $generated@@341 $generated@@651))) (= (ControlFlow 0 4) 3)) $generated@@656)))
(let (($generated@@661  (=> (= $generated@@653 ($generated@@282 $generated@@654 $generated@@651 $generated@@60 false)) (=> (and ($generated@@204 $generated@@648 ($generated@@436 $generated@@341 $generated@@44)) ($generated@@113 $generated@@648 ($generated@@436 $generated@@341 $generated@@44) $generated@@651)) (and (=> (= (ControlFlow 0 9) 8) $generated@@659) (=> (= (ControlFlow 0 9) 4) $generated@@660))))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (= $generated@@655 ($generated@@227 $generated@@654 $generated@@651 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@662) (=> (= (ControlFlow 0 10) 9) $generated@@661)))))
(let (($generated@@664  (=> (and (and ($generated@@319 $generated@@651) ($generated@@650 $generated@@651)) (and (= 1 $generated@@447) (= (ControlFlow 0 11) 10))) $generated@@663)))
$generated@@664))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (Int Int) Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 (T@U Bool Bool) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@317 (T@U) Bool)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@502 (T@U Int) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@75 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@64) (= (type $generated@@172) $generated@@64)) (= (type $generated@@173) $generated@@168)) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 16) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@64)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (forall (($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(= (type ($generated@@189 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@189 $generated@@197))
)) (forall (($generated@@199 T@U) ($generated@@200 Bool) ($generated@@201 Bool) ) (! (= (type ($generated@@193 $generated@@199 $generated@@200 $generated@@201)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@193 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@194 $generated@@202)) ($generated@@76 $generated@@177 $generated@@177))
 :pattern ( ($generated@@194 $generated@@202))
))) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@195 $generated@@203)) $generated@@177)
 :pattern ( ($generated@@195 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (type ($generated@@196 $generated@@204 $generated@@205)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))))
(assert  (=> (<= 1 $generated@@187) (=> (or $generated@@188 (not (= 1 $generated@@187))) (and (=> ($generated@@0 ($generated@@189 ($generated@@11 true))) (and ($generated@@0 ($generated@@189 ($generated@@11 true))) (= (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19)) (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19))))) (= $generated@@192 ($generated@@190 ($generated@@191 40 ($generated@@190 0))))))))
(assert  (=> (<= 1 $generated@@187) (=> (or $generated@@188 (not (= 1 $generated@@187))) (and (=> ($generated@@0 ($generated@@189 ($generated@@11 true))) (and ($generated@@0 ($generated@@189 ($generated@@11 true))) (= (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19)) (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19))))) (= $generated@@192 ($generated@@190 ($generated@@191 40 ($generated@@190 0))))))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 17)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@77 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@67 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@77) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@257) ($generated@@66 $generated@@4))) (= (type $generated@@259) $generated@@77)) (= (type $generated@@260) ($generated@@66 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ) (! (= (type ($generated@@262 $generated@@263 $generated@@264 $generated@@265 $generated@@266)) ($generated@@208 $generated@@77 $generated@@4))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@67 (type $generated@@272))))
 (=> (and (and (and (and (= (type $generated@@267) $generated@@77) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) ($generated@@66 $generated@@4))) (= (type $generated@@271) $generated@@77)) (= (type $generated@@272) ($generated@@66 $generated@@273))) (= ($generated@@0 ($generated@@206 ($generated@@262 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))  (=> (and (not (= $generated@@271 $generated@@267)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@268 $generated@@271) $generated@@269))) $generated@@270))))
 :pattern ( ($generated@@206 ($generated@@262 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277)) $generated@@168)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) $generated@@64)) (= (type $generated@@280) $generated@@177)) (= (type $generated@@281) $generated@@177)) (= ($generated@@164 ($generated@@274 $generated@@280 $generated@@281) ($generated@@167 $generated@@278 $generated@@279))  (and ($generated@@275 $generated@@280 $generated@@278) ($generated@@275 $generated@@281 $generated@@279))))
 :pattern ( ($generated@@164 ($generated@@274 $generated@@280 $generated@@281) ($generated@@167 $generated@@278 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@168) (= (type $generated@@283) $generated@@168)) (= ($generated@@174 $generated@@282 $generated@@283) (= $generated@@282 $generated@@283)))
 :pattern ( ($generated@@174 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@64)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@287) $generated@@64)) (= ($generated@@164 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@177) ($generated@@0 ($generated@@81 $generated@@286 $generated@@288))) ($generated@@275 $generated@@288 $generated@@287))
 :pattern ( ($generated@@81 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@164 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@64)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@292) $generated@@64)) (= ($generated@@164 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@177) ($generated@@0 ($generated@@81 $generated@@291 $generated@@293))) ($generated@@275 $generated@@293 $generated@@292))
 :pattern ( ($generated@@81 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@164 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@190 $generated@@294) $generated@@294)
 :pattern ( ($generated@@190 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (= ($generated@@189 $generated@@295) $generated@@295)
 :pattern ( ($generated@@189 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) $generated@@64)) (= (type $generated@@300) $generated@@177)) (= (type $generated@@301) $generated@@177)) (= (type $generated@@302) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@296 $generated@@302)) (= ($generated@@74 ($generated@@274 $generated@@300 $generated@@301) ($generated@@167 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@74 ($generated@@274 $generated@@300 $generated@@301) ($generated@@167 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@68)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@168) (= ($generated@@166 $generated@@305) (= ($generated@@303 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@168) ($generated@@166 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@177) (= (type $generated@@308) $generated@@177)) (= $generated@@306 ($generated@@274 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@166 $generated@@306))
)))
(assert  (and (and (forall (($generated@@313 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@313)) 18)) (forall (($generated@@314 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@311 $generated@@314))
))) (forall (($generated@@315 T@T) ) (! (= (type ($generated@@309 $generated@@315)) ($generated@@311 $generated@@315))
 :pattern ( ($generated@@309 $generated@@315))
))))
(assert (forall (($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@316)) 0)
 :pattern ( ($generated@@309 $generated@@316))
)))
(assert (= (type $generated@@318) $generated@@64))
(assert ($generated@@317 $generated@@318))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@64) (= (type $generated@@321) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@297 ($generated@@195 $generated@@319) $generated@@320 $generated@@321) ($generated@@74 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@297 ($generated@@195 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@324 T@T) ) (! (= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@324 $generated@@2))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@2)) (and (= (= ($generated@@322 $generated@@325) 0) (= $generated@@325 ($generated@@323 $generated@@326))) (=> (not (= ($generated@@322 $generated@@325) 0)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) (< 0 ($generated ($generated@@81 $generated@@325 $generated@@327))))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) ($generated@@134 $generated@@329 $generated@@330))
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@328 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@81 ($generated@@132 ($generated@@328 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 19)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@81 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@81 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@79 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@76 $generated@@353 $generated@@2)) (= ($generated@@183 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@81 $generated@@352 $generated@@354))) (<= ($generated ($generated@@81 $generated@@352 $generated@@354)) ($generated@@322 $generated@@352))))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@183 $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@136 (type $generated@@355))))
(let (($generated@@357 ($generated@@135 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@134 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@328 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@132 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@136 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@76 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@136 (type $generated@@362))))
(let (($generated@@364 ($generated@@135 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@134 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@328 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@338 (type $generated@@366))))
(let (($generated@@368 ($generated@@337 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@336 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@335 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@334 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@338 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@76 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@338 (type $generated@@373))))
(let (($generated@@375 ($generated@@337 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@336 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@335 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@378) $generated@@64)) (= ($generated@@164 $generated@@377 ($generated@@182 $generated@@378)) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379)))) ($generated@@275 $generated@@379 $generated@@378))
 :pattern ( ($generated@@81 $generated@@377 $generated@@379))
))))
 :pattern ( ($generated@@164 $generated@@377 ($generated@@182 $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@177) (= (type $generated@@381) $generated@@177)) (= ($generated@@81 ($generated@@194 $generated@@380) $generated@@381) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@194 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@284 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@177) ($generated@@0 ($generated@@81 $generated@@382 $generated@@385))) ($generated@@297 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@81 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@284 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@289 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@177) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@297 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@289 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@81 ($generated@@323 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@81 ($generated@@323 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@T) ($generated@@396 T@U) ) (! (= (type ($generated@@393 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@393 $generated@@395 $generated@@396))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@398) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@397) ($generated@@175 ($generated@@393 $generated@@168 $generated@@398)))) (= ($generated@@81 ($generated@@155 $generated@@397) ($generated@@175 ($generated@@393 $generated@@168 $generated@@398))) ($generated@@176 ($generated@@393 $generated@@168 $generated@@398))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@338 (type $generated@@402))))
(let (($generated@@404 ($generated@@337 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@76 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@336 $generated@@177 $generated@@177)) (= (type $generated@@406) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@334 $generated@@405) ($generated@@175 ($generated@@393 $generated@@168 $generated@@406)))) (= ($generated@@81 ($generated@@400 $generated@@405) ($generated@@175 ($generated@@393 $generated@@168 $generated@@406))) ($generated@@176 ($generated@@393 $generated@@168 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@135 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@134 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@81 ($generated@@155 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@337 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@336 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@81 ($generated@@334 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@81 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@196 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@417) $generated@@421))) (and ($generated@@297 ($generated@@81 ($generated@@155 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@297 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@196 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@336 $generated@@177 $generated@@177)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@425) $generated@@429))) (and ($generated@@297 ($generated@@81 ($generated@@400 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@297 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 Int) ($generated@@431 Int) ) (! (= ($generated@@191 $generated@@430 $generated@@431) (div $generated@@430 $generated@@431))
 :pattern ( ($generated@@191 $generated@@430 $generated@@431))
)))
(assert  (=> (<= 1 $generated@@187) (=> (or $generated@@188 (not (= 1 $generated@@187))) true)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@76 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@338 (type $generated@@434))))
(let (($generated@@436 ($generated@@337 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@336 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@335 $generated@@436 $generated@@435)) (= ($generated@@334 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@334 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@338 (type $generated@@437))))
(let (($generated@@439 ($generated@@337 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@336 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@335 $generated@@439 $generated@@438)) (= ($generated@@370 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@370 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@338 (type $generated@@440))))
(let (($generated@@442 ($generated@@337 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@336 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@335 $generated@@442 $generated@@441)) (= ($generated@@399 $generated@@440) ($generated@@432 $generated@@177))))))
 :pattern ( ($generated@@399 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@136 (type $generated@@443))))
(let (($generated@@445 ($generated@@135 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@134 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@328 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@177) (= (type $generated@@447) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@443) ($generated@@195 ($generated@@274 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@392 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@338 (type $generated@@448))))
(let (($generated@@450 ($generated@@337 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@336 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@335 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@177) (= (type $generated@@452) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@399 $generated@@448) ($generated@@195 ($generated@@274 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@399 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@177) ($generated@@275 $generated@@453 $generated@@46)) (and (= ($generated@@195 ($generated@@393 $generated@@2 $generated@@453)) $generated@@453) ($generated@@164 ($generated@@393 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@275 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@177) ($generated@@275 $generated@@454 $generated@@47)) (and (= ($generated@@195 ($generated@@393 $generated@@3 $generated@@454)) $generated@@454) ($generated@@164 ($generated@@393 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@275 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@177) ($generated@@275 $generated@@455 $generated@@44)) (and (= ($generated@@195 ($generated@@393 $generated@@4 $generated@@455)) $generated@@455) ($generated@@164 ($generated@@393 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@275 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@177) ($generated@@275 $generated@@457 $generated@@45)) (and (= ($generated@@195 ($generated@@393 $generated@@456 $generated@@457)) $generated@@457) ($generated@@164 ($generated@@393 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@275 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@64) (= ($generated@@275 ($generated@@195 $generated@@458) $generated@@459) ($generated@@164 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@275 ($generated@@195 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@79 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@76 $generated@@461 $generated@@2)) (<= 0 ($generated@@322 $generated@@460))))
 :pattern ( ($generated@@322 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@312 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@311 $generated@@463)) (<= 0 ($generated@@310 $generated@@462))))
 :pattern ( ($generated@@310 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) ($generated@@317 $generated@@464)) (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@466) $generated@@177)) ($generated@@275 $generated@@466 $generated@@464)) ($generated@@297 $generated@@466 $generated@@464 $generated@@465))
 :pattern ( ($generated@@297 $generated@@466 $generated@@464 $generated@@465))
)))
 :pattern ( ($generated@@317 $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@196 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@196 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@196 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@196 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@196 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@196 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@422 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@422 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@177) (= (type $generated@@488) $generated@@177)) (= ($generated@@303 ($generated@@274 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@274 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@167 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@167 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@167 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@167 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@177) (= (type $generated@@498) $generated@@177)) (= ($generated@@175 ($generated@@274 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@274 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@177) (= (type $generated@@500) $generated@@177)) (= ($generated@@176 ($generated@@274 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@274 $generated@@499 $generated@@500))
)))
(assert  (and (forall (($generated@@503 T@U) ) (! (= (type ($generated@@501 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@503))
)) (forall (($generated@@504 T@U) ($generated@@505 Int) ) (! (let (($generated@@506 ($generated@@312 (type $generated@@504))))
(= (type ($generated@@502 $generated@@504 $generated@@505)) $generated@@506))
 :pattern ( ($generated@@502 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@311 $generated@@177)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@507 ($generated@@501 $generated@@508) $generated@@509) (forall (($generated@@510 Int) ) (!  (=> (and (<= 0 $generated@@510) (< $generated@@510 ($generated@@310 $generated@@507))) ($generated@@297 ($generated@@502 $generated@@507 $generated@@510) $generated@@508 $generated@@509))
 :pattern ( ($generated@@502 $generated@@507 $generated@@510))
))))
 :pattern ( ($generated@@74 $generated@@507 ($generated@@501 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@512 Int) ) (! (= ($generated@@511 ($generated@@75 $generated@@512)) $generated@@512)
 :pattern ( ($generated@@75 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@284 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@284 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@284 $generated@@516)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@289 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@289 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@289 $generated@@520)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@182 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@182 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@72 ($generated@@182 $generated@@524)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@525 ($generated@@501 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@501 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@72 ($generated@@501 $generated@@528)) $generated@@57))
 :pattern ( ($generated@@501 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@393 $generated@@530 ($generated@@195 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@195 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) (= ($generated@@164 $generated@@531 ($generated@@196 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@531) $generated@@534))) (and ($generated@@275 ($generated@@81 ($generated@@155 $generated@@531) $generated@@534) $generated@@533) ($generated@@275 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@531) $generated@@534))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@164 $generated@@531 ($generated@@196 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@336 $generated@@177 $generated@@177)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) (= ($generated@@164 $generated@@535 ($generated@@422 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@535) $generated@@538))) (and ($generated@@275 ($generated@@81 ($generated@@400 $generated@@535) $generated@@538) $generated@@537) ($generated@@275 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@535) $generated@@538))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@164 $generated@@535 ($generated@@422 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@177) (= (type $generated@@542) $generated@@177)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@274 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@274 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@177) (= (type $generated@@544) $generated@@177)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@274 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@274 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@177) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) ($generated@@275 $generated@@545 ($generated@@196 $generated@@546 $generated@@547))) (and (= ($generated@@195 ($generated@@393 ($generated@@134 $generated@@177 $generated@@177) $generated@@545)) $generated@@545) ($generated@@164 ($generated@@393 ($generated@@134 $generated@@177 $generated@@177) $generated@@545) ($generated@@196 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@275 $generated@@545 ($generated@@196 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@177) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) ($generated@@275 $generated@@548 ($generated@@422 $generated@@549 $generated@@550))) (and (= ($generated@@195 ($generated@@393 ($generated@@336 $generated@@177 $generated@@177) $generated@@548)) $generated@@548) ($generated@@164 ($generated@@393 ($generated@@336 $generated@@177 $generated@@177) $generated@@548) ($generated@@422 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@275 $generated@@548 ($generated@@422 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) $generated@@177)) ($generated@@275 $generated@@553 ($generated@@167 $generated@@551 $generated@@552))) (and (= ($generated@@195 ($generated@@393 $generated@@168 $generated@@553)) $generated@@553) ($generated@@164 ($generated@@393 $generated@@168 $generated@@553) ($generated@@167 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@275 $generated@@553 ($generated@@167 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@81 ($generated@@432 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@81 ($generated@@432 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@556) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@557) ($generated@@76 $generated@@177 $generated@@177))) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@177) ($generated@@0 ($generated@@81 $generated@@556 $generated@@560))) (and ($generated@@275 $generated@@560 $generated@@558) ($generated@@275 ($generated@@81 $generated@@557 $generated@@560) $generated@@559)))
 :no-pattern (type $generated@@560)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
))) ($generated@@164 ($generated@@133 $generated@@556 $generated@@557 ($generated@@196 $generated@@558 $generated@@559)) ($generated@@196 $generated@@558 $generated@@559)))
 :pattern ( ($generated@@133 $generated@@556 $generated@@557 ($generated@@196 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@69)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@64) (= (type $generated@@564) $generated@@64)) (and (= ($generated@@72 ($generated@@167 $generated@@563 $generated@@564)) $generated@@62) (= ($generated@@561 ($generated@@167 $generated@@563 $generated@@564)) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@168) (= ($generated@@539 ($generated@@195 $generated@@565)) ($generated@@540 $generated@@565)))
 :pattern ( ($generated@@539 ($generated@@195 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@177) ($generated@@275 $generated@@566 ($generated@@75 0))) (and (= ($generated@@195 ($generated@@393 $generated@@2 $generated@@566)) $generated@@566) ($generated@@164 ($generated@@393 ($generated@@76 $generated@@177 $generated@@4) $generated@@566) ($generated@@75 0))))
 :pattern ( ($generated@@275 $generated@@566 ($generated@@75 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@177) (= (type $generated@@568) $generated@@64)) ($generated@@275 $generated@@567 ($generated@@284 $generated@@568))) (and (= ($generated@@195 ($generated@@393 ($generated@@76 $generated@@177 $generated@@4) $generated@@567)) $generated@@567) ($generated@@164 ($generated@@393 ($generated@@76 $generated@@177 $generated@@4) $generated@@567) ($generated@@284 $generated@@568))))
 :pattern ( ($generated@@275 $generated@@567 ($generated@@284 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@177) (= (type $generated@@570) $generated@@64)) ($generated@@275 $generated@@569 ($generated@@289 $generated@@570))) (and (= ($generated@@195 ($generated@@393 ($generated@@76 $generated@@177 $generated@@4) $generated@@569)) $generated@@569) ($generated@@164 ($generated@@393 ($generated@@76 $generated@@177 $generated@@4) $generated@@569) ($generated@@289 $generated@@570))))
 :pattern ( ($generated@@275 $generated@@569 ($generated@@289 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@177) (= (type $generated@@572) $generated@@64)) ($generated@@275 $generated@@571 ($generated@@182 $generated@@572))) (and (= ($generated@@195 ($generated@@393 ($generated@@76 $generated@@177 $generated@@2) $generated@@571)) $generated@@571) ($generated@@164 ($generated@@393 ($generated@@76 $generated@@177 $generated@@2) $generated@@571) ($generated@@182 $generated@@572))))
 :pattern ( ($generated@@275 $generated@@571 ($generated@@182 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@177) (= (type $generated@@574) $generated@@64)) ($generated@@275 $generated@@573 ($generated@@501 $generated@@574))) (and (= ($generated@@195 ($generated@@393 ($generated@@311 $generated@@177) $generated@@573)) $generated@@573) ($generated@@164 ($generated@@393 ($generated@@311 $generated@@177) $generated@@573) ($generated@@501 $generated@@574))))
 :pattern ( ($generated@@275 $generated@@573 ($generated@@501 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Bool) ($generated@@577 Bool) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@64) (= (type $generated@@578) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@193 $generated@@575 $generated@@576 $generated@@577) $generated@@578))  (and ($generated@@275 $generated@@578 $generated@@575) (and $generated@@576 (= ($generated@@0 ($generated@@393 $generated@@4 $generated@@578)) $generated@@577)))))
 :pattern ( ($generated@@81 ($generated@@193 $generated@@575 $generated@@576 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@579 ($generated@@182 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@579 $generated@@582)))) ($generated@@297 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@81 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@74 $generated@@579 ($generated@@182 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@168) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@296 $generated@@585) (and ($generated@@166 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@64) ($generated@@74 $generated@@583 ($generated@@167 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@74 $generated@@583 ($generated@@167 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@297 ($generated@@175 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@297 ($generated@@175 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@168) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@296 $generated@@589) (and ($generated@@166 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@64) ($generated@@74 $generated@@587 ($generated@@167 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@74 $generated@@587 ($generated@@167 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@297 ($generated@@176 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@297 ($generated@@176 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@177) (= (type $generated@@592) $generated@@177)) (= ($generated@@274 ($generated@@189 $generated@@591) ($generated@@189 $generated@@592)) ($generated@@189 ($generated@@274 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@274 ($generated@@189 $generated@@591) ($generated@@189 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@195 ($generated@@8 ($generated@@190 $generated@@593))) ($generated@@189 ($generated@@195 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@195 ($generated@@8 ($generated@@190 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@195 ($generated@@189 $generated@@594)) ($generated@@189 ($generated@@195 $generated@@594)))
 :pattern ( ($generated@@195 ($generated@@189 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@312 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@311 $generated@@596)) (= ($generated@@310 $generated@@595) 0)) (= $generated@@595 ($generated@@309 $generated@@596))))
 :pattern ( ($generated@@310 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@76 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@322 ($generated@@82 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@322 $generated@@597) ($generated ($generated@@81 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@322 ($generated@@82 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@2)) ($generated@@74 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@604) $generated@@3)) ($generated@@74 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@74 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) $generated@@4)) ($generated@@74 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@74 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@608) $generated@@456)) ($generated@@74 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@74 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@610) $generated@@177)) ($generated@@74 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@74 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@311 $generated@@177)) (= (type $generated@@612) $generated@@64)) (= ($generated@@164 $generated@@611 ($generated@@501 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@310 $generated@@611))) ($generated@@275 ($generated@@502 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@502 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@164 $generated@@611 ($generated@@501 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@311 $generated@@177)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@310 $generated@@615))) (< ($generated@@540 ($generated@@393 $generated@@168 ($generated@@502 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@540 ($generated@@393 $generated@@168 ($generated@@502 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) $generated@@64)) ($generated@@164 $generated@@617 ($generated@@196 $generated@@618 $generated@@619))) (and (and ($generated@@164 ($generated@@132 $generated@@617) ($generated@@284 $generated@@618)) ($generated@@164 ($generated@@359 $generated@@617) ($generated@@284 $generated@@619))) ($generated@@164 ($generated@@392 $generated@@617) ($generated@@284 ($generated@@167 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@164 $generated@@617 ($generated@@196 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@336 $generated@@177 $generated@@177)) (= (type $generated@@621) $generated@@64)) (= (type $generated@@622) $generated@@64)) ($generated@@164 $generated@@620 ($generated@@422 $generated@@621 $generated@@622))) (and (and ($generated@@164 ($generated@@334 $generated@@620) ($generated@@289 $generated@@621)) ($generated@@164 ($generated@@370 $generated@@620) ($generated@@289 $generated@@622))) ($generated@@164 ($generated@@399 $generated@@620) ($generated@@289 ($generated@@167 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@164 $generated@@620 ($generated@@422 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@164 $generated@@623 $generated@@46))
 :pattern ( ($generated@@164 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@164 $generated@@624 $generated@@47))
 :pattern ( ($generated@@164 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@164 $generated@@625 $generated@@44))
 :pattern ( ($generated@@164 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@456) ($generated@@164 $generated@@626 $generated@@45))
 :pattern ( ($generated@@164 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@177) ($generated@@164 $generated@@627 $generated@@48))
 :pattern ( ($generated@@164 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@628) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@629) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@633) $generated@@177)) (= (type $generated@@632) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@634) $generated@@177)) (= (type $generated@@635) ($generated@@208 $generated@@77 $generated@@4))) (= (type $generated@@636) $generated@@77)) (= (type $generated@@637) ($generated@@208 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@638  (=> (= $generated@@628 ($generated@@133 ($generated@@193 $generated@@44 ($generated@@0 ($generated@@189 ($generated@@11 true))) (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19))) ($generated@@194 ($generated@@195 ($generated@@8 ($generated@@190 20)))) ($generated@@196 $generated@@44 $generated@@46))) (=> (and (and (=> ($generated@@0 ($generated@@189 ($generated@@11 true))) (and ($generated@@0 ($generated@@189 ($generated@@11 true))) (= (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19)) (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19))))) ($generated@@164 $generated@@628 ($generated@@196 $generated@@44 $generated@@46))) (and (= $generated@@629 $generated@@628) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@190 0) 0))))))
(let (($generated@@639  (=> (and (not (and ($generated@@0 ($generated@@189 ($generated@@11 true))) ($generated@@0 ($generated@@189 ($generated@@11 true))))) (= (ControlFlow 0 7) 3)) $generated@@638)))
(let (($generated@@640  (=> (and ($generated@@0 ($generated@@189 ($generated@@11 true))) ($generated@@0 ($generated@@189 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (= (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19))  (not (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19)))) (= ($generated@@190 20) ($generated@@190 20)))) (=> (or (= (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19))  (not (= ($generated@@190 ($generated@@191 5 ($generated@@190 0))) ($generated@@190 19)))) (= ($generated@@190 20) ($generated@@190 20))) (=> (= (ControlFlow 0 5) 3) $generated@@638))))))
(let (($generated@@641  (=> (not ($generated@@0 ($generated@@189 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 9) 5) $generated@@640) (=> (= (ControlFlow 0 9) 7) $generated@@639)))))
(let (($generated@@642  (=> ($generated@@0 ($generated@@189 ($generated@@11 true))) (and (=> (= (ControlFlow 0 8) 5) $generated@@640) (=> (= (ControlFlow 0 8) 7) $generated@@639)))))
(let (($generated@@643  (=> (not ($generated@@0 ($generated@@189 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 12) 8) $generated@@642) (=> (= (ControlFlow 0 12) 9) $generated@@641)))))
(let (($generated@@644  (=> ($generated@@0 ($generated@@189 ($generated@@11 true))) (=> (and (and ($generated@@296 $generated@@630) ($generated@@631 $generated@@630)) (and ($generated@@0 ($generated@@189 ($generated@@11 false))) (= $generated@@632 $generated@@630))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= ($generated@@190 0) 0))) (=> (not (= ($generated@@190 0) 0)) (and (=> (= (ControlFlow 0 10) 8) $generated@@642) (=> (= (ControlFlow 0 10) 9) $generated@@641))))))))
(let (($generated@@645  (=> (and (and ($generated@@275 $generated@@633 $generated@@318) ($generated@@297 $generated@@633 $generated@@318 $generated@@632)) (and ($generated@@275 $generated@@634 $generated@@318) ($generated@@297 $generated@@634 $generated@@318 $generated@@632))) (and (=> (= (ControlFlow 0 13) 10) $generated@@644) (=> (= (ControlFlow 0 13) 12) $generated@@643)))))
(let (($generated@@646  (=> (and (not (and ($generated@@275 $generated@@633 $generated@@318) ($generated@@297 $generated@@633 $generated@@318 $generated@@632))) (= (ControlFlow 0 4) 3)) $generated@@638)))
(let (($generated@@647  (=> (= $generated@@635 ($generated@@262 $generated@@636 $generated@@632 $generated@@60 false)) (=> (and ($generated@@164 $generated@@629 ($generated@@196 $generated@@44 $generated@@46)) ($generated@@74 $generated@@629 ($generated@@196 $generated@@44 $generated@@46) $generated@@632)) (and (=> (= (ControlFlow 0 14) 13) $generated@@645) (=> (= (ControlFlow 0 14) 4) $generated@@646))))))
(let (($generated@@648 true))
(let (($generated@@649  (=> (= $generated@@637 ($generated@@207 $generated@@636 $generated@@632 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@648) (=> (= (ControlFlow 0 15) 14) $generated@@647)))))
(let (($generated@@650  (=> (and (and ($generated@@296 $generated@@632) ($generated@@631 $generated@@632)) (and (= 1 $generated@@187) (= (ControlFlow 0 16) 15))) $generated@@649)))
$generated@@650))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@287 (T@U T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (Int) Int)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@334 (T@U) Bool)
(declare-fun $generated@@335 () T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (Int Int) Int)
(declare-fun $generated@@441 () Int)
(declare-fun $generated@@442 () Bool)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 () Int)
(declare-fun $generated@@582 (T@U Bool Int) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@169 $generated@@170)) 15)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@164 $generated@@175)) ($generated@@76 $generated@@176 $generated@@4)))
 :pattern ( ($generated@@164 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@80 (type $generated@@178))))
(let (($generated@@181 ($generated@@79 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) ($generated@@166 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@80 (type $generated@@183))))
(let (($generated@@186 ($generated@@79 (type $generated@@182))))
 (=> (and (and (= (type $generated@@182) ($generated@@76 $generated@@186 $generated@@4)) (= (type $generated@@183) ($generated@@76 $generated@@186 $generated@@185))) (= (type $generated@@184) $generated@@64)) (= ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)) $generated@@182))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@168 (type $generated@@188))))
(let (($generated@@190 ($generated@@167 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188)) ($generated@@76 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@80 (type $generated@@192))))
(let (($generated@@195 ($generated@@79 (type $generated@@191))))
 (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@195 $generated@@4)) (= (type $generated@@192) ($generated@@76 $generated@@195 $generated@@194))) (= (type $generated@@193) $generated@@64)) (= ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)) $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@196 $generated@@197 ($generated@@75 0)))
 :pattern ( ($generated@@196 $generated@@197 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@201 $generated@@202)) $generated@@64)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@64) (= (type $generated@@204) $generated@@64)) (= (type $generated@@205) $generated@@200)) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204))) ($generated@@198 $generated@@205))
 :pattern ( ($generated@@198 $generated@@205) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204)))
)))
(assert  (and (and (= ($generated@@1 $generated@@209) 17) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@200) (= (type $generated@@213) $generated@@200)) true) (= ($generated@@206 $generated@@212 $generated@@213)  (and (= ($generated@@207 $generated@@212) ($generated@@207 $generated@@213)) (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)))))
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@64)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@218) $generated@@64)) ($generated@@196 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@196 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@67 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@270) ($generated@@66 $generated@@4))) (= (type $generated@@272) $generated@@77)) (= (type $generated@@273) ($generated@@66 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 Bool) ) (! (= (type ($generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Bool) ($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@67 (type $generated@@285))))
 (=> (and (and (and (and (= (type $generated@@280) $generated@@77) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@282) ($generated@@66 $generated@@4))) (= (type $generated@@284) $generated@@77)) (= (type $generated@@285) ($generated@@66 $generated@@286))) (= ($generated@@0 ($generated@@219 ($generated@@275 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@284 $generated@@285))  (=> (and (not (= $generated@@284 $generated@@280)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@281 $generated@@284) $generated@@282))) $generated@@283))))
 :pattern ( ($generated@@219 ($generated@@275 $generated@@280 $generated@@281 $generated@@282 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (= (type ($generated@@287 $generated@@289 $generated@@290)) $generated@@200)
 :pattern ( ($generated@@287 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) $generated@@64)) (= (type $generated@@293) $generated@@209)) (= (type $generated@@294) $generated@@209)) (= ($generated@@196 ($generated@@287 $generated@@293 $generated@@294) ($generated@@199 $generated@@291 $generated@@292))  (and ($generated@@288 $generated@@293 $generated@@291) ($generated@@288 $generated@@294 $generated@@292))))
 :pattern ( ($generated@@196 ($generated@@287 $generated@@293 $generated@@294) ($generated@@199 $generated@@291 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@200) (= (type $generated@@296) $generated@@200)) (= ($generated@@206 $generated@@295 $generated@@296) (= $generated@@295 $generated@@296)))
 :pattern ( ($generated@@206 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@64)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@300) $generated@@64)) (= ($generated@@196 $generated@@299 ($generated@@297 $generated@@300)) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@209) ($generated@@0 ($generated@@81 $generated@@299 $generated@@301))) ($generated@@288 $generated@@301 $generated@@300))
 :pattern ( ($generated@@81 $generated@@299 $generated@@301))
))))
 :pattern ( ($generated@@196 $generated@@299 ($generated@@297 $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@64)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@305) $generated@@64)) (= ($generated@@196 $generated@@304 ($generated@@302 $generated@@305)) (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@209) ($generated@@0 ($generated@@81 $generated@@304 $generated@@306))) ($generated@@288 $generated@@306 $generated@@305))
 :pattern ( ($generated@@81 $generated@@304 $generated@@306))
))))
 :pattern ( ($generated@@196 $generated@@304 ($generated@@302 $generated@@305)))
)))
(assert (forall (($generated@@308 Int) ) (! (= ($generated@@307 $generated@@308) $generated@@308)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 (type $generated@@310)))
(= (type ($generated@@309 $generated@@310)) $generated@@311))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= ($generated@@309 $generated@@312) $generated@@312)
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) $generated@@64) (= (type $generated@@316) $generated@@64)) (= (type $generated@@317) $generated@@209)) (= (type $generated@@318) $generated@@209)) (= (type $generated@@319) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@313 $generated@@319)) (= ($generated@@74 ($generated@@287 $generated@@317 $generated@@318) ($generated@@199 $generated@@315 $generated@@316) $generated@@319)  (and ($generated@@314 $generated@@317 $generated@@315 $generated@@319) ($generated@@314 $generated@@318 $generated@@316 $generated@@319))))
 :pattern ( ($generated@@74 ($generated@@287 $generated@@317 $generated@@318) ($generated@@199 $generated@@315 $generated@@316) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@68)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@200) (= ($generated@@198 $generated@@322) (= ($generated@@320 $generated@@322) $generated@@61)))
 :pattern ( ($generated@@198 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@200) ($generated@@198 $generated@@323)) (exists (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (and (and (= (type $generated@@324) $generated@@209) (= (type $generated@@325) $generated@@209)) (= $generated@@323 ($generated@@287 $generated@@324 $generated@@325)))
 :no-pattern (type $generated@@324)
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@198 $generated@@323))
)))
(assert  (and (and (forall (($generated@@330 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@330)) 19)) (forall (($generated@@331 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331))
))) (forall (($generated@@332 T@T) ) (! (= (type ($generated@@326 $generated@@332)) ($generated@@328 $generated@@332))
 :pattern ( ($generated@@326 $generated@@332))
))))
(assert (forall (($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@333)) 0)
 :pattern ( ($generated@@326 $generated@@333))
)))
(assert (= (type $generated@@335) $generated@@64))
(assert ($generated@@334 $generated@@335))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@209)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@64) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@314 ($generated@@336 $generated@@338) $generated@@339 $generated@@340) ($generated@@74 $generated@@338 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@314 ($generated@@336 $generated@@338) $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@343 T@T) ) (! (= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@343 $generated@@2))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@2)) (and (= (= ($generated@@341 $generated@@344) 0) (= $generated@@344 ($generated@@342 $generated@@345))) (=> (not (= ($generated@@341 $generated@@344) 0)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) (< 0 ($generated ($generated@@81 $generated@@344 $generated@@346))))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) ($generated@@134 $generated@@348 $generated@@349))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@347 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@81 ($generated@@132 ($generated@@347 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) ($generated@@166 $generated@@354 $generated@@355))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@81 ($generated@@164 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@81 ($generated@@164 ($generated@@353 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@79 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@76 $generated@@360 $generated@@2)) (= ($generated@@215 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@81 $generated@@359 $generated@@361))) (<= ($generated ($generated@@81 $generated@@359 $generated@@361)) ($generated@@341 $generated@@359))))
 :pattern ( ($generated@@81 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@215 $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@136 (type $generated@@362))))
(let (($generated@@364 ($generated@@135 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@134 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@347 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@132 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@136 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@76 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@136 (type $generated@@369))))
(let (($generated@@371 ($generated@@135 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@134 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@347 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@168 (type $generated@@373))))
(let (($generated@@375 ($generated@@167 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@166 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@353 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@164 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@168 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@76 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@168 (type $generated@@380))))
(let (($generated@@382 ($generated@@167 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@166 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@353 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@385) $generated@@64)) (= ($generated@@196 $generated@@384 ($generated@@214 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@384 $generated@@386)))) ($generated@@288 $generated@@386 $generated@@385))
 :pattern ( ($generated@@81 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@196 $generated@@384 ($generated@@214 $generated@@385)))
)))
(assert (forall (($generated@@388 T@U) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@76 $generated@@209 $generated@@209))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@209) (= (type $generated@@390) $generated@@209)) (= ($generated@@81 ($generated@@387 $generated@@389) $generated@@390) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@297 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@209) ($generated@@0 ($generated@@81 $generated@@391 $generated@@394))) ($generated@@314 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@81 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@297 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@302 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@209) ($generated@@0 ($generated@@81 $generated@@395 $generated@@398))) ($generated@@314 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@81 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@302 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@81 ($generated@@342 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@81 ($generated@@342 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@T) ($generated@@405 T@U) ) (! (= (type ($generated@@402 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@402 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@407) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@401 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@406) ($generated@@207 ($generated@@402 $generated@@200 $generated@@407)))) (= ($generated@@81 ($generated@@155 $generated@@406) ($generated@@207 ($generated@@402 $generated@@200 $generated@@407))) ($generated@@208 ($generated@@402 $generated@@200 $generated@@407))))))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@411) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@408 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@410) ($generated@@207 ($generated@@402 $generated@@200 $generated@@411)))) (= ($generated@@81 ($generated@@187 $generated@@410) ($generated@@207 ($generated@@402 $generated@@200 $generated@@411))) ($generated@@208 ($generated@@402 $generated@@200 $generated@@411))))))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@135 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@134 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@81 ($generated@@155 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@167 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@166 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@81 ($generated@@187 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@425) $generated@@429))) (and ($generated@@314 ($generated@@81 ($generated@@155 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@314 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@433) $generated@@437))) (and ($generated@@314 ($generated@@81 ($generated@@187 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@314 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@433) $generated@@437))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@74 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 Int) ($generated@@440 Int) ) (! (= ($generated@@438 $generated@@439 $generated@@440) (div $generated@@439 $generated@@440))
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert  (=> (<= 1 $generated@@441) (=> (or $generated@@442 (not (= 1 $generated@@441))) true)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@76 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@168 (type $generated@@445))))
(let (($generated@@447 ($generated@@167 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@166 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@353 $generated@@447 $generated@@446)) (= ($generated@@164 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@164 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@168 (type $generated@@448))))
(let (($generated@@450 ($generated@@167 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@166 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@353 $generated@@450 $generated@@449)) (= ($generated@@377 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@377 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@168 (type $generated@@451))))
(let (($generated@@453 ($generated@@167 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@166 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@353 $generated@@453 $generated@@452)) (= ($generated@@408 $generated@@451) ($generated@@443 $generated@@209))))))
 :pattern ( ($generated@@408 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@136 (type $generated@@454))))
(let (($generated@@456 ($generated@@135 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@134 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@347 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@209) (= (type $generated@@458) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@401 $generated@@454) ($generated@@336 ($generated@@287 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@401 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@168 (type $generated@@459))))
(let (($generated@@461 ($generated@@167 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@166 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@353 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@209) (= (type $generated@@463) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@408 $generated@@459) ($generated@@336 ($generated@@287 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@408 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@209) ($generated@@288 $generated@@464 $generated@@46)) (and (= ($generated@@336 ($generated@@402 $generated@@2 $generated@@464)) $generated@@464) ($generated@@196 ($generated@@402 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@288 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@209) ($generated@@288 $generated@@465 $generated@@47)) (and (= ($generated@@336 ($generated@@402 $generated@@3 $generated@@465)) $generated@@465) ($generated@@196 ($generated@@402 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@288 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@209) ($generated@@288 $generated@@466 $generated@@44)) (and (= ($generated@@336 ($generated@@402 $generated@@4 $generated@@466)) $generated@@466) ($generated@@196 ($generated@@402 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@288 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@209) ($generated@@288 $generated@@468 $generated@@45)) (and (= ($generated@@336 ($generated@@402 $generated@@467 $generated@@468)) $generated@@468) ($generated@@196 ($generated@@402 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@288 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@288 ($generated@@336 $generated@@469) $generated@@470) ($generated@@196 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@288 ($generated@@336 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@79 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@76 $generated@@472 $generated@@2)) (<= 0 ($generated@@341 $generated@@471))))
 :pattern ( ($generated@@341 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@329 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@328 $generated@@474)) (<= 0 ($generated@@327 $generated@@473))))
 :pattern ( ($generated@@327 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) ($generated@@334 $generated@@475)) (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@477) $generated@@209)) ($generated@@288 $generated@@477 $generated@@475)) ($generated@@314 $generated@@477 $generated@@475 $generated@@476))
 :pattern ( ($generated@@314 $generated@@477 $generated@@475 $generated@@476))
)))
 :pattern ( ($generated@@334 $generated@@475))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@422 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@492 ($generated@@430 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@72 ($generated@@430 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@209) (= (type $generated@@499) $generated@@209)) (= ($generated@@320 ($generated@@287 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@287 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@199 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@199 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@199 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@199 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@209) (= (type $generated@@509) $generated@@209)) (= ($generated@@207 ($generated@@287 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@287 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@209) (= (type $generated@@511) $generated@@209)) (= ($generated@@208 ($generated@@287 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@287 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@329 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@328 $generated@@209)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@327 $generated@@518))) ($generated@@314 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@74 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@75 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@75 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@297 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@297 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@297 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@528 ($generated@@302 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@302 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@72 ($generated@@302 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@302 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@532 ($generated@@214 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@214 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@64) (= ($generated@@72 ($generated@@214 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@64) (= ($generated@@72 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@402 $generated@@541 ($generated@@336 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@336 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) (= ($generated@@196 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@542) $generated@@545))) (and ($generated@@288 ($generated@@81 ($generated@@155 $generated@@542) $generated@@545) $generated@@544) ($generated@@288 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@542) $generated@@545))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@196 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) (= ($generated@@196 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@546) $generated@@549))) (and ($generated@@288 ($generated@@81 ($generated@@187 $generated@@546) $generated@@549) $generated@@548) ($generated@@288 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@546) $generated@@549))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@196 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@209) (= (type $generated@@553) $generated@@209)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@287 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@287 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@209) (= (type $generated@@555) $generated@@209)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@287 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@287 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@209) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) $generated@@64)) ($generated@@288 $generated@@556 ($generated@@422 $generated@@557 $generated@@558))) (and (= ($generated@@336 ($generated@@402 ($generated@@134 $generated@@209 $generated@@209) $generated@@556)) $generated@@556) ($generated@@196 ($generated@@402 ($generated@@134 $generated@@209 $generated@@209) $generated@@556) ($generated@@422 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@288 $generated@@556 ($generated@@422 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@209) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) $generated@@64)) ($generated@@288 $generated@@559 ($generated@@430 $generated@@560 $generated@@561))) (and (= ($generated@@336 ($generated@@402 ($generated@@166 $generated@@209 $generated@@209) $generated@@559)) $generated@@559) ($generated@@196 ($generated@@402 ($generated@@166 $generated@@209 $generated@@209) $generated@@559) ($generated@@430 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@288 $generated@@559 ($generated@@430 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@64) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@209)) ($generated@@288 $generated@@564 ($generated@@199 $generated@@562 $generated@@563))) (and (= ($generated@@336 ($generated@@402 $generated@@200 $generated@@564)) $generated@@564) ($generated@@196 ($generated@@402 $generated@@200 $generated@@564) ($generated@@199 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@288 $generated@@564 ($generated@@199 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@81 ($generated@@443 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@81 ($generated@@443 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@567) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@568) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@209) ($generated@@0 ($generated@@81 $generated@@567 $generated@@571))) (and ($generated@@288 $generated@@571 $generated@@569) ($generated@@288 ($generated@@81 $generated@@568 $generated@@571) $generated@@570)))
 :no-pattern (type $generated@@571)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
))) ($generated@@196 ($generated@@133 $generated@@567 $generated@@568 ($generated@@422 $generated@@569 $generated@@570)) ($generated@@422 $generated@@569 $generated@@570)))
 :pattern ( ($generated@@133 $generated@@567 $generated@@568 ($generated@@422 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@572) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@573) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@209) ($generated@@0 ($generated@@81 $generated@@572 $generated@@576))) (and ($generated@@288 $generated@@576 $generated@@574) ($generated@@288 ($generated@@81 $generated@@573 $generated@@576) $generated@@575)))
 :no-pattern (type $generated@@576)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
))) ($generated@@196 ($generated@@133 $generated@@572 $generated@@573 ($generated@@430 $generated@@574 $generated@@575)) ($generated@@430 $generated@@574 $generated@@575)))
 :pattern ( ($generated@@165 $generated@@572 $generated@@573 ($generated@@430 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@69)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@64) (= (type $generated@@580) $generated@@64)) (and (= ($generated@@72 ($generated@@199 $generated@@579 $generated@@580)) $generated@@62) (= ($generated@@577 ($generated@@199 $generated@@579 $generated@@580)) $generated@@63)))
 :pattern ( ($generated@@199 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Bool) ($generated@@585 Int) ) (! (= (type ($generated@@582 $generated@@583 $generated@@584 $generated@@585)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@582 $generated@@583 $generated@@584 $generated@@585))
)))
(assert  (=> (<= 1 $generated@@441) (=> (or $generated@@442 (not (= 1 $generated@@441))) (and (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (and ($generated@@0 ($generated@@309 ($generated@@11 true))) (= ($generated@@307 20) ($generated@@307 20)))) (= $generated@@581 ($generated@@307 ($generated@@438 40 ($generated@@307 0))))))))
(assert  (=> (<= 1 $generated@@441) (=> (or $generated@@442 (not (= 1 $generated@@441))) (and (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (and ($generated@@0 ($generated@@309 ($generated@@11 true))) (= ($generated@@307 20) ($generated@@307 20)))) (= $generated@@581 ($generated@@307 ($generated@@438 40 ($generated@@307 0))))))))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@200) (= ($generated@@550 ($generated@@336 $generated@@586)) ($generated@@551 $generated@@586)))
 :pattern ( ($generated@@550 ($generated@@336 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@209) ($generated@@288 $generated@@587 ($generated@@75 0))) (and (= ($generated@@336 ($generated@@402 $generated@@2 $generated@@587)) $generated@@587) ($generated@@196 ($generated@@402 ($generated@@76 $generated@@209 $generated@@4) $generated@@587) ($generated@@75 0))))
 :pattern ( ($generated@@288 $generated@@587 ($generated@@75 0)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@209) (= (type $generated@@589) $generated@@64)) ($generated@@288 $generated@@588 ($generated@@297 $generated@@589))) (and (= ($generated@@336 ($generated@@402 ($generated@@76 $generated@@209 $generated@@4) $generated@@588)) $generated@@588) ($generated@@196 ($generated@@402 ($generated@@76 $generated@@209 $generated@@4) $generated@@588) ($generated@@297 $generated@@589))))
 :pattern ( ($generated@@288 $generated@@588 ($generated@@297 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@209) (= (type $generated@@591) $generated@@64)) ($generated@@288 $generated@@590 ($generated@@302 $generated@@591))) (and (= ($generated@@336 ($generated@@402 ($generated@@76 $generated@@209 $generated@@4) $generated@@590)) $generated@@590) ($generated@@196 ($generated@@402 ($generated@@76 $generated@@209 $generated@@4) $generated@@590) ($generated@@302 $generated@@591))))
 :pattern ( ($generated@@288 $generated@@590 ($generated@@302 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@209) (= (type $generated@@593) $generated@@64)) ($generated@@288 $generated@@592 ($generated@@214 $generated@@593))) (and (= ($generated@@336 ($generated@@402 ($generated@@76 $generated@@209 $generated@@2) $generated@@592)) $generated@@592) ($generated@@196 ($generated@@402 ($generated@@76 $generated@@209 $generated@@2) $generated@@592) ($generated@@214 $generated@@593))))
 :pattern ( ($generated@@288 $generated@@592 ($generated@@214 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@209) (= (type $generated@@595) $generated@@64)) ($generated@@288 $generated@@594 ($generated@@512 $generated@@595))) (and (= ($generated@@336 ($generated@@402 ($generated@@328 $generated@@209) $generated@@594)) $generated@@594) ($generated@@196 ($generated@@402 ($generated@@328 $generated@@209) $generated@@594) ($generated@@512 $generated@@595))))
 :pattern ( ($generated@@288 $generated@@594 ($generated@@512 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@596 ($generated@@214 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@596 $generated@@599)))) ($generated@@314 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@81 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@74 $generated@@596 ($generated@@214 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@200) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@313 $generated@@602) (and ($generated@@198 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@64) ($generated@@74 $generated@@600 ($generated@@199 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@74 $generated@@600 ($generated@@199 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@314 ($generated@@207 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@314 ($generated@@207 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@200) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@313 $generated@@606) (and ($generated@@198 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@64) ($generated@@74 $generated@@604 ($generated@@199 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@74 $generated@@604 ($generated@@199 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@314 ($generated@@208 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@314 ($generated@@208 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@209) (= (type $generated@@609) $generated@@209)) (= ($generated@@287 ($generated@@309 $generated@@608) ($generated@@309 $generated@@609)) ($generated@@309 ($generated@@287 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@287 ($generated@@309 $generated@@608) ($generated@@309 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@336 ($generated@@8 ($generated@@307 $generated@@610))) ($generated@@309 ($generated@@336 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@336 ($generated@@8 ($generated@@307 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@336 ($generated@@309 $generated@@611)) ($generated@@309 ($generated@@336 $generated@@611)))
 :pattern ( ($generated@@336 ($generated@@309 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@329 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@328 $generated@@613)) (= ($generated@@327 $generated@@612) 0)) (= $generated@@612 ($generated@@326 $generated@@613))))
 :pattern ( ($generated@@327 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Bool) ($generated@@616 Int) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@64) (= (type $generated@@617) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@582 $generated@@614 $generated@@615 $generated@@616) $generated@@617))  (and ($generated@@288 $generated@@617 $generated@@614) (and $generated@@615 (= ($generated ($generated@@402 $generated@@2 $generated@@617)) $generated@@616)))))
 :pattern ( ($generated@@81 ($generated@@582 $generated@@614 $generated@@615 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@76 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@341 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@341 $generated@@618) ($generated ($generated@@81 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@341 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@2)) ($generated@@74 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@3)) ($generated@@74 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) $generated@@4)) ($generated@@74 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@74 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@629) $generated@@467)) ($generated@@74 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@74 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@631) $generated@@209)) ($generated@@74 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@74 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@328 $generated@@209)) (= (type $generated@@633) $generated@@64)) (= ($generated@@196 $generated@@632 ($generated@@512 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@327 $generated@@632))) ($generated@@288 ($generated@@513 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@513 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@196 $generated@@632 ($generated@@512 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@328 $generated@@209)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@327 $generated@@636))) (< ($generated@@551 ($generated@@402 $generated@@200 ($generated@@513 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@551 ($generated@@402 $generated@@200 ($generated@@513 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) $generated@@64)) ($generated@@196 $generated@@638 ($generated@@422 $generated@@639 $generated@@640))) (and (and ($generated@@196 ($generated@@132 $generated@@638) ($generated@@297 $generated@@639)) ($generated@@196 ($generated@@366 $generated@@638) ($generated@@297 $generated@@640))) ($generated@@196 ($generated@@401 $generated@@638) ($generated@@297 ($generated@@199 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@196 $generated@@638 ($generated@@422 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) $generated@@64)) ($generated@@196 $generated@@641 ($generated@@430 $generated@@642 $generated@@643))) (and (and ($generated@@196 ($generated@@164 $generated@@641) ($generated@@302 $generated@@642)) ($generated@@196 ($generated@@377 $generated@@641) ($generated@@302 $generated@@643))) ($generated@@196 ($generated@@408 $generated@@641) ($generated@@302 ($generated@@199 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@196 $generated@@641 ($generated@@430 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@196 $generated@@644 $generated@@46))
 :pattern ( ($generated@@196 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@196 $generated@@645 $generated@@47))
 :pattern ( ($generated@@196 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@196 $generated@@646 $generated@@44))
 :pattern ( ($generated@@196 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@467) ($generated@@196 $generated@@647 $generated@@45))
 :pattern ( ($generated@@196 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@209) ($generated@@196 $generated@@648 $generated@@48))
 :pattern ( ($generated@@196 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@649) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@650) ($generated@@166 $generated@@209 $generated@@209))) (= (type $generated@@654) $generated@@209)) (= (type $generated@@653) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@651) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@655) $generated@@209)) (= (type $generated@@656) ($generated@@221 $generated@@77 $generated@@4))) (= (type $generated@@657) $generated@@77)) (= (type $generated@@658) ($generated@@221 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@659  (=> (= $generated@@649 ($generated@@165 ($generated@@582 $generated@@46 ($generated@@0 ($generated@@309 ($generated@@11 true))) ($generated@@307 20)) ($generated@@387 ($generated@@336 ($generated@@11 (= ($generated@@307 ($generated@@438 5 ($generated@@307 0))) ($generated@@307 19))))) ($generated@@430 $generated@@46 $generated@@44))) (=> (and (and (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (and ($generated@@0 ($generated@@309 ($generated@@11 true))) (= ($generated@@307 20) ($generated@@307 20)))) ($generated@@196 $generated@@649 ($generated@@430 $generated@@46 $generated@@44))) (and (= $generated@@650 $generated@@649) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@307 0) 0))))))
(let (($generated@@660  (=> (and (not (and ($generated@@0 ($generated@@309 ($generated@@11 true))) ($generated@@0 ($generated@@309 ($generated@@11 true))))) (= (ControlFlow 0 7) 3)) $generated@@659)))
(let (($generated@@661  (=> (and ($generated@@0 ($generated@@309 ($generated@@11 true))) ($generated@@0 ($generated@@309 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@307 20) ($generated@@307 20))) (= (= ($generated@@307 ($generated@@438 5 ($generated@@307 0))) ($generated@@307 19)) (= ($generated@@307 ($generated@@438 5 ($generated@@307 0))) ($generated@@307 19))))) (=> (or (not (= ($generated@@307 20) ($generated@@307 20))) (= (= ($generated@@307 ($generated@@438 5 ($generated@@307 0))) ($generated@@307 19)) (= ($generated@@307 ($generated@@438 5 ($generated@@307 0))) ($generated@@307 19)))) (=> (= (ControlFlow 0 5) 3) $generated@@659))))))
(let (($generated@@662  (=> (not ($generated@@0 ($generated@@309 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 10) 5) $generated@@661) (=> (= (ControlFlow 0 10) 7) $generated@@660)))))
(let (($generated@@663  (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (=> (and (and ($generated@@313 $generated@@651) ($generated@@652 $generated@@651)) (and ($generated@@0 ($generated@@309 ($generated@@11 false))) (= $generated@@653 $generated@@651))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not (= ($generated@@307 0) 0))) (=> (not (= ($generated@@307 0) 0)) (and (=> (= (ControlFlow 0 8) 5) $generated@@661) (=> (= (ControlFlow 0 8) 7) $generated@@660))))))))
(let (($generated@@664  (=> (not ($generated@@0 ($generated@@309 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 12) 8) $generated@@663) (=> (= (ControlFlow 0 12) 10) $generated@@662)))))
(let (($generated@@665  (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (and (=> (= (ControlFlow 0 11) 8) $generated@@663) (=> (= (ControlFlow 0 11) 10) $generated@@662)))))
(let (($generated@@666  (=> (and (and ($generated@@288 $generated@@654 $generated@@335) ($generated@@314 $generated@@654 $generated@@335 $generated@@653)) (and ($generated@@288 $generated@@655 $generated@@335) ($generated@@314 $generated@@655 $generated@@335 $generated@@653))) (and (=> (= (ControlFlow 0 13) 11) $generated@@665) (=> (= (ControlFlow 0 13) 12) $generated@@664)))))
(let (($generated@@667  (=> (and (not (and ($generated@@288 $generated@@654 $generated@@335) ($generated@@314 $generated@@654 $generated@@335 $generated@@653))) (= (ControlFlow 0 4) 3)) $generated@@659)))
(let (($generated@@668  (=> (= $generated@@656 ($generated@@275 $generated@@657 $generated@@653 $generated@@60 false)) (=> (and ($generated@@196 $generated@@650 ($generated@@430 $generated@@46 $generated@@44)) ($generated@@74 $generated@@650 ($generated@@430 $generated@@46 $generated@@44) $generated@@653)) (and (=> (= (ControlFlow 0 14) 13) $generated@@666) (=> (= (ControlFlow 0 14) 4) $generated@@667))))))
(let (($generated@@669 true))
(let (($generated@@670  (=> (= $generated@@658 ($generated@@220 $generated@@657 $generated@@653 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@669) (=> (= (ControlFlow 0 15) 14) $generated@@668)))))
(let (($generated@@671  (=> (and (and ($generated@@313 $generated@@653) ($generated@@652 $generated@@653)) (and (= 1 $generated@@441) (= (ControlFlow 0 16) 15))) $generated@@670)))
$generated@@671))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@T T@T T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U) Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@207 (T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U) T@U)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@285 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@297 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@309 (T@U T@U) T@U)
(declare-fun $generated@@310 () T@T)
(declare-fun $generated@@320 (T@U T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@339 (Int) Int)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@346 () T@U)
(declare-fun $generated@@347 (T@U) Bool)
(declare-fun $generated@@348 (T@U T@U) Bool)
(declare-fun $generated@@349 (T@T) T@U)
(declare-fun $generated@@361 (T@U T@U T@U) Bool)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@373 (T@T) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@389 () T@T)
(declare-fun $generated@@396 (T@U) Bool)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@411 (T@U) Int)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@T T@T) T@U)
(declare-fun $generated@@419 (T@T T@T) T@T)
(declare-fun $generated@@420 (T@T) T@T)
(declare-fun $generated@@421 (T@T) T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@T T@T) T@U)
(declare-fun $generated@@437 (T@T T@T) T@T)
(declare-fun $generated@@438 (T@T) T@T)
(declare-fun $generated@@439 (T@T) T@T)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@517 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@529 (Bool) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 () Int)
(declare-fun $generated@@538 () Bool)
(declare-fun $generated@@539 () Int)
(declare-fun $generated@@540 (Int Int) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 () T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@592 (T@U T@U) T@U)
(declare-fun $generated@@600 (T@U T@U) T@U)
(declare-fun $generated@@621 (T@T) T@U)
(declare-fun $generated@@645 () T@T)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@667 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@677 (T@U) T@U)
(declare-fun $generated@@683 (T@U) T@U)
(declare-fun $generated@@687 (T@U) T@U)
(declare-fun $generated@@691 (T@U) T@U)
(declare-fun $generated@@695 (T@U) T@U)
(declare-fun $generated@@699 (T@U) T@U)
(declare-fun $generated@@703 (T@U) T@U)
(declare-fun $generated@@709 (T@U) T@U)
(declare-fun $generated@@713 (T@U) T@U)
(declare-fun $generated@@722 (T@U) T@U)
(declare-fun $generated@@723 (T@U Int) T@U)
(declare-fun $generated@@732 (T@U) Int)
(declare-fun $generated@@734 (T@U) T@U)
(declare-fun $generated@@738 (T@U) T@U)
(declare-fun $generated@@742 (T@U) T@U)
(declare-fun $generated@@746 (T@U) T@U)
(declare-fun $generated@@760 (T@U) Int)
(declare-fun $generated@@761 (T@U) Int)
(declare-fun $generated@@799 (T@U) T@U)
(declare-fun $generated@@920 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@1 ($generated@@144 $generated@@149 $generated@@150 $generated@@151)) 15))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@145 ($generated@@144 $generated@@152 $generated@@153 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@144 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@146 ($generated@@144 $generated@@155 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@147 ($generated@@144 $generated@@158 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@144 $generated@@158 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@147 (type $generated@@161))))
(= (type ($generated@@140 $generated@@161 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@140 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(let (($generated@@170 (type $generated@@167)))
(let (($generated@@171 (type $generated@@166)))
(= (type ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168)) ($generated@@144 $generated@@171 $generated@@170 $generated@@169)))))
 :pattern ( ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@147 (type $generated@@172))))
 (=> (= (type $generated@@175) $generated@@176) (= ($generated@@140 ($generated@@148 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@173 $generated@@174) $generated@@175)))
 :weight 0
))) (and (and (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@140 ($generated@@148 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@140 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@140 ($generated@@148 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@140 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or true (= ($generated@@140 ($generated@@148 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@140 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)))) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@141 $generated@@195)) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@4))
 :pattern ( ($generated@@141 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@72) (= (type $generated@@197) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@198) $generated@@142)) (= ($generated@@0 ($generated@@140 ($generated@@141 $generated@@196) $generated@@197 $generated@@198)) ($generated@@143 $generated@@198 $generated@@196)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@201) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@199 $generated@@200 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@200 $generated@@202) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@201 $generated@@202) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@201 $generated@@202) $generated@@60))
)))
 :pattern ( ($generated@@199 $generated@@200 $generated@@201))
)))
(assert  (and (= (type $generated@@203) $generated@@72) (= (type $generated@@204) $generated@@85)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@85) (= (type $generated@@206) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@205 $generated@@203 $generated@@206)  (or (= $generated@@205 $generated@@204) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@206 $generated@@205) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@205 $generated@@203 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@2) ($generated@@207 $generated@@208 ($generated@@83 0)))
 :pattern ( ($generated@@207 $generated@@208 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@211) 16) (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@212 $generated@@213)) $generated@@72)
 :pattern ( ($generated@@210 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and (and (= (type $generated@@214) $generated@@72) (= (type $generated@@215) $generated@@72)) (= (type $generated@@216) $generated@@211)) ($generated@@207 $generated@@216 ($generated@@210 $generated@@214 $generated@@215))) ($generated@@209 $generated@@216))
 :pattern ( ($generated@@209 $generated@@216) ($generated@@207 $generated@@216 ($generated@@210 $generated@@214 $generated@@215)))
)))
(assert  (and (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@142)
 :pattern ( ($generated@@218 $generated@@220))
)) (forall (($generated@@221 T@U) ) (! (= (type ($generated@@219 $generated@@221)) $generated@@142)
 :pattern ( ($generated@@219 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (= (type $generated@@222) $generated@@211) (= (type $generated@@223) $generated@@211)) true) (= ($generated@@217 $generated@@222 $generated@@223)  (and (= ($generated@@218 $generated@@222) ($generated@@218 $generated@@223)) (= ($generated@@219 $generated@@222) ($generated@@219 $generated@@223)))))
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@224 $generated@@226)) $generated@@72)
 :pattern ( ($generated@@224 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (= (type $generated@@227) ($generated@@84 $generated@@142 $generated@@2)) (= (type $generated@@228) $generated@@72)) ($generated@@207 $generated@@227 ($generated@@224 $generated@@228))) ($generated@@225 $generated@@227))
 :pattern ( ($generated@@207 $generated@@227 ($generated@@224 $generated@@228)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@235 $generated@@236)) 17)) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@237 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@231 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@239 $generated@@240)) $generated@@240)
 :pattern ( ($generated@@231 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@233 (type $generated@@241))))
(= (type ($generated@@229 $generated@@241 $generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@229 $generated@@241 $generated@@242 $generated@@243))
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(let (($generated@@250 (type $generated@@246)))
(= (type ($generated@@234 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@231 $generated@@250 $generated@@249))))
 :pattern ( ($generated@@234 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@233 (type $generated@@251))))
 (=> (= (type $generated@@254) $generated@@255) (= ($generated@@229 ($generated@@234 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@252 $generated@@253) $generated@@254)))
 :weight 0
))) (and (and (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (or (= $generated@@258 $generated@@260) (= ($generated@@229 ($generated@@234 $generated@@257 $generated@@258 $generated@@259 $generated@@256) $generated@@260 $generated@@261) ($generated@@229 $generated@@257 $generated@@260 $generated@@261)))
 :weight 0
)) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or (= $generated@@265 $generated@@267) (= ($generated@@229 ($generated@@234 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@229 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
))) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (or true (= ($generated@@229 ($generated@@234 $generated@@269 $generated@@270 $generated@@271 $generated@@268) $generated@@272 $generated@@273) ($generated@@229 $generated@@269 $generated@@272 $generated@@273)))
 :weight 0
)))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Bool) ) (! (= (type ($generated@@230 $generated@@274 $generated@@275 $generated@@276 $generated@@277)) ($generated@@231 $generated@@85 $generated@@4))
 :pattern ( ($generated@@230 $generated@@274 $generated@@275 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Bool) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@75 (type $generated@@283))))
 (=> (and (and (and (and (= (type $generated@@278) $generated@@85) (= (type $generated@@279) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@280) ($generated@@74 $generated@@4))) (= (type $generated@@282) $generated@@85)) (= (type $generated@@283) ($generated@@74 $generated@@284))) (= ($generated@@0 ($generated@@229 ($generated@@230 $generated@@278 $generated@@279 $generated@@280 $generated@@281) $generated@@282 $generated@@283))  (=> (and (not (= $generated@@282 $generated@@278)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@279 $generated@@282) $generated@@280))) $generated@@281))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@278 $generated@@279 $generated@@280 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 Bool) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287 $generated@@288 $generated@@289)) ($generated@@231 $generated@@85 $generated@@4))
 :pattern ( ($generated@@285 $generated@@286 $generated@@287 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 Bool) ($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@75 (type $generated@@295))))
 (=> (and (and (and (and (= (type $generated@@290) $generated@@85) (= (type $generated@@291) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@292) ($generated@@74 $generated@@4))) (= (type $generated@@294) $generated@@85)) (= (type $generated@@295) ($generated@@74 $generated@@296))) (= ($generated@@0 ($generated@@229 ($generated@@285 $generated@@290 $generated@@291 $generated@@292 $generated@@293) $generated@@294 $generated@@295))  (=> (and (not (= $generated@@294 $generated@@290)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@291 $generated@@294) $generated@@292))) $generated@@293))))
 :pattern ( ($generated@@229 ($generated@@285 $generated@@290 $generated@@291 $generated@@292 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 Bool) ) (! (= (type ($generated@@297 $generated@@298 $generated@@299 $generated@@300 $generated@@301)) ($generated@@231 $generated@@85 $generated@@4))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Bool) ($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@75 (type $generated@@307))))
 (=> (and (and (and (and (= (type $generated@@302) $generated@@85) (= (type $generated@@303) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@304) ($generated@@74 $generated@@4))) (= (type $generated@@306) $generated@@85)) (= (type $generated@@307) ($generated@@74 $generated@@308))) (= ($generated@@0 ($generated@@229 ($generated@@297 $generated@@302 $generated@@303 $generated@@304 $generated@@305) $generated@@306 $generated@@307))  (=> (and (not (= $generated@@306 $generated@@302)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@303 $generated@@306) $generated@@304))) $generated@@305))))
 :pattern ( ($generated@@229 ($generated@@297 $generated@@302 $generated@@303 $generated@@304 $generated@@305) $generated@@306 $generated@@307))
)))
(assert  (and (= ($generated@@1 $generated@@310) 18) (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (= (type ($generated@@309 $generated@@311 $generated@@312)) $generated@@72)
 :pattern ( ($generated@@309 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) $generated@@310) (= (type $generated@@314) $generated@@72)) (= (type $generated@@315) $generated@@72)) (= (type $generated@@316) $generated@@72)) (= (type $generated@@317) $generated@@72)) (and (and ($generated@@207 $generated@@313 ($generated@@309 $generated@@314 $generated@@315)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@142) ($generated@@143 $generated@@318 $generated@@316)) ($generated@@143 $generated@@318 $generated@@314))
 :pattern ( ($generated@@143 $generated@@318 $generated@@316))
 :pattern ( ($generated@@143 $generated@@318 $generated@@314))
))) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@142) ($generated@@143 $generated@@319 $generated@@315)) ($generated@@143 $generated@@319 $generated@@317))
 :pattern ( ($generated@@143 $generated@@319 $generated@@315))
 :pattern ( ($generated@@143 $generated@@319 $generated@@317))
)))) ($generated@@207 $generated@@313 ($generated@@309 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@207 $generated@@313 ($generated@@309 $generated@@314 $generated@@315)) ($generated@@207 $generated@@313 ($generated@@309 $generated@@316 $generated@@317)))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@211)
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) $generated@@72) (= (type $generated@@324) $generated@@72)) (= (type $generated@@325) $generated@@142)) (= (type $generated@@326) $generated@@142)) (= ($generated@@207 ($generated@@320 $generated@@325 $generated@@326) ($generated@@210 $generated@@323 $generated@@324))  (and ($generated@@143 $generated@@325 $generated@@323) ($generated@@143 $generated@@326 $generated@@324))))
 :pattern ( ($generated@@207 ($generated@@320 $generated@@325 $generated@@326) ($generated@@210 $generated@@323 $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@211) (= (type $generated@@328) $generated@@211)) (= ($generated@@217 $generated@@327 $generated@@328) (= $generated@@327 $generated@@328)))
 :pattern ( ($generated@@217 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@72)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@84 $generated@@142 $generated@@4)) (= (type $generated@@332) $generated@@72)) (= ($generated@@207 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@142) ($generated@@0 ($generated@@89 $generated@@331 $generated@@333))) ($generated@@143 $generated@@333 $generated@@332))
 :pattern ( ($generated@@89 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@207 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@72)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@84 $generated@@142 $generated@@4)) (= (type $generated@@337) $generated@@72)) (= ($generated@@207 $generated@@336 ($generated@@334 $generated@@337)) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@142) ($generated@@0 ($generated@@89 $generated@@336 $generated@@338))) ($generated@@143 $generated@@338 $generated@@337))
 :pattern ( ($generated@@89 $generated@@336 $generated@@338))
))))
 :pattern ( ($generated@@207 $generated@@336 ($generated@@334 $generated@@337)))
)))
(assert (forall (($generated@@340 Int) ) (! (= ($generated@@339 $generated@@340) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 (type $generated@@342)))
(= (type ($generated@@341 $generated@@342)) $generated@@343))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= ($generated@@341 $generated@@344) $generated@@344)
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert  (and (and (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (! (= (type ($generated@@345 $generated@@350 $generated@@351 $generated@@352 $generated@@353 $generated@@354)) ($generated@@84 $generated@@142 $generated@@4))
 :pattern ( ($generated@@345 $generated@@350 $generated@@351 $generated@@352 $generated@@353 $generated@@354))
)) (= (type $generated@@346) ($generated@@84 $generated@@85 $generated@@86))) (forall (($generated@@355 T@T) ) (! (= (type ($generated@@349 $generated@@355)) ($generated@@84 $generated@@355 $generated@@4))
 :pattern ( ($generated@@349 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@356) $generated@@72) (= (type $generated@@357) $generated@@72)) (= (type $generated@@358) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@359) $generated@@310)) (= (type $generated@@360) $generated@@142)) (and ($generated@@347 $generated@@358) (and ($generated@@143 $generated@@360 $generated@@356) ($generated@@207 $generated@@359 ($generated@@309 $generated@@356 $generated@@357))))) (= ($generated@@348 ($generated@@345 $generated@@356 $generated@@357 $generated@@346 $generated@@359 $generated@@360) ($generated@@349 $generated@@142)) ($generated@@348 ($generated@@345 $generated@@356 $generated@@357 $generated@@358 $generated@@359 $generated@@360) ($generated@@349 $generated@@142))))
 :pattern ( ($generated@@345 $generated@@356 $generated@@357 $generated@@346 $generated@@359 $generated@@360) ($generated@@347 $generated@@358))
 :pattern ( ($generated@@345 $generated@@356 $generated@@357 $generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@362) $generated@@72) (= (type $generated@@363) $generated@@72)) (= (type $generated@@364) $generated@@142)) (= (type $generated@@365) $generated@@142)) (= (type $generated@@366) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@347 $generated@@366)) (= ($generated@@82 ($generated@@320 $generated@@364 $generated@@365) ($generated@@210 $generated@@362 $generated@@363) $generated@@366)  (and ($generated@@361 $generated@@364 $generated@@362 $generated@@366) ($generated@@361 $generated@@365 $generated@@363 $generated@@366))))
 :pattern ( ($generated@@82 ($generated@@320 $generated@@364 $generated@@365) ($generated@@210 $generated@@362 $generated@@363) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@76)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@211) (= ($generated@@209 $generated@@369) (= ($generated@@367 $generated@@369) $generated@@65)))
 :pattern ( ($generated@@209 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@211) ($generated@@209 $generated@@370)) (exists (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (and (and (= (type $generated@@371) $generated@@142) (= (type $generated@@372) $generated@@142)) (= $generated@@370 ($generated@@320 $generated@@371 $generated@@372)))
 :no-pattern (type $generated@@371)
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
)))
 :pattern ( ($generated@@209 $generated@@370))
)))
(assert  (and (and (forall (($generated@@377 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@377)) 19)) (forall (($generated@@378 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378))
))) (forall (($generated@@379 T@T) ) (! (= (type ($generated@@373 $generated@@379)) ($generated@@375 $generated@@379))
 :pattern ( ($generated@@373 $generated@@379))
))))
(assert (forall (($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@373 $generated@@380)) 0)
 :pattern ( ($generated@@373 $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@84 $generated@@142 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@T) ($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@384 $generated@@385)) $generated@@384)
 :pattern ( ($generated@@382 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@84 $generated@@85 $generated@@4)) (= (type $generated@@387) $generated@@142)) (= ($generated@@0 ($generated@@89 ($generated@@381 $generated@@386) $generated@@387)) ($generated@@0 ($generated@@89 $generated@@386 ($generated@@382 $generated@@85 $generated@@387)))))
 :pattern ( ($generated@@89 ($generated@@381 $generated@@386) $generated@@387))
)))
(assert  (and (= ($generated@@1 $generated@@389) 20) (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@88 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390 $generated@@391)) $generated@@392))
 :pattern ( ($generated@@388 $generated@@390 $generated@@391))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@88 (type $generated@@393))))
 (=> (and (= (type $generated@@393) ($generated@@84 $generated@@389 $generated@@395)) (= (type $generated@@394) $generated@@389)) (= ($generated@@388 $generated@@393 $generated@@394) ($generated@@89 $generated@@393 $generated@@394))))
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
)))
(assert ($generated@@347 $generated@@346))
(assert (= (type $generated@@397) $generated@@72))
(assert ($generated@@396 $generated@@397))
(assert (forall (($generated@@399 T@U) ) (! (= (type ($generated@@398 $generated@@399)) $generated@@142)
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@72) (= (type $generated@@402) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@361 ($generated@@398 $generated@@400) $generated@@401 $generated@@402) ($generated@@82 $generated@@400 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@361 ($generated@@398 $generated@@400) $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@403) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@404) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@405) $generated@@142)) (= (type $generated@@406) $generated@@72)) ($generated@@199 $generated@@403 $generated@@404)) ($generated@@361 $generated@@405 $generated@@406 $generated@@403)) ($generated@@361 $generated@@405 $generated@@406 $generated@@404))
 :pattern ( ($generated@@199 $generated@@403 $generated@@404) ($generated@@361 $generated@@405 $generated@@406 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@408) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@410) $generated@@72)) ($generated@@199 $generated@@407 $generated@@408)) ($generated@@82 $generated@@409 $generated@@410 $generated@@407)) ($generated@@82 $generated@@409 $generated@@410 $generated@@408))
 :pattern ( ($generated@@199 $generated@@407 $generated@@408) ($generated@@82 $generated@@409 $generated@@410 $generated@@407))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@84 $generated@@413 $generated@@2))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@87 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@84 $generated@@415 $generated@@2)) (and (= (= ($generated@@411 $generated@@414) 0) (= $generated@@414 ($generated@@412 $generated@@415))) (=> (not (= ($generated@@411 $generated@@414) 0)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (< 0 ($generated ($generated@@89 $generated@@414 $generated@@416))))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert  (and (and (and (and (forall (($generated@@422 T@T) ($generated@@423 T@T) ) (= ($generated@@1 ($generated@@419 $generated@@422 $generated@@423)) 21)) (forall (($generated@@424 T@T) ($generated@@425 T@T) ) (! (= ($generated@@420 ($generated@@419 $generated@@424 $generated@@425)) $generated@@424)
 :pattern ( ($generated@@419 $generated@@424 $generated@@425))
))) (forall (($generated@@426 T@T) ($generated@@427 T@T) ) (! (= ($generated@@421 ($generated@@419 $generated@@426 $generated@@427)) $generated@@427)
 :pattern ( ($generated@@419 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@420 (type $generated@@428))))
(= (type ($generated@@417 $generated@@428)) ($generated@@84 $generated@@429 $generated@@4)))
 :pattern ( ($generated@@417 $generated@@428))
))) (forall (($generated@@430 T@T) ($generated@@431 T@T) ) (! (= (type ($generated@@418 $generated@@430 $generated@@431)) ($generated@@419 $generated@@430 $generated@@431))
 :pattern ( ($generated@@418 $generated@@430 $generated@@431))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@T) ) (! (let (($generated@@434 (type $generated@@432)))
 (not ($generated@@0 ($generated@@89 ($generated@@417 ($generated@@418 $generated@@434 $generated@@433)) $generated@@432))))
 :pattern ( (let (($generated@@434 (type $generated@@432)))
($generated@@89 ($generated@@417 ($generated@@418 $generated@@434 $generated@@433)) $generated@@432)))
)))
(assert  (and (and (and (and (forall (($generated@@440 T@T) ($generated@@441 T@T) ) (= ($generated@@1 ($generated@@437 $generated@@440 $generated@@441)) 22)) (forall (($generated@@442 T@T) ($generated@@443 T@T) ) (! (= ($generated@@438 ($generated@@437 $generated@@442 $generated@@443)) $generated@@442)
 :pattern ( ($generated@@437 $generated@@442 $generated@@443))
))) (forall (($generated@@444 T@T) ($generated@@445 T@T) ) (! (= ($generated@@439 ($generated@@437 $generated@@444 $generated@@445)) $generated@@445)
 :pattern ( ($generated@@437 $generated@@444 $generated@@445))
))) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@438 (type $generated@@446))))
(= (type ($generated@@435 $generated@@446)) ($generated@@84 $generated@@447 $generated@@4)))
 :pattern ( ($generated@@435 $generated@@446))
))) (forall (($generated@@448 T@T) ($generated@@449 T@T) ) (! (= (type ($generated@@436 $generated@@448 $generated@@449)) ($generated@@437 $generated@@448 $generated@@449))
 :pattern ( ($generated@@436 $generated@@448 $generated@@449))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@T) ) (! (let (($generated@@452 (type $generated@@450)))
 (not ($generated@@0 ($generated@@89 ($generated@@435 ($generated@@436 $generated@@452 $generated@@451)) $generated@@450))))
 :pattern ( (let (($generated@@452 (type $generated@@450)))
($generated@@89 ($generated@@435 ($generated@@436 $generated@@452 $generated@@451)) $generated@@450)))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@87 (type $generated@@453))))
 (=> (and (= (type $generated@@453) ($generated@@84 $generated@@455 $generated@@4)) (= (type $generated@@454) ($generated@@84 $generated@@455 $generated@@4))) (= ($generated@@348 $generated@@453 $generated@@454) (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@455) (= ($generated@@0 ($generated@@89 $generated@@453 $generated@@456)) ($generated@@0 ($generated@@89 $generated@@454 $generated@@456))))
 :pattern ( ($generated@@89 $generated@@453 $generated@@456))
 :pattern ( ($generated@@89 $generated@@454 $generated@@456))
)))))
 :pattern ( ($generated@@348 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@72)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) $generated@@72) (= (type $generated@@461) $generated@@72)) (= (type $generated@@462) $generated@@310)) (= (type $generated@@463) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@462 ($generated@@457 $generated@@460 $generated@@461) $generated@@463) ($generated@@82 $generated@@462 ($generated@@309 $generated@@460 $generated@@461) $generated@@463)))
 :pattern ( ($generated@@82 $generated@@462 ($generated@@457 $generated@@460 $generated@@461) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@72)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) $generated@@72) (= (type $generated@@468) $generated@@72)) (= (type $generated@@469) $generated@@310)) (= (type $generated@@470) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@469 ($generated@@464 $generated@@467 $generated@@468) $generated@@470) ($generated@@82 $generated@@469 ($generated@@457 $generated@@467 $generated@@468) $generated@@470)))
 :pattern ( ($generated@@82 $generated@@469 ($generated@@464 $generated@@467 $generated@@468) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@87 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@84 $generated@@472 $generated@@2)) (= ($generated@@225 $generated@@471) (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@472) (and (<= 0 ($generated ($generated@@89 $generated@@471 $generated@@473))) (<= ($generated ($generated@@89 $generated@@471 $generated@@473)) ($generated@@411 $generated@@471))))
 :pattern ( ($generated@@89 $generated@@471 $generated@@473))
)))))
 :pattern ( ($generated@@225 $generated@@471))
)))
(assert  (and (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (! (= (type ($generated@@474 $generated@@476 $generated@@477 $generated@@478 $generated@@479 $generated@@480)) $generated@@142)
 :pattern ( ($generated@@474 $generated@@476 $generated@@477 $generated@@478 $generated@@479 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (! (= (type ($generated@@475 $generated@@481 $generated@@482 $generated@@483)) $generated@@310)
 :pattern ( ($generated@@475 $generated@@481 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= (type $generated@@486) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@487) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@142))) (= (type $generated@@488) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@4))) (= (type $generated@@489) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 ($generated@@84 $generated@@142 $generated@@4)))) (= (type $generated@@490) $generated@@142)) (= ($generated@@474 $generated@@484 $generated@@485 $generated@@486 ($generated@@475 $generated@@487 $generated@@488 $generated@@489) $generated@@490) ($generated@@140 $generated@@487 $generated@@486 $generated@@490)))
 :pattern ( ($generated@@474 $generated@@484 $generated@@485 $generated@@486 ($generated@@475 $generated@@487 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@142) ($generated@@143 $generated@@491 $generated@@203)) (and (= ($generated@@398 ($generated@@382 $generated@@85 $generated@@491)) $generated@@491) ($generated@@207 ($generated@@382 $generated@@85 $generated@@491) $generated@@203)))
 :pattern ( ($generated@@143 $generated@@491 $generated@@203))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@421 (type $generated@@492))))
(let (($generated@@494 ($generated@@420 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@419 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@418 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ) (!  (and (= (type $generated@@495) $generated@@494) ($generated@@0 ($generated@@89 ($generated@@417 $generated@@492) $generated@@495)))
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@417 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@421 (type $generated@@497))))
(= (type ($generated@@496 $generated@@497)) ($generated@@84 $generated@@498 $generated@@4)))
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@421 (type $generated@@499))))
(let (($generated@@501 ($generated@@420 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@419 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@418 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ) (!  (and (= (type $generated@@502) $generated@@500) ($generated@@0 ($generated@@89 ($generated@@496 $generated@@499) $generated@@502)))
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@496 $generated@@499))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@439 (type $generated@@503))))
(let (($generated@@505 ($generated@@438 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@437 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@436 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ) (!  (and (= (type $generated@@506) $generated@@505) ($generated@@0 ($generated@@89 ($generated@@435 $generated@@503) $generated@@506)))
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@435 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@439 (type $generated@@508))))
(= (type ($generated@@507 $generated@@508)) ($generated@@84 $generated@@509 $generated@@4)))
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@439 (type $generated@@510))))
(let (($generated@@512 ($generated@@438 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@437 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@436 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ) (!  (and (= (type $generated@@513) $generated@@511) ($generated@@0 ($generated@@89 ($generated@@507 $generated@@510) $generated@@513)))
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@507 $generated@@510))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) ($generated@@84 $generated@@142 $generated@@2)) (= (type $generated@@515) $generated@@72)) (= ($generated@@207 $generated@@514 ($generated@@224 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@142) (< 0 ($generated ($generated@@89 $generated@@514 $generated@@516)))) ($generated@@143 $generated@@516 $generated@@515))
 :pattern ( ($generated@@89 $generated@@514 $generated@@516))
))))
 :pattern ( ($generated@@207 $generated@@514 ($generated@@224 $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@518) $generated@@310) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) $generated@@72)) (= (type $generated@@521) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@347 $generated@@521) ($generated@@82 $generated@@518 ($generated@@309 $generated@@519 $generated@@520) $generated@@521))) (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@142) (=> (and ($generated@@361 $generated@@522 $generated@@519 $generated@@521) ($generated@@517 $generated@@519 $generated@@520 $generated@@521 $generated@@518 $generated@@522)) ($generated@@361 ($generated@@474 $generated@@519 $generated@@520 $generated@@521 $generated@@518 $generated@@522) $generated@@520 $generated@@521)))
 :pattern ( ($generated@@474 $generated@@519 $generated@@520 $generated@@521 $generated@@518 $generated@@522))
)))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@309 $generated@@519 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@523) $generated@@310) (= (type $generated@@524) $generated@@72)) (= (type $generated@@525) $generated@@72)) (= (type $generated@@526) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@347 $generated@@526)) (= ($generated@@82 $generated@@523 ($generated@@309 $generated@@524 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@142) (=> (and (and ($generated@@143 $generated@@527 $generated@@524) ($generated@@361 $generated@@527 $generated@@524 $generated@@526)) ($generated@@517 $generated@@524 $generated@@525 $generated@@526 $generated@@523 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@85) (=> (and (not (= $generated@@528 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@524 $generated@@525 $generated@@526 $generated@@523 $generated@@527) ($generated@@398 $generated@@528)))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@526 $generated@@528) $generated@@60))))
 :pattern ( ($generated@@89 ($generated@@345 $generated@@524 $generated@@525 $generated@@526 $generated@@523 $generated@@527) ($generated@@398 $generated@@528)))
))))
 :pattern ( ($generated@@474 $generated@@524 $generated@@525 $generated@@526 $generated@@523 $generated@@527))
 :pattern ( ($generated@@345 $generated@@524 $generated@@525 $generated@@526 $generated@@523 $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@523 ($generated@@309 $generated@@524 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@530 Bool) ) (! (= (type ($generated@@529 $generated@@530)) ($generated@@84 $generated@@85 $generated@@4))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 Bool) ($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@85) (= ($generated@@0 ($generated@@89 ($generated@@529 $generated@@531) $generated@@532)) $generated@@531))
 :pattern ( ($generated@@89 ($generated@@529 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) ($generated@@84 $generated@@389 $generated@@310))
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@310) (= (type $generated@@536) $generated@@389)) (= ($generated@@89 ($generated@@533 $generated@@535) $generated@@536) $generated@@535))
 :pattern ( ($generated@@89 ($generated@@533 $generated@@535) $generated@@536))
)))
(assert  (and (and (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@541 $generated@@545)) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@142))
 :pattern ( ($generated@@541 $generated@@545))
)) (forall (($generated@@546 T@U) ) (! (= (type ($generated@@542 $generated@@546)) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 ($generated@@84 $generated@@142 $generated@@4)))
 :pattern ( ($generated@@542 $generated@@546))
))) (forall (($generated@@547 T@U) ) (! (= (type ($generated@@543 $generated@@547)) $generated@@389)
 :pattern ( ($generated@@543 $generated@@547))
))) (= (type $generated@@544) $generated@@389)))
(assert  (=> (<= 1 $generated@@537) (=> (or $generated@@538 (not (= 1 $generated@@537))) (= $generated@@539 ($generated@@339 ($generated@@540 40 ($generated@@339 0)))))))
(assert  (=> (<= 1 $generated@@537) (=> (or $generated@@538 (not (= 1 $generated@@537))) (= $generated@@539 ($generated@@339 ($generated@@540 40 ($generated@@339 0)))))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@84 $generated@@142 $generated@@4)) (= (type $generated@@549) $generated@@72)) (= (type $generated@@550) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@548 ($generated@@329 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@142) ($generated@@0 ($generated@@89 $generated@@548 $generated@@551))) ($generated@@361 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@89 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@82 $generated@@548 ($generated@@329 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@84 $generated@@142 $generated@@4)) (= (type $generated@@553) $generated@@72)) (= (type $generated@@554) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@552 ($generated@@334 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@142) ($generated@@0 ($generated@@89 $generated@@552 $generated@@555))) ($generated@@361 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@89 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@82 $generated@@552 ($generated@@334 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated ($generated@@89 ($generated@@412 $generated@@557) $generated@@556)) 0))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@89 ($generated@@412 $generated@@557) $generated@@556)))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) ($generated@@84 $generated@@142 $generated@@4))
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@421 (type $generated@@561))))
(let (($generated@@563 ($generated@@420 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561)) ($generated@@84 $generated@@563 $generated@@562))))
 :pattern ( ($generated@@559 $generated@@561))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@419 $generated@@142 $generated@@142)) (= (type $generated@@565) $generated@@142)) (= ($generated@@0 ($generated@@89 ($generated@@558 $generated@@564) $generated@@565))  (and ($generated@@0 ($generated@@89 ($generated@@417 $generated@@564) ($generated@@218 ($generated@@382 $generated@@211 $generated@@565)))) (= ($generated@@89 ($generated@@559 $generated@@564) ($generated@@218 ($generated@@382 $generated@@211 $generated@@565))) ($generated@@219 ($generated@@382 $generated@@211 $generated@@565))))))
 :pattern ( ($generated@@89 ($generated@@558 $generated@@564) $generated@@565))
)))
(assert  (and (forall (($generated@@568 T@U) ) (! (= (type ($generated@@566 $generated@@568)) ($generated@@84 $generated@@142 $generated@@4))
 :pattern ( ($generated@@566 $generated@@568))
)) (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@439 (type $generated@@569))))
(let (($generated@@571 ($generated@@438 (type $generated@@569))))
(= (type ($generated@@567 $generated@@569)) ($generated@@84 $generated@@571 $generated@@570))))
 :pattern ( ($generated@@567 $generated@@569))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@437 $generated@@142 $generated@@142)) (= (type $generated@@573) $generated@@142)) (= ($generated@@0 ($generated@@89 ($generated@@566 $generated@@572) $generated@@573))  (and ($generated@@0 ($generated@@89 ($generated@@435 $generated@@572) ($generated@@218 ($generated@@382 $generated@@211 $generated@@573)))) (= ($generated@@89 ($generated@@567 $generated@@572) ($generated@@218 ($generated@@382 $generated@@211 $generated@@573))) ($generated@@219 ($generated@@382 $generated@@211 $generated@@573))))))
 :pattern ( ($generated@@89 ($generated@@566 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(let (($generated@@577 ($generated@@420 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@419 $generated@@577 $generated@@576)) (= ($generated@@0 ($generated@@89 ($generated@@496 $generated@@574) $generated@@575)) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@577) (and ($generated@@0 ($generated@@89 ($generated@@417 $generated@@574) $generated@@578)) (= $generated@@575 ($generated@@89 ($generated@@559 $generated@@574) $generated@@578))))
 :pattern ( ($generated@@89 ($generated@@417 $generated@@574) $generated@@578))
 :pattern ( ($generated@@89 ($generated@@559 $generated@@574) $generated@@578))
))))))
 :pattern ( ($generated@@89 ($generated@@496 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
(let (($generated@@582 ($generated@@438 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@437 $generated@@582 $generated@@581)) (= ($generated@@0 ($generated@@89 ($generated@@507 $generated@@579) $generated@@580)) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@582) (and ($generated@@0 ($generated@@89 ($generated@@435 $generated@@579) $generated@@583)) (= $generated@@580 ($generated@@89 ($generated@@567 $generated@@579) $generated@@583))))
 :pattern ( ($generated@@89 ($generated@@435 $generated@@579) $generated@@583))
 :pattern ( ($generated@@89 ($generated@@567 $generated@@579) $generated@@583))
))))))
 :pattern ( ($generated@@89 ($generated@@507 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@584) $generated@@72) (= (type $generated@@585) $generated@@72)) (= (type $generated@@586) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@587) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@142))) (= (type $generated@@588) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@4))) (= (type $generated@@589) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 ($generated@@84 $generated@@142 $generated@@4)))) (= (type $generated@@590) $generated@@142)) (= (type $generated@@591) $generated@@142)) (= ($generated@@0 ($generated@@89 ($generated@@345 $generated@@584 $generated@@585 $generated@@586 ($generated@@475 $generated@@587 $generated@@588 $generated@@589) $generated@@590) $generated@@591)) ($generated@@0 ($generated@@89 ($generated@@140 $generated@@589 $generated@@586 $generated@@590) $generated@@591))))
 :pattern ( ($generated@@89 ($generated@@345 $generated@@584 $generated@@585 $generated@@586 ($generated@@475 $generated@@587 $generated@@588 $generated@@589) $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (! (= (type ($generated@@592 $generated@@593 $generated@@594)) $generated@@72)
 :pattern ( ($generated@@592 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@419 $generated@@142 $generated@@142)) (= (type $generated@@596) $generated@@72)) (= (type $generated@@597) $generated@@72)) (= (type $generated@@598) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@595 ($generated@@592 $generated@@596 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@142) ($generated@@0 ($generated@@89 ($generated@@417 $generated@@595) $generated@@599))) (and ($generated@@361 ($generated@@89 ($generated@@559 $generated@@595) $generated@@599) $generated@@597 $generated@@598) ($generated@@361 $generated@@599 $generated@@596 $generated@@598)))
 :pattern ( ($generated@@89 ($generated@@559 $generated@@595) $generated@@599))
 :pattern ( ($generated@@89 ($generated@@417 $generated@@595) $generated@@599))
))))
 :pattern ( ($generated@@82 $generated@@595 ($generated@@592 $generated@@596 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (! (= (type ($generated@@600 $generated@@601 $generated@@602)) $generated@@72)
 :pattern ( ($generated@@600 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@437 $generated@@142 $generated@@142)) (= (type $generated@@604) $generated@@72)) (= (type $generated@@605) $generated@@72)) (= (type $generated@@606) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@603 ($generated@@600 $generated@@604 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@142) ($generated@@0 ($generated@@89 ($generated@@435 $generated@@603) $generated@@607))) (and ($generated@@361 ($generated@@89 ($generated@@567 $generated@@603) $generated@@607) $generated@@605 $generated@@606) ($generated@@361 $generated@@607 $generated@@604 $generated@@606)))
 :pattern ( ($generated@@89 ($generated@@567 $generated@@603) $generated@@607))
 :pattern ( ($generated@@89 ($generated@@435 $generated@@603) $generated@@607))
))))
 :pattern ( ($generated@@82 $generated@@603 ($generated@@600 $generated@@604 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 Int) ($generated@@609 Int) ) (! (= ($generated@@540 $generated@@608 $generated@@609) (div $generated@@608 $generated@@609))
 :pattern ( ($generated@@540 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@87 (type $generated@@610))))
 (=> (and (and (= (type $generated@@610) ($generated@@84 $generated@@612 $generated@@4)) (= (type $generated@@611) ($generated@@84 $generated@@612 $generated@@4))) ($generated@@348 $generated@@610 $generated@@611)) (= $generated@@610 $generated@@611)))
 :pattern ( ($generated@@348 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@613) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@615) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@613 $generated@@615))) (and ($generated@@199 $generated@@613 $generated@@614) ($generated@@199 $generated@@614 $generated@@615))) ($generated@@199 $generated@@613 $generated@@615))
 :pattern ( ($generated@@199 $generated@@613 $generated@@614) ($generated@@199 $generated@@614 $generated@@615))
)))
(assert  (=> (<= 1 $generated@@537) (=> (or $generated@@538 (not (= 1 $generated@@537))) true)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@310) (= (type $generated@@617) $generated@@72)) (= (type $generated@@618) $generated@@72)) (= ($generated@@207 $generated@@616 ($generated@@309 $generated@@617 $generated@@618)) (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@620) $generated@@142)) (=> (and (and ($generated@@347 $generated@@619) ($generated@@143 $generated@@620 $generated@@617)) ($generated@@517 $generated@@617 $generated@@618 $generated@@619 $generated@@616 $generated@@620)) ($generated@@143 ($generated@@474 $generated@@617 $generated@@618 $generated@@619 $generated@@616 $generated@@620) $generated@@618)))
 :pattern ( ($generated@@474 $generated@@617 $generated@@618 $generated@@619 $generated@@616 $generated@@620))
))))
 :pattern ( ($generated@@207 $generated@@616 ($generated@@309 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@622 T@T) ) (! (= (type ($generated@@621 $generated@@622)) ($generated@@84 $generated@@622 $generated@@4))
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@439 (type $generated@@623))))
(let (($generated@@625 ($generated@@438 (type $generated@@623))))
 (=> (= (type $generated@@623) ($generated@@437 $generated@@625 $generated@@624)) (= (= $generated@@623 ($generated@@436 $generated@@625 $generated@@624)) (= ($generated@@435 $generated@@623) ($generated@@621 $generated@@625))))))
 :pattern ( ($generated@@435 $generated@@623))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@439 (type $generated@@626))))
(let (($generated@@628 ($generated@@438 (type $generated@@626))))
 (=> (= (type $generated@@626) ($generated@@437 $generated@@628 $generated@@627)) (= (= $generated@@626 ($generated@@436 $generated@@628 $generated@@627)) (= ($generated@@507 $generated@@626) ($generated@@621 $generated@@627))))))
 :pattern ( ($generated@@507 $generated@@626))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@439 (type $generated@@629))))
(let (($generated@@631 ($generated@@438 (type $generated@@629))))
 (=> (= (type $generated@@629) ($generated@@437 $generated@@631 $generated@@630)) (= (= $generated@@629 ($generated@@436 $generated@@631 $generated@@630)) (= ($generated@@566 $generated@@629) ($generated@@621 $generated@@142))))))
 :pattern ( ($generated@@566 $generated@@629))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@421 (type $generated@@632))))
(let (($generated@@634 ($generated@@420 (type $generated@@632))))
 (=> (= (type $generated@@632) ($generated@@419 $generated@@634 $generated@@633)) (or (= $generated@@632 ($generated@@418 $generated@@634 $generated@@633)) (exists (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (and (and (= (type $generated@@635) $generated@@142) (= (type $generated@@636) $generated@@142)) ($generated@@0 ($generated@@89 ($generated@@558 $generated@@632) ($generated@@398 ($generated@@320 $generated@@635 $generated@@636)))))
 :no-pattern (type $generated@@635)
 :no-pattern (type $generated@@636)
 :no-pattern ($generated $generated@@635)
 :no-pattern ($generated@@0 $generated@@635)
 :no-pattern ($generated $generated@@636)
 :no-pattern ($generated@@0 $generated@@636)
))))))
 :pattern ( ($generated@@558 $generated@@632))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@439 (type $generated@@637))))
(let (($generated@@639 ($generated@@438 (type $generated@@637))))
 (=> (= (type $generated@@637) ($generated@@437 $generated@@639 $generated@@638)) (or (= $generated@@637 ($generated@@436 $generated@@639 $generated@@638)) (exists (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (and (and (= (type $generated@@640) $generated@@142) (= (type $generated@@641) $generated@@142)) ($generated@@0 ($generated@@89 ($generated@@566 $generated@@637) ($generated@@398 ($generated@@320 $generated@@640 $generated@@641)))))
 :no-pattern (type $generated@@640)
 :no-pattern (type $generated@@641)
 :no-pattern ($generated $generated@@640)
 :no-pattern ($generated@@0 $generated@@640)
 :no-pattern ($generated $generated@@641)
 :no-pattern ($generated@@0 $generated@@641)
))))))
 :pattern ( ($generated@@566 $generated@@637))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@142) ($generated@@143 $generated@@642 $generated@@46)) (and (= ($generated@@398 ($generated@@382 $generated@@2 $generated@@642)) $generated@@642) ($generated@@207 ($generated@@382 $generated@@2 $generated@@642) $generated@@46)))
 :pattern ( ($generated@@143 $generated@@642 $generated@@46))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@142) ($generated@@143 $generated@@643 $generated@@47)) (and (= ($generated@@398 ($generated@@382 $generated@@3 $generated@@643)) $generated@@643) ($generated@@207 ($generated@@382 $generated@@3 $generated@@643) $generated@@47)))
 :pattern ( ($generated@@143 $generated@@643 $generated@@47))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@142) ($generated@@143 $generated@@644 $generated@@44)) (and (= ($generated@@398 ($generated@@382 $generated@@4 $generated@@644)) $generated@@644) ($generated@@207 ($generated@@382 $generated@@4 $generated@@644) $generated@@44)))
 :pattern ( ($generated@@143 $generated@@644 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@645) 23))
(assert (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@142) ($generated@@143 $generated@@646 $generated@@45)) (and (= ($generated@@398 ($generated@@382 $generated@@645 $generated@@646)) $generated@@646) ($generated@@207 ($generated@@382 $generated@@645 $generated@@646) $generated@@45)))
 :pattern ( ($generated@@143 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@72) (= ($generated@@143 ($generated@@398 $generated@@647) $generated@@648) ($generated@@207 $generated@@647 $generated@@648)))
 :pattern ( ($generated@@143 ($generated@@398 $generated@@647) $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@649) $generated@@72) (= (type $generated@@650) $generated@@72)) (= (type $generated@@651) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@652) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@142))) (= (type $generated@@653) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 $generated@@4))) (= (type $generated@@654) ($generated@@144 ($generated@@84 $generated@@85 $generated@@86) $generated@@142 ($generated@@84 $generated@@142 $generated@@4)))) (= (type $generated@@655) $generated@@142)) ($generated@@0 ($generated@@140 $generated@@653 $generated@@651 $generated@@655))) ($generated@@517 $generated@@649 $generated@@650 $generated@@651 ($generated@@475 $generated@@652 $generated@@653 $generated@@654) $generated@@655))
 :pattern ( ($generated@@517 $generated@@649 $generated@@650 $generated@@651 ($generated@@475 $generated@@652 $generated@@653 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (! (let (($generated@@657 ($generated@@87 (type $generated@@656))))
 (=> (= (type $generated@@656) ($generated@@84 $generated@@657 $generated@@2)) (<= 0 ($generated@@411 $generated@@656))))
 :pattern ( ($generated@@411 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ) (! (let (($generated@@659 ($generated@@376 (type $generated@@658))))
 (=> (= (type $generated@@658) ($generated@@375 $generated@@659)) (<= 0 ($generated@@374 $generated@@658))))
 :pattern ( ($generated@@374 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@72) ($generated@@396 $generated@@660)) (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@662) $generated@@142)) ($generated@@143 $generated@@662 $generated@@660)) ($generated@@361 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@361 $generated@@662 $generated@@660 $generated@@661))
)))
 :pattern ( ($generated@@396 $generated@@660))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@72)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@72) (= (type $generated@@666) $generated@@72)) (= ($generated@@663 ($generated@@592 $generated@@665 $generated@@666)) $generated@@665))
 :pattern ( ($generated@@592 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ) (! (= (type ($generated@@667 $generated@@668)) $generated@@72)
 :pattern ( ($generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@72) (= (type $generated@@670) $generated@@72)) (= ($generated@@667 ($generated@@592 $generated@@669 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@592 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@72) (= (type $generated@@672) $generated@@72)) (= ($generated@@80 ($generated@@592 $generated@@671 $generated@@672)) $generated@@58))
 :pattern ( ($generated@@592 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ) (! (= (type ($generated@@673 $generated@@674)) $generated@@72)
 :pattern ( ($generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@72) (= (type $generated@@676) $generated@@72)) (= ($generated@@673 ($generated@@600 $generated@@675 $generated@@676)) $generated@@675))
 :pattern ( ($generated@@600 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ) (! (= (type ($generated@@677 $generated@@678)) $generated@@72)
 :pattern ( ($generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@72) (= (type $generated@@680) $generated@@72)) (= ($generated@@677 ($generated@@600 $generated@@679 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@600 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@72) (= (type $generated@@682) $generated@@72)) (= ($generated@@80 ($generated@@600 $generated@@681 $generated@@682)) $generated@@59))
 :pattern ( ($generated@@600 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ) (! (= (type ($generated@@683 $generated@@684)) $generated@@72)
 :pattern ( ($generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@72) (= (type $generated@@686) $generated@@72)) (= ($generated@@683 ($generated@@309 $generated@@685 $generated@@686)) $generated@@685))
 :pattern ( ($generated@@309 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ) (! (= (type ($generated@@687 $generated@@688)) $generated@@72)
 :pattern ( ($generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@72) (= (type $generated@@690) $generated@@72)) (= ($generated@@687 ($generated@@309 $generated@@689 $generated@@690)) $generated@@690))
 :pattern ( ($generated@@309 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ) (! (= (type ($generated@@691 $generated@@692)) $generated@@72)
 :pattern ( ($generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) $generated@@72) (= (type $generated@@694) $generated@@72)) (= ($generated@@691 ($generated@@457 $generated@@693 $generated@@694)) $generated@@693))
 :pattern ( ($generated@@457 $generated@@693 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ) (! (= (type ($generated@@695 $generated@@696)) $generated@@72)
 :pattern ( ($generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@72) (= (type $generated@@698) $generated@@72)) (= ($generated@@695 ($generated@@457 $generated@@697 $generated@@698)) $generated@@698))
 :pattern ( ($generated@@457 $generated@@697 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ) (! (= (type ($generated@@699 $generated@@700)) $generated@@72)
 :pattern ( ($generated@@699 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@72) (= (type $generated@@702) $generated@@72)) (= ($generated@@699 ($generated@@464 $generated@@701 $generated@@702)) $generated@@701))
 :pattern ( ($generated@@464 $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ) (! (= (type ($generated@@703 $generated@@704)) $generated@@72)
 :pattern ( ($generated@@703 $generated@@704))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@72) (= (type $generated@@706) $generated@@72)) (= ($generated@@703 ($generated@@464 $generated@@705 $generated@@706)) $generated@@706))
 :pattern ( ($generated@@464 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@142) (= (type $generated@@708) $generated@@142)) (= ($generated@@367 ($generated@@320 $generated@@707 $generated@@708)) $generated@@65))
 :pattern ( ($generated@@320 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ) (! (= (type ($generated@@709 $generated@@710)) $generated@@72)
 :pattern ( ($generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@72) (= (type $generated@@712) $generated@@72)) (= ($generated@@709 ($generated@@210 $generated@@711 $generated@@712)) $generated@@711))
 :pattern ( ($generated@@210 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ) (! (= (type ($generated@@713 $generated@@714)) $generated@@72)
 :pattern ( ($generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@72) (= (type $generated@@716) $generated@@72)) (= ($generated@@713 ($generated@@210 $generated@@715 $generated@@716)) $generated@@716))
 :pattern ( ($generated@@210 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@142) (= (type $generated@@718) $generated@@142)) (= ($generated@@218 ($generated@@320 $generated@@717 $generated@@718)) $generated@@717))
 :pattern ( ($generated@@320 $generated@@717 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@142) (= (type $generated@@720) $generated@@142)) (= ($generated@@219 ($generated@@320 $generated@@719 $generated@@720)) $generated@@720))
 :pattern ( ($generated@@320 $generated@@719 $generated@@720))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@85) ($generated@@207 $generated@@721 $generated@@203))
 :pattern ( ($generated@@207 $generated@@721 $generated@@203))
)))
(assert  (and (forall (($generated@@724 T@U) ) (! (= (type ($generated@@722 $generated@@724)) $generated@@72)
 :pattern ( ($generated@@722 $generated@@724))
)) (forall (($generated@@725 T@U) ($generated@@726 Int) ) (! (let (($generated@@727 ($generated@@376 (type $generated@@725))))
(= (type ($generated@@723 $generated@@725 $generated@@726)) $generated@@727))
 :pattern ( ($generated@@723 $generated@@725 $generated@@726))
))))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@728) ($generated@@375 $generated@@142)) (= (type $generated@@729) $generated@@72)) (= (type $generated@@730) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@728 ($generated@@722 $generated@@729) $generated@@730) (forall (($generated@@731 Int) ) (!  (=> (and (<= 0 $generated@@731) (< $generated@@731 ($generated@@374 $generated@@728))) ($generated@@361 ($generated@@723 $generated@@728 $generated@@731) $generated@@729 $generated@@730))
 :pattern ( ($generated@@723 $generated@@728 $generated@@731))
))))
 :pattern ( ($generated@@82 $generated@@728 ($generated@@722 $generated@@729) $generated@@730))
)))
(assert (forall (($generated@@733 Int) ) (! (= ($generated@@732 ($generated@@83 $generated@@733)) $generated@@733)
 :pattern ( ($generated@@83 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ) (! (= (type ($generated@@734 $generated@@735)) $generated@@72)
 :pattern ( ($generated@@734 $generated@@735))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@72) (= ($generated@@734 ($generated@@329 $generated@@736)) $generated@@736))
 :pattern ( ($generated@@329 $generated@@736))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@72) (= ($generated@@80 ($generated@@329 $generated@@737)) $generated@@54))
 :pattern ( ($generated@@329 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ) (! (= (type ($generated@@738 $generated@@739)) $generated@@72)
 :pattern ( ($generated@@738 $generated@@739))
)))
(assert (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@72) (= ($generated@@738 ($generated@@334 $generated@@740)) $generated@@740))
 :pattern ( ($generated@@334 $generated@@740))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@72) (= ($generated@@80 ($generated@@334 $generated@@741)) $generated@@55))
 :pattern ( ($generated@@334 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ) (! (= (type ($generated@@742 $generated@@743)) $generated@@72)
 :pattern ( ($generated@@742 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@72) (= ($generated@@742 ($generated@@224 $generated@@744)) $generated@@744))
 :pattern ( ($generated@@224 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@72) (= ($generated@@80 ($generated@@224 $generated@@745)) $generated@@56))
 :pattern ( ($generated@@224 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ) (! (= (type ($generated@@746 $generated@@747)) $generated@@72)
 :pattern ( ($generated@@746 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@72) (= ($generated@@746 ($generated@@722 $generated@@748)) $generated@@748))
 :pattern ( ($generated@@722 $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@72) (= ($generated@@80 ($generated@@722 $generated@@749)) $generated@@57))
 :pattern ( ($generated@@722 $generated@@749))
)))
(assert (forall (($generated@@750 T@U) ) (! (let (($generated@@751 (type $generated@@750)))
(= ($generated@@382 $generated@@751 ($generated@@398 $generated@@750)) $generated@@750))
 :pattern ( ($generated@@398 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (= (type $generated@@752) ($generated@@419 $generated@@142 $generated@@142)) (= (type $generated@@753) $generated@@72)) (= (type $generated@@754) $generated@@72)) (= ($generated@@207 $generated@@752 ($generated@@592 $generated@@753 $generated@@754)) (forall (($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@755) $generated@@142) ($generated@@0 ($generated@@89 ($generated@@417 $generated@@752) $generated@@755))) (and ($generated@@143 ($generated@@89 ($generated@@559 $generated@@752) $generated@@755) $generated@@754) ($generated@@143 $generated@@755 $generated@@753)))
 :pattern ( ($generated@@89 ($generated@@559 $generated@@752) $generated@@755))
 :pattern ( ($generated@@89 ($generated@@417 $generated@@752) $generated@@755))
))))
 :pattern ( ($generated@@207 $generated@@752 ($generated@@592 $generated@@753 $generated@@754)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@756) ($generated@@437 $generated@@142 $generated@@142)) (= (type $generated@@757) $generated@@72)) (= (type $generated@@758) $generated@@72)) (= ($generated@@207 $generated@@756 ($generated@@600 $generated@@757 $generated@@758)) (forall (($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@759) $generated@@142) ($generated@@0 ($generated@@89 ($generated@@435 $generated@@756) $generated@@759))) (and ($generated@@143 ($generated@@89 ($generated@@567 $generated@@756) $generated@@759) $generated@@758) ($generated@@143 $generated@@759 $generated@@757)))
 :pattern ( ($generated@@89 ($generated@@567 $generated@@756) $generated@@759))
 :pattern ( ($generated@@89 ($generated@@435 $generated@@756) $generated@@759))
))))
 :pattern ( ($generated@@207 $generated@@756 ($generated@@600 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@762) $generated@@142) (= (type $generated@@763) $generated@@142)) (< ($generated@@760 $generated@@762) ($generated@@761 ($generated@@320 $generated@@762 $generated@@763))))
 :pattern ( ($generated@@320 $generated@@762 $generated@@763))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@764) $generated@@142) (= (type $generated@@765) $generated@@142)) (< ($generated@@760 $generated@@765) ($generated@@761 ($generated@@320 $generated@@764 $generated@@765))))
 :pattern ( ($generated@@320 $generated@@764 $generated@@765))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (= (type $generated@@766) $generated@@72) (= (type $generated@@767) $generated@@72)) (= (type $generated@@768) $generated@@310)) (= ($generated@@207 $generated@@768 ($generated@@464 $generated@@766 $generated@@767))  (and ($generated@@207 $generated@@768 ($generated@@457 $generated@@766 $generated@@767)) (forall (($generated@@769 T@U) ) (!  (=> (and (= (type $generated@@769) $generated@@142) ($generated@@143 $generated@@769 $generated@@766)) ($generated@@517 $generated@@766 $generated@@767 $generated@@346 $generated@@768 $generated@@769))
 :no-pattern (type $generated@@769)
 :no-pattern ($generated $generated@@769)
 :no-pattern ($generated@@0 $generated@@769)
)))))
 :pattern ( ($generated@@207 $generated@@768 ($generated@@464 $generated@@766 $generated@@767)))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@770) $generated@@72) (= (type $generated@@771) $generated@@72)) (= (type $generated@@772) $generated@@310)) (= ($generated@@207 $generated@@772 ($generated@@457 $generated@@770 $generated@@771))  (and ($generated@@207 $generated@@772 ($generated@@309 $generated@@770 $generated@@771)) (forall (($generated@@773 T@U) ) (!  (=> (and (= (type $generated@@773) $generated@@142) ($generated@@143 $generated@@773 $generated@@770)) ($generated@@348 ($generated@@345 $generated@@770 $generated@@771 $generated@@346 $generated@@772 $generated@@773) ($generated@@349 $generated@@142)))
 :no-pattern (type $generated@@773)
 :no-pattern ($generated $generated@@773)
 :no-pattern ($generated@@0 $generated@@773)
)))))
 :pattern ( ($generated@@207 $generated@@772 ($generated@@457 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ) (! (let (($generated@@776 ($generated@@88 (type $generated@@774))))
 (=> (and (= (type $generated@@774) ($generated@@84 $generated@@389 $generated@@776)) (= (type $generated@@775) $generated@@389)) (= ($generated@@388 $generated@@774 ($generated@@543 $generated@@775)) ($generated@@388 $generated@@774 $generated@@775))))
 :pattern ( ($generated@@388 $generated@@774 ($generated@@543 $generated@@775)))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (and (= (type $generated@@777) $generated@@142) (= (type $generated@@778) $generated@@72)) (= (type $generated@@779) $generated@@72)) ($generated@@143 $generated@@777 ($generated@@592 $generated@@778 $generated@@779))) (and (= ($generated@@398 ($generated@@382 ($generated@@419 $generated@@142 $generated@@142) $generated@@777)) $generated@@777) ($generated@@207 ($generated@@382 ($generated@@419 $generated@@142 $generated@@142) $generated@@777) ($generated@@592 $generated@@778 $generated@@779))))
 :pattern ( ($generated@@143 $generated@@777 ($generated@@592 $generated@@778 $generated@@779)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (and (and (= (type $generated@@780) $generated@@142) (= (type $generated@@781) $generated@@72)) (= (type $generated@@782) $generated@@72)) ($generated@@143 $generated@@780 ($generated@@600 $generated@@781 $generated@@782))) (and (= ($generated@@398 ($generated@@382 ($generated@@437 $generated@@142 $generated@@142) $generated@@780)) $generated@@780) ($generated@@207 ($generated@@382 ($generated@@437 $generated@@142 $generated@@142) $generated@@780) ($generated@@600 $generated@@781 $generated@@782))))
 :pattern ( ($generated@@143 $generated@@780 ($generated@@600 $generated@@781 $generated@@782)))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (and (and (= (type $generated@@783) $generated@@72) (= (type $generated@@784) $generated@@72)) (= (type $generated@@785) $generated@@142)) ($generated@@143 $generated@@785 ($generated@@309 $generated@@783 $generated@@784))) (and (= ($generated@@398 ($generated@@382 $generated@@310 $generated@@785)) $generated@@785) ($generated@@207 ($generated@@382 $generated@@310 $generated@@785) ($generated@@309 $generated@@783 $generated@@784))))
 :pattern ( ($generated@@143 $generated@@785 ($generated@@309 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (and (and (= (type $generated@@786) $generated@@72) (= (type $generated@@787) $generated@@72)) (= (type $generated@@788) $generated@@142)) ($generated@@143 $generated@@788 ($generated@@457 $generated@@786 $generated@@787))) (and (= ($generated@@398 ($generated@@382 $generated@@310 $generated@@788)) $generated@@788) ($generated@@207 ($generated@@382 $generated@@310 $generated@@788) ($generated@@457 $generated@@786 $generated@@787))))
 :pattern ( ($generated@@143 $generated@@788 ($generated@@457 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (and (and (= (type $generated@@789) $generated@@72) (= (type $generated@@790) $generated@@72)) (= (type $generated@@791) $generated@@142)) ($generated@@143 $generated@@791 ($generated@@464 $generated@@789 $generated@@790))) (and (= ($generated@@398 ($generated@@382 $generated@@310 $generated@@791)) $generated@@791) ($generated@@207 ($generated@@382 $generated@@310 $generated@@791) ($generated@@464 $generated@@789 $generated@@790))))
 :pattern ( ($generated@@143 $generated@@791 ($generated@@464 $generated@@789 $generated@@790)))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (and (and (= (type $generated@@792) $generated@@72) (= (type $generated@@793) $generated@@72)) (= (type $generated@@794) $generated@@142)) ($generated@@143 $generated@@794 ($generated@@210 $generated@@792 $generated@@793))) (and (= ($generated@@398 ($generated@@382 $generated@@211 $generated@@794)) $generated@@794) ($generated@@207 ($generated@@382 $generated@@211 $generated@@794) ($generated@@210 $generated@@792 $generated@@793))))
 :pattern ( ($generated@@143 $generated@@794 ($generated@@210 $generated@@792 $generated@@793)))
)))
(assert (forall (($generated@@795 T@U) ) (! (let (($generated@@796 (type $generated@@795)))
 (not ($generated@@0 ($generated@@89 ($generated@@349 $generated@@796) $generated@@795))))
 :pattern ( (let (($generated@@796 (type $generated@@795)))
($generated@@89 ($generated@@349 $generated@@796) $generated@@795)))
)))
(assert (forall (($generated@@797 T@U) ) (! (let (($generated@@798 (type $generated@@797)))
 (not ($generated@@0 ($generated@@89 ($generated@@621 $generated@@798) $generated@@797))))
 :pattern ( (let (($generated@@798 (type $generated@@797)))
($generated@@89 ($generated@@621 $generated@@798) $generated@@797)))
)))
(assert (forall (($generated@@800 T@U) ) (! (= (type ($generated@@799 $generated@@800)) $generated@@77)
 :pattern ( ($generated@@799 $generated@@800))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ) (!  (=> (and (= (type $generated@@801) $generated@@72) (= (type $generated@@802) $generated@@72)) (and (= ($generated@@80 ($generated@@309 $generated@@801 $generated@@802)) $generated@@62) (= ($generated@@799 ($generated@@309 $generated@@801 $generated@@802)) $generated@@68)))
 :pattern ( ($generated@@309 $generated@@801 $generated@@802))
)))
(assert (forall (($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (= (type $generated@@803) $generated@@72) (= (type $generated@@804) $generated@@72)) (and (= ($generated@@80 ($generated@@457 $generated@@803 $generated@@804)) $generated@@63) (= ($generated@@799 ($generated@@457 $generated@@803 $generated@@804)) $generated@@69)))
 :pattern ( ($generated@@457 $generated@@803 $generated@@804))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ) (!  (=> (and (= (type $generated@@805) $generated@@72) (= (type $generated@@806) $generated@@72)) (and (= ($generated@@80 ($generated@@464 $generated@@805 $generated@@806)) $generated@@64) (= ($generated@@799 ($generated@@464 $generated@@805 $generated@@806)) $generated@@70)))
 :pattern ( ($generated@@464 $generated@@805 $generated@@806))
)))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ) (!  (=> (and (= (type $generated@@807) $generated@@72) (= (type $generated@@808) $generated@@72)) (and (= ($generated@@80 ($generated@@210 $generated@@807 $generated@@808)) $generated@@66) (= ($generated@@799 ($generated@@210 $generated@@807 $generated@@808)) $generated@@71)))
 :pattern ( ($generated@@210 $generated@@807 $generated@@808))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ($generated@@813 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@809) $generated@@72) (= (type $generated@@810) $generated@@72)) (= (type $generated@@811) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@812) $generated@@310)) (= (type $generated@@813) $generated@@142)) (and (and ($generated@@347 $generated@@811) (and ($generated@@143 $generated@@813 $generated@@809) ($generated@@207 $generated@@812 ($generated@@309 $generated@@809 $generated@@810)))) ($generated@@348 ($generated@@345 $generated@@809 $generated@@810 $generated@@346 $generated@@812 $generated@@813) ($generated@@349 $generated@@142)))) (= ($generated@@517 $generated@@809 $generated@@810 $generated@@346 $generated@@812 $generated@@813) ($generated@@517 $generated@@809 $generated@@810 $generated@@811 $generated@@812 $generated@@813)))
 :pattern ( ($generated@@517 $generated@@809 $generated@@810 $generated@@346 $generated@@812 $generated@@813) ($generated@@347 $generated@@811))
 :pattern ( ($generated@@517 $generated@@809 $generated@@810 $generated@@811 $generated@@812 $generated@@813))
)))
(assert (forall (($generated@@814 T@U) ) (!  (=> (= (type $generated@@814) $generated@@211) (= ($generated@@760 ($generated@@398 $generated@@814)) ($generated@@761 $generated@@814)))
 :pattern ( ($generated@@760 ($generated@@398 $generated@@814)))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (and (= (type $generated@@815) $generated@@142) ($generated@@143 $generated@@815 ($generated@@83 0))) (and (= ($generated@@398 ($generated@@382 $generated@@2 $generated@@815)) $generated@@815) ($generated@@207 ($generated@@382 ($generated@@84 $generated@@142 $generated@@4) $generated@@815) ($generated@@83 0))))
 :pattern ( ($generated@@143 $generated@@815 ($generated@@83 0)))
)))
(assert (forall (($generated@@816 T@U) ($generated@@817 T@U) ) (!  (=> (and (and (= (type $generated@@816) $generated@@142) (= (type $generated@@817) $generated@@72)) ($generated@@143 $generated@@816 ($generated@@329 $generated@@817))) (and (= ($generated@@398 ($generated@@382 ($generated@@84 $generated@@142 $generated@@4) $generated@@816)) $generated@@816) ($generated@@207 ($generated@@382 ($generated@@84 $generated@@142 $generated@@4) $generated@@816) ($generated@@329 $generated@@817))))
 :pattern ( ($generated@@143 $generated@@816 ($generated@@329 $generated@@817)))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ) (!  (=> (and (and (= (type $generated@@818) $generated@@142) (= (type $generated@@819) $generated@@72)) ($generated@@143 $generated@@818 ($generated@@334 $generated@@819))) (and (= ($generated@@398 ($generated@@382 ($generated@@84 $generated@@142 $generated@@4) $generated@@818)) $generated@@818) ($generated@@207 ($generated@@382 ($generated@@84 $generated@@142 $generated@@4) $generated@@818) ($generated@@334 $generated@@819))))
 :pattern ( ($generated@@143 $generated@@818 ($generated@@334 $generated@@819)))
)))
(assert (forall (($generated@@820 T@U) ($generated@@821 T@U) ) (!  (=> (and (and (= (type $generated@@820) $generated@@142) (= (type $generated@@821) $generated@@72)) ($generated@@143 $generated@@820 ($generated@@224 $generated@@821))) (and (= ($generated@@398 ($generated@@382 ($generated@@84 $generated@@142 $generated@@2) $generated@@820)) $generated@@820) ($generated@@207 ($generated@@382 ($generated@@84 $generated@@142 $generated@@2) $generated@@820) ($generated@@224 $generated@@821))))
 :pattern ( ($generated@@143 $generated@@820 ($generated@@224 $generated@@821)))
)))
(assert (forall (($generated@@822 T@U) ($generated@@823 T@U) ) (!  (=> (and (and (= (type $generated@@822) $generated@@142) (= (type $generated@@823) $generated@@72)) ($generated@@143 $generated@@822 ($generated@@722 $generated@@823))) (and (= ($generated@@398 ($generated@@382 ($generated@@375 $generated@@142) $generated@@822)) $generated@@822) ($generated@@207 ($generated@@382 ($generated@@375 $generated@@142) $generated@@822) ($generated@@722 $generated@@823))))
 :pattern ( ($generated@@143 $generated@@822 ($generated@@722 $generated@@823)))
)))
(assert (= ($generated@@80 $generated@@203) $generated@@61))
(assert (= ($generated@@799 $generated@@203) $generated@@67))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ($generated@@826 T@U) ) (!  (=> (and (and (= (type $generated@@824) ($generated@@84 $generated@@142 $generated@@2)) (= (type $generated@@825) $generated@@72)) (= (type $generated@@826) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@824 ($generated@@224 $generated@@825) $generated@@826) (forall (($generated@@827 T@U) ) (!  (=> (and (= (type $generated@@827) $generated@@142) (< 0 ($generated ($generated@@89 $generated@@824 $generated@@827)))) ($generated@@361 $generated@@827 $generated@@825 $generated@@826))
 :pattern ( ($generated@@89 $generated@@824 $generated@@827))
))))
 :pattern ( ($generated@@82 $generated@@824 ($generated@@224 $generated@@825) $generated@@826))
)))
(assert (forall (($generated@@828 T@U) ) (!  (=> (= (type $generated@@828) ($generated@@84 $generated@@85 $generated@@4)) ($generated@@207 ($generated@@381 $generated@@828) ($generated@@329 $generated@@203)))
 :pattern ( ($generated@@381 $generated@@828))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@829) $generated@@72) (= (type $generated@@830) $generated@@72)) (= (type $generated@@831) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@832) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@833) $generated@@310)) (= (type $generated@@834) $generated@@142)) (and (and (and ($generated@@199 $generated@@831 $generated@@832) (and ($generated@@347 $generated@@831) ($generated@@347 $generated@@832))) (and ($generated@@143 $generated@@834 $generated@@829) ($generated@@207 $generated@@833 ($generated@@309 $generated@@829 $generated@@830)))) (forall (($generated@@835 T@U) ($generated@@836 T@U) ) (! (let (($generated@@837 ($generated@@75 (type $generated@@836))))
 (=> (and (and (= (type $generated@@835) $generated@@85) (= (type $generated@@836) ($generated@@74 $generated@@837))) (and (not (= $generated@@835 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@829 $generated@@830 $generated@@831 $generated@@833 $generated@@834) ($generated@@398 $generated@@835))))) (= ($generated@@91 ($generated@@89 $generated@@831 $generated@@835) $generated@@836) ($generated@@91 ($generated@@89 $generated@@832 $generated@@835) $generated@@836))))
 :no-pattern (type $generated@@835)
 :no-pattern (type $generated@@836)
 :no-pattern ($generated $generated@@835)
 :no-pattern ($generated@@0 $generated@@835)
 :no-pattern ($generated $generated@@836)
 :no-pattern ($generated@@0 $generated@@836)
)))) (= ($generated@@517 $generated@@829 $generated@@830 $generated@@831 $generated@@833 $generated@@834) ($generated@@517 $generated@@829 $generated@@830 $generated@@832 $generated@@833 $generated@@834)))
 :pattern ( ($generated@@199 $generated@@831 $generated@@832) ($generated@@517 $generated@@829 $generated@@830 $generated@@832 $generated@@833 $generated@@834))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ($generated@@840 T@U) ($generated@@841 T@U) ($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@838) $generated@@72) (= (type $generated@@839) $generated@@72)) (= (type $generated@@840) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@841) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@842) $generated@@310)) (= (type $generated@@843) $generated@@142)) (and (and (and ($generated@@199 $generated@@840 $generated@@841) (and ($generated@@347 $generated@@840) ($generated@@347 $generated@@841))) (and ($generated@@143 $generated@@843 $generated@@838) ($generated@@207 $generated@@842 ($generated@@309 $generated@@838 $generated@@839)))) (forall (($generated@@844 T@U) ($generated@@845 T@U) ) (! (let (($generated@@846 ($generated@@75 (type $generated@@845))))
 (=> (and (and (= (type $generated@@844) $generated@@85) (= (type $generated@@845) ($generated@@74 $generated@@846))) (and (not (= $generated@@844 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@838 $generated@@839 $generated@@841 $generated@@842 $generated@@843) ($generated@@398 $generated@@844))))) (= ($generated@@91 ($generated@@89 $generated@@840 $generated@@844) $generated@@845) ($generated@@91 ($generated@@89 $generated@@841 $generated@@844) $generated@@845))))
 :no-pattern (type $generated@@844)
 :no-pattern (type $generated@@845)
 :no-pattern ($generated $generated@@844)
 :no-pattern ($generated@@0 $generated@@844)
 :no-pattern ($generated $generated@@845)
 :no-pattern ($generated@@0 $generated@@845)
)))) (= ($generated@@517 $generated@@838 $generated@@839 $generated@@840 $generated@@842 $generated@@843) ($generated@@517 $generated@@838 $generated@@839 $generated@@841 $generated@@842 $generated@@843)))
 :pattern ( ($generated@@199 $generated@@840 $generated@@841) ($generated@@517 $generated@@838 $generated@@839 $generated@@841 $generated@@842 $generated@@843))
)))
(assert (forall (($generated@@847 T@U) ($generated@@848 T@U) ($generated@@849 T@U) ) (!  (=> (and (and (and (= (type $generated@@847) $generated@@211) (= (type $generated@@848) $generated@@72)) (= (type $generated@@849) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@347 $generated@@849) (and ($generated@@209 $generated@@847) (exists (($generated@@850 T@U) ) (!  (and (= (type $generated@@850) $generated@@72) ($generated@@82 $generated@@847 ($generated@@210 $generated@@848 $generated@@850) $generated@@849))
 :pattern ( ($generated@@82 $generated@@847 ($generated@@210 $generated@@848 $generated@@850) $generated@@849))
))))) ($generated@@361 ($generated@@218 $generated@@847) $generated@@848 $generated@@849))
 :pattern ( ($generated@@361 ($generated@@218 $generated@@847) $generated@@848 $generated@@849))
)))
(assert (forall (($generated@@851 T@U) ($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (and (and (= (type $generated@@851) $generated@@211) (= (type $generated@@852) $generated@@72)) (= (type $generated@@853) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@347 $generated@@853) (and ($generated@@209 $generated@@851) (exists (($generated@@854 T@U) ) (!  (and (= (type $generated@@854) $generated@@72) ($generated@@82 $generated@@851 ($generated@@210 $generated@@854 $generated@@852) $generated@@853))
 :pattern ( ($generated@@82 $generated@@851 ($generated@@210 $generated@@854 $generated@@852) $generated@@853))
))))) ($generated@@361 ($generated@@219 $generated@@851) $generated@@852 $generated@@853))
 :pattern ( ($generated@@361 ($generated@@219 $generated@@851) $generated@@852 $generated@@853))
)))
(assert (forall (($generated@@855 T@U) ($generated@@856 T@U) ) (!  (=> (and (= (type $generated@@855) $generated@@142) (= (type $generated@@856) $generated@@142)) (= ($generated@@320 ($generated@@341 $generated@@855) ($generated@@341 $generated@@856)) ($generated@@341 ($generated@@320 $generated@@855 $generated@@856))))
 :pattern ( ($generated@@320 ($generated@@341 $generated@@855) ($generated@@341 $generated@@856)))
)))
(assert (forall (($generated@@857 Int) ) (! (= ($generated@@398 ($generated@@8 ($generated@@339 $generated@@857))) ($generated@@341 ($generated@@398 ($generated@@8 $generated@@857))))
 :pattern ( ($generated@@398 ($generated@@8 ($generated@@339 $generated@@857))))
)))
(assert (forall (($generated@@858 T@U) ) (! (= ($generated@@398 ($generated@@341 $generated@@858)) ($generated@@341 ($generated@@398 $generated@@858)))
 :pattern ( ($generated@@398 ($generated@@341 $generated@@858)))
)))
(assert (forall (($generated@@859 T@U) ) (! (let (($generated@@860 ($generated@@376 (type $generated@@859))))
 (=> (and (= (type $generated@@859) ($generated@@375 $generated@@860)) (= ($generated@@374 $generated@@859) 0)) (= $generated@@859 ($generated@@373 $generated@@860))))
 :pattern ( ($generated@@374 $generated@@859))
)))
(assert (forall (($generated@@861 T@U) ($generated@@862 T@U) ($generated@@863 T@U) ) (! (let (($generated@@864 (type $generated@@862)))
 (=> (and (and (= (type $generated@@861) ($generated@@84 $generated@@864 $generated@@2)) (= (type $generated@@863) $generated@@2)) (<= 0 ($generated $generated@@863))) (= ($generated@@411 ($generated@@90 $generated@@861 $generated@@862 $generated@@863)) (+ (- ($generated@@411 $generated@@861) ($generated ($generated@@89 $generated@@861 $generated@@862))) ($generated $generated@@863)))))
 :pattern ( ($generated@@411 ($generated@@90 $generated@@861 $generated@@862 $generated@@863)))
)))
(assert (forall (($generated@@865 T@U) ($generated@@866 T@U) ($generated@@867 T@U) ($generated@@868 T@U) ($generated@@869 T@U) ($generated@@870 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@865) $generated@@72) (= (type $generated@@866) $generated@@72)) (= (type $generated@@867) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@868) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@869) $generated@@310)) (= (type $generated@@870) $generated@@142)) (and (and (and ($generated@@199 $generated@@867 $generated@@868) (and ($generated@@347 $generated@@867) ($generated@@347 $generated@@868))) (and ($generated@@143 $generated@@870 $generated@@865) ($generated@@207 $generated@@869 ($generated@@309 $generated@@865 $generated@@866)))) (forall (($generated@@871 T@U) ($generated@@872 T@U) ) (! (let (($generated@@873 ($generated@@75 (type $generated@@872))))
 (=> (and (and (= (type $generated@@871) $generated@@85) (= (type $generated@@872) ($generated@@74 $generated@@873))) (and (not (= $generated@@871 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@865 $generated@@866 $generated@@867 $generated@@869 $generated@@870) ($generated@@398 $generated@@871))))) (= ($generated@@91 ($generated@@89 $generated@@867 $generated@@871) $generated@@872) ($generated@@91 ($generated@@89 $generated@@868 $generated@@871) $generated@@872))))
 :no-pattern (type $generated@@871)
 :no-pattern (type $generated@@872)
 :no-pattern ($generated $generated@@871)
 :no-pattern ($generated@@0 $generated@@871)
 :no-pattern ($generated $generated@@872)
 :no-pattern ($generated@@0 $generated@@872)
)))) (= ($generated@@345 $generated@@865 $generated@@866 $generated@@867 $generated@@869 $generated@@870) ($generated@@345 $generated@@865 $generated@@866 $generated@@868 $generated@@869 $generated@@870)))
 :pattern ( ($generated@@199 $generated@@867 $generated@@868) ($generated@@345 $generated@@865 $generated@@866 $generated@@868 $generated@@869 $generated@@870))
)))
(assert (forall (($generated@@874 T@U) ($generated@@875 T@U) ($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ($generated@@879 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@874) $generated@@72) (= (type $generated@@875) $generated@@72)) (= (type $generated@@876) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@877) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@878) $generated@@310)) (= (type $generated@@879) $generated@@142)) (and (and (and ($generated@@199 $generated@@876 $generated@@877) (and ($generated@@347 $generated@@876) ($generated@@347 $generated@@877))) (and ($generated@@143 $generated@@879 $generated@@874) ($generated@@207 $generated@@878 ($generated@@309 $generated@@874 $generated@@875)))) (forall (($generated@@880 T@U) ($generated@@881 T@U) ) (! (let (($generated@@882 ($generated@@75 (type $generated@@881))))
 (=> (and (and (= (type $generated@@880) $generated@@85) (= (type $generated@@881) ($generated@@74 $generated@@882))) (and (not (= $generated@@880 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@874 $generated@@875 $generated@@877 $generated@@878 $generated@@879) ($generated@@398 $generated@@880))))) (= ($generated@@91 ($generated@@89 $generated@@876 $generated@@880) $generated@@881) ($generated@@91 ($generated@@89 $generated@@877 $generated@@880) $generated@@881))))
 :no-pattern (type $generated@@880)
 :no-pattern (type $generated@@881)
 :no-pattern ($generated $generated@@880)
 :no-pattern ($generated@@0 $generated@@880)
 :no-pattern ($generated $generated@@881)
 :no-pattern ($generated@@0 $generated@@881)
)))) (= ($generated@@345 $generated@@874 $generated@@875 $generated@@876 $generated@@878 $generated@@879) ($generated@@345 $generated@@874 $generated@@875 $generated@@877 $generated@@878 $generated@@879)))
 :pattern ( ($generated@@199 $generated@@876 $generated@@877) ($generated@@345 $generated@@874 $generated@@875 $generated@@877 $generated@@878 $generated@@879))
)))
(assert (forall (($generated@@883 T@U) ($generated@@884 T@U) ($generated@@885 T@U) ($generated@@886 T@U) ($generated@@887 T@U) ($generated@@888 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@883) $generated@@72) (= (type $generated@@884) $generated@@72)) (= (type $generated@@885) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@886) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@887) $generated@@310)) (= (type $generated@@888) $generated@@142)) (and (and (and ($generated@@199 $generated@@885 $generated@@886) (and ($generated@@347 $generated@@885) ($generated@@347 $generated@@886))) (and ($generated@@143 $generated@@888 $generated@@883) ($generated@@207 $generated@@887 ($generated@@309 $generated@@883 $generated@@884)))) (forall (($generated@@889 T@U) ($generated@@890 T@U) ) (! (let (($generated@@891 ($generated@@75 (type $generated@@890))))
 (=> (and (and (= (type $generated@@889) $generated@@85) (= (type $generated@@890) ($generated@@74 $generated@@891))) (and (not (= $generated@@889 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@883 $generated@@884 $generated@@885 $generated@@887 $generated@@888) ($generated@@398 $generated@@889))))) (= ($generated@@91 ($generated@@89 $generated@@885 $generated@@889) $generated@@890) ($generated@@91 ($generated@@89 $generated@@886 $generated@@889) $generated@@890))))
 :no-pattern (type $generated@@889)
 :no-pattern (type $generated@@890)
 :no-pattern ($generated $generated@@889)
 :no-pattern ($generated@@0 $generated@@889)
 :no-pattern ($generated $generated@@890)
 :no-pattern ($generated@@0 $generated@@890)
)))) (= ($generated@@474 $generated@@883 $generated@@884 $generated@@885 $generated@@887 $generated@@888) ($generated@@474 $generated@@883 $generated@@884 $generated@@886 $generated@@887 $generated@@888)))
 :pattern ( ($generated@@199 $generated@@885 $generated@@886) ($generated@@474 $generated@@883 $generated@@884 $generated@@886 $generated@@887 $generated@@888))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 T@U) ($generated@@894 T@U) ($generated@@895 T@U) ($generated@@896 T@U) ($generated@@897 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@892) $generated@@72) (= (type $generated@@893) $generated@@72)) (= (type $generated@@894) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@895) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@896) $generated@@310)) (= (type $generated@@897) $generated@@142)) (and (and (and ($generated@@199 $generated@@894 $generated@@895) (and ($generated@@347 $generated@@894) ($generated@@347 $generated@@895))) (and ($generated@@143 $generated@@897 $generated@@892) ($generated@@207 $generated@@896 ($generated@@309 $generated@@892 $generated@@893)))) (forall (($generated@@898 T@U) ($generated@@899 T@U) ) (! (let (($generated@@900 ($generated@@75 (type $generated@@899))))
 (=> (and (and (= (type $generated@@898) $generated@@85) (= (type $generated@@899) ($generated@@74 $generated@@900))) (and (not (= $generated@@898 $generated@@204)) ($generated@@0 ($generated@@89 ($generated@@345 $generated@@892 $generated@@893 $generated@@895 $generated@@896 $generated@@897) ($generated@@398 $generated@@898))))) (= ($generated@@91 ($generated@@89 $generated@@894 $generated@@898) $generated@@899) ($generated@@91 ($generated@@89 $generated@@895 $generated@@898) $generated@@899))))
 :no-pattern (type $generated@@898)
 :no-pattern (type $generated@@899)
 :no-pattern ($generated $generated@@898)
 :no-pattern ($generated@@0 $generated@@898)
 :no-pattern ($generated $generated@@899)
 :no-pattern ($generated@@0 $generated@@899)
)))) (= ($generated@@474 $generated@@892 $generated@@893 $generated@@894 $generated@@896 $generated@@897) ($generated@@474 $generated@@892 $generated@@893 $generated@@895 $generated@@896 $generated@@897)))
 :pattern ( ($generated@@199 $generated@@894 $generated@@895) ($generated@@474 $generated@@892 $generated@@893 $generated@@895 $generated@@896 $generated@@897))
)))
(assert (forall (($generated@@901 T@U) ($generated@@902 T@U) ) (!  (=> (and (= (type $generated@@901) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@902) $generated@@2)) ($generated@@82 $generated@@902 $generated@@46 $generated@@901))
 :pattern ( ($generated@@82 $generated@@902 $generated@@46 $generated@@901))
)))
(assert (forall (($generated@@903 T@U) ($generated@@904 T@U) ) (!  (=> (and (= (type $generated@@903) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@904) $generated@@3)) ($generated@@82 $generated@@904 $generated@@47 $generated@@903))
 :pattern ( ($generated@@82 $generated@@904 $generated@@47 $generated@@903))
)))
(assert (forall (($generated@@905 T@U) ($generated@@906 T@U) ) (!  (=> (and (= (type $generated@@905) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@906) $generated@@4)) ($generated@@82 $generated@@906 $generated@@44 $generated@@905))
 :pattern ( ($generated@@82 $generated@@906 $generated@@44 $generated@@905))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ) (!  (=> (and (= (type $generated@@907) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@908) $generated@@645)) ($generated@@82 $generated@@908 $generated@@45 $generated@@907))
 :pattern ( ($generated@@82 $generated@@908 $generated@@45 $generated@@907))
)))
(assert (forall (($generated@@909 T@U) ($generated@@910 T@U) ) (!  (=> (and (= (type $generated@@909) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@910) $generated@@142)) ($generated@@82 $generated@@910 $generated@@48 $generated@@909))
 :pattern ( ($generated@@82 $generated@@910 $generated@@48 $generated@@909))
)))
(assert (forall (($generated@@911 T@U) ($generated@@912 T@U) ) (!  (=> (and (= (type $generated@@911) ($generated@@375 $generated@@142)) (= (type $generated@@912) $generated@@72)) (= ($generated@@207 $generated@@911 ($generated@@722 $generated@@912)) (forall (($generated@@913 Int) ) (!  (=> (and (<= 0 $generated@@913) (< $generated@@913 ($generated@@374 $generated@@911))) ($generated@@143 ($generated@@723 $generated@@911 $generated@@913) $generated@@912))
 :pattern ( ($generated@@723 $generated@@911 $generated@@913))
))))
 :pattern ( ($generated@@207 $generated@@911 ($generated@@722 $generated@@912)))
)))
(assert (forall (($generated@@914 T@U) ($generated@@915 T@U) ($generated@@916 T@U) ) (!  (=> (and (and (= (type $generated@@914) $generated@@142) (= (type $generated@@915) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@916) $generated@@142)) (= ($generated@@140 ($generated@@541 $generated@@914) $generated@@915 $generated@@916) $generated@@914))
 :pattern ( ($generated@@140 ($generated@@541 $generated@@914) $generated@@915 $generated@@916))
)))
(assert (forall (($generated@@917 T@U) ($generated@@918 T@U) ($generated@@919 T@U) ) (!  (=> (and (and (= (type $generated@@917) ($generated@@84 $generated@@142 $generated@@4)) (= (type $generated@@918) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@919) $generated@@142)) (= ($generated@@140 ($generated@@542 $generated@@917) $generated@@918 $generated@@919) $generated@@917))
 :pattern ( ($generated@@140 ($generated@@542 $generated@@917) $generated@@918 $generated@@919))
)))
(assert (forall (($generated@@921 T@U) ($generated@@922 Int) ) (!  (=> (= (type $generated@@921) ($generated@@375 $generated@@142)) (=> (and (<= 0 $generated@@922) (< $generated@@922 ($generated@@374 $generated@@921))) (< ($generated@@761 ($generated@@382 $generated@@211 ($generated@@723 $generated@@921 $generated@@922))) ($generated@@920 $generated@@921))))
 :pattern ( ($generated@@761 ($generated@@382 $generated@@211 ($generated@@723 $generated@@921 $generated@@922))))
)))
(assert (forall (($generated@@923 T@U) ($generated@@924 T@U) ($generated@@925 T@U) ) (!  (=> (and (and (and (= (type $generated@@923) ($generated@@419 $generated@@142 $generated@@142)) (= (type $generated@@924) $generated@@72)) (= (type $generated@@925) $generated@@72)) ($generated@@207 $generated@@923 ($generated@@592 $generated@@924 $generated@@925))) (and (and ($generated@@207 ($generated@@417 $generated@@923) ($generated@@329 $generated@@924)) ($generated@@207 ($generated@@496 $generated@@923) ($generated@@329 $generated@@925))) ($generated@@207 ($generated@@558 $generated@@923) ($generated@@329 ($generated@@210 $generated@@924 $generated@@925)))))
 :pattern ( ($generated@@207 $generated@@923 ($generated@@592 $generated@@924 $generated@@925)))
)))
(assert (forall (($generated@@926 T@U) ($generated@@927 T@U) ($generated@@928 T@U) ) (!  (=> (and (and (and (= (type $generated@@926) ($generated@@437 $generated@@142 $generated@@142)) (= (type $generated@@927) $generated@@72)) (= (type $generated@@928) $generated@@72)) ($generated@@207 $generated@@926 ($generated@@600 $generated@@927 $generated@@928))) (and (and ($generated@@207 ($generated@@435 $generated@@926) ($generated@@334 $generated@@927)) ($generated@@207 ($generated@@507 $generated@@926) ($generated@@334 $generated@@928))) ($generated@@207 ($generated@@566 $generated@@926) ($generated@@334 ($generated@@210 $generated@@927 $generated@@928)))))
 :pattern ( ($generated@@207 $generated@@926 ($generated@@600 $generated@@927 $generated@@928)))
)))
(assert (forall (($generated@@929 T@U) ) (!  (=> (= (type $generated@@929) $generated@@2) ($generated@@207 $generated@@929 $generated@@46))
 :pattern ( ($generated@@207 $generated@@929 $generated@@46))
)))
(assert (forall (($generated@@930 T@U) ) (!  (=> (= (type $generated@@930) $generated@@3) ($generated@@207 $generated@@930 $generated@@47))
 :pattern ( ($generated@@207 $generated@@930 $generated@@47))
)))
(assert (forall (($generated@@931 T@U) ) (!  (=> (= (type $generated@@931) $generated@@4) ($generated@@207 $generated@@931 $generated@@44))
 :pattern ( ($generated@@207 $generated@@931 $generated@@44))
)))
(assert (forall (($generated@@932 T@U) ) (!  (=> (= (type $generated@@932) $generated@@645) ($generated@@207 $generated@@932 $generated@@45))
 :pattern ( ($generated@@207 $generated@@932 $generated@@45))
)))
(assert (forall (($generated@@933 T@U) ) (!  (=> (= (type $generated@@933) $generated@@142) ($generated@@207 $generated@@933 $generated@@48))
 :pattern ( ($generated@@207 $generated@@933 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@934 () T@U)
(declare-fun $generated@@935 () T@U)
(declare-fun $generated@@936 () T@U)
(declare-fun $generated@@937 () T@U)
(declare-fun $generated@@938 (T@U) Bool)
(declare-fun $generated@@939 () T@U)
(declare-fun $generated@@940 () Bool)
(declare-fun $generated@@941 () T@U)
(declare-fun $generated@@942 () T@U)
(declare-fun $generated@@943 () T@U)
(declare-fun $generated@@944 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@941) $generated@@310) (= (type $generated@@942) $generated@@310)) (= (type $generated@@934) $generated@@142)) (= (type $generated@@935) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@936) ($generated@@231 $generated@@85 $generated@@4))) (= (type $generated@@937) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@939) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@943) ($generated@@231 $generated@@85 $generated@@4))) (= (type $generated@@944) ($generated@@231 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@945 true))
(let (($generated@@946  (=> (and (not (and ($generated@@143 $generated@@934 $generated@@397) ($generated@@361 $generated@@934 $generated@@397 $generated@@935))) (= (ControlFlow 0 7) 4)) $generated@@945)))
(let (($generated@@947  (=> (and (and (and ($generated@@143 $generated@@934 $generated@@397) ($generated@@361 $generated@@934 $generated@@397 $generated@@935)) (= $generated@@936 ($generated@@297 $generated@@204 $generated@@935 $generated@@60 false))) (and (and ($generated@@347 $generated@@937) ($generated@@938 $generated@@937)) (and ($generated@@0 ($generated@@341 ($generated@@11 false))) (= $generated@@939 $generated@@937)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= ($generated@@339 0) 0))) (=> (not (= ($generated@@339 0) 0)) (=> (= $generated@@940 (= ($generated@@339 ($generated@@540 5 ($generated@@339 0))) ($generated@@339 19))) (=> (and ($generated@@207 ($generated@@11 $generated@@940) $generated@@44) (= (ControlFlow 0 5) 4)) $generated@@945)))))))
(let (($generated@@948  (=> (and ($generated@@347 $generated@@935) (or (= $generated@@939 $generated@@935) ($generated@@199 $generated@@939 $generated@@935))) (and (=> (= (ControlFlow 0 8) 5) $generated@@947) (=> (= (ControlFlow 0 8) 7) $generated@@946)))))
(let (($generated@@949  (=> (and (and (= $generated@@941 ($generated@@341 ($generated@@388 ($generated@@533 ($generated@@475 ($generated@@541 ($generated@@398 ($generated@@11 (= ($generated@@339 ($generated@@540 5 ($generated@@339 0))) ($generated@@339 19))))) ($generated@@141 $generated@@397) ($generated@@542 ($generated@@381 ($generated@@529 false))))) ($generated@@543 $generated@@544)))) ($generated@@207 $generated@@941 ($generated@@464 $generated@@397 $generated@@44))) (and (= $generated@@942 $generated@@941) (= (ControlFlow 0 3) (- 0 2)))) (not (= ($generated@@339 0) 0)))))
(let (($generated@@950  (=> (= $generated@@943 ($generated@@285 $generated@@204 $generated@@939 $generated@@60 false)) (=> (and ($generated@@207 $generated@@942 ($generated@@464 $generated@@397 $generated@@44)) ($generated@@82 $generated@@942 ($generated@@464 $generated@@397 $generated@@44) $generated@@939)) (and (=> (= (ControlFlow 0 9) 8) $generated@@948) (=> (= (ControlFlow 0 9) 3) $generated@@949))))))
(let (($generated@@951 true))
(let (($generated@@952  (=> (= $generated@@944 ($generated@@230 $generated@@204 $generated@@939 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@951) (=> (= (ControlFlow 0 10) 9) $generated@@950)))))
(let (($generated@@953  (=> (and (and ($generated@@347 $generated@@939) ($generated@@938 $generated@@939)) (and (= 1 $generated@@537) (= (ControlFlow 0 11) 10))) $generated@@952)))
$generated@@953))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
