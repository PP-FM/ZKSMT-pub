(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@147 (T@U Int) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (Int) Int)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@312 (Int) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@401 (T@U) Int)
(declare-fun $generated@@402 (T@U) Bool)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (= ($generated@@1 $generated@@143) 14))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@143)) (and ($generated@@142 $generated@@145) ($generated@@142 $generated@@146))) (= ($generated@@141 $generated@@145 $generated@@146) (= ($generated@@144 $generated@@145) ($generated@@144 $generated@@146))))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@145))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@146))
)))
(assert  (and (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@155)) 15)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@149 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@149 $generated@@156))
))) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@147 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@147 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@148 $generated@@160)) $generated@@143)
 :pattern ( ($generated@@148 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@148 $generated@@163)))))
 :pattern ( ($generated@@147 $generated@@163 $generated@@164) ($generated@@148 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@81 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@81 0)))
)))
(assert (= (type $generated@@170) $generated@@70))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@143) (or ($generated@@169 $generated@@171) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@171 $generated@@170)))) true)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@143)) ($generated@@165 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@165 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@150)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@150)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@143) (= (type $generated@@185) $generated@@143)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@165 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@165 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@83)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@73 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@83) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@254) ($generated@@72 $generated@@4))) (= (type $generated@@256) $generated@@83)) (= (type $generated@@257) ($generated@@72 $generated@@258))) (= ($generated@@0 ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@259 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@259 $generated@@261))
)))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@143) (or ($generated@@169 ($generated@@259 $generated@@263)) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@263 $generated@@170)))) (= ($generated@@168 ($generated@@259 $generated@@263)) ($generated@@0 ($generated@@259 ($generated@@11 ($generated@@260 ($generated@@259 $generated@@263)))))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@259 $generated@@263)))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@143)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@150)) (= (type $generated@@271) $generated@@150)) (= ($generated@@165 ($generated@@264 $generated@@270 $generated@@271) ($generated@@173 $generated@@268 $generated@@269))  (and ($generated@@265 $generated@@270 $generated@@268) ($generated@@265 $generated@@271 $generated@@269))))
 :pattern ( ($generated@@165 ($generated@@264 $generated@@270 $generated@@271) ($generated@@173 $generated@@268 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@143) (= (type $generated@@273) $generated@@143)) (= ($generated@@179 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@179 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@143) (= (type $generated@@275) $generated@@143)) (= ($generated@@141 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@141 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@70)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@279) $generated@@70)) (= ($generated@@165 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@150) ($generated@@0 ($generated@@87 $generated@@278 $generated@@280))) ($generated@@265 $generated@@280 $generated@@279))
 :pattern ( ($generated@@87 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@165 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@70)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@284) $generated@@70)) (= ($generated@@165 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@150) ($generated@@0 ($generated@@87 $generated@@283 $generated@@285))) ($generated@@265 $generated@@285 $generated@@284))
 :pattern ( ($generated@@87 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@165 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@286 $generated@@287) $generated@@287)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@259 $generated@@288) $generated@@288)
 :pattern ( ($generated@@259 $generated@@288))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@70) (= (type $generated@@292) $generated@@70)) (= (type $generated@@293) $generated@@150)) (= (type $generated@@294) $generated@@150)) (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@289 $generated@@295)) (= ($generated@@80 ($generated@@264 $generated@@293 $generated@@294) ($generated@@173 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@80 ($generated@@264 $generated@@293 $generated@@294) ($generated@@173 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@74)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@143) (= ($generated@@172 $generated@@298) (= ($generated@@296 $generated@@298) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@143) (= ($generated@@142 $generated@@299) (= ($generated@@296 $generated@@299) $generated@@64)))
 :pattern ( ($generated@@142 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@143) (= ($generated@@260 $generated@@300) (= ($generated@@296 $generated@@300) $generated@@66)))
 :pattern ( ($generated@@260 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@154 (type $generated@@302))))
 (=> (and (= (type $generated@@302) ($generated@@149 $generated@@304)) (= (type $generated@@303) ($generated@@149 $generated@@304))) (= ($generated@@301 $generated@@302 $generated@@303)  (and (= ($generated@@151 $generated@@302) ($generated@@151 $generated@@303)) (forall (($generated@@305 Int) ) (!  (=> (and (<= 0 $generated@@305) (< $generated@@305 ($generated@@151 $generated@@302))) (= ($generated@@147 $generated@@302 $generated@@305) ($generated@@147 $generated@@303 $generated@@305)))
 :pattern ( ($generated@@147 $generated@@302 $generated@@305))
 :pattern ( ($generated@@147 $generated@@303 $generated@@305))
))))))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@143) ($generated@@172 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@150) (= (type $generated@@308) $generated@@150)) (= $generated@@306 ($generated@@264 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@172 $generated@@306))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@149 $generated@@310))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@151 ($generated@@309 $generated@@311)) 0)
 :pattern ( ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@313 Int) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@143)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@143) ($generated@@142 $generated@@314)) (exists (($generated@@315 Int) ) (= $generated@@314 ($generated@@312 $generated@@315))))
 :pattern ( ($generated@@142 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@143) ($generated@@260 $generated@@316)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) ($generated@@149 $generated@@150)) (= $generated@@316 ($generated@@148 $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@260 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@2) (= ($generated@@165 $generated@@318 $generated@@138) (<= ($generated@@286 0) ($generated $generated@@318))))
 :pattern ( ($generated@@165 $generated@@318 $generated@@138))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@150)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@70) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@290 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@80 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@290 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@82 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@85 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@82 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@87 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 18)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@82 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 19)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@85 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@82 $generated@@367 $generated@@2)) (= ($generated@@187 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@87 $generated@@366 $generated@@368))) (<= ($generated ($generated@@87 $generated@@366 $generated@@368)) ($generated@@324 $generated@@366))))
 :pattern ( ($generated@@87 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@187 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@265 $generated@@369 $generated@@138)) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@369)) $generated@@369) ($generated@@165 ($generated@@153 $generated@@2 $generated@@369) $generated@@138)))
 :pattern ( ($generated@@265 $generated@@369 $generated@@138))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@150) ($generated@@265 $generated@@370 $generated@@170)) (and (= ($generated@@319 ($generated@@153 $generated@@143 $generated@@370)) $generated@@370) ($generated@@165 ($generated@@153 $generated@@143 $generated@@370) $generated@@170)))
 :pattern ( ($generated@@265 $generated@@370 $generated@@170))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@165 ($generated@@312 $generated@@371) $generated@@170) ($generated@@165 ($generated@@8 $generated@@371) $generated@@138))
 :pattern ( ($generated@@165 ($generated@@312 $generated@@371) $generated@@170))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@374) $generated@@143) (= (type $generated@@375) $generated@@143)) (and ($generated@@260 $generated@@374) ($generated@@260 $generated@@375))) (= ($generated@@141 $generated@@374 $generated@@375) ($generated@@301 ($generated@@372 $generated@@374) ($generated@@372 $generated@@375))))
 :pattern ( ($generated@@141 $generated@@374 $generated@@375) ($generated@@260 $generated@@374))
 :pattern ( ($generated@@141 $generated@@374 $generated@@375) ($generated@@260 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(let (($generated@@378 ($generated@@333 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@332 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@331 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@330 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@334 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@82 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@334 (type $generated@@383))))
(let (($generated@@385 ($generated@@333 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@332 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@331 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@352 (type $generated@@387))))
(let (($generated@@389 ($generated@@351 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@350 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@349 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@348 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@352 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@82 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@352 (type $generated@@394))))
(let (($generated@@396 ($generated@@351 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@350 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@349 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@399) $generated@@70)) (= ($generated@@165 $generated@@398 ($generated@@186 $generated@@399)) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@398 $generated@@400)))) ($generated@@265 $generated@@400 $generated@@399))
 :pattern ( ($generated@@87 $generated@@398 $generated@@400))
))))
 :pattern ( ($generated@@165 $generated@@398 ($generated@@186 $generated@@399)))
)))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@143) (or ($generated@@402 $generated@@403) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@403 $generated@@170) (not ($generated@@168 $generated@@403)))))) (= ($generated@@401 $generated@@403) ($generated@@144 $generated@@403)))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@143) (or ($generated@@402 $generated@@404) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@404 $generated@@170) (not ($generated@@168 $generated@@404)))))) (<= ($generated@@286 0) ($generated@@401 $generated@@404)))
 :pattern ( ($generated@@401 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@406) $generated@@70)) (= (type $generated@@407) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@405 ($generated@@276 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@87 $generated@@405 $generated@@408))) ($generated@@290 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@87 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@80 $generated@@405 ($generated@@276 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@409) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@281 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@87 $generated@@409 $generated@@412))) ($generated@@290 $generated@@412 $generated@@410 $generated@@411))
 :pattern ( ($generated@@87 $generated@@409 $generated@@412))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@281 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated ($generated@@87 ($generated@@325 $generated@@414) $generated@@413)) 0))
 :pattern ( (let (($generated@@414 (type $generated@@413)))
($generated@@87 ($generated@@325 $generated@@414) $generated@@413)))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@334 (type $generated@@418))))
(let (($generated@@420 ($generated@@333 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@82 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@422) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@421) ($generated@@180 ($generated@@153 $generated@@143 $generated@@422)))) (= ($generated@@87 ($generated@@416 $generated@@421) ($generated@@180 ($generated@@153 $generated@@143 $generated@@422))) ($generated@@181 ($generated@@153 $generated@@143 $generated@@422))))))
 :pattern ( ($generated@@87 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@352 (type $generated@@426))))
(let (($generated@@428 ($generated@@351 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@82 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@430) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@429) ($generated@@180 ($generated@@153 $generated@@143 $generated@@430)))) (= ($generated@@87 ($generated@@424 $generated@@429) ($generated@@180 ($generated@@153 $generated@@143 $generated@@430))) ($generated@@181 ($generated@@153 $generated@@143 $generated@@430))))))
 :pattern ( ($generated@@87 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@333 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@332 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@87 ($generated@@416 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@431) $generated@@435))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@351 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@350 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@87 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@436) $generated@@440))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) ($generated@@149 $generated@@150)) (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@289 $generated@@444)) (= ($generated@@80 ($generated@@148 $generated@@443) $generated@@170 $generated@@444) ($generated@@80 $generated@@443 ($generated@@441 $generated@@45) $generated@@444)))
 :pattern ( ($generated@@80 ($generated@@148 $generated@@443) $generated@@170 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@449) $generated@@70)) (= (type $generated@@450) $generated@@70)) (= (type $generated@@451) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@448) $generated@@452))) (and ($generated@@290 ($generated@@87 ($generated@@416 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@290 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@448) $generated@@452))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@80 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@456) $generated@@460))) (and ($generated@@290 ($generated@@87 ($generated@@424 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@290 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@456) $generated@@460))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@154 (type $generated@@461))))
 (=> (and (and (= (type $generated@@461) ($generated@@149 $generated@@463)) (= (type $generated@@462) ($generated@@149 $generated@@463))) ($generated@@301 $generated@@461 $generated@@462)) (= $generated@@461 $generated@@462)))
 :pattern ( ($generated@@301 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 Int) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@289 $generated@@465)) (= ($generated@@80 ($generated@@312 $generated@@464) $generated@@170 $generated@@465) ($generated@@80 ($generated@@8 $generated@@464) $generated@@138 $generated@@465)))
 :pattern ( ($generated@@80 ($generated@@312 $generated@@464) $generated@@170 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@143) ($generated@@165 $generated@@466 $generated@@170)) (or ($generated@@142 $generated@@466) ($generated@@260 $generated@@466)))
 :pattern ( ($generated@@260 $generated@@466) ($generated@@165 $generated@@466 $generated@@170))
 :pattern ( ($generated@@142 $generated@@466) ($generated@@165 $generated@@466 $generated@@170))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@82 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@352 (type $generated@@469))))
(let (($generated@@471 ($generated@@351 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@350 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@349 $generated@@471 $generated@@470)) (= ($generated@@348 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@348 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@352 (type $generated@@472))))
(let (($generated@@474 ($generated@@351 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@350 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@349 $generated@@474 $generated@@473)) (= ($generated@@391 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@391 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@352 (type $generated@@475))))
(let (($generated@@477 ($generated@@351 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@350 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@349 $generated@@477 $generated@@476)) (= ($generated@@423 $generated@@475) ($generated@@467 $generated@@150))))))
 :pattern ( ($generated@@423 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@334 (type $generated@@478))))
(let (($generated@@480 ($generated@@333 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@332 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@331 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@150) (= (type $generated@@482) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@415 $generated@@478) ($generated@@319 ($generated@@264 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@415 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@352 (type $generated@@483))))
(let (($generated@@485 ($generated@@351 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@350 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@349 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@150) (= (type $generated@@487) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@423 $generated@@483) ($generated@@319 ($generated@@264 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@423 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@150) ($generated@@265 $generated@@488 $generated@@46)) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@488)) $generated@@488) ($generated@@165 ($generated@@153 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@265 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@150) ($generated@@265 $generated@@489 $generated@@47)) (and (= ($generated@@319 ($generated@@153 $generated@@3 $generated@@489)) $generated@@489) ($generated@@165 ($generated@@153 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@265 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@265 $generated@@490 $generated@@44)) (and (= ($generated@@319 ($generated@@153 $generated@@4 $generated@@490)) $generated@@490) ($generated@@165 ($generated@@153 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@265 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 20))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@150) ($generated@@265 $generated@@492 $generated@@45)) (and (= ($generated@@319 ($generated@@153 $generated@@491 $generated@@492)) $generated@@492) ($generated@@165 ($generated@@153 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@265 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@70) (= ($generated@@265 ($generated@@319 $generated@@493) $generated@@494) ($generated@@165 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@265 ($generated@@319 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@85 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@82 $generated@@496 $generated@@2)) (<= 0 ($generated@@324 $generated@@495))))
 :pattern ( ($generated@@324 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@154 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@149 $generated@@498)) (<= 0 ($generated@@151 $generated@@497))))
 :pattern ( ($generated@@151 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@445 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@445 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@78 ($generated@@445 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@453 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@78 ($generated@@453 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@150)) (= ($generated@@296 ($generated@@264 $generated@@519 $generated@@520)) $generated@@62))
 :pattern ( ($generated@@264 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@70) (= (type $generated@@524) $generated@@70)) (= ($generated@@521 ($generated@@173 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@173 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@525 ($generated@@173 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@173 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (= ($generated@@180 ($generated@@264 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@264 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (= ($generated@@181 ($generated@@264 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@264 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@149 $generated@@150)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@533 ($generated@@441 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@151 $generated@@533))) ($generated@@290 ($generated@@147 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@147 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@80 $generated@@533 ($generated@@441 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@81 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@81 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@276 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@276 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@78 ($generated@@276 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@281 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@281 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@78 ($generated@@281 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@547 ($generated@@186 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@186 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@78 ($generated@@186 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@551 ($generated@@441 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@441 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@70) (= ($generated@@78 ($generated@@441 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@441 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@296 ($generated@@312 $generated@@555)) $generated@@64)
 :pattern ( ($generated@@312 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@144 ($generated@@312 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@312 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) ($generated@@149 $generated@@150)) (= ($generated@@296 ($generated@@148 $generated@@557)) $generated@@66))
 :pattern ( ($generated@@148 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) ($generated@@149 $generated@@150)) (= ($generated@@372 ($generated@@148 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@148 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(= ($generated@@153 $generated@@560 ($generated@@319 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@319 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) (= ($generated@@165 $generated@@561 ($generated@@445 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@561) $generated@@564))) (and ($generated@@265 ($generated@@87 ($generated@@416 $generated@@561) $generated@@564) $generated@@563) ($generated@@265 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@561) $generated@@564))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@165 $generated@@561 ($generated@@445 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) $generated@@70)) (= ($generated@@165 $generated@@565 ($generated@@453 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@565) $generated@@568))) (and ($generated@@265 ($generated@@87 ($generated@@424 $generated@@565) $generated@@568) $generated@@567) ($generated@@265 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@565) $generated@@568))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@165 $generated@@565 ($generated@@453 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@150) (= (type $generated@@571) $generated@@150)) (< ($generated@@569 $generated@@570) ($generated@@152 ($generated@@264 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@264 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@150)) (< ($generated@@569 $generated@@573) ($generated@@152 ($generated@@264 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@264 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@150) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@70)) ($generated@@265 $generated@@574 ($generated@@445 $generated@@575 $generated@@576))) (and (= ($generated@@319 ($generated@@153 ($generated@@332 $generated@@150 $generated@@150) $generated@@574)) $generated@@574) ($generated@@165 ($generated@@153 ($generated@@332 $generated@@150 $generated@@150) $generated@@574) ($generated@@445 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@265 $generated@@574 ($generated@@445 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@70)) ($generated@@265 $generated@@577 ($generated@@453 $generated@@578 $generated@@579))) (and (= ($generated@@319 ($generated@@153 ($generated@@350 $generated@@150 $generated@@150) $generated@@577)) $generated@@577) ($generated@@165 ($generated@@153 ($generated@@350 $generated@@150 $generated@@150) $generated@@577) ($generated@@453 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@265 $generated@@577 ($generated@@453 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@70) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@150)) ($generated@@265 $generated@@582 ($generated@@173 $generated@@580 $generated@@581))) (and (= ($generated@@319 ($generated@@153 $generated@@143 $generated@@582)) $generated@@582) ($generated@@165 ($generated@@153 $generated@@143 $generated@@582) ($generated@@173 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@265 $generated@@582 ($generated@@173 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) ($generated@@149 $generated@@150)) (< ($generated@@583 $generated@@584) ($generated@@152 ($generated@@148 $generated@@584))))
 :pattern ( ($generated@@148 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@87 ($generated@@467 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@87 ($generated@@467 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@75)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (and (= ($generated@@78 ($generated@@173 $generated@@589 $generated@@590)) $generated@@63) (= ($generated@@587 ($generated@@173 $generated@@589 $generated@@590)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@143) (= ($generated@@569 ($generated@@319 $generated@@591)) ($generated@@152 $generated@@591)))
 :pattern ( ($generated@@569 ($generated@@319 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@150) ($generated@@265 $generated@@592 ($generated@@81 0))) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@592)) $generated@@592) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@592) ($generated@@81 0))))
 :pattern ( ($generated@@265 $generated@@592 ($generated@@81 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@70)) ($generated@@265 $generated@@593 ($generated@@276 $generated@@594))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@593)) $generated@@593) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@593) ($generated@@276 $generated@@594))))
 :pattern ( ($generated@@265 $generated@@593 ($generated@@276 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@70)) ($generated@@265 $generated@@595 ($generated@@281 $generated@@596))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@595)) $generated@@595) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@595) ($generated@@281 $generated@@596))))
 :pattern ( ($generated@@265 $generated@@595 ($generated@@281 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@70)) ($generated@@265 $generated@@597 ($generated@@186 $generated@@598))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@597)) $generated@@597) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@597) ($generated@@186 $generated@@598))))
 :pattern ( ($generated@@265 $generated@@597 ($generated@@186 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@150) (= (type $generated@@600) $generated@@70)) ($generated@@265 $generated@@599 ($generated@@441 $generated@@600))) (and (= ($generated@@319 ($generated@@153 ($generated@@149 $generated@@150) $generated@@599)) $generated@@599) ($generated@@165 ($generated@@153 ($generated@@149 $generated@@150) $generated@@599) ($generated@@441 $generated@@600))))
 :pattern ( ($generated@@265 $generated@@599 ($generated@@441 $generated@@600)))
)))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@143) (or ($generated@@169 $generated@@601) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@601 $generated@@170)))) (= ($generated@@168 $generated@@601) ($generated@@260 $generated@@601)))
 :pattern ( ($generated@@168 $generated@@601))
))))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@587 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@170) $generated@@65))
(assert (= ($generated@@587 $generated@@170) $generated@@69))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@603) $generated@@70)) (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@602 ($generated@@186 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@602 $generated@@605)))) ($generated@@290 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@87 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@80 $generated@@602 ($generated@@186 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) ($generated@@149 $generated@@150)) (= ($generated@@165 ($generated@@148 $generated@@606) $generated@@170) ($generated@@165 $generated@@606 ($generated@@441 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@148 $generated@@606) $generated@@170))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@143) (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@608) (and ($generated@@260 $generated@@607) ($generated@@80 $generated@@607 $generated@@170 $generated@@608)))) ($generated@@80 ($generated@@372 $generated@@607) ($generated@@441 $generated@@45) $generated@@608))
 :pattern ( ($generated@@80 ($generated@@372 $generated@@607) ($generated@@441 $generated@@45) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@143) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@611) (and ($generated@@172 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@70) ($generated@@80 $generated@@609 ($generated@@173 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@80 $generated@@609 ($generated@@173 $generated@@610 $generated@@612) $generated@@611))
))))) ($generated@@290 ($generated@@180 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@290 ($generated@@180 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@143) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@615) (and ($generated@@172 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@70) ($generated@@80 $generated@@613 ($generated@@173 $generated@@616 $generated@@614) $generated@@615))
 :pattern ( ($generated@@80 $generated@@613 ($generated@@173 $generated@@616 $generated@@614) $generated@@615))
))))) ($generated@@290 ($generated@@181 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@290 ($generated@@181 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@143) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@289 $generated@@618) (and ($generated@@142 $generated@@617) ($generated@@80 $generated@@617 $generated@@170 $generated@@618)))) ($generated@@80 ($generated@@8 ($generated@@144 $generated@@617)) $generated@@138 $generated@@618))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@144 $generated@@617)) $generated@@138 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@150) (= (type $generated@@620) $generated@@150)) (= ($generated@@264 ($generated@@259 $generated@@619) ($generated@@259 $generated@@620)) ($generated@@259 ($generated@@264 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@264 ($generated@@259 $generated@@619) ($generated@@259 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@286 $generated@@621))) ($generated@@259 ($generated@@319 ($generated@@8 $generated@@621))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@286 $generated@@621))))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@312 ($generated@@286 $generated@@622)) ($generated@@259 ($generated@@312 $generated@@622)))
 :pattern ( ($generated@@312 ($generated@@286 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) ($generated@@149 $generated@@150)) (= ($generated@@148 ($generated@@259 $generated@@623)) ($generated@@259 ($generated@@148 $generated@@623))))
 :pattern ( ($generated@@148 ($generated@@259 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@319 ($generated@@259 $generated@@624)) ($generated@@259 ($generated@@319 $generated@@624)))
 :pattern ( ($generated@@319 ($generated@@259 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@154 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@149 $generated@@626)) (= ($generated@@151 $generated@@625) 0)) (= $generated@@625 ($generated@@309 $generated@@626))))
 :pattern ( ($generated@@151 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@82 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@324 ($generated@@88 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@324 $generated@@627) ($generated ($generated@@87 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@324 ($generated@@88 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@2)) ($generated@@80 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@80 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@3)) ($generated@@80 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@80 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@4)) ($generated@@80 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@80 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@638) $generated@@491)) ($generated@@80 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@80 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@640) $generated@@150)) ($generated@@80 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@80 $generated@@640 $generated@@48 $generated@@639))
)))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@143) (or ($generated@@402 ($generated@@259 $generated@@641)) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@641 $generated@@170) (not ($generated@@0 ($generated@@259 ($generated@@11 ($generated@@168 ($generated@@259 $generated@@641)))))))))) (= ($generated@@401 ($generated@@259 $generated@@641)) ($generated@@286 ($generated@@144 ($generated@@259 $generated@@641)))))
 :weight 3
 :pattern ( ($generated@@401 ($generated@@259 $generated@@641)))
))))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@149 $generated@@150)) (= (type $generated@@643) $generated@@70)) (= ($generated@@165 $generated@@642 ($generated@@441 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@151 $generated@@642))) ($generated@@265 ($generated@@147 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@147 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@165 $generated@@642 ($generated@@441 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@151 $generated@@645))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@645 $generated@@646))) ($generated@@583 $generated@@645))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@165 $generated@@647 ($generated@@445 $generated@@648 $generated@@649))) (and (and ($generated@@165 ($generated@@330 $generated@@647) ($generated@@276 $generated@@648)) ($generated@@165 ($generated@@380 $generated@@647) ($generated@@276 $generated@@649))) ($generated@@165 ($generated@@415 $generated@@647) ($generated@@276 ($generated@@173 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@165 $generated@@647 ($generated@@445 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) ($generated@@165 $generated@@650 ($generated@@453 $generated@@651 $generated@@652))) (and (and ($generated@@165 ($generated@@348 $generated@@650) ($generated@@281 $generated@@651)) ($generated@@165 ($generated@@391 $generated@@650) ($generated@@281 $generated@@652))) ($generated@@165 ($generated@@423 $generated@@650) ($generated@@281 ($generated@@173 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@165 $generated@@650 ($generated@@453 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@165 $generated@@653 $generated@@46))
 :pattern ( ($generated@@165 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@165 $generated@@654 $generated@@47))
 :pattern ( ($generated@@165 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@165 $generated@@655 $generated@@44))
 :pattern ( ($generated@@165 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@491) ($generated@@165 $generated@@656 $generated@@45))
 :pattern ( ($generated@@165 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@150) ($generated@@165 $generated@@657 $generated@@48))
 :pattern ( ($generated@@165 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@658) ($generated@@193 $generated@@83 $generated@@4)) (= (type $generated@@659) $generated@@83)) (= (type $generated@@660) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@661) $generated@@143)) (= (type $generated@@662) ($generated@@193 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@664  (=> (and (= $generated@@658 ($generated@@247 $generated@@659 $generated@@660 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@142 $generated@@661))))
(let (($generated@@665 true))
(let (($generated@@666  (=> (and (and (= $generated@@662 ($generated@@192 $generated@@659 $generated@@660 $generated@@60 false)) ($generated@@80 $generated@@661 $generated@@170 $generated@@660)) (and ($generated@@169 $generated@@661) (not ($generated@@168 $generated@@661)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@665) (=> (= (ControlFlow 0 4) 3) $generated@@664)))))
(let (($generated@@667  (=> (and ($generated@@289 $generated@@660) ($generated@@663 $generated@@660)) (=> (and (and ($generated@@165 $generated@@661 $generated@@170) ($generated@@80 $generated@@661 $generated@@170 $generated@@660)) (and (= 1 $generated@@167) (= (ControlFlow 0 5) 4))) $generated@@666))))
$generated@@667)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@147 (T@U Int) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@312 (Int) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (= ($generated@@1 $generated@@143) 14))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@143)) (and ($generated@@142 $generated@@145) ($generated@@142 $generated@@146))) (= ($generated@@141 $generated@@145 $generated@@146) (= ($generated@@144 $generated@@145) ($generated@@144 $generated@@146))))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@145))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@146))
)))
(assert  (and (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@155)) 15)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@149 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@149 $generated@@156))
))) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@147 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@147 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@148 $generated@@160)) $generated@@143)
 :pattern ( ($generated@@148 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@148 $generated@@163)))))
 :pattern ( ($generated@@147 $generated@@163 $generated@@164) ($generated@@148 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@81 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@81 0)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@143)) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172))) ($generated@@167 $generated@@173))
 :pattern ( ($generated@@167 $generated@@173) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@150)
 :pattern ( ($generated@@175 $generated@@177))
)) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@150)
 :pattern ( ($generated@@176 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@143) (= (type $generated@@180) $generated@@143)) true) (= ($generated@@174 $generated@@179 $generated@@180)  (and (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)) (= ($generated@@176 $generated@@179) ($generated@@176 $generated@@180)))))
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@70)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@185) $generated@@70)) ($generated@@165 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@165 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 17)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@83 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@73 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@83) (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@237) ($generated@@72 $generated@@4))) (= (type $generated@@239) $generated@@83)) (= (type $generated@@240) ($generated@@72 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@83 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@73 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@83) (= (type $generated@@248) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@249) ($generated@@72 $generated@@4))) (= (type $generated@@251) $generated@@83)) (= (type $generated@@252) ($generated@@72 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@143)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@70) (= (type $generated@@259) $generated@@70)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@165 ($generated@@254 $generated@@260 $generated@@261) ($generated@@168 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@165 ($generated@@254 $generated@@260 $generated@@261) ($generated@@168 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@143) (= (type $generated@@263) $generated@@143)) (= ($generated@@174 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@174 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@143) (= (type $generated@@265) $generated@@143)) (= ($generated@@141 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@141 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@165 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@150) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@255 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@165 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@274) $generated@@70)) (= ($generated@@165 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@150) ($generated@@0 ($generated@@87 $generated@@273 $generated@@275))) ($generated@@255 $generated@@275 $generated@@274))
 :pattern ( ($generated@@87 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@165 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (= (type $generated@@285) $generated@@70))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@143) (or ($generated@@284 $generated@@286) (and (not (= 1 $generated@@282)) ($generated@@165 $generated@@286 $generated@@285)))) (and (< ($generated@@283 $generated@@286) 20) (<= ($generated@@276 0) ($generated@@283 $generated@@286))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@70) (= (type $generated@@290) $generated@@70)) (= (type $generated@@291) $generated@@150)) (= (type $generated@@292) $generated@@150)) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@287 $generated@@293)) (= ($generated@@80 ($generated@@254 $generated@@291 $generated@@292) ($generated@@168 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@80 ($generated@@254 $generated@@291 $generated@@292) ($generated@@168 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@74)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@143) (= ($generated@@167 $generated@@296) (= ($generated@@294 $generated@@296) $generated@@62)))
 :pattern ( ($generated@@167 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@143) (= ($generated@@142 $generated@@297) (= ($generated@@294 $generated@@297) $generated@@64)))
 :pattern ( ($generated@@142 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@143) (= ($generated@@298 $generated@@299) (= ($generated@@294 $generated@@299) $generated@@66)))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@154 (type $generated@@301))))
 (=> (and (= (type $generated@@301) ($generated@@149 $generated@@303)) (= (type $generated@@302) ($generated@@149 $generated@@303))) (= ($generated@@300 $generated@@301 $generated@@302)  (and (= ($generated@@151 $generated@@301) ($generated@@151 $generated@@302)) (forall (($generated@@304 Int) ) (!  (=> (and (<= 0 $generated@@304) (< $generated@@304 ($generated@@151 $generated@@301))) (= ($generated@@147 $generated@@301 $generated@@304) ($generated@@147 $generated@@302 $generated@@304)))
 :pattern ( ($generated@@147 $generated@@301 $generated@@304))
 :pattern ( ($generated@@147 $generated@@302 $generated@@304))
))))))
 :pattern ( ($generated@@300 $generated@@301 $generated@@302))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@143) (or ($generated@@284 $generated@@305) (and (not (= 1 $generated@@282)) ($generated@@165 $generated@@305 $generated@@285)))) (= ($generated@@283 $generated@@305) (ite ($generated@@142 $generated@@305) 12 14)))
 :pattern ( ($generated@@283 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@143) ($generated@@167 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@150) (= (type $generated@@308) $generated@@150)) (= $generated@@306 ($generated@@254 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@167 $generated@@306))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@149 $generated@@310))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@151 ($generated@@309 $generated@@311)) 0)
 :pattern ( ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@313 Int) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@143)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@143) ($generated@@142 $generated@@314)) (exists (($generated@@315 Int) ) (= $generated@@314 ($generated@@312 $generated@@315))))
 :pattern ( ($generated@@142 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@143) ($generated@@298 $generated@@316)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) ($generated@@149 $generated@@150)) (= $generated@@316 ($generated@@148 $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@298 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@2) (= ($generated@@165 $generated@@318 $generated@@138) (<= ($generated@@276 0) ($generated $generated@@318))))
 :pattern ( ($generated@@165 $generated@@318 $generated@@138))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@150)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@70) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@288 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@80 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@288 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@82 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@85 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@82 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@87 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 18)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@82 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 19)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@87 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@85 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@82 $generated@@367 $generated@@2)) (= ($generated@@182 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@87 $generated@@366 $generated@@368))) (<= ($generated ($generated@@87 $generated@@366 $generated@@368)) ($generated@@324 $generated@@366))))
 :pattern ( ($generated@@87 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@182 $generated@@366))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@143) (or ($generated@@284 ($generated@@278 $generated@@369)) (and (not (= 1 $generated@@282)) ($generated@@165 $generated@@369 $generated@@285)))) (= ($generated@@283 ($generated@@278 $generated@@369)) (ite ($generated@@142 ($generated@@278 $generated@@369)) 12 14)))
 :weight 3
 :pattern ( ($generated@@283 ($generated@@278 $generated@@369)))
))))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@150) ($generated@@255 $generated@@370 $generated@@138)) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@370)) $generated@@370) ($generated@@165 ($generated@@153 $generated@@2 $generated@@370) $generated@@138)))
 :pattern ( ($generated@@255 $generated@@370 $generated@@138))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@150) ($generated@@255 $generated@@371 $generated@@285)) (and (= ($generated@@319 ($generated@@153 $generated@@143 $generated@@371)) $generated@@371) ($generated@@165 ($generated@@153 $generated@@143 $generated@@371) $generated@@285)))
 :pattern ( ($generated@@255 $generated@@371 $generated@@285))
)))
(assert (forall (($generated@@372 Int) ) (! (= ($generated@@165 ($generated@@312 $generated@@372) $generated@@285) ($generated@@165 ($generated@@8 $generated@@372) $generated@@138))
 :pattern ( ($generated@@165 ($generated@@312 $generated@@372) $generated@@285))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@143) (= (type $generated@@376) $generated@@143)) (and ($generated@@298 $generated@@375) ($generated@@298 $generated@@376))) (= ($generated@@141 $generated@@375 $generated@@376) ($generated@@300 ($generated@@373 $generated@@375) ($generated@@373 $generated@@376))))
 :pattern ( ($generated@@141 $generated@@375 $generated@@376) ($generated@@298 $generated@@375))
 :pattern ( ($generated@@141 $generated@@375 $generated@@376) ($generated@@298 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@334 (type $generated@@377))))
(let (($generated@@379 ($generated@@333 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@332 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@331 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@330 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@334 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@82 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@334 (type $generated@@384))))
(let (($generated@@386 ($generated@@333 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@332 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@331 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@87 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@352 (type $generated@@388))))
(let (($generated@@390 ($generated@@351 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@350 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@349 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@348 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@352 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@82 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@352 (type $generated@@395))))
(let (($generated@@397 ($generated@@351 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@350 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@349 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@87 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@400) $generated@@70)) (= ($generated@@165 $generated@@399 ($generated@@181 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@399 $generated@@401)))) ($generated@@255 $generated@@401 $generated@@400))
 :pattern ( ($generated@@87 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@165 $generated@@399 ($generated@@181 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@403) $generated@@70)) (= (type $generated@@404) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@87 $generated@@402 $generated@@405))) ($generated@@288 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@87 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@80 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@150) ($generated@@0 ($generated@@87 $generated@@406 $generated@@409))) ($generated@@288 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@87 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@87 ($generated@@325 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@87 ($generated@@325 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@334 (type $generated@@415))))
(let (($generated@@417 ($generated@@333 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@419) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@418) ($generated@@175 ($generated@@153 $generated@@143 $generated@@419)))) (= ($generated@@87 ($generated@@413 $generated@@418) ($generated@@175 ($generated@@153 $generated@@143 $generated@@419))) ($generated@@176 ($generated@@153 $generated@@143 $generated@@419))))))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@352 (type $generated@@423))))
(let (($generated@@425 ($generated@@351 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@82 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@427) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@426) ($generated@@175 ($generated@@153 $generated@@143 $generated@@427)))) (= ($generated@@87 ($generated@@421 $generated@@426) ($generated@@175 ($generated@@153 $generated@@143 $generated@@427))) ($generated@@176 ($generated@@153 $generated@@143 $generated@@427))))))
 :pattern ( ($generated@@87 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@333 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@332 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@87 ($generated@@381 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@87 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@428) $generated@@432))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@351 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@350 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@87 ($generated@@392 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@87 ($generated@@348 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@87 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@433) $generated@@437))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@149 $generated@@150)) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@287 $generated@@441)) (= ($generated@@80 ($generated@@148 $generated@@440) $generated@@285 $generated@@441) ($generated@@80 $generated@@440 ($generated@@438 $generated@@45) $generated@@441)))
 :pattern ( ($generated@@80 ($generated@@148 $generated@@440) $generated@@285 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@70)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@446) $generated@@70)) (= (type $generated@@447) $generated@@70)) (= (type $generated@@448) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@445) $generated@@449))) (and ($generated@@288 ($generated@@87 ($generated@@413 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@288 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@445) $generated@@449))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@80 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@454) $generated@@70)) (= (type $generated@@455) $generated@@70)) (= (type $generated@@456) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@453) $generated@@457))) (and ($generated@@288 ($generated@@87 ($generated@@421 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@288 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@453) $generated@@457))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@80 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@154 (type $generated@@458))))
 (=> (and (and (= (type $generated@@458) ($generated@@149 $generated@@460)) (= (type $generated@@459) ($generated@@149 $generated@@460))) ($generated@@300 $generated@@458 $generated@@459)) (= $generated@@458 $generated@@459)))
 :pattern ( ($generated@@300 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@287 $generated@@462)) (= ($generated@@80 ($generated@@312 $generated@@461) $generated@@285 $generated@@462) ($generated@@80 ($generated@@8 $generated@@461) $generated@@138 $generated@@462)))
 :pattern ( ($generated@@80 ($generated@@312 $generated@@461) $generated@@285 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@143) ($generated@@165 $generated@@463 $generated@@285)) (or ($generated@@142 $generated@@463) ($generated@@298 $generated@@463)))
 :pattern ( ($generated@@298 $generated@@463) ($generated@@165 $generated@@463 $generated@@285))
 :pattern ( ($generated@@142 $generated@@463) ($generated@@165 $generated@@463 $generated@@285))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@82 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@352 (type $generated@@466))))
(let (($generated@@468 ($generated@@351 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@350 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@349 $generated@@468 $generated@@467)) (= ($generated@@348 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@348 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@352 (type $generated@@469))))
(let (($generated@@471 ($generated@@351 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@350 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@349 $generated@@471 $generated@@470)) (= ($generated@@392 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@392 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@352 (type $generated@@472))))
(let (($generated@@474 ($generated@@351 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@350 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@349 $generated@@474 $generated@@473)) (= ($generated@@420 $generated@@472) ($generated@@464 $generated@@150))))))
 :pattern ( ($generated@@420 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@334 (type $generated@@475))))
(let (($generated@@477 ($generated@@333 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@332 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@331 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@150) (= (type $generated@@479) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@412 $generated@@475) ($generated@@319 ($generated@@254 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@412 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@352 (type $generated@@480))))
(let (($generated@@482 ($generated@@351 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@350 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@349 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@420 $generated@@480) ($generated@@319 ($generated@@254 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@420 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) ($generated@@255 $generated@@485 $generated@@46)) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@485)) $generated@@485) ($generated@@165 ($generated@@153 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@150) ($generated@@255 $generated@@486 $generated@@47)) (and (= ($generated@@319 ($generated@@153 $generated@@3 $generated@@486)) $generated@@486) ($generated@@165 ($generated@@153 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) ($generated@@255 $generated@@487 $generated@@44)) (and (= ($generated@@319 ($generated@@153 $generated@@4 $generated@@487)) $generated@@487) ($generated@@165 ($generated@@153 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 20))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@150) ($generated@@255 $generated@@489 $generated@@45)) (and (= ($generated@@319 ($generated@@153 $generated@@488 $generated@@489)) $generated@@489) ($generated@@165 ($generated@@153 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@489 $generated@@45))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@70) (= ($generated@@255 ($generated@@319 $generated@@490) $generated@@491) ($generated@@165 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@255 ($generated@@319 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@85 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@82 $generated@@493 $generated@@2)) (<= 0 ($generated@@324 $generated@@492))))
 :pattern ( ($generated@@324 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@154 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@149 $generated@@495)) (<= 0 ($generated@@151 $generated@@494))))
 :pattern ( ($generated@@151 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@442 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@442 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@78 ($generated@@442 $generated@@504 $generated@@505)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@450 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@450 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@450 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@450 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@78 ($generated@@450 $generated@@514 $generated@@515)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (= ($generated@@294 ($generated@@254 $generated@@516 $generated@@517)) $generated@@62))
 :pattern ( ($generated@@254 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@70) (= (type $generated@@521) $generated@@70)) (= ($generated@@518 ($generated@@168 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@168 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@70) (= (type $generated@@525) $generated@@70)) (= ($generated@@522 ($generated@@168 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@168 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@150) (= (type $generated@@527) $generated@@150)) (= ($generated@@175 ($generated@@254 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@254 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@150) (= (type $generated@@529) $generated@@150)) (= ($generated@@176 ($generated@@254 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@254 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@149 $generated@@150)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@530 ($generated@@438 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@151 $generated@@530))) ($generated@@288 ($generated@@147 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@147 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@80 $generated@@530 ($generated@@438 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@81 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@81 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@266 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@266 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@78 ($generated@@266 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@540 ($generated@@271 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@271 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@78 ($generated@@271 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@544 ($generated@@181 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@181 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@78 ($generated@@181 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@548 ($generated@@438 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@438 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@70) (= ($generated@@78 ($generated@@438 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@438 $generated@@551))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@294 ($generated@@312 $generated@@552)) $generated@@64)
 :pattern ( ($generated@@312 $generated@@552))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@144 ($generated@@312 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@312 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) ($generated@@149 $generated@@150)) (= ($generated@@294 ($generated@@148 $generated@@554)) $generated@@66))
 :pattern ( ($generated@@148 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) ($generated@@149 $generated@@150)) (= ($generated@@373 ($generated@@148 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@148 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@153 $generated@@557 ($generated@@319 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@319 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) (= ($generated@@165 $generated@@558 ($generated@@442 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@558) $generated@@561))) (and ($generated@@255 ($generated@@87 ($generated@@413 $generated@@558) $generated@@561) $generated@@560) ($generated@@255 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@558) $generated@@561))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@165 $generated@@558 ($generated@@442 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) (= ($generated@@165 $generated@@562 ($generated@@450 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@348 $generated@@562) $generated@@565))) (and ($generated@@255 ($generated@@87 ($generated@@421 $generated@@562) $generated@@565) $generated@@564) ($generated@@255 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@87 ($generated@@421 $generated@@562) $generated@@565))
 :pattern ( ($generated@@87 ($generated@@348 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@165 $generated@@562 ($generated@@450 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@150)) (< ($generated@@566 $generated@@567) ($generated@@152 ($generated@@254 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@254 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@150)) (< ($generated@@566 $generated@@570) ($generated@@152 ($generated@@254 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@254 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) $generated@@70)) ($generated@@255 $generated@@571 ($generated@@442 $generated@@572 $generated@@573))) (and (= ($generated@@319 ($generated@@153 ($generated@@332 $generated@@150 $generated@@150) $generated@@571)) $generated@@571) ($generated@@165 ($generated@@153 ($generated@@332 $generated@@150 $generated@@150) $generated@@571) ($generated@@442 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@255 $generated@@571 ($generated@@442 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@150) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@70)) ($generated@@255 $generated@@574 ($generated@@450 $generated@@575 $generated@@576))) (and (= ($generated@@319 ($generated@@153 ($generated@@350 $generated@@150 $generated@@150) $generated@@574)) $generated@@574) ($generated@@165 ($generated@@153 ($generated@@350 $generated@@150 $generated@@150) $generated@@574) ($generated@@450 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@255 $generated@@574 ($generated@@450 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@70) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@150)) ($generated@@255 $generated@@579 ($generated@@168 $generated@@577 $generated@@578))) (and (= ($generated@@319 ($generated@@153 $generated@@143 $generated@@579)) $generated@@579) ($generated@@165 ($generated@@153 $generated@@143 $generated@@579) ($generated@@168 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@255 $generated@@579 ($generated@@168 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) ($generated@@149 $generated@@150)) (< ($generated@@580 $generated@@581) ($generated@@152 ($generated@@148 $generated@@581))))
 :pattern ( ($generated@@148 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (not ($generated@@0 ($generated@@87 ($generated@@464 $generated@@583) $generated@@582))))
 :pattern ( (let (($generated@@583 (type $generated@@582)))
($generated@@87 ($generated@@464 $generated@@583) $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@75)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@70)) (and (= ($generated@@78 ($generated@@168 $generated@@586 $generated@@587)) $generated@@63) (= ($generated@@584 ($generated@@168 $generated@@586 $generated@@587)) $generated@@68)))
 :pattern ( ($generated@@168 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@143) (= ($generated@@566 ($generated@@319 $generated@@588)) ($generated@@152 $generated@@588)))
 :pattern ( ($generated@@566 ($generated@@319 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@150) ($generated@@255 $generated@@589 ($generated@@81 0))) (and (= ($generated@@319 ($generated@@153 $generated@@2 $generated@@589)) $generated@@589) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@589) ($generated@@81 0))))
 :pattern ( ($generated@@255 $generated@@589 ($generated@@81 0)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@150) (= (type $generated@@591) $generated@@70)) ($generated@@255 $generated@@590 ($generated@@266 $generated@@591))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@590)) $generated@@590) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@590) ($generated@@266 $generated@@591))))
 :pattern ( ($generated@@255 $generated@@590 ($generated@@266 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@150) (= (type $generated@@593) $generated@@70)) ($generated@@255 $generated@@592 ($generated@@271 $generated@@593))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@592)) $generated@@592) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@592) ($generated@@271 $generated@@593))))
 :pattern ( ($generated@@255 $generated@@592 ($generated@@271 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@150) (= (type $generated@@595) $generated@@70)) ($generated@@255 $generated@@594 ($generated@@181 $generated@@595))) (and (= ($generated@@319 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@594)) $generated@@594) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@594) ($generated@@181 $generated@@595))))
 :pattern ( ($generated@@255 $generated@@594 ($generated@@181 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@150) (= (type $generated@@597) $generated@@70)) ($generated@@255 $generated@@596 ($generated@@438 $generated@@597))) (and (= ($generated@@319 ($generated@@153 ($generated@@149 $generated@@150) $generated@@596)) $generated@@596) ($generated@@165 ($generated@@153 ($generated@@149 $generated@@150) $generated@@596) ($generated@@438 $generated@@597))))
 :pattern ( ($generated@@255 $generated@@596 ($generated@@438 $generated@@597)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@584 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@285) $generated@@65))
(assert (= ($generated@@584 $generated@@285) $generated@@69))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@599) $generated@@70)) (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@598 ($generated@@181 $generated@@599) $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@598 $generated@@601)))) ($generated@@288 $generated@@601 $generated@@599 $generated@@600))
 :pattern ( ($generated@@87 $generated@@598 $generated@@601))
))))
 :pattern ( ($generated@@80 $generated@@598 ($generated@@181 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) ($generated@@149 $generated@@150)) (= ($generated@@165 ($generated@@148 $generated@@602) $generated@@285) ($generated@@165 $generated@@602 ($generated@@438 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@148 $generated@@602) $generated@@285))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@143) (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@287 $generated@@604) (and ($generated@@298 $generated@@603) ($generated@@80 $generated@@603 $generated@@285 $generated@@604)))) ($generated@@80 ($generated@@373 $generated@@603) ($generated@@438 $generated@@45) $generated@@604))
 :pattern ( ($generated@@80 ($generated@@373 $generated@@603) ($generated@@438 $generated@@45) $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@143) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@287 $generated@@607) (and ($generated@@167 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@70) ($generated@@80 $generated@@605 ($generated@@168 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@80 $generated@@605 ($generated@@168 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@288 ($generated@@175 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@288 ($generated@@175 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@143) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@287 $generated@@611) (and ($generated@@167 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@70) ($generated@@80 $generated@@609 ($generated@@168 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@80 $generated@@609 ($generated@@168 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@288 ($generated@@176 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@288 ($generated@@176 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@143) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@287 $generated@@614) (and ($generated@@142 $generated@@613) ($generated@@80 $generated@@613 $generated@@285 $generated@@614)))) ($generated@@80 ($generated@@8 ($generated@@144 $generated@@613)) $generated@@138 $generated@@614))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@144 $generated@@613)) $generated@@138 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@150) (= (type $generated@@616) $generated@@150)) (= ($generated@@254 ($generated@@278 $generated@@615) ($generated@@278 $generated@@616)) ($generated@@278 ($generated@@254 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@254 ($generated@@278 $generated@@615) ($generated@@278 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@276 $generated@@617))) ($generated@@278 ($generated@@319 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@276 $generated@@617))))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@312 ($generated@@276 $generated@@618)) ($generated@@278 ($generated@@312 $generated@@618)))
 :pattern ( ($generated@@312 ($generated@@276 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) ($generated@@149 $generated@@150)) (= ($generated@@148 ($generated@@278 $generated@@619)) ($generated@@278 ($generated@@148 $generated@@619))))
 :pattern ( ($generated@@148 ($generated@@278 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@319 ($generated@@278 $generated@@620)) ($generated@@278 ($generated@@319 $generated@@620)))
 :pattern ( ($generated@@319 ($generated@@278 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@154 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@149 $generated@@622)) (= ($generated@@151 $generated@@621) 0)) (= $generated@@621 ($generated@@309 $generated@@622))))
 :pattern ( ($generated@@151 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@82 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@324 ($generated@@88 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@324 $generated@@623) ($generated ($generated@@87 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@324 ($generated@@88 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@628) $generated@@2)) ($generated@@80 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@80 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@3)) ($generated@@80 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@80 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@4)) ($generated@@80 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@80 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@488)) ($generated@@80 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@80 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@150)) ($generated@@80 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@80 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@149 $generated@@150)) (= (type $generated@@638) $generated@@70)) (= ($generated@@165 $generated@@637 ($generated@@438 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@151 $generated@@637))) ($generated@@255 ($generated@@147 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@147 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@165 $generated@@637 ($generated@@438 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@151 $generated@@640))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@640 $generated@@641))) ($generated@@580 $generated@@640))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@643) $generated@@70)) (= (type $generated@@644) $generated@@70)) ($generated@@165 $generated@@642 ($generated@@442 $generated@@643 $generated@@644))) (and (and ($generated@@165 ($generated@@330 $generated@@642) ($generated@@266 $generated@@643)) ($generated@@165 ($generated@@381 $generated@@642) ($generated@@266 $generated@@644))) ($generated@@165 ($generated@@412 $generated@@642) ($generated@@266 ($generated@@168 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@165 $generated@@642 ($generated@@442 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@350 $generated@@150 $generated@@150)) (= (type $generated@@646) $generated@@70)) (= (type $generated@@647) $generated@@70)) ($generated@@165 $generated@@645 ($generated@@450 $generated@@646 $generated@@647))) (and (and ($generated@@165 ($generated@@348 $generated@@645) ($generated@@271 $generated@@646)) ($generated@@165 ($generated@@392 $generated@@645) ($generated@@271 $generated@@647))) ($generated@@165 ($generated@@420 $generated@@645) ($generated@@271 ($generated@@168 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@165 $generated@@645 ($generated@@450 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@165 $generated@@648 $generated@@46))
 :pattern ( ($generated@@165 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@165 $generated@@649 $generated@@47))
 :pattern ( ($generated@@165 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@165 $generated@@650 $generated@@44))
 :pattern ( ($generated@@165 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@488) ($generated@@165 $generated@@651 $generated@@45))
 :pattern ( ($generated@@165 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@150) ($generated@@165 $generated@@652 $generated@@48))
 :pattern ( ($generated@@165 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@653) $generated@@143) (= (type $generated@@656) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@654) ($generated@@188 $generated@@83 $generated@@4))) (= (type $generated@@655) $generated@@83)) (= (type $generated@@657) ($generated@@188 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@659  (=> (= (ControlFlow 0 4) (- 0 3)) (< ($generated@@283 $generated@@653) 20))))
(let (($generated@@660  (=> (not ($generated@@142 $generated@@653)) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@165 ($generated@@8 ($generated@@276 14)) $generated@@138)) (=> ($generated@@165 ($generated@@8 ($generated@@276 14)) $generated@@138) (=> (= ($generated@@283 $generated@@653) ($generated@@276 14)) (=> (and ($generated@@165 ($generated@@8 ($generated@@283 $generated@@653)) $generated@@138) (= (ControlFlow 0 7) 4)) $generated@@659)))))))
(let (($generated@@661  (=> ($generated@@142 $generated@@653) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@165 ($generated@@8 ($generated@@276 12)) $generated@@138)) (=> ($generated@@165 ($generated@@8 ($generated@@276 12)) $generated@@138) (=> (= ($generated@@283 $generated@@653) ($generated@@276 12)) (=> (and ($generated@@165 ($generated@@8 ($generated@@283 $generated@@653)) $generated@@138) (= (ControlFlow 0 5) 4)) $generated@@659)))))))
(let (($generated@@662  (=> (= $generated@@654 ($generated@@242 $generated@@655 $generated@@656 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 5) $generated@@661) (=> (= (ControlFlow 0 9) 7) $generated@@660)))))
(let (($generated@@663  (=> (<= ($generated@@276 0) ($generated@@283 $generated@@653)) (=> (and ($generated@@80 $generated@@653 $generated@@285 $generated@@656) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@653 $generated@@653) (< ($generated@@152 $generated@@653) ($generated@@152 $generated@@653)))))))
(let (($generated@@664  (=> (= $generated@@657 ($generated@@187 $generated@@655 $generated@@656 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 2) $generated@@663) (=> (= (ControlFlow 0 10) 9) $generated@@662)))))
(let (($generated@@665  (=> (and ($generated@@287 $generated@@656) ($generated@@658 $generated@@656)) (=> (and (and ($generated@@165 $generated@@653 $generated@@285) ($generated@@80 $generated@@653 $generated@@285 $generated@@656)) (and (= 1 $generated@@282) (= (ControlFlow 0 11) 10))) $generated@@664))))
$generated@@665))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (Int) Int)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@152 (T@U Int) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@158 (T@T T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 () Int)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@U) Bool)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@320 (Int) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= ($generated@@1 $generated@@139) 14))
(assert (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@139) ($generated@@140 $generated@@143)) (and (and (<= ($generated@@141 0) ($generated@@138 $generated@@143)) (< ($generated@@138 $generated@@143) (+ ($generated@@142 $generated@@143) 1))) (< ($generated@@138 $generated@@143) 1)))
 :pattern ( ($generated@@138 $generated@@143))
)))
(assert (= (type $generated@@144) $generated@@70))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@145 $generated@@144 $generated@@146))
 :pattern ( ($generated@@80 $generated@@145 $generated@@144 $generated@@146))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@139) (= (type $generated@@151) $generated@@139)) (and ($generated@@148 $generated@@150) ($generated@@148 $generated@@151))) (= ($generated@@147 $generated@@150 $generated@@151) (= ($generated@@149 $generated@@150) ($generated@@149 $generated@@151))))
 :pattern ( ($generated@@147 $generated@@150 $generated@@151) ($generated@@148 $generated@@150))
 :pattern ( ($generated@@147 $generated@@150 $generated@@151) ($generated@@148 $generated@@151))
)))
(assert  (and (and (and (and (and (forall (($generated@@160 T@T) ) (= ($generated@@1 ($generated@@154 $generated@@160)) 15)) (forall (($generated@@161 T@T) ) (! (= ($generated@@159 ($generated@@154 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@154 $generated@@161))
))) (= ($generated@@1 $generated@@155) 16)) (forall (($generated@@162 T@U) ($generated@@163 Int) ) (! (let (($generated@@164 ($generated@@159 (type $generated@@162))))
(= (type ($generated@@152 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@152 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@153 $generated@@165)) $generated@@139)
 :pattern ( ($generated@@153 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@U) ) (! (= (type ($generated@@158 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@158 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 Int) ) (!  (=> (= (type $generated@@168) ($generated@@154 $generated@@155)) (=> (and (<= 0 $generated@@169) (< $generated@@169 ($generated@@156 $generated@@168))) (< ($generated@@157 ($generated@@158 $generated@@139 ($generated@@152 $generated@@168 $generated@@169))) ($generated@@157 ($generated@@153 $generated@@168)))))
 :pattern ( ($generated@@152 $generated@@168 $generated@@169) ($generated@@153 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@2) ($generated@@170 $generated@@171 ($generated@@81 0)))
 :pattern ( ($generated@@170 $generated@@171 ($generated@@81 0)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@139)) ($generated@@170 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@170 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@155)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@155)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@139) (= (type $generated@@185) $generated@@139)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@170 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@170 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@83)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@73 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@83) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@254) ($generated@@72 $generated@@4))) (= (type $generated@@256) $generated@@83)) (= (type $generated@@257) ($generated@@72 $generated@@258))) (= ($generated@@0 ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@261 $generated@@262)) $generated@@139)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@155)) (= (type $generated@@266) $generated@@155)) (= ($generated@@170 ($generated@@259 $generated@@265 $generated@@266) ($generated@@173 $generated@@263 $generated@@264))  (and ($generated@@260 $generated@@265 $generated@@263) ($generated@@260 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@170 ($generated@@259 $generated@@265 $generated@@266) ($generated@@173 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@139) (= (type $generated@@268) $generated@@139)) (= ($generated@@179 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@179 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@139) (= (type $generated@@270) $generated@@139)) (= ($generated@@147 $generated@@269 $generated@@270) (= $generated@@269 $generated@@270)))
 :pattern ( ($generated@@147 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@274) $generated@@70)) (= ($generated@@170 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@155) ($generated@@0 ($generated@@87 $generated@@273 $generated@@275))) ($generated@@260 $generated@@275 $generated@@274))
 :pattern ( ($generated@@87 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@170 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@70)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@279) $generated@@70)) (= ($generated@@170 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@155) ($generated@@0 ($generated@@87 $generated@@278 $generated@@280))) ($generated@@260 $generated@@280 $generated@@279))
 :pattern ( ($generated@@87 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@170 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@141 $generated@@281) $generated@@281)
 :pattern ( ($generated@@141 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (= (type $generated@@288) $generated@@70))
(assert  (=> (<= 1 $generated@@286) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@139) (or ($generated@@287 $generated@@289) (and (not (= 1 $generated@@286)) ($generated@@170 $generated@@289 $generated@@288)))) (and (< ($generated@@142 $generated@@289) 20) (<= ($generated@@141 0) ($generated@@142 $generated@@289))))
 :pattern ( ($generated@@142 $generated@@289))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) $generated@@70)) (= (type $generated@@294) $generated@@155)) (= (type $generated@@295) $generated@@155)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@290 $generated@@296)) (= ($generated@@80 ($generated@@259 $generated@@294 $generated@@295) ($generated@@173 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@80 ($generated@@259 $generated@@294 $generated@@295) ($generated@@173 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@74)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@139) (= ($generated@@172 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@139) (= ($generated@@148 $generated@@300) (= ($generated@@297 $generated@@300) $generated@@64)))
 :pattern ( ($generated@@148 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@139) (= ($generated@@301 $generated@@302) (= ($generated@@297 $generated@@302) $generated@@66)))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@159 (type $generated@@304))))
 (=> (and (= (type $generated@@304) ($generated@@154 $generated@@306)) (= (type $generated@@305) ($generated@@154 $generated@@306))) (= ($generated@@303 $generated@@304 $generated@@305)  (and (= ($generated@@156 $generated@@304) ($generated@@156 $generated@@305)) (forall (($generated@@307 Int) ) (!  (=> (and (<= 0 $generated@@307) (< $generated@@307 ($generated@@156 $generated@@304))) (= ($generated@@152 $generated@@304 $generated@@307) ($generated@@152 $generated@@305 $generated@@307)))
 :pattern ( ($generated@@152 $generated@@304 $generated@@307))
 :pattern ( ($generated@@152 $generated@@305 $generated@@307))
))))))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert  (=> (<= 1 $generated@@286) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@139) (or ($generated@@287 $generated@@308) (and (not (= 1 $generated@@286)) ($generated@@170 $generated@@308 $generated@@288)))) (= ($generated@@142 $generated@@308) (ite ($generated@@148 $generated@@308) 12 14)))
 :pattern ( ($generated@@142 $generated@@308))
))))
(assert  (=> (<= 2 $generated@@286) (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@312) $generated@@139)) (or ($generated@@310 $generated@@312) (and (not (= 2 $generated@@286)) (and ($generated@@290 $generated@@311) (and ($generated@@170 $generated@@312 $generated@@288) ($generated@@80 $generated@@312 $generated@@288 $generated@@311)))))) (and ($generated@@140 $generated@@312) (= ($generated@@309 $generated@@312) (let (($generated@@313 ($generated@@138 $generated@@312)))
$generated@@313))))
 :pattern ( ($generated@@309 $generated@@312) ($generated@@290 $generated@@311))
))))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@139) ($generated@@172 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@155) (= (type $generated@@316) $generated@@155)) (= $generated@@314 ($generated@@259 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@172 $generated@@314))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@154 $generated@@318))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@156 ($generated@@317 $generated@@319)) 0)
 :pattern ( ($generated@@317 $generated@@319))
)))
(assert (forall (($generated@@321 Int) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@139)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@139) ($generated@@148 $generated@@322)) (exists (($generated@@323 Int) ) (= $generated@@322 ($generated@@320 $generated@@323))))
 :pattern ( ($generated@@148 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@139) ($generated@@301 $generated@@324)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) ($generated@@154 $generated@@155)) (= $generated@@324 ($generated@@153 $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@301 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@2) (= ($generated@@170 $generated@@326 $generated@@144) (<= ($generated@@141 0) ($generated $generated@@326))))
 :pattern ( ($generated@@170 $generated@@326 $generated@@144))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@155)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@70) (= (type $generated@@331) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@291 ($generated@@327 $generated@@329) $generated@@330 $generated@@331) ($generated@@80 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@291 ($generated@@327 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= (type ($generated@@333 $generated@@334)) ($generated@@82 $generated@@334 $generated@@2))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@85 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@82 $generated@@336 $generated@@2)) (and (= (= ($generated@@332 $generated@@335) 0) (= $generated@@335 ($generated@@333 $generated@@336))) (=> (not (= ($generated@@332 $generated@@335) 0)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) (< 0 ($generated ($generated@@87 $generated@@335 $generated@@337))))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 18)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@82 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 19)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert  (=> (<= 2 $generated@@286) (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@375) $generated@@139)) (or ($generated@@310 ($generated@@282 $generated@@375)) (and (not (= 2 $generated@@286)) (and ($generated@@290 $generated@@374) (and ($generated@@170 $generated@@375 $generated@@288) ($generated@@80 $generated@@375 $generated@@288 $generated@@374)))))) (and ($generated@@140 $generated@@375) (= ($generated@@309 ($generated@@282 $generated@@375)) (let (($generated@@376 ($generated@@138 $generated@@375)))
$generated@@376))))
 :weight 3
 :pattern ( ($generated@@309 ($generated@@282 $generated@@375)) ($generated@@290 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@85 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@82 $generated@@378 $generated@@2)) (= ($generated@@187 $generated@@377) (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@378) (and (<= 0 ($generated ($generated@@87 $generated@@377 $generated@@379))) (<= ($generated ($generated@@87 $generated@@377 $generated@@379)) ($generated@@332 $generated@@377))))
 :pattern ( ($generated@@87 $generated@@377 $generated@@379))
)))))
 :pattern ( ($generated@@187 $generated@@377))
)))
(assert  (=> (<= 1 $generated@@286) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@139) (or ($generated@@287 ($generated@@282 $generated@@380)) (and (not (= 1 $generated@@286)) ($generated@@170 $generated@@380 $generated@@288)))) (= ($generated@@142 ($generated@@282 $generated@@380)) (ite ($generated@@148 ($generated@@282 $generated@@380)) 12 14)))
 :weight 3
 :pattern ( ($generated@@142 ($generated@@282 $generated@@380)))
))))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@155) ($generated@@260 $generated@@381 $generated@@144)) (and (= ($generated@@327 ($generated@@158 $generated@@2 $generated@@381)) $generated@@381) ($generated@@170 ($generated@@158 $generated@@2 $generated@@381) $generated@@144)))
 :pattern ( ($generated@@260 $generated@@381 $generated@@144))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@155) ($generated@@260 $generated@@382 $generated@@288)) (and (= ($generated@@327 ($generated@@158 $generated@@139 $generated@@382)) $generated@@382) ($generated@@170 ($generated@@158 $generated@@139 $generated@@382) $generated@@288)))
 :pattern ( ($generated@@260 $generated@@382 $generated@@288))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@170 ($generated@@320 $generated@@383) $generated@@288) ($generated@@170 ($generated@@8 $generated@@383) $generated@@144))
 :pattern ( ($generated@@170 ($generated@@320 $generated@@383) $generated@@288))
)))
(assert (forall (($generated@@385 T@U) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@154 $generated@@155))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@386) $generated@@139) (= (type $generated@@387) $generated@@139)) (and ($generated@@301 $generated@@386) ($generated@@301 $generated@@387))) (= ($generated@@147 $generated@@386 $generated@@387) ($generated@@303 ($generated@@384 $generated@@386) ($generated@@384 $generated@@387))))
 :pattern ( ($generated@@147 $generated@@386 $generated@@387) ($generated@@301 $generated@@386))
 :pattern ( ($generated@@147 $generated@@386 $generated@@387) ($generated@@301 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@342 (type $generated@@388))))
(let (($generated@@390 ($generated@@341 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@340 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@339 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@338 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@342 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@82 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@342 (type $generated@@395))))
(let (($generated@@397 ($generated@@341 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@340 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@339 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@87 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@360 (type $generated@@399))))
(let (($generated@@401 ($generated@@359 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@358 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@357 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@356 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@360 (type $generated@@404))))
(= (type ($generated@@403 $generated@@404)) ($generated@@82 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@360 (type $generated@@406))))
(let (($generated@@408 ($generated@@359 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@358 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@357 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@407) ($generated@@0 ($generated@@87 ($generated@@403 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@403 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@411) $generated@@70)) (= ($generated@@170 $generated@@410 ($generated@@186 $generated@@411)) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@410 $generated@@412)))) ($generated@@260 $generated@@412 $generated@@411))
 :pattern ( ($generated@@87 $generated@@410 $generated@@412))
))))
 :pattern ( ($generated@@170 $generated@@410 ($generated@@186 $generated@@411)))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@271 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@155) ($generated@@0 ($generated@@87 $generated@@413 $generated@@416))) ($generated@@291 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@87 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@271 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@418) $generated@@70)) (= (type $generated@@419) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@417 ($generated@@276 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@155) ($generated@@0 ($generated@@87 $generated@@417 $generated@@420))) ($generated@@291 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@87 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@80 $generated@@417 ($generated@@276 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@87 ($generated@@333 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@87 ($generated@@333 $generated@@422) $generated@@421)))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@342 (type $generated@@426))))
(let (($generated@@428 ($generated@@341 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@82 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@430) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@429) ($generated@@180 ($generated@@158 $generated@@139 $generated@@430)))) (= ($generated@@87 ($generated@@424 $generated@@429) ($generated@@180 ($generated@@158 $generated@@139 $generated@@430))) ($generated@@181 ($generated@@158 $generated@@139 $generated@@430))))))
 :pattern ( ($generated@@87 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@360 (type $generated@@434))))
(let (($generated@@436 ($generated@@359 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@82 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@438) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@437) ($generated@@180 ($generated@@158 $generated@@139 $generated@@438)))) (= ($generated@@87 ($generated@@432 $generated@@437) ($generated@@180 ($generated@@158 $generated@@139 $generated@@438))) ($generated@@181 ($generated@@158 $generated@@139 $generated@@438))))))
 :pattern ( ($generated@@87 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@341 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@340 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@87 ($generated@@392 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@87 ($generated@@424 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@439) $generated@@443))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@359 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@358 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@87 ($generated@@403 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@87 ($generated@@432 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@444) $generated@@448))
 :pattern ( ($generated@@87 ($generated@@432 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@70)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) ($generated@@154 $generated@@155)) (= (type $generated@@452) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@290 $generated@@452)) (= ($generated@@80 ($generated@@153 $generated@@451) $generated@@288 $generated@@452) ($generated@@80 $generated@@451 ($generated@@449 $generated@@45) $generated@@452)))
 :pattern ( ($generated@@80 ($generated@@153 $generated@@451) $generated@@288 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@456) $generated@@460))) (and ($generated@@291 ($generated@@87 ($generated@@424 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@291 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@456) $generated@@460))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@464) $generated@@468))) (and ($generated@@291 ($generated@@87 ($generated@@432 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@291 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@87 ($generated@@432 $generated@@464) $generated@@468))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@80 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@159 (type $generated@@469))))
 (=> (and (and (= (type $generated@@469) ($generated@@154 $generated@@471)) (= (type $generated@@470) ($generated@@154 $generated@@471))) ($generated@@303 $generated@@469 $generated@@470)) (= $generated@@469 $generated@@470)))
 :pattern ( ($generated@@303 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 Int) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@290 $generated@@473)) (= ($generated@@80 ($generated@@320 $generated@@472) $generated@@288 $generated@@473) ($generated@@80 ($generated@@8 $generated@@472) $generated@@144 $generated@@473)))
 :pattern ( ($generated@@80 ($generated@@320 $generated@@472) $generated@@288 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@139) ($generated@@170 $generated@@474 $generated@@288)) (or ($generated@@148 $generated@@474) ($generated@@301 $generated@@474)))
 :pattern ( ($generated@@301 $generated@@474) ($generated@@170 $generated@@474 $generated@@288))
 :pattern ( ($generated@@148 $generated@@474) ($generated@@170 $generated@@474 $generated@@288))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@82 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@360 (type $generated@@477))))
(let (($generated@@479 ($generated@@359 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@358 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@357 $generated@@479 $generated@@478)) (= ($generated@@356 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@356 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@360 (type $generated@@480))))
(let (($generated@@482 ($generated@@359 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@358 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@357 $generated@@482 $generated@@481)) (= ($generated@@403 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@403 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@360 (type $generated@@483))))
(let (($generated@@485 ($generated@@359 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@358 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@357 $generated@@485 $generated@@484)) (= ($generated@@431 $generated@@483) ($generated@@475 $generated@@155))))))
 :pattern ( ($generated@@431 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@342 (type $generated@@486))))
(let (($generated@@488 ($generated@@341 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@340 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@339 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@155) (= (type $generated@@490) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@423 $generated@@486) ($generated@@327 ($generated@@259 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@423 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@360 (type $generated@@491))))
(let (($generated@@493 ($generated@@359 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@358 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@357 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@155) (= (type $generated@@495) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@431 $generated@@491) ($generated@@327 ($generated@@259 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@431 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@155) ($generated@@260 $generated@@496 $generated@@46)) (and (= ($generated@@327 ($generated@@158 $generated@@2 $generated@@496)) $generated@@496) ($generated@@170 ($generated@@158 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@260 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@155) ($generated@@260 $generated@@497 $generated@@47)) (and (= ($generated@@327 ($generated@@158 $generated@@3 $generated@@497)) $generated@@497) ($generated@@170 ($generated@@158 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@260 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@155) ($generated@@260 $generated@@498 $generated@@44)) (and (= ($generated@@327 ($generated@@158 $generated@@4 $generated@@498)) $generated@@498) ($generated@@170 ($generated@@158 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@260 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 20))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@155) ($generated@@260 $generated@@500 $generated@@45)) (and (= ($generated@@327 ($generated@@158 $generated@@499 $generated@@500)) $generated@@500) ($generated@@170 ($generated@@158 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@260 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@260 ($generated@@327 $generated@@501) $generated@@502) ($generated@@170 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@260 ($generated@@327 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@85 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@82 $generated@@504 $generated@@2)) (<= 0 ($generated@@332 $generated@@503))))
 :pattern ( ($generated@@332 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@159 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@154 $generated@@506)) (<= 0 ($generated@@156 $generated@@505))))
 :pattern ( ($generated@@156 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@70) (= (type $generated@@510) $generated@@70)) (= ($generated@@507 ($generated@@453 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@453 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@70) (= (type $generated@@514) $generated@@70)) (= ($generated@@511 ($generated@@453 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@453 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@78 ($generated@@453 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@70) (= (type $generated@@520) $generated@@70)) (= ($generated@@517 ($generated@@461 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@461 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@70) (= (type $generated@@524) $generated@@70)) (= ($generated@@521 ($generated@@461 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@461 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@78 ($generated@@461 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@461 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@155) (= (type $generated@@528) $generated@@155)) (= ($generated@@297 ($generated@@259 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@259 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@70) (= (type $generated@@532) $generated@@70)) (= ($generated@@529 ($generated@@173 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@173 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@70) (= (type $generated@@536) $generated@@70)) (= ($generated@@533 ($generated@@173 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@173 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@155)) (= ($generated@@180 ($generated@@259 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@259 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@155) (= (type $generated@@540) $generated@@155)) (= ($generated@@181 ($generated@@259 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@259 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@154 $generated@@155)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@541 ($generated@@449 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@156 $generated@@541))) ($generated@@291 ($generated@@152 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@152 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@80 $generated@@541 ($generated@@449 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@81 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@81 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@547 ($generated@@271 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@271 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@78 ($generated@@271 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@551 ($generated@@276 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@276 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@70) (= ($generated@@78 ($generated@@276 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@276 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@70)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@70) (= ($generated@@555 ($generated@@186 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@186 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@70) (= ($generated@@78 ($generated@@186 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@70)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@70) (= ($generated@@559 ($generated@@449 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@449 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@78 ($generated@@449 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@449 $generated@@562))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@297 ($generated@@320 $generated@@563)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@563))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@149 ($generated@@320 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@320 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) ($generated@@154 $generated@@155)) (= ($generated@@297 ($generated@@153 $generated@@565)) $generated@@66))
 :pattern ( ($generated@@153 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) ($generated@@154 $generated@@155)) (= ($generated@@384 ($generated@@153 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@153 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(= ($generated@@158 $generated@@568 ($generated@@327 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@327 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@70)) (= ($generated@@170 $generated@@569 ($generated@@453 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@569) $generated@@572))) (and ($generated@@260 ($generated@@87 ($generated@@424 $generated@@569) $generated@@572) $generated@@571) ($generated@@260 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@87 ($generated@@424 $generated@@569) $generated@@572))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@170 $generated@@569 ($generated@@453 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) $generated@@70)) (= ($generated@@170 $generated@@573 ($generated@@461 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@573) $generated@@576))) (and ($generated@@260 ($generated@@87 ($generated@@432 $generated@@573) $generated@@576) $generated@@575) ($generated@@260 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@87 ($generated@@432 $generated@@573) $generated@@576))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@170 $generated@@573 ($generated@@461 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@155) (= (type $generated@@579) $generated@@155)) (< ($generated@@577 $generated@@578) ($generated@@157 ($generated@@259 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@259 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@155) (= (type $generated@@581) $generated@@155)) (< ($generated@@577 $generated@@581) ($generated@@157 ($generated@@259 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@259 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@155) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) $generated@@70)) ($generated@@260 $generated@@582 ($generated@@453 $generated@@583 $generated@@584))) (and (= ($generated@@327 ($generated@@158 ($generated@@340 $generated@@155 $generated@@155) $generated@@582)) $generated@@582) ($generated@@170 ($generated@@158 ($generated@@340 $generated@@155 $generated@@155) $generated@@582) ($generated@@453 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@260 $generated@@582 ($generated@@453 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@155) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) $generated@@70)) ($generated@@260 $generated@@585 ($generated@@461 $generated@@586 $generated@@587))) (and (= ($generated@@327 ($generated@@158 ($generated@@358 $generated@@155 $generated@@155) $generated@@585)) $generated@@585) ($generated@@170 ($generated@@158 ($generated@@358 $generated@@155 $generated@@155) $generated@@585) ($generated@@461 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@260 $generated@@585 ($generated@@461 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@70) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) $generated@@155)) ($generated@@260 $generated@@590 ($generated@@173 $generated@@588 $generated@@589))) (and (= ($generated@@327 ($generated@@158 $generated@@139 $generated@@590)) $generated@@590) ($generated@@170 ($generated@@158 $generated@@139 $generated@@590) ($generated@@173 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@260 $generated@@590 ($generated@@173 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) ($generated@@154 $generated@@155)) (< ($generated@@591 $generated@@592) ($generated@@157 ($generated@@153 $generated@@592))))
 :pattern ( ($generated@@153 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@87 ($generated@@475 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@87 ($generated@@475 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@75)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@70) (= (type $generated@@598) $generated@@70)) (and (= ($generated@@78 ($generated@@173 $generated@@597 $generated@@598)) $generated@@63) (= ($generated@@595 ($generated@@173 $generated@@597 $generated@@598)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@139) (= ($generated@@577 ($generated@@327 $generated@@599)) ($generated@@157 $generated@@599)))
 :pattern ( ($generated@@577 ($generated@@327 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@155) ($generated@@260 $generated@@600 ($generated@@81 0))) (and (= ($generated@@327 ($generated@@158 $generated@@2 $generated@@600)) $generated@@600) ($generated@@170 ($generated@@158 ($generated@@82 $generated@@155 $generated@@4) $generated@@600) ($generated@@81 0))))
 :pattern ( ($generated@@260 $generated@@600 ($generated@@81 0)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@155) (= (type $generated@@602) $generated@@70)) ($generated@@260 $generated@@601 ($generated@@271 $generated@@602))) (and (= ($generated@@327 ($generated@@158 ($generated@@82 $generated@@155 $generated@@4) $generated@@601)) $generated@@601) ($generated@@170 ($generated@@158 ($generated@@82 $generated@@155 $generated@@4) $generated@@601) ($generated@@271 $generated@@602))))
 :pattern ( ($generated@@260 $generated@@601 ($generated@@271 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@155) (= (type $generated@@604) $generated@@70)) ($generated@@260 $generated@@603 ($generated@@276 $generated@@604))) (and (= ($generated@@327 ($generated@@158 ($generated@@82 $generated@@155 $generated@@4) $generated@@603)) $generated@@603) ($generated@@170 ($generated@@158 ($generated@@82 $generated@@155 $generated@@4) $generated@@603) ($generated@@276 $generated@@604))))
 :pattern ( ($generated@@260 $generated@@603 ($generated@@276 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@155) (= (type $generated@@606) $generated@@70)) ($generated@@260 $generated@@605 ($generated@@186 $generated@@606))) (and (= ($generated@@327 ($generated@@158 ($generated@@82 $generated@@155 $generated@@2) $generated@@605)) $generated@@605) ($generated@@170 ($generated@@158 ($generated@@82 $generated@@155 $generated@@2) $generated@@605) ($generated@@186 $generated@@606))))
 :pattern ( ($generated@@260 $generated@@605 ($generated@@186 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@155) (= (type $generated@@608) $generated@@70)) ($generated@@260 $generated@@607 ($generated@@449 $generated@@608))) (and (= ($generated@@327 ($generated@@158 ($generated@@154 $generated@@155) $generated@@607)) $generated@@607) ($generated@@170 ($generated@@158 ($generated@@154 $generated@@155) $generated@@607) ($generated@@449 $generated@@608))))
 :pattern ( ($generated@@260 $generated@@607 ($generated@@449 $generated@@608)))
)))
(assert (= ($generated@@78 $generated@@144) $generated@@61))
(assert (= ($generated@@595 $generated@@144) $generated@@67))
(assert (= ($generated@@78 $generated@@288) $generated@@65))
(assert (= ($generated@@595 $generated@@288) $generated@@69))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@609 ($generated@@186 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@609 $generated@@612)))) ($generated@@291 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@87 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@80 $generated@@609 ($generated@@186 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) ($generated@@154 $generated@@155)) (= ($generated@@170 ($generated@@153 $generated@@613) $generated@@288) ($generated@@170 $generated@@613 ($generated@@449 $generated@@45))))
 :pattern ( ($generated@@170 ($generated@@153 $generated@@613) $generated@@288))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@139) (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@290 $generated@@615) (and ($generated@@301 $generated@@614) ($generated@@80 $generated@@614 $generated@@288 $generated@@615)))) ($generated@@80 ($generated@@384 $generated@@614) ($generated@@449 $generated@@45) $generated@@615))
 :pattern ( ($generated@@80 ($generated@@384 $generated@@614) ($generated@@449 $generated@@45) $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@139) (= (type $generated@@617) $generated@@70)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@290 $generated@@618) (and ($generated@@172 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@70) ($generated@@80 $generated@@616 ($generated@@173 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@80 $generated@@616 ($generated@@173 $generated@@617 $generated@@619) $generated@@618))
))))) ($generated@@291 ($generated@@180 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@291 ($generated@@180 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@139) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@290 $generated@@622) (and ($generated@@172 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@70) ($generated@@80 $generated@@620 ($generated@@173 $generated@@623 $generated@@621) $generated@@622))
 :pattern ( ($generated@@80 $generated@@620 ($generated@@173 $generated@@623 $generated@@621) $generated@@622))
))))) ($generated@@291 ($generated@@181 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@291 ($generated@@181 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@139) (= (type $generated@@625) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@290 $generated@@625) (and ($generated@@148 $generated@@624) ($generated@@80 $generated@@624 $generated@@288 $generated@@625)))) ($generated@@80 ($generated@@8 ($generated@@149 $generated@@624)) $generated@@144 $generated@@625))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@149 $generated@@624)) $generated@@144 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@155) (= (type $generated@@627) $generated@@155)) (= ($generated@@259 ($generated@@282 $generated@@626) ($generated@@282 $generated@@627)) ($generated@@282 ($generated@@259 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@259 ($generated@@282 $generated@@626) ($generated@@282 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@327 ($generated@@8 ($generated@@141 $generated@@628))) ($generated@@282 ($generated@@327 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@327 ($generated@@8 ($generated@@141 $generated@@628))))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@320 ($generated@@141 $generated@@629)) ($generated@@282 ($generated@@320 $generated@@629)))
 :pattern ( ($generated@@320 ($generated@@141 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) ($generated@@154 $generated@@155)) (= ($generated@@153 ($generated@@282 $generated@@630)) ($generated@@282 ($generated@@153 $generated@@630))))
 :pattern ( ($generated@@153 ($generated@@282 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (! (= ($generated@@327 ($generated@@282 $generated@@631)) ($generated@@282 ($generated@@327 $generated@@631)))
 :pattern ( ($generated@@327 ($generated@@282 $generated@@631)))
)))
(assert  (=> (<= 2 $generated@@286) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@139) (or ($generated@@310 $generated@@632) (and (not (= 2 $generated@@286)) ($generated@@170 $generated@@632 $generated@@288)))) (<= ($generated@@141 0) ($generated@@309 $generated@@632)))
 :pattern ( ($generated@@309 $generated@@632))
))))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@159 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@154 $generated@@634)) (= ($generated@@156 $generated@@633) 0)) (= $generated@@633 ($generated@@317 $generated@@634))))
 :pattern ( ($generated@@156 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@82 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@332 ($generated@@88 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@332 $generated@@635) ($generated ($generated@@87 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@332 ($generated@@88 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@640) $generated@@2)) ($generated@@80 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@80 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@642) $generated@@3)) ($generated@@80 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@80 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@644) $generated@@4)) ($generated@@80 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@80 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@646) $generated@@499)) ($generated@@80 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@80 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@648) $generated@@155)) ($generated@@80 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@80 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@154 $generated@@155)) (= (type $generated@@650) $generated@@70)) (= ($generated@@170 $generated@@649 ($generated@@449 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@156 $generated@@649))) ($generated@@260 ($generated@@152 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@152 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@170 $generated@@649 ($generated@@449 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@154 $generated@@155)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@156 $generated@@652))) (< ($generated@@157 ($generated@@158 $generated@@139 ($generated@@152 $generated@@652 $generated@@653))) ($generated@@591 $generated@@652))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@139 ($generated@@152 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@655) $generated@@70)) (= (type $generated@@656) $generated@@70)) ($generated@@170 $generated@@654 ($generated@@453 $generated@@655 $generated@@656))) (and (and ($generated@@170 ($generated@@338 $generated@@654) ($generated@@271 $generated@@655)) ($generated@@170 ($generated@@392 $generated@@654) ($generated@@271 $generated@@656))) ($generated@@170 ($generated@@423 $generated@@654) ($generated@@271 ($generated@@173 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@170 $generated@@654 ($generated@@453 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@658) $generated@@70)) (= (type $generated@@659) $generated@@70)) ($generated@@170 $generated@@657 ($generated@@461 $generated@@658 $generated@@659))) (and (and ($generated@@170 ($generated@@356 $generated@@657) ($generated@@276 $generated@@658)) ($generated@@170 ($generated@@403 $generated@@657) ($generated@@276 $generated@@659))) ($generated@@170 ($generated@@431 $generated@@657) ($generated@@276 ($generated@@173 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@170 $generated@@657 ($generated@@461 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) ($generated@@170 $generated@@660 $generated@@46))
 :pattern ( ($generated@@170 $generated@@660 $generated@@46))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@3) ($generated@@170 $generated@@661 $generated@@47))
 :pattern ( ($generated@@170 $generated@@661 $generated@@47))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@4) ($generated@@170 $generated@@662 $generated@@44))
 :pattern ( ($generated@@170 $generated@@662 $generated@@44))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@499) ($generated@@170 $generated@@663 $generated@@45))
 :pattern ( ($generated@@170 $generated@@663 $generated@@45))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@155) ($generated@@170 $generated@@664 $generated@@48))
 :pattern ( ($generated@@170 $generated@@664 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@665) $generated@@139) (= (type $generated@@668) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@669) ($generated@@193 $generated@@83 $generated@@4))) (= (type $generated@@670) $generated@@83)) (= (type $generated@@671) ($generated@@193 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@673  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and ($generated@@170 ($generated@@8 ($generated@@141 (- 1 1))) $generated@@46) (and (and (<= ($generated@@141 0) ($generated@@141 (- 1 1))) (< (- 1 1) (+ ($generated@@142 $generated@@665) 1))) (< (- 1 1) 1))) (or (and ($generated@@170 ($generated@@8 (- (+ ($generated@@142 $generated@@665) 1) 1)) $generated@@46) (and (and (<= ($generated@@141 0) (- (+ ($generated@@142 $generated@@665) 1) 1)) (< (- (+ ($generated@@142 $generated@@665) 1) 1) (+ ($generated@@142 $generated@@665) 1))) (< (- (+ ($generated@@142 $generated@@665) 1) 1) 1))) (or (and ($generated@@170 ($generated@@8 ($generated@@141 0)) $generated@@46) (and (and (<= ($generated@@141 0) ($generated@@141 0)) (< 0 (+ ($generated@@142 $generated@@665) 1))) (< 0 1))) (or (and ($generated@@170 ($generated@@8 ($generated@@141 0)) $generated@@46) (and (and (<= ($generated@@141 0) ($generated@@141 0)) (< 0 (+ ($generated@@142 $generated@@665) 1))) (< 0 1))) (exists (($generated@@674 Int) )  (and (and (<= ($generated@@141 0) $generated@@674) (< $generated@@674 (+ ($generated@@142 $generated@@665) 1))) (< $generated@@674 1)))))))) (=> (or (and ($generated@@170 ($generated@@8 ($generated@@141 (- 1 1))) $generated@@46) (and (and (<= ($generated@@141 0) ($generated@@141 (- 1 1))) (< (- 1 1) (+ ($generated@@142 $generated@@665) 1))) (< (- 1 1) 1))) (or (and ($generated@@170 ($generated@@8 (- (+ ($generated@@142 $generated@@665) 1) 1)) $generated@@46) (and (and (<= ($generated@@141 0) (- (+ ($generated@@142 $generated@@665) 1) 1)) (< (- (+ ($generated@@142 $generated@@665) 1) 1) (+ ($generated@@142 $generated@@665) 1))) (< (- (+ ($generated@@142 $generated@@665) 1) 1) 1))) (or (and ($generated@@170 ($generated@@8 ($generated@@141 0)) $generated@@46) (and (and (<= ($generated@@141 0) ($generated@@141 0)) (< 0 (+ ($generated@@142 $generated@@665) 1))) (< 0 1))) (or (and ($generated@@170 ($generated@@8 ($generated@@141 0)) $generated@@46) (and (and (<= ($generated@@141 0) ($generated@@141 0)) (< 0 (+ ($generated@@142 $generated@@665) 1))) (< 0 1))) (exists (($generated@@675 Int) )  (and (and (<= ($generated@@141 0) $generated@@675) (< $generated@@675 (+ ($generated@@142 $generated@@665) 1))) (< $generated@@675 1))))))) (=> (and (and (and (and (<= ($generated@@141 0) $generated@@666) (< $generated@@666 (+ ($generated@@142 $generated@@665) 1))) (< $generated@@666 1)) (=> (<= ($generated@@141 0) $generated@@667) ($generated@@287 $generated@@665))) (and (and (<= ($generated@@141 0) $generated@@667) (< $generated@@667 (+ ($generated@@142 $generated@@665) 1))) (< $generated@@667 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= $generated@@666 $generated@@667)) (=> (= $generated@@666 $generated@@667) (=> (and ($generated@@140 $generated@@665) (= (ControlFlow 0 4) (- 0 3))) ($generated@@170 ($generated@@8 $generated@@666) $generated@@144)))))))))
(let (($generated@@676  (=> (and (not (and (<= ($generated@@141 0) $generated@@666) (< $generated@@666 (+ ($generated@@142 $generated@@665) 1)))) (= (ControlFlow 0 8) 4)) $generated@@673)))
(let (($generated@@677  (=> (and (and (<= ($generated@@141 0) $generated@@666) (< $generated@@666 (+ ($generated@@142 $generated@@665) 1))) (= (ControlFlow 0 7) 4)) $generated@@673)))
(let (($generated@@678  (=> (< $generated@@666 ($generated@@141 0)) (and (=> (= (ControlFlow 0 10) 7) $generated@@677) (=> (= (ControlFlow 0 10) 8) $generated@@676)))))
(let (($generated@@679  (=> (<= ($generated@@141 0) $generated@@666) (=> (and ($generated@@80 $generated@@665 $generated@@288 $generated@@668) ($generated@@287 $generated@@665)) (and (=> (= (ControlFlow 0 9) 7) $generated@@677) (=> (= (ControlFlow 0 9) 8) $generated@@676))))))
(let (($generated@@680  (and (=> (= (ControlFlow 0 11) 9) $generated@@679) (=> (= (ControlFlow 0 11) 10) $generated@@678))))
(let (($generated@@681 true))
(let (($generated@@682  (=> (= $generated@@669 ($generated@@247 $generated@@670 $generated@@668 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@680) (=> (= (ControlFlow 0 12) 2) $generated@@681)))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (= $generated@@671 ($generated@@192 $generated@@670 $generated@@668 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 1) $generated@@683) (=> (= (ControlFlow 0 13) 12) $generated@@682)))))
(let (($generated@@685  (=> (and ($generated@@290 $generated@@668) ($generated@@672 $generated@@668)) (=> (and (and ($generated@@170 $generated@@665 $generated@@288) ($generated@@80 $generated@@665 $generated@@288 $generated@@668)) (and (= 2 $generated@@286) (= (ControlFlow 0 14) 13))) $generated@@684))))
$generated@@685))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@147 (T@U Int) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (Int) Int)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@290 (Int) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 () T@T)
(declare-fun $generated@@295 (T@U) Bool)
(declare-fun $generated@@296 (T@U T@U T@U) Bool)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (T@U T@U) Bool)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@318 (Int) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (T@U) Int)
(declare-fun $generated@@335 (T@T) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@415 (T@U) Int)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@T) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (= ($generated@@1 $generated@@143) 14))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@143)) (and ($generated@@142 $generated@@145) ($generated@@142 $generated@@146))) (= ($generated@@141 $generated@@145 $generated@@146) (= ($generated@@144 $generated@@145) ($generated@@144 $generated@@146))))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@145))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@146))
)))
(assert  (and (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@155)) 15)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@149 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@149 $generated@@156))
))) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@147 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@147 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@148 $generated@@160)) $generated@@143)
 :pattern ( ($generated@@148 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@148 $generated@@163)))))
 :pattern ( ($generated@@147 $generated@@163 $generated@@164) ($generated@@148 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@81 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@81 0)))
)))
(assert (= (type $generated@@170) $generated@@70))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@143) (or ($generated@@169 $generated@@171) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@171 $generated@@170)))) true)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@143)) ($generated@@165 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@165 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@150)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@150)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@143) (= (type $generated@@185) $generated@@143)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@165 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@165 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@83 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@83)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@247 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@247 $generated@@249))
)))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@143) (or ($generated@@169 ($generated@@247 $generated@@251)) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@251 $generated@@170)))) (= ($generated@@168 ($generated@@247 $generated@@251)) ($generated@@0 ($generated@@247 ($generated@@11 ($generated@@248 ($generated@@247 $generated@@251)))))))
 :weight 3
 :pattern ( ($generated@@168 ($generated@@247 $generated@@251)))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@143)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@70) (= (type $generated@@257) $generated@@70)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= ($generated@@165 ($generated@@252 $generated@@258 $generated@@259) ($generated@@173 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@165 ($generated@@252 $generated@@258 $generated@@259) ($generated@@173 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@143)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert  (=> (<= 2 $generated@@167) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@143) (or ($generated@@261 ($generated@@247 $generated@@263)) (and (not (= 2 $generated@@167)) (and ($generated@@165 $generated@@263 $generated@@170) ($generated@@0 ($generated@@247 ($generated@@11 ($generated@@168 ($generated@@247 $generated@@263))))))))) (= ($generated@@260 ($generated@@247 $generated@@263)) ($generated@@247 $generated@@263)))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@247 $generated@@263)))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@143) (= (type $generated@@265) $generated@@143)) (= ($generated@@179 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@179 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@143) (= (type $generated@@267) $generated@@143)) (= ($generated@@141 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@141 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@70)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@271) $generated@@70)) (= ($generated@@165 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@150) ($generated@@0 ($generated@@87 $generated@@270 $generated@@272))) ($generated@@253 $generated@@272 $generated@@271))
 :pattern ( ($generated@@87 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@165 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@70)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@276) $generated@@70)) (= ($generated@@165 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@150) ($generated@@0 ($generated@@87 $generated@@275 $generated@@277))) ($generated@@253 $generated@@277 $generated@@276))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@165 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@278 $generated@@279) $generated@@279)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@247 $generated@@280) $generated@@280)
 :pattern ( ($generated@@247 $generated@@280))
)))
(assert  (and (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
(= (type ($generated@@281 $generated@@283 $generated@@284)) ($generated@@149 $generated@@285)))
 :pattern ( ($generated@@281 $generated@@283 $generated@@284))
)) (forall (($generated@@286 T@U) ) (! (= (type ($generated@@282 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@282 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@287) ($generated@@149 $generated@@150)) (= (type $generated@@288) $generated@@150)) (= (type $generated@@289) $generated@@70)) (and ($generated@@165 $generated@@287 ($generated@@282 $generated@@289)) ($generated@@253 $generated@@288 $generated@@289))) ($generated@@165 ($generated@@281 $generated@@287 $generated@@288) ($generated@@282 $generated@@289)))
 :pattern ( ($generated@@165 ($generated@@281 $generated@@287 $generated@@288) ($generated@@282 $generated@@289)))
)))
(assert  (and (= ($generated@@1 $generated@@292) 18) (forall (($generated@@293 Int) ) (! (= (type ($generated@@290 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@294 Int) ) (!  (=> (and (<= 0 $generated@@294) (< $generated@@294 65536)) (= ($generated@@291 ($generated@@290 $generated@@294)) $generated@@294))
 :pattern ( ($generated@@290 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) $generated@@70)) (= (type $generated@@299) $generated@@150)) (= (type $generated@@300) $generated@@150)) (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@295 $generated@@301)) (= ($generated@@80 ($generated@@252 $generated@@299 $generated@@300) ($generated@@173 $generated@@297 $generated@@298) $generated@@301)  (and ($generated@@296 $generated@@299 $generated@@297 $generated@@301) ($generated@@296 $generated@@300 $generated@@298 $generated@@301))))
 :pattern ( ($generated@@80 ($generated@@252 $generated@@299 $generated@@300) ($generated@@173 $generated@@297 $generated@@298) $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@74)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@143) (= ($generated@@172 $generated@@304) (= ($generated@@302 $generated@@304) $generated@@62)))
 :pattern ( ($generated@@172 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@143) (= ($generated@@142 $generated@@305) (= ($generated@@302 $generated@@305) $generated@@64)))
 :pattern ( ($generated@@142 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@143) (= ($generated@@248 $generated@@306) (= ($generated@@302 $generated@@306) $generated@@66)))
 :pattern ( ($generated@@248 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@154 (type $generated@@308))))
 (=> (and (= (type $generated@@308) ($generated@@149 $generated@@310)) (= (type $generated@@309) ($generated@@149 $generated@@310))) (= ($generated@@307 $generated@@308 $generated@@309)  (and (= ($generated@@151 $generated@@308) ($generated@@151 $generated@@309)) (forall (($generated@@311 Int) ) (!  (=> (and (<= 0 $generated@@311) (< $generated@@311 ($generated@@151 $generated@@308))) (= ($generated@@147 $generated@@308 $generated@@311) ($generated@@147 $generated@@309 $generated@@311)))
 :pattern ( ($generated@@147 $generated@@308 $generated@@311))
 :pattern ( ($generated@@147 $generated@@309 $generated@@311))
))))))
 :pattern ( ($generated@@307 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@143) ($generated@@172 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@150) (= (type $generated@@314) $generated@@150)) (= $generated@@312 ($generated@@252 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@172 $generated@@312))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@149 $generated@@316))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@151 ($generated@@315 $generated@@317)) 0)
 :pattern ( ($generated@@315 $generated@@317))
)))
(assert (forall (($generated@@319 Int) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@143)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@143) ($generated@@142 $generated@@320)) (exists (($generated@@321 Int) ) (= $generated@@320 ($generated@@318 $generated@@321))))
 :pattern ( ($generated@@142 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@143) ($generated@@248 $generated@@322)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) ($generated@@149 $generated@@150)) (= $generated@@322 ($generated@@148 $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@248 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@2) (= ($generated@@165 $generated@@324 $generated@@138) (<= ($generated@@278 0) ($generated $generated@@324))))
 :pattern ( ($generated@@165 $generated@@324 $generated@@138))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
 (=> (= (type $generated@@325) ($generated@@149 $generated@@327)) (= ($generated@@151 ($generated@@281 $generated@@325 $generated@@326)) (+ 1 ($generated@@151 $generated@@325)))))
 :pattern ( ($generated@@281 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@292) (and (and (= ($generated@@290 ($generated@@291 $generated@@328)) $generated@@328) (<= 0 ($generated@@291 $generated@@328))) (< ($generated@@291 $generated@@328) 65536)))
 :pattern ( ($generated@@291 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@150)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@70) (= (type $generated@@333) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@296 ($generated@@329 $generated@@331) $generated@@332 $generated@@333) ($generated@@80 $generated@@331 $generated@@332 $generated@@333)))
 :pattern ( ($generated@@296 ($generated@@329 $generated@@331) $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@336 T@T) ) (! (= (type ($generated@@335 $generated@@336)) ($generated@@82 $generated@@336 $generated@@2))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@85 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@82 $generated@@338 $generated@@2)) (and (= (= ($generated@@334 $generated@@337) 0) (= $generated@@337 ($generated@@335 $generated@@338))) (=> (not (= ($generated@@334 $generated@@337) 0)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) (< 0 ($generated ($generated@@87 $generated@@337 $generated@@339))))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@87 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@87 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 20)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@87 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@87 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@85 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@82 $generated@@377 $generated@@2)) (= ($generated@@187 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (and (<= 0 ($generated ($generated@@87 $generated@@376 $generated@@378))) (<= ($generated ($generated@@87 $generated@@376 $generated@@378)) ($generated@@334 $generated@@376))))
 :pattern ( ($generated@@87 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@187 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@150) ($generated@@253 $generated@@379 $generated@@138)) (and (= ($generated@@329 ($generated@@153 $generated@@2 $generated@@379)) $generated@@379) ($generated@@165 ($generated@@153 $generated@@2 $generated@@379) $generated@@138)))
 :pattern ( ($generated@@253 $generated@@379 $generated@@138))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@150) ($generated@@253 $generated@@380 $generated@@170)) (and (= ($generated@@329 ($generated@@153 $generated@@143 $generated@@380)) $generated@@380) ($generated@@165 ($generated@@153 $generated@@143 $generated@@380) $generated@@170)))
 :pattern ( ($generated@@253 $generated@@380 $generated@@170))
)))
(assert (forall (($generated@@381 Int) ) (! (= ($generated@@165 ($generated@@318 $generated@@381) $generated@@170) ($generated@@165 ($generated@@8 $generated@@381) $generated@@138))
 :pattern ( ($generated@@165 ($generated@@318 $generated@@381) $generated@@170))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 Int) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
 (=> (= (type $generated@@382) ($generated@@149 $generated@@385)) (and (=> (= $generated@@383 ($generated@@151 $generated@@382)) (= ($generated@@147 ($generated@@281 $generated@@382 $generated@@384) $generated@@383) $generated@@384)) (=> (not (= $generated@@383 ($generated@@151 $generated@@382))) (= ($generated@@147 ($generated@@281 $generated@@382 $generated@@384) $generated@@383) ($generated@@147 $generated@@382 $generated@@383))))))
 :pattern ( ($generated@@147 ($generated@@281 $generated@@382 $generated@@384) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@388) $generated@@143) (= (type $generated@@389) $generated@@143)) (and ($generated@@248 $generated@@388) ($generated@@248 $generated@@389))) (= ($generated@@141 $generated@@388 $generated@@389) ($generated@@307 ($generated@@386 $generated@@388) ($generated@@386 $generated@@389))))
 :pattern ( ($generated@@141 $generated@@388 $generated@@389) ($generated@@248 $generated@@388))
 :pattern ( ($generated@@141 $generated@@388 $generated@@389) ($generated@@248 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@344 (type $generated@@390))))
(let (($generated@@392 ($generated@@343 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@342 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@341 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@87 ($generated@@340 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@340 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@344 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@82 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@344 (type $generated@@397))))
(let (($generated@@399 ($generated@@343 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@342 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@341 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@362 (type $generated@@401))))
(let (($generated@@403 ($generated@@361 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@360 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@359 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@358 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@362 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@82 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@362 (type $generated@@408))))
(let (($generated@@410 ($generated@@361 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@360 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@359 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@413) $generated@@70)) (= ($generated@@165 $generated@@412 ($generated@@186 $generated@@413)) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@412 $generated@@414)))) ($generated@@253 $generated@@414 $generated@@413))
 :pattern ( ($generated@@87 $generated@@412 $generated@@414))
))))
 :pattern ( ($generated@@165 $generated@@412 ($generated@@186 $generated@@413)))
)))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@143) (or ($generated@@416 $generated@@417) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@417 $generated@@170) (not ($generated@@168 $generated@@417)))))) (= ($generated@@415 $generated@@417) ($generated@@144 $generated@@417)))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@143) (or ($generated@@416 $generated@@418) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@418 $generated@@170) (not ($generated@@168 $generated@@418)))))) (<= ($generated@@278 0) ($generated@@415 $generated@@418)))
 :pattern ( ($generated@@415 $generated@@418))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@419) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@419 ($generated@@268 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@150) ($generated@@0 ($generated@@87 $generated@@419 $generated@@422))) ($generated@@296 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@87 $generated@@419 $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@419 ($generated@@268 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@273 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@0 ($generated@@87 $generated@@423 $generated@@426))) ($generated@@296 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@87 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@273 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= ($generated ($generated@@87 ($generated@@335 $generated@@428) $generated@@427)) 0))
 :pattern ( (let (($generated@@428 (type $generated@@427)))
($generated@@87 ($generated@@335 $generated@@428) $generated@@427)))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@344 (type $generated@@432))))
(let (($generated@@434 ($generated@@343 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@82 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@436) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@87 ($generated@@340 $generated@@435) ($generated@@180 ($generated@@153 $generated@@143 $generated@@436)))) (= ($generated@@87 ($generated@@430 $generated@@435) ($generated@@180 ($generated@@153 $generated@@143 $generated@@436))) ($generated@@181 ($generated@@153 $generated@@143 $generated@@436))))))
 :pattern ( ($generated@@87 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@362 (type $generated@@440))))
(let (($generated@@442 ($generated@@361 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@82 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@444) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@87 ($generated@@358 $generated@@443) ($generated@@180 ($generated@@153 $generated@@143 $generated@@444)))) (= ($generated@@87 ($generated@@438 $generated@@443) ($generated@@180 ($generated@@153 $generated@@143 $generated@@444))) ($generated@@181 ($generated@@153 $generated@@143 $generated@@444))))))
 :pattern ( ($generated@@87 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@343 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@342 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@87 ($generated@@340 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@87 ($generated@@430 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@87 ($generated@@340 $generated@@445) $generated@@449))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@361 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@360 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@87 ($generated@@358 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@87 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@450) $generated@@454))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@455) ($generated@@149 $generated@@150)) (= (type $generated@@456) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@295 $generated@@456)) (= ($generated@@80 ($generated@@148 $generated@@455) $generated@@170 $generated@@456) ($generated@@80 $generated@@455 ($generated@@282 $generated@@45) $generated@@456)))
 :pattern ( ($generated@@80 ($generated@@148 $generated@@455) $generated@@170 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@461) $generated@@70)) (= (type $generated@@462) $generated@@70)) (= (type $generated@@463) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@340 $generated@@460) $generated@@464))) (and ($generated@@296 ($generated@@87 ($generated@@430 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@296 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@460) $generated@@464))
 :pattern ( ($generated@@87 ($generated@@340 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@80 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@469) $generated@@70)) (= (type $generated@@470) $generated@@70)) (= (type $generated@@471) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@468) $generated@@472))) (and ($generated@@296 ($generated@@87 ($generated@@438 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@296 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@468) $generated@@472))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@80 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@154 (type $generated@@473))))
 (=> (and (and (= (type $generated@@473) ($generated@@149 $generated@@475)) (= (type $generated@@474) ($generated@@149 $generated@@475))) ($generated@@307 $generated@@473 $generated@@474)) (= $generated@@473 $generated@@474)))
 :pattern ( ($generated@@307 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 Int) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@295 $generated@@477)) (= ($generated@@80 ($generated@@318 $generated@@476) $generated@@170 $generated@@477) ($generated@@80 ($generated@@8 $generated@@476) $generated@@138 $generated@@477)))
 :pattern ( ($generated@@80 ($generated@@318 $generated@@476) $generated@@170 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@143) ($generated@@165 $generated@@478 $generated@@170)) (or ($generated@@142 $generated@@478) ($generated@@248 $generated@@478)))
 :pattern ( ($generated@@248 $generated@@478) ($generated@@165 $generated@@478 $generated@@170))
 :pattern ( ($generated@@142 $generated@@478) ($generated@@165 $generated@@478 $generated@@170))
)))
(assert (forall (($generated@@480 T@T) ) (! (= (type ($generated@@479 $generated@@480)) ($generated@@82 $generated@@480 $generated@@4))
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@362 (type $generated@@481))))
(let (($generated@@483 ($generated@@361 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@360 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@359 $generated@@483 $generated@@482)) (= ($generated@@358 $generated@@481) ($generated@@479 $generated@@483))))))
 :pattern ( ($generated@@358 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@362 (type $generated@@484))))
(let (($generated@@486 ($generated@@361 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@360 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@359 $generated@@486 $generated@@485)) (= ($generated@@405 $generated@@484) ($generated@@479 $generated@@485))))))
 :pattern ( ($generated@@405 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@362 (type $generated@@487))))
(let (($generated@@489 ($generated@@361 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@360 $generated@@489 $generated@@488)) (= (= $generated@@487 ($generated@@359 $generated@@489 $generated@@488)) (= ($generated@@437 $generated@@487) ($generated@@479 $generated@@150))))))
 :pattern ( ($generated@@437 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@344 (type $generated@@490))))
(let (($generated@@492 ($generated@@343 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@342 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@341 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (and (and (= (type $generated@@493) $generated@@150) (= (type $generated@@494) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@429 $generated@@490) ($generated@@329 ($generated@@252 $generated@@493 $generated@@494)))))
 :no-pattern (type $generated@@493)
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@429 $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@362 (type $generated@@495))))
(let (($generated@@497 ($generated@@361 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@360 $generated@@497 $generated@@496)) (or (= $generated@@495 ($generated@@359 $generated@@497 $generated@@496)) (exists (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (and (and (= (type $generated@@498) $generated@@150) (= (type $generated@@499) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@437 $generated@@495) ($generated@@329 ($generated@@252 $generated@@498 $generated@@499)))))
 :no-pattern (type $generated@@498)
 :no-pattern (type $generated@@499)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
))))))
 :pattern ( ($generated@@437 $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@253 $generated@@500 $generated@@46)) (and (= ($generated@@329 ($generated@@153 $generated@@2 $generated@@500)) $generated@@500) ($generated@@165 ($generated@@153 $generated@@2 $generated@@500) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@500 $generated@@46))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@150) ($generated@@253 $generated@@501 $generated@@47)) (and (= ($generated@@329 ($generated@@153 $generated@@3 $generated@@501)) $generated@@501) ($generated@@165 ($generated@@153 $generated@@3 $generated@@501) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@501 $generated@@47))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@150) ($generated@@253 $generated@@502 $generated@@44)) (and (= ($generated@@329 ($generated@@153 $generated@@4 $generated@@502)) $generated@@502) ($generated@@165 ($generated@@153 $generated@@4 $generated@@502) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@502 $generated@@44))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@150) ($generated@@253 $generated@@503 $generated@@45)) (and (= ($generated@@329 ($generated@@153 $generated@@292 $generated@@503)) $generated@@503) ($generated@@165 ($generated@@153 $generated@@292 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@253 ($generated@@329 $generated@@504) $generated@@505) ($generated@@165 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@253 ($generated@@329 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@85 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@82 $generated@@507 $generated@@2)) (<= 0 ($generated@@334 $generated@@506))))
 :pattern ( ($generated@@334 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@154 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@149 $generated@@509)) (<= 0 ($generated@@151 $generated@@508))))
 :pattern ( ($generated@@151 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@457 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@457 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@70) (= (type $generated@@517) $generated@@70)) (= ($generated@@514 ($generated@@457 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@457 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@70) (= (type $generated@@519) $generated@@70)) (= ($generated@@78 ($generated@@457 $generated@@518 $generated@@519)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@70) (= (type $generated@@523) $generated@@70)) (= ($generated@@520 ($generated@@465 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@465 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@70) (= (type $generated@@527) $generated@@70)) (= ($generated@@524 ($generated@@465 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@465 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@70) (= (type $generated@@529) $generated@@70)) (= ($generated@@78 ($generated@@465 $generated@@528 $generated@@529)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@150) (= (type $generated@@531) $generated@@150)) (= ($generated@@302 ($generated@@252 $generated@@530 $generated@@531)) $generated@@62))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= ($generated@@532 ($generated@@173 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@173 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@70) (= (type $generated@@539) $generated@@70)) (= ($generated@@536 ($generated@@173 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@173 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@150)) (= ($generated@@180 ($generated@@252 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@252 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (= ($generated@@181 ($generated@@252 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@252 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@149 $generated@@150)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@544 ($generated@@282 $generated@@545) $generated@@546) (forall (($generated@@547 Int) ) (!  (=> (and (<= 0 $generated@@547) (< $generated@@547 ($generated@@151 $generated@@544))) ($generated@@296 ($generated@@147 $generated@@544 $generated@@547) $generated@@545 $generated@@546))
 :pattern ( ($generated@@147 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@80 $generated@@544 ($generated@@282 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@81 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@81 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@70)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@550 ($generated@@268 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@268 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@78 ($generated@@268 $generated@@553)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@70)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@554 ($generated@@273 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@273 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@70) (= ($generated@@78 ($generated@@273 $generated@@557)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@70)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@70) (= ($generated@@558 ($generated@@186 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@186 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@70) (= ($generated@@78 ($generated@@186 $generated@@561)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@70)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@70) (= ($generated@@562 ($generated@@282 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@282 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@70) (= ($generated@@78 ($generated@@282 $generated@@565)) $generated@@57))
 :pattern ( ($generated@@282 $generated@@565))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@302 ($generated@@318 $generated@@566)) $generated@@64)
 :pattern ( ($generated@@318 $generated@@566))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@144 ($generated@@318 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@318 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) ($generated@@149 $generated@@150)) (= ($generated@@302 ($generated@@148 $generated@@568)) $generated@@66))
 :pattern ( ($generated@@148 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@149 $generated@@150)) (= ($generated@@386 ($generated@@148 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@148 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(= ($generated@@153 $generated@@571 ($generated@@329 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@329 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) (= ($generated@@165 $generated@@572 ($generated@@457 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@340 $generated@@572) $generated@@575))) (and ($generated@@253 ($generated@@87 ($generated@@430 $generated@@572) $generated@@575) $generated@@574) ($generated@@253 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@87 ($generated@@430 $generated@@572) $generated@@575))
 :pattern ( ($generated@@87 ($generated@@340 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@165 $generated@@572 ($generated@@457 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) $generated@@70)) (= ($generated@@165 $generated@@576 ($generated@@465 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@576) $generated@@579))) (and ($generated@@253 ($generated@@87 ($generated@@438 $generated@@576) $generated@@579) $generated@@578) ($generated@@253 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@576) $generated@@579))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@165 $generated@@576 ($generated@@465 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@150)) (< ($generated@@580 $generated@@581) ($generated@@152 ($generated@@252 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@252 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@150) (= (type $generated@@584) $generated@@150)) (< ($generated@@580 $generated@@584) ($generated@@152 ($generated@@252 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@252 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@150) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) $generated@@70)) ($generated@@253 $generated@@585 ($generated@@457 $generated@@586 $generated@@587))) (and (= ($generated@@329 ($generated@@153 ($generated@@342 $generated@@150 $generated@@150) $generated@@585)) $generated@@585) ($generated@@165 ($generated@@153 ($generated@@342 $generated@@150 $generated@@150) $generated@@585) ($generated@@457 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@457 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@150) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) $generated@@70)) ($generated@@253 $generated@@588 ($generated@@465 $generated@@589 $generated@@590))) (and (= ($generated@@329 ($generated@@153 ($generated@@360 $generated@@150 $generated@@150) $generated@@588)) $generated@@588) ($generated@@165 ($generated@@153 ($generated@@360 $generated@@150 $generated@@150) $generated@@588) ($generated@@465 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@253 $generated@@588 ($generated@@465 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@70) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) $generated@@150)) ($generated@@253 $generated@@593 ($generated@@173 $generated@@591 $generated@@592))) (and (= ($generated@@329 ($generated@@153 $generated@@143 $generated@@593)) $generated@@593) ($generated@@165 ($generated@@153 $generated@@143 $generated@@593) ($generated@@173 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@253 $generated@@593 ($generated@@173 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) ($generated@@149 $generated@@150)) (< ($generated@@594 $generated@@595) ($generated@@152 ($generated@@148 $generated@@595))))
 :pattern ( ($generated@@148 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (not ($generated@@0 ($generated@@87 ($generated@@479 $generated@@597) $generated@@596))))
 :pattern ( (let (($generated@@597 (type $generated@@596)))
($generated@@87 ($generated@@479 $generated@@597) $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@75)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@70) (= (type $generated@@601) $generated@@70)) (and (= ($generated@@78 ($generated@@173 $generated@@600 $generated@@601)) $generated@@63) (= ($generated@@598 ($generated@@173 $generated@@600 $generated@@601)) $generated@@68)))
 :pattern ( ($generated@@173 $generated@@600 $generated@@601))
)))
(assert  (and (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@154 (type $generated@@604))))
(= (type ($generated@@602 $generated@@604)) ($generated@@149 $generated@@605)))
 :pattern ( ($generated@@602 $generated@@604))
)) (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@154 (type $generated@@606))))
(= (type ($generated@@603 $generated@@606)) $generated@@607))
 :pattern ( ($generated@@603 $generated@@606))
))))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (=> (= (type $generated@@608) ($generated@@149 $generated@@610)) (and (= ($generated@@602 ($generated@@281 $generated@@608 $generated@@609)) $generated@@608) (= ($generated@@603 ($generated@@281 $generated@@608 $generated@@609)) $generated@@609))))
 :pattern ( ($generated@@281 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@143) (= ($generated@@580 ($generated@@329 $generated@@611)) ($generated@@152 $generated@@611)))
 :pattern ( ($generated@@580 ($generated@@329 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@150) ($generated@@253 $generated@@612 ($generated@@81 0))) (and (= ($generated@@329 ($generated@@153 $generated@@2 $generated@@612)) $generated@@612) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@612) ($generated@@81 0))))
 :pattern ( ($generated@@253 $generated@@612 ($generated@@81 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@150) (= (type $generated@@614) $generated@@70)) ($generated@@253 $generated@@613 ($generated@@268 $generated@@614))) (and (= ($generated@@329 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@613)) $generated@@613) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@613) ($generated@@268 $generated@@614))))
 :pattern ( ($generated@@253 $generated@@613 ($generated@@268 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@150) (= (type $generated@@616) $generated@@70)) ($generated@@253 $generated@@615 ($generated@@273 $generated@@616))) (and (= ($generated@@329 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@615)) $generated@@615) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@4) $generated@@615) ($generated@@273 $generated@@616))))
 :pattern ( ($generated@@253 $generated@@615 ($generated@@273 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@150) (= (type $generated@@618) $generated@@70)) ($generated@@253 $generated@@617 ($generated@@186 $generated@@618))) (and (= ($generated@@329 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@617)) $generated@@617) ($generated@@165 ($generated@@153 ($generated@@82 $generated@@150 $generated@@2) $generated@@617) ($generated@@186 $generated@@618))))
 :pattern ( ($generated@@253 $generated@@617 ($generated@@186 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@150) (= (type $generated@@620) $generated@@70)) ($generated@@253 $generated@@619 ($generated@@282 $generated@@620))) (and (= ($generated@@329 ($generated@@153 ($generated@@149 $generated@@150) $generated@@619)) $generated@@619) ($generated@@165 ($generated@@153 ($generated@@149 $generated@@150) $generated@@619) ($generated@@282 $generated@@620))))
 :pattern ( ($generated@@253 $generated@@619 ($generated@@282 $generated@@620)))
)))
(assert  (=> (<= 0 $generated@@167) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@143) (or ($generated@@169 $generated@@621) (and (not (= 0 $generated@@167)) ($generated@@165 $generated@@621 $generated@@170)))) (= ($generated@@168 $generated@@621) ($generated@@248 $generated@@621)))
 :pattern ( ($generated@@168 $generated@@621))
))))
(assert  (=> (<= 2 $generated@@167) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@143) (or ($generated@@261 $generated@@622) (and (not (= 2 $generated@@167)) (and ($generated@@165 $generated@@622 $generated@@170) ($generated@@168 $generated@@622))))) (= ($generated@@260 $generated@@622) $generated@@622))
 :pattern ( ($generated@@260 $generated@@622))
))))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@598 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@170) $generated@@65))
(assert (= ($generated@@598 $generated@@170) $generated@@69))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@623 ($generated@@186 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@623 $generated@@626)))) ($generated@@296 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@87 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@80 $generated@@623 ($generated@@186 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) ($generated@@149 $generated@@150)) (= ($generated@@165 ($generated@@148 $generated@@627) $generated@@170) ($generated@@165 $generated@@627 ($generated@@282 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@148 $generated@@627) $generated@@170))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@143) (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@295 $generated@@629) (and ($generated@@248 $generated@@628) ($generated@@80 $generated@@628 $generated@@170 $generated@@629)))) ($generated@@80 ($generated@@386 $generated@@628) ($generated@@282 $generated@@45) $generated@@629))
 :pattern ( ($generated@@80 ($generated@@386 $generated@@628) ($generated@@282 $generated@@45) $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@143) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@295 $generated@@632) (and ($generated@@172 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@70) ($generated@@80 $generated@@630 ($generated@@173 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@80 $generated@@630 ($generated@@173 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@296 ($generated@@180 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@296 ($generated@@180 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@143) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@295 $generated@@636) (and ($generated@@172 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@70) ($generated@@80 $generated@@634 ($generated@@173 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@80 $generated@@634 ($generated@@173 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@296 ($generated@@181 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@296 ($generated@@181 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@143) (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@295 $generated@@639) (and ($generated@@142 $generated@@638) ($generated@@80 $generated@@638 $generated@@170 $generated@@639)))) ($generated@@80 ($generated@@8 ($generated@@144 $generated@@638)) $generated@@138 $generated@@639))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@144 $generated@@638)) $generated@@138 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@150) (= (type $generated@@641) $generated@@150)) (= ($generated@@252 ($generated@@247 $generated@@640) ($generated@@247 $generated@@641)) ($generated@@247 ($generated@@252 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@252 ($generated@@247 $generated@@640) ($generated@@247 $generated@@641)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@329 ($generated@@8 ($generated@@278 $generated@@642))) ($generated@@247 ($generated@@329 ($generated@@8 $generated@@642))))
 :pattern ( ($generated@@329 ($generated@@8 ($generated@@278 $generated@@642))))
)))
(assert (forall (($generated@@643 Int) ) (! (= ($generated@@318 ($generated@@278 $generated@@643)) ($generated@@247 ($generated@@318 $generated@@643)))
 :pattern ( ($generated@@318 ($generated@@278 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) ($generated@@149 $generated@@150)) (= ($generated@@148 ($generated@@247 $generated@@644)) ($generated@@247 ($generated@@148 $generated@@644))))
 :pattern ( ($generated@@148 ($generated@@247 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (= ($generated@@329 ($generated@@247 $generated@@645)) ($generated@@247 ($generated@@329 $generated@@645)))
 :pattern ( ($generated@@329 ($generated@@247 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@154 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@149 $generated@@647)) (= ($generated@@151 $generated@@646) 0)) (= $generated@@646 ($generated@@315 $generated@@647))))
 :pattern ( ($generated@@151 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@649)))
 (=> (and (and (= (type $generated@@648) ($generated@@82 $generated@@651 $generated@@2)) (= (type $generated@@650) $generated@@2)) (<= 0 ($generated $generated@@650))) (= ($generated@@334 ($generated@@88 $generated@@648 $generated@@649 $generated@@650)) (+ (- ($generated@@334 $generated@@648) ($generated ($generated@@87 $generated@@648 $generated@@649))) ($generated $generated@@650)))))
 :pattern ( ($generated@@334 ($generated@@88 $generated@@648 $generated@@649 $generated@@650)))
)))
(assert  (=> (<= 2 $generated@@167) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@143) (or ($generated@@261 $generated@@652) (and (not (= 2 $generated@@167)) (and ($generated@@165 $generated@@652 $generated@@170) ($generated@@168 $generated@@652))))) ($generated@@165 ($generated@@260 $generated@@652) $generated@@170))
 :pattern ( ($generated@@260 $generated@@652))
))))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@654) $generated@@2)) ($generated@@80 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@80 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@656) $generated@@3)) ($generated@@80 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@80 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@658) $generated@@4)) ($generated@@80 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@80 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@660) $generated@@292)) ($generated@@80 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@80 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@662) $generated@@150)) ($generated@@80 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@80 $generated@@662 $generated@@48 $generated@@661))
)))
(assert  (=> (<= 1 $generated@@167) (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@143) (or ($generated@@416 ($generated@@247 $generated@@663)) (and (not (= 1 $generated@@167)) (and ($generated@@165 $generated@@663 $generated@@170) (not ($generated@@0 ($generated@@247 ($generated@@11 ($generated@@168 ($generated@@247 $generated@@663)))))))))) (= ($generated@@415 ($generated@@247 $generated@@663)) ($generated@@278 ($generated@@144 ($generated@@247 $generated@@663)))))
 :weight 3
 :pattern ( ($generated@@415 ($generated@@247 $generated@@663)))
))))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@149 $generated@@150)) (= (type $generated@@665) $generated@@70)) (= ($generated@@165 $generated@@664 ($generated@@282 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@151 $generated@@664))) ($generated@@253 ($generated@@147 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@147 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@165 $generated@@664 ($generated@@282 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ) (!  (=> (= (type $generated@@667) ($generated@@149 $generated@@150)) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@151 $generated@@667))) (< ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@667 $generated@@668))) ($generated@@594 $generated@@667))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@143 ($generated@@147 $generated@@667 $generated@@668))))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@70)) (= (type $generated@@671) $generated@@70)) ($generated@@165 $generated@@669 ($generated@@457 $generated@@670 $generated@@671))) (and (and ($generated@@165 ($generated@@340 $generated@@669) ($generated@@268 $generated@@670)) ($generated@@165 ($generated@@394 $generated@@669) ($generated@@268 $generated@@671))) ($generated@@165 ($generated@@429 $generated@@669) ($generated@@268 ($generated@@173 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@165 $generated@@669 ($generated@@457 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@673) $generated@@70)) (= (type $generated@@674) $generated@@70)) ($generated@@165 $generated@@672 ($generated@@465 $generated@@673 $generated@@674))) (and (and ($generated@@165 ($generated@@358 $generated@@672) ($generated@@273 $generated@@673)) ($generated@@165 ($generated@@405 $generated@@672) ($generated@@273 $generated@@674))) ($generated@@165 ($generated@@437 $generated@@672) ($generated@@273 ($generated@@173 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@165 $generated@@672 ($generated@@465 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@2) ($generated@@165 $generated@@675 $generated@@46))
 :pattern ( ($generated@@165 $generated@@675 $generated@@46))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@3) ($generated@@165 $generated@@676 $generated@@47))
 :pattern ( ($generated@@165 $generated@@676 $generated@@47))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@4) ($generated@@165 $generated@@677 $generated@@44))
 :pattern ( ($generated@@165 $generated@@677 $generated@@44))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@292) ($generated@@165 $generated@@678 $generated@@45))
 :pattern ( ($generated@@165 $generated@@678 $generated@@45))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@150) ($generated@@165 $generated@@679 $generated@@48))
 :pattern ( ($generated@@165 $generated@@679 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 (T@U) Bool)
(declare-fun $generated@@686 (T@U) Bool)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 (T@U) Bool)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@680) ($generated@@193 $generated@@83 $generated@@4)) (= (type $generated@@681) $generated@@83)) (= (type $generated@@682) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@683) $generated@@143)) (= (type $generated@@687) $generated@@143)) (= (type $generated@@689) $generated@@143)) (= (type $generated@@691) $generated@@143)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@692  (=> (= $generated@@680 ($generated@@192 $generated@@681 $generated@@682 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@165 ($generated@@8 ($generated@@278 55)) $generated@@138)) (=> ($generated@@165 ($generated@@8 ($generated@@278 55)) $generated@@138) (=> (and (and (= $generated@@683 ($generated@@247 ($generated@@318 ($generated@@278 55)))) ($generated@@80 $generated@@683 $generated@@170 $generated@@682)) (and ($generated@@169 $generated@@683) ($generated@@169 $generated@@683))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not ($generated@@168 $generated@@683))) (=> (not ($generated@@168 $generated@@683)) (=> ($generated@@80 $generated@@683 $generated@@170 $generated@@682) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@168 $generated@@683))) (=> (not ($generated@@168 $generated@@683)) (=> (and (and (and (and ($generated@@416 $generated@@683) ($generated@@416 $generated@@683)) (and (= $generated@@684 ($generated@@415 $generated@@683)) ($generated@@80 $generated@@683 $generated@@170 $generated@@682))) (and (and ($generated@@169 $generated@@683) ($generated@@169 $generated@@683)) (and ($generated@@80 $generated@@683 $generated@@170 $generated@@682) ($generated@@685 $generated@@683)))) (and (and (and ($generated@@685 $generated@@683) ($generated@@80 $generated@@683 $generated@@170 $generated@@682)) (and ($generated@@686 $generated@@683) ($generated@@686 $generated@@683))) (and (and (= $generated@@687 ($generated@@247 ($generated@@148 ($generated@@247 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@281 ($generated@@315 $generated@@150) ($generated@@329 ($generated@@290 105))) ($generated@@329 ($generated@@290 116))) ($generated@@329 ($generated@@290 32))) ($generated@@329 ($generated@@290 99))) ($generated@@329 ($generated@@290 111))) ($generated@@329 ($generated@@290 117))) ($generated@@329 ($generated@@290 108))) ($generated@@329 ($generated@@290 100))) ($generated@@329 ($generated@@290 32))) ($generated@@329 ($generated@@290 98))) ($generated@@329 ($generated@@290 101))) ($generated@@329 ($generated@@290 32))) ($generated@@329 ($generated@@290 119))) ($generated@@329 ($generated@@290 111))) ($generated@@329 ($generated@@290 114))) ($generated@@329 ($generated@@290 115))) ($generated@@329 ($generated@@290 101))))))) ($generated@@80 $generated@@687 $generated@@170 $generated@@682)) (and ($generated@@169 $generated@@687) ($generated@@169 $generated@@687))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@169 $generated@@687) (or ($generated@@168 $generated@@687) ($generated@@248 $generated@@687)))) (=> ($generated@@168 $generated@@687) (=> (and (and ($generated@@80 $generated@@687 $generated@@170 $generated@@682) (= (ControlFlow 0 2) (- 0 1))) ($generated@@169 $generated@@687)) (or ($generated@@168 $generated@@687) ($generated@@248 $generated@@687)))))))))))))))))
(let (($generated@@693  (=> (and ($generated@@295 $generated@@682) ($generated@@688 $generated@@682)) (=> (and (and (and (and ($generated@@165 $generated@@689 $generated@@170) ($generated@@80 $generated@@689 $generated@@170 $generated@@682)) true) (and (<= ($generated@@278 0) $generated@@690) true)) (and (and (and ($generated@@165 $generated@@691 $generated@@170) ($generated@@80 $generated@@691 $generated@@170 $generated@@682)) true) (and (= 3 $generated@@167) (= (ControlFlow 0 7) 2)))) $generated@@692))))
$generated@@693)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
