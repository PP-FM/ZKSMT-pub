(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Int)
(declare-fun $generated@@247 (T@U) Int)
(declare-fun $generated@@248 (T@U Int) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@371 (T@U) Int)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@T T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@552 (T@T) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@136)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@145)) (= (type $generated@@239) $generated@@145)) (= ($generated@@132 ($generated@@232 $generated@@238 $generated@@239) ($generated@@135 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@132 ($generated@@232 $generated@@238 $generated@@239) ($generated@@135 $generated@@236 $generated@@237)))
)))
(assert  (and (and (and (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@242 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@242 $generated@@250))
)) (forall (($generated@@252 T@U) ) (! (= (type ($generated@@244 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (= (type ($generated@@245 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@253))
))) (forall (($generated@@254 T@U) ($generated@@255 Int) ) (! (let (($generated@@256 ($generated@@153 (type $generated@@254))))
(= (type ($generated@@248 $generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@248 $generated@@254 $generated@@255))
))))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@259) ($generated@@152 $generated@@145))) (or ($generated@@243 $generated@@257 ($generated@@242 $generated@@258) ($generated@@242 $generated@@259)) (and (not (= 0 $generated@@240)) (and ($generated@@132 $generated@@258 ($generated@@244 $generated@@257)) ($generated@@132 $generated@@259 ($generated@@245 $generated@@257)))))) (= ($generated@@241 $generated@@257 ($generated@@242 $generated@@258) ($generated@@242 $generated@@259))  (=> (= ($generated@@246 ($generated@@242 $generated@@258)) ($generated@@247 ($generated@@242 $generated@@259))) (and (forall (($generated@@260 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@260) (< $generated@@260 ($generated@@247 ($generated@@242 $generated@@259)))) ($generated@@0 ($generated@@81 ($generated@@242 $generated@@258) ($generated@@248 ($generated@@242 $generated@@259) $generated@@260)))))
 :pattern ( ($generated@@248 $generated@@259 $generated@@260))
)) (forall (($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@145) ($generated@@233 $generated@@261 $generated@@257)) ($generated@@0 ($generated@@81 ($generated@@242 $generated@@258) $generated@@261))) ($generated@@150 $generated@@259 $generated@@261))
 :pattern ( ($generated@@150 $generated@@259 $generated@@261))
 :pattern ( ($generated@@81 $generated@@258 $generated@@261))
))))))
 :weight 3
 :pattern ( ($generated@@241 $generated@@257 ($generated@@242 $generated@@258) ($generated@@242 $generated@@259)))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@136) (= (type $generated@@263) $generated@@136)) (= ($generated@@142 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@142 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@265) $generated@@64)) (= ($generated@@132 $generated@@264 ($generated@@244 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@145) ($generated@@0 ($generated@@81 $generated@@264 $generated@@266))) ($generated@@233 $generated@@266 $generated@@265))
 :pattern ( ($generated@@81 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@132 $generated@@264 ($generated@@244 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@64)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@270) $generated@@64)) (= ($generated@@132 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@145) ($generated@@0 ($generated@@81 $generated@@269 $generated@@271))) ($generated@@233 $generated@@271 $generated@@270))
 :pattern ( ($generated@@81 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@132 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@249 $generated@@272) $generated@@272)
 :pattern ( ($generated@@249 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@242 $generated@@273) $generated@@273)
 :pattern ( ($generated@@242 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) $generated@@145)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@232 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@232 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@283) ($generated@@152 $generated@@145))) (or ($generated@@243 $generated@@281 $generated@@282 $generated@@283) (and (not (= 0 $generated@@240)) (and ($generated@@132 $generated@@282 ($generated@@244 $generated@@281)) ($generated@@132 $generated@@283 ($generated@@245 $generated@@281)))))) (= ($generated@@241 $generated@@281 $generated@@282 $generated@@283)  (=> (= ($generated@@246 $generated@@282) ($generated@@247 $generated@@283)) (and (forall (($generated@@284 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@284) (< $generated@@284 ($generated@@247 $generated@@283))) ($generated@@0 ($generated@@81 $generated@@282 ($generated@@248 $generated@@283 $generated@@284)))))
 :pattern ( ($generated@@248 $generated@@283 $generated@@284))
)) (forall (($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@145) ($generated@@233 $generated@@285 $generated@@281)) ($generated@@0 ($generated@@81 $generated@@282 $generated@@285))) ($generated@@150 $generated@@283 $generated@@285))
 :pattern ( ($generated@@150 $generated@@283 $generated@@285))
 :pattern ( ($generated@@81 $generated@@282 $generated@@285))
))))))
 :pattern ( ($generated@@241 $generated@@281 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@136) (= ($generated@@134 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@136) ($generated@@134 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@145) (= (type $generated@@291) $generated@@145)) (= $generated@@289 ($generated@@232 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@134 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@247 ($generated@@151 $generated@@292)) 0)
 :pattern ( ($generated@@151 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@145)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@64) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@74 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@275 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@160 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@160 $generated@@340))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) $generated@@64) (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@345) ($generated@@152 $generated@@145))) (or ($generated@@243 $generated@@343 $generated@@344 $generated@@345) (and (not (= 0 $generated@@240)) (and ($generated@@132 $generated@@344 ($generated@@244 $generated@@343)) ($generated@@132 $generated@@345 ($generated@@245 $generated@@343)))))) true)
 :pattern ( ($generated@@241 $generated@@343 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@308 (type $generated@@346))))
(let (($generated@@348 ($generated@@307 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@306 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@305 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@304 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@308 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@308 (type $generated@@353))))
(let (($generated@@355 ($generated@@307 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@306 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@305 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@326 (type $generated@@357))))
(let (($generated@@359 ($generated@@325 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@324 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@323 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@322 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@326 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@326 (type $generated@@364))))
(let (($generated@@366 ($generated@@325 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@324 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@323 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@369) $generated@@64)) (= ($generated@@132 $generated@@368 ($generated@@159 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@368 $generated@@370)))) ($generated@@233 $generated@@370 $generated@@369))
 :pattern ( ($generated@@81 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@132 $generated@@368 ($generated@@159 $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@308 (type $generated@@372))))
(let (($generated@@374 ($generated@@307 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@306 $generated@@374 $generated@@373)) (= (= ($generated@@371 $generated@@372) 0) (= $generated@@372 ($generated@@305 $generated@@374 $generated@@373))))))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
 (=> (= (type $generated@@375) ($generated@@152 $generated@@377)) (= ($generated@@150 $generated@@375 $generated@@376) (exists (($generated@@378 Int) ) (!  (and (and (<= 0 $generated@@378) (< $generated@@378 ($generated@@247 $generated@@375))) (= ($generated@@248 $generated@@375 $generated@@378) $generated@@376))
 :pattern ( ($generated@@248 $generated@@375 $generated@@378))
)))))
 :pattern ( ($generated@@150 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@244 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@275 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@244 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@267 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@145) ($generated@@0 ($generated@@81 $generated@@383 $generated@@386))) ($generated@@275 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@81 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@267 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@81 ($generated@@299 $generated@@388) $generated@@387)))
)))
(assert  (and (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@389 $generated@@392)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@389 $generated@@392))
)) (forall (($generated@@393 T@T) ($generated@@394 T@U) ) (! (= (type ($generated@@390 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@390 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@308 (type $generated@@395))))
(let (($generated@@397 ($generated@@307 (type $generated@@395))))
(= (type ($generated@@391 $generated@@395)) ($generated@@76 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@391 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@398) ($generated@@143 ($generated@@390 $generated@@136 $generated@@399)))) (= ($generated@@81 ($generated@@391 $generated@@398) ($generated@@143 ($generated@@390 $generated@@136 $generated@@399))) ($generated@@144 ($generated@@390 $generated@@136 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@326 (type $generated@@403))))
(let (($generated@@405 ($generated@@325 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@76 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@406) ($generated@@143 ($generated@@390 $generated@@136 $generated@@407)))) (= ($generated@@81 ($generated@@401 $generated@@406) ($generated@@143 ($generated@@390 $generated@@136 $generated@@407))) ($generated@@144 ($generated@@390 $generated@@136 $generated@@407))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@307 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@306 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@81 ($generated@@391 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@325 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@324 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@421) $generated@@425))) (and ($generated@@275 ($generated@@81 ($generated@@391 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@275 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@429) $generated@@433))) (and ($generated@@275 ($generated@@81 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@275 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@326 (type $generated@@436))))
(let (($generated@@438 ($generated@@325 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@324 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@323 $generated@@438 $generated@@437)) (= ($generated@@322 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@322 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@361 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@361 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@326 (type $generated@@442))))
(let (($generated@@444 ($generated@@325 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@324 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@323 $generated@@444 $generated@@443)) (= ($generated@@400 $generated@@442) ($generated@@434 $generated@@145))))))
 :pattern ( ($generated@@400 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@308 (type $generated@@445))))
(let (($generated@@447 ($generated@@307 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@306 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@305 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@445) ($generated@@293 ($generated@@232 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@326 (type $generated@@450))))
(let (($generated@@452 ($generated@@325 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@324 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@323 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@450) ($generated@@293 ($generated@@232 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@400 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@233 $generated@@455 $generated@@46)) (and (= ($generated@@293 ($generated@@390 $generated@@2 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@390 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@233 $generated@@456 $generated@@47)) (and (= ($generated@@293 ($generated@@390 $generated@@3 $generated@@456)) $generated@@456) ($generated@@132 ($generated@@390 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) ($generated@@233 $generated@@457 $generated@@44)) (and (= ($generated@@293 ($generated@@390 $generated@@4 $generated@@457)) $generated@@457) ($generated@@132 ($generated@@390 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) ($generated@@233 $generated@@459 $generated@@45)) (and (= ($generated@@293 ($generated@@390 $generated@@458 $generated@@459)) $generated@@459) ($generated@@132 ($generated@@390 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@64) (= ($generated@@233 ($generated@@293 $generated@@460) $generated@@461) ($generated@@132 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@233 ($generated@@293 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@79 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@76 $generated@@463 $generated@@4)) (<= 0 ($generated@@246 $generated@@462))))
 :pattern ( ($generated@@246 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@79 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@76 $generated@@465 $generated@@2)) (<= 0 ($generated@@298 $generated@@464))))
 :pattern ( ($generated@@298 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@153 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@152 $generated@@467)) (<= 0 ($generated@@247 $generated@@466))))
 :pattern ( ($generated@@247 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@308 (type $generated@@468))))
(let (($generated@@470 ($generated@@307 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@306 $generated@@470 $generated@@469)) (<= 0 ($generated@@371 $generated@@468)))))
 :pattern ( ($generated@@371 $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@426 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@426 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@426 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@426 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) (= (type $generated@@492) $generated@@145)) (= ($generated@@286 ($generated@@232 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@135 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@135 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@135 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@135 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@143 ($generated@@232 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@232 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (= ($generated@@144 ($generated@@232 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@232 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@152 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@245 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@247 $generated@@505))) ($generated@@275 ($generated@@248 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@248 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@245 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@244 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@244 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@267 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@267 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@267 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@159 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@159 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@245 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@245 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@245 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@390 $generated@@528 ($generated@@293 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@293 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@132 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@529) $generated@@532))) (and ($generated@@233 ($generated@@81 ($generated@@391 $generated@@529) $generated@@532) $generated@@531) ($generated@@233 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@132 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@132 $generated@@533 ($generated@@426 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@533) $generated@@536))) (and ($generated@@233 ($generated@@81 ($generated@@401 $generated@@533) $generated@@536) $generated@@535) ($generated@@233 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@132 $generated@@533 ($generated@@426 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@145)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@232 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@232 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@145)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@232 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@232 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@233 $generated@@543 ($generated@@418 $generated@@544 $generated@@545))) (and (= ($generated@@293 ($generated@@390 ($generated@@306 $generated@@145 $generated@@145) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@390 ($generated@@306 $generated@@145 $generated@@145) $generated@@543) ($generated@@418 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@543 ($generated@@418 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@233 $generated@@546 ($generated@@426 $generated@@547 $generated@@548))) (and (= ($generated@@293 ($generated@@390 ($generated@@324 $generated@@145 $generated@@145) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@390 ($generated@@324 $generated@@145 $generated@@145) $generated@@546) ($generated@@426 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@426 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@145)) ($generated@@233 $generated@@551 ($generated@@135 $generated@@549 $generated@@550))) (and (= ($generated@@293 ($generated@@390 $generated@@136 $generated@@551)) $generated@@551) ($generated@@132 ($generated@@390 $generated@@136 $generated@@551) ($generated@@135 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@135 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@553 T@T) ) (! (= (type ($generated@@552 $generated@@553)) ($generated@@76 $generated@@553 $generated@@4))
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@81 ($generated@@552 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@81 ($generated@@552 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@81 ($generated@@434 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@81 ($generated@@434 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@69)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@64) (= (type $generated@@561) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@560 $generated@@561)) $generated@@62) (= ($generated@@558 ($generated@@135 $generated@@560 $generated@@561)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@136) (= ($generated@@537 ($generated@@293 $generated@@562)) ($generated@@538 $generated@@562)))
 :pattern ( ($generated@@537 ($generated@@293 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@308 (type $generated@@563))))
(let (($generated@@565 ($generated@@307 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@306 $generated@@565 $generated@@564)) (= ($generated@@246 ($generated@@304 $generated@@563)) ($generated@@371 $generated@@563)))))
 :pattern ( ($generated@@246 ($generated@@304 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@308 (type $generated@@566))))
(let (($generated@@568 ($generated@@307 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@306 $generated@@568 $generated@@567)) (= ($generated@@246 ($generated@@389 $generated@@566)) ($generated@@371 $generated@@566)))))
 :pattern ( ($generated@@246 ($generated@@389 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@308 (type $generated@@569))))
(let (($generated@@571 ($generated@@307 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@306 $generated@@571 $generated@@570)) (<= ($generated@@246 ($generated@@350 $generated@@569)) ($generated@@371 $generated@@569)))))
 :pattern ( ($generated@@246 ($generated@@350 $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@145) ($generated@@233 $generated@@572 ($generated@@75 0))) (and (= ($generated@@293 ($generated@@390 $generated@@2 $generated@@572)) $generated@@572) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@572) ($generated@@75 0))))
 :pattern ( ($generated@@233 $generated@@572 ($generated@@75 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@64)) ($generated@@233 $generated@@573 ($generated@@244 $generated@@574))) (and (= ($generated@@293 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@573)) $generated@@573) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@573) ($generated@@244 $generated@@574))))
 :pattern ( ($generated@@233 $generated@@573 ($generated@@244 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@145) (= (type $generated@@576) $generated@@64)) ($generated@@233 $generated@@575 ($generated@@267 $generated@@576))) (and (= ($generated@@293 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@575)) $generated@@575) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@575) ($generated@@267 $generated@@576))))
 :pattern ( ($generated@@233 $generated@@575 ($generated@@267 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@145) (= (type $generated@@578) $generated@@64)) ($generated@@233 $generated@@577 ($generated@@159 $generated@@578))) (and (= ($generated@@293 ($generated@@390 ($generated@@76 $generated@@145 $generated@@2) $generated@@577)) $generated@@577) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@2) $generated@@577) ($generated@@159 $generated@@578))))
 :pattern ( ($generated@@233 $generated@@577 ($generated@@159 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@145) (= (type $generated@@580) $generated@@64)) ($generated@@233 $generated@@579 ($generated@@245 $generated@@580))) (and (= ($generated@@293 ($generated@@390 ($generated@@152 $generated@@145) $generated@@579)) $generated@@579) ($generated@@132 ($generated@@390 ($generated@@152 $generated@@145) $generated@@579) ($generated@@245 $generated@@580))))
 :pattern ( ($generated@@233 $generated@@579 ($generated@@245 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@79 (type $generated@@581))))
 (=> (= (type $generated@@581) ($generated@@76 $generated@@582 $generated@@4)) (and (= (= ($generated@@246 $generated@@581) 0) (= $generated@@581 ($generated@@552 $generated@@582))) (=> (not (= ($generated@@246 $generated@@581) 0)) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@582) ($generated@@0 ($generated@@81 $generated@@581 $generated@@583)))
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
))))))
 :pattern ( ($generated@@246 $generated@@581))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@584 ($generated@@159 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@584 $generated@@587)))) ($generated@@275 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@81 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@159 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@136) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@590) (and ($generated@@134 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@64) ($generated@@74 $generated@@588 ($generated@@135 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@74 $generated@@588 ($generated@@135 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@275 ($generated@@143 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@275 ($generated@@143 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@136) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@594) (and ($generated@@134 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@64) ($generated@@74 $generated@@592 ($generated@@135 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@74 $generated@@592 ($generated@@135 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@275 ($generated@@144 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@275 ($generated@@144 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@145) (= (type $generated@@597) $generated@@145)) (= ($generated@@232 ($generated@@242 $generated@@596) ($generated@@242 $generated@@597)) ($generated@@242 ($generated@@232 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@232 ($generated@@242 $generated@@596) ($generated@@242 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@249 $generated@@598))) ($generated@@242 ($generated@@293 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@249 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@293 ($generated@@242 $generated@@599)) ($generated@@242 ($generated@@293 $generated@@599)))
 :pattern ( ($generated@@293 ($generated@@242 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@153 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@152 $generated@@601)) (= ($generated@@247 $generated@@600) 0)) (= $generated@@600 ($generated@@151 $generated@@601))))
 :pattern ( ($generated@@247 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@76 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@298 ($generated@@82 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@298 $generated@@602) ($generated ($generated@@81 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@2)) ($generated@@74 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@3)) ($generated@@74 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@4)) ($generated@@74 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@458)) ($generated@@74 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@74 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@145)) ($generated@@74 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@152 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= ($generated@@132 $generated@@616 ($generated@@245 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@247 $generated@@616))) ($generated@@233 ($generated@@248 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@248 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@245 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@247 $generated@@620))) (< ($generated@@538 ($generated@@390 $generated@@136 ($generated@@248 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@538 ($generated@@390 $generated@@136 ($generated@@248 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@623) $generated@@64)) (= (type $generated@@624) $generated@@64)) ($generated@@132 $generated@@622 ($generated@@418 $generated@@623 $generated@@624))) (and (and ($generated@@132 ($generated@@304 $generated@@622) ($generated@@244 $generated@@623)) ($generated@@132 ($generated@@350 $generated@@622) ($generated@@244 $generated@@624))) ($generated@@132 ($generated@@389 $generated@@622) ($generated@@244 ($generated@@135 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@132 $generated@@622 ($generated@@418 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@626) $generated@@64)) (= (type $generated@@627) $generated@@64)) ($generated@@132 $generated@@625 ($generated@@426 $generated@@626 $generated@@627))) (and (and ($generated@@132 ($generated@@322 $generated@@625) ($generated@@267 $generated@@626)) ($generated@@132 ($generated@@361 $generated@@625) ($generated@@267 $generated@@627))) ($generated@@132 ($generated@@400 $generated@@625) ($generated@@267 ($generated@@135 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@132 $generated@@625 ($generated@@426 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@132 $generated@@628 $generated@@46))
 :pattern ( ($generated@@132 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@132 $generated@@629 $generated@@47))
 :pattern ( ($generated@@132 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@132 $generated@@630 $generated@@44))
 :pattern ( ($generated@@132 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@458) ($generated@@132 $generated@@631 $generated@@45))
 :pattern ( ($generated@@132 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@145) ($generated@@132 $generated@@632 $generated@@48))
 :pattern ( ($generated@@132 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@633) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@637) ($generated@@152 $generated@@145))) (= (type $generated@@634) $generated@@145)) (= (type $generated@@635) $generated@@64)) (= (type $generated@@636) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@639) ($generated@@166 $generated@@77 $generated@@4))) (= (type $generated@@640) $generated@@77)) (= (type $generated@@641) ($generated@@166 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@643 true))
(let (($generated@@644 true))
(let (($generated@@645  (=> (and (not ($generated@@0 ($generated@@81 $generated@@633 $generated@@634))) (= (ControlFlow 0 8) 2)) $generated@@644)))
(let (($generated@@646  (=> (and ($generated@@0 ($generated@@81 $generated@@633 $generated@@634)) (= (ControlFlow 0 7) 2)) $generated@@644)))
(let (($generated@@647  (=> (and ($generated@@233 $generated@@634 $generated@@635) ($generated@@275 $generated@@634 $generated@@635 $generated@@636)) (and (=> (= (ControlFlow 0 9) 7) $generated@@646) (=> (= (ControlFlow 0 9) 8) $generated@@645)))))
(let (($generated@@648  (=> (and (not (and ($generated@@233 $generated@@634 $generated@@635) ($generated@@275 $generated@@634 $generated@@635 $generated@@636))) (= (ControlFlow 0 6) 2)) $generated@@644)))
(let (($generated@@649  (=> (forall (($generated@@650 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@650) (< $generated@@650 ($generated@@247 $generated@@637))) ($generated@@0 ($generated@@81 $generated@@633 ($generated@@248 $generated@@637 $generated@@650)))))
 :pattern ( ($generated@@248 $generated@@637 $generated@@650))
)) (and (=> (= (ControlFlow 0 10) 9) $generated@@647) (=> (= (ControlFlow 0 10) 6) $generated@@648)))))
(let (($generated@@651  (=> (and (not (forall (($generated@@652 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@652) (< $generated@@652 ($generated@@247 $generated@@637))) ($generated@@0 ($generated@@81 $generated@@633 ($generated@@248 $generated@@637 $generated@@652)))))
 :pattern ( ($generated@@248 $generated@@637 $generated@@652))
))) (= (ControlFlow 0 5) 2)) $generated@@644)))
(let (($generated@@653  (=> (not (and (<= ($generated@@249 0) $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637)))) (and (=> (= (ControlFlow 0 13) 10) $generated@@649) (=> (= (ControlFlow 0 13) 5) $generated@@651)))))
(let (($generated@@654  (=> (and (<= ($generated@@249 0) $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637)))) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637))) (and (=> (= (ControlFlow 0 11) 10) $generated@@649) (=> (= (ControlFlow 0 11) 5) $generated@@651)))))))
(let (($generated@@655  (=> (< $generated@@638 ($generated@@249 0)) (and (=> (= (ControlFlow 0 15) 11) $generated@@654) (=> (= (ControlFlow 0 15) 13) $generated@@653)))))
(let (($generated@@656  (=> (<= ($generated@@249 0) $generated@@638) (and (=> (= (ControlFlow 0 14) 11) $generated@@654) (=> (= (ControlFlow 0 14) 13) $generated@@653)))))
(let (($generated@@657  (and (=> (= (ControlFlow 0 16) 14) $generated@@656) (=> (= (ControlFlow 0 16) 15) $generated@@655))))
(let (($generated@@658  (=> (= ($generated@@246 $generated@@633) ($generated@@247 $generated@@637)) (and (=> (= (ControlFlow 0 17) 16) $generated@@657) (=> (= (ControlFlow 0 17) 4) $generated@@643)))))
(let (($generated@@659  (=> (and (not (= ($generated@@246 $generated@@633) ($generated@@247 $generated@@637))) (= (ControlFlow 0 3) 2)) $generated@@644)))
(let (($generated@@660  (=> (= $generated@@639 ($generated@@220 $generated@@640 $generated@@636 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 17) $generated@@658) (=> (= (ControlFlow 0 18) 3) $generated@@659)))))
(let (($generated@@661 true))
(let (($generated@@662  (=> (= $generated@@641 ($generated@@165 $generated@@640 $generated@@636 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 1) $generated@@661) (=> (= (ControlFlow 0 19) 18) $generated@@660)))))
(let (($generated@@663  (=> (and ($generated@@274 $generated@@636) ($generated@@642 $generated@@636)) (=> (and (and ($generated@@132 $generated@@633 ($generated@@244 $generated@@635)) ($generated@@132 $generated@@637 ($generated@@245 $generated@@635))) (and (= 0 $generated@@240) (= (ControlFlow 0 20) 19))) $generated@@662))))
$generated@@663))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Int)
(declare-fun $generated@@247 (T@U) Int)
(declare-fun $generated@@248 (T@U Int) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@371 (T@U) Int)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@T T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@552 (T@T) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@136)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@145)) (= (type $generated@@239) $generated@@145)) (= ($generated@@132 ($generated@@232 $generated@@238 $generated@@239) ($generated@@135 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@132 ($generated@@232 $generated@@238 $generated@@239) ($generated@@135 $generated@@236 $generated@@237)))
)))
(assert  (and (and (and (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@242 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@242 $generated@@250))
)) (forall (($generated@@252 T@U) ) (! (= (type ($generated@@244 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (= (type ($generated@@245 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@253))
))) (forall (($generated@@254 T@U) ($generated@@255 Int) ) (! (let (($generated@@256 ($generated@@153 (type $generated@@254))))
(= (type ($generated@@248 $generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@248 $generated@@254 $generated@@255))
))))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@259) ($generated@@152 $generated@@145))) (or ($generated@@243 $generated@@257 ($generated@@242 $generated@@258) ($generated@@242 $generated@@259)) (and (not (= 0 $generated@@240)) (and ($generated@@132 $generated@@258 ($generated@@244 $generated@@257)) ($generated@@132 $generated@@259 ($generated@@245 $generated@@257)))))) (= ($generated@@241 $generated@@257 ($generated@@242 $generated@@258) ($generated@@242 $generated@@259))  (=> (= ($generated@@246 ($generated@@242 $generated@@258)) ($generated@@247 ($generated@@242 $generated@@259))) (and (forall (($generated@@260 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@260) (< $generated@@260 ($generated@@247 ($generated@@242 $generated@@259)))) ($generated@@0 ($generated@@81 ($generated@@242 $generated@@258) ($generated@@248 ($generated@@242 $generated@@259) $generated@@260)))))
 :pattern ( ($generated@@248 $generated@@259 $generated@@260))
)) (forall (($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@145) ($generated@@233 $generated@@261 $generated@@257)) ($generated@@0 ($generated@@81 ($generated@@242 $generated@@258) $generated@@261))) ($generated@@150 $generated@@259 $generated@@261))
 :pattern ( ($generated@@150 $generated@@259 $generated@@261))
 :pattern ( ($generated@@81 $generated@@258 $generated@@261))
))))))
 :weight 3
 :pattern ( ($generated@@241 $generated@@257 ($generated@@242 $generated@@258) ($generated@@242 $generated@@259)))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@136) (= (type $generated@@263) $generated@@136)) (= ($generated@@142 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@142 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@265) $generated@@64)) (= ($generated@@132 $generated@@264 ($generated@@244 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@145) ($generated@@0 ($generated@@81 $generated@@264 $generated@@266))) ($generated@@233 $generated@@266 $generated@@265))
 :pattern ( ($generated@@81 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@132 $generated@@264 ($generated@@244 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@64)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@270) $generated@@64)) (= ($generated@@132 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@145) ($generated@@0 ($generated@@81 $generated@@269 $generated@@271))) ($generated@@233 $generated@@271 $generated@@270))
 :pattern ( ($generated@@81 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@132 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@249 $generated@@272) $generated@@272)
 :pattern ( ($generated@@249 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@242 $generated@@273) $generated@@273)
 :pattern ( ($generated@@242 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) $generated@@145)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@232 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@232 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@283) ($generated@@152 $generated@@145))) (or ($generated@@243 $generated@@281 $generated@@282 $generated@@283) (and (not (= 0 $generated@@240)) (and ($generated@@132 $generated@@282 ($generated@@244 $generated@@281)) ($generated@@132 $generated@@283 ($generated@@245 $generated@@281)))))) (= ($generated@@241 $generated@@281 $generated@@282 $generated@@283)  (=> (= ($generated@@246 $generated@@282) ($generated@@247 $generated@@283)) (and (forall (($generated@@284 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@284) (< $generated@@284 ($generated@@247 $generated@@283))) ($generated@@0 ($generated@@81 $generated@@282 ($generated@@248 $generated@@283 $generated@@284)))))
 :pattern ( ($generated@@248 $generated@@283 $generated@@284))
)) (forall (($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@145) ($generated@@233 $generated@@285 $generated@@281)) ($generated@@0 ($generated@@81 $generated@@282 $generated@@285))) ($generated@@150 $generated@@283 $generated@@285))
 :pattern ( ($generated@@150 $generated@@283 $generated@@285))
 :pattern ( ($generated@@81 $generated@@282 $generated@@285))
))))))
 :pattern ( ($generated@@241 $generated@@281 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@136) (= ($generated@@134 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@136) ($generated@@134 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@145) (= (type $generated@@291) $generated@@145)) (= $generated@@289 ($generated@@232 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@134 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@247 ($generated@@151 $generated@@292)) 0)
 :pattern ( ($generated@@151 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@145)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@64) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@74 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@275 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@160 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@160 $generated@@340))
)))
(assert  (=> (<= 0 $generated@@240) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) $generated@@64) (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@345) ($generated@@152 $generated@@145))) (or ($generated@@243 $generated@@343 $generated@@344 $generated@@345) (and (not (= 0 $generated@@240)) (and ($generated@@132 $generated@@344 ($generated@@244 $generated@@343)) ($generated@@132 $generated@@345 ($generated@@245 $generated@@343)))))) true)
 :pattern ( ($generated@@241 $generated@@343 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@308 (type $generated@@346))))
(let (($generated@@348 ($generated@@307 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@306 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@305 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@304 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@308 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@308 (type $generated@@353))))
(let (($generated@@355 ($generated@@307 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@306 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@305 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@326 (type $generated@@357))))
(let (($generated@@359 ($generated@@325 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@324 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@323 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@322 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@326 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@326 (type $generated@@364))))
(let (($generated@@366 ($generated@@325 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@324 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@323 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@369) $generated@@64)) (= ($generated@@132 $generated@@368 ($generated@@159 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@368 $generated@@370)))) ($generated@@233 $generated@@370 $generated@@369))
 :pattern ( ($generated@@81 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@132 $generated@@368 ($generated@@159 $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@308 (type $generated@@372))))
(let (($generated@@374 ($generated@@307 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@306 $generated@@374 $generated@@373)) (= (= ($generated@@371 $generated@@372) 0) (= $generated@@372 ($generated@@305 $generated@@374 $generated@@373))))))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
 (=> (= (type $generated@@375) ($generated@@152 $generated@@377)) (= ($generated@@150 $generated@@375 $generated@@376) (exists (($generated@@378 Int) ) (!  (and (and (<= 0 $generated@@378) (< $generated@@378 ($generated@@247 $generated@@375))) (= ($generated@@248 $generated@@375 $generated@@378) $generated@@376))
 :pattern ( ($generated@@248 $generated@@375 $generated@@378))
)))))
 :pattern ( ($generated@@150 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@244 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@275 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@244 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@267 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@145) ($generated@@0 ($generated@@81 $generated@@383 $generated@@386))) ($generated@@275 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@81 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@267 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@81 ($generated@@299 $generated@@388) $generated@@387)))
)))
(assert  (and (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@389 $generated@@392)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@389 $generated@@392))
)) (forall (($generated@@393 T@T) ($generated@@394 T@U) ) (! (= (type ($generated@@390 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@390 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@308 (type $generated@@395))))
(let (($generated@@397 ($generated@@307 (type $generated@@395))))
(= (type ($generated@@391 $generated@@395)) ($generated@@76 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@391 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@398) ($generated@@143 ($generated@@390 $generated@@136 $generated@@399)))) (= ($generated@@81 ($generated@@391 $generated@@398) ($generated@@143 ($generated@@390 $generated@@136 $generated@@399))) ($generated@@144 ($generated@@390 $generated@@136 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@326 (type $generated@@403))))
(let (($generated@@405 ($generated@@325 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@76 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@406) ($generated@@143 ($generated@@390 $generated@@136 $generated@@407)))) (= ($generated@@81 ($generated@@401 $generated@@406) ($generated@@143 ($generated@@390 $generated@@136 $generated@@407))) ($generated@@144 ($generated@@390 $generated@@136 $generated@@407))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@307 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@306 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@81 ($generated@@391 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@325 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@324 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@421) $generated@@425))) (and ($generated@@275 ($generated@@81 ($generated@@391 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@275 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@429) $generated@@433))) (and ($generated@@275 ($generated@@81 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@275 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@326 (type $generated@@436))))
(let (($generated@@438 ($generated@@325 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@324 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@323 $generated@@438 $generated@@437)) (= ($generated@@322 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@322 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@361 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@361 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@326 (type $generated@@442))))
(let (($generated@@444 ($generated@@325 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@324 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@323 $generated@@444 $generated@@443)) (= ($generated@@400 $generated@@442) ($generated@@434 $generated@@145))))))
 :pattern ( ($generated@@400 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@308 (type $generated@@445))))
(let (($generated@@447 ($generated@@307 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@306 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@305 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@445) ($generated@@293 ($generated@@232 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@326 (type $generated@@450))))
(let (($generated@@452 ($generated@@325 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@324 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@323 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@450) ($generated@@293 ($generated@@232 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@400 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@233 $generated@@455 $generated@@46)) (and (= ($generated@@293 ($generated@@390 $generated@@2 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@390 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@233 $generated@@456 $generated@@47)) (and (= ($generated@@293 ($generated@@390 $generated@@3 $generated@@456)) $generated@@456) ($generated@@132 ($generated@@390 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) ($generated@@233 $generated@@457 $generated@@44)) (and (= ($generated@@293 ($generated@@390 $generated@@4 $generated@@457)) $generated@@457) ($generated@@132 ($generated@@390 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) ($generated@@233 $generated@@459 $generated@@45)) (and (= ($generated@@293 ($generated@@390 $generated@@458 $generated@@459)) $generated@@459) ($generated@@132 ($generated@@390 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@64) (= ($generated@@233 ($generated@@293 $generated@@460) $generated@@461) ($generated@@132 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@233 ($generated@@293 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@79 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@76 $generated@@463 $generated@@4)) (<= 0 ($generated@@246 $generated@@462))))
 :pattern ( ($generated@@246 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@79 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@76 $generated@@465 $generated@@2)) (<= 0 ($generated@@298 $generated@@464))))
 :pattern ( ($generated@@298 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@153 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@152 $generated@@467)) (<= 0 ($generated@@247 $generated@@466))))
 :pattern ( ($generated@@247 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@308 (type $generated@@468))))
(let (($generated@@470 ($generated@@307 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@306 $generated@@470 $generated@@469)) (<= 0 ($generated@@371 $generated@@468)))))
 :pattern ( ($generated@@371 $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@426 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@426 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@426 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@426 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) (= (type $generated@@492) $generated@@145)) (= ($generated@@286 ($generated@@232 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@135 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@135 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@135 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@135 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@143 ($generated@@232 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@232 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (= ($generated@@144 ($generated@@232 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@232 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@152 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@245 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@247 $generated@@505))) ($generated@@275 ($generated@@248 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@248 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@245 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@244 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@244 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@267 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@267 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@267 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@159 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@159 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@245 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@245 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@245 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@390 $generated@@528 ($generated@@293 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@293 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@132 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@529) $generated@@532))) (and ($generated@@233 ($generated@@81 ($generated@@391 $generated@@529) $generated@@532) $generated@@531) ($generated@@233 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@132 $generated@@529 ($generated@@418 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@132 $generated@@533 ($generated@@426 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@533) $generated@@536))) (and ($generated@@233 ($generated@@81 ($generated@@401 $generated@@533) $generated@@536) $generated@@535) ($generated@@233 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@132 $generated@@533 ($generated@@426 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@145)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@232 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@232 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@145)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@232 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@232 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@233 $generated@@543 ($generated@@418 $generated@@544 $generated@@545))) (and (= ($generated@@293 ($generated@@390 ($generated@@306 $generated@@145 $generated@@145) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@390 ($generated@@306 $generated@@145 $generated@@145) $generated@@543) ($generated@@418 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@543 ($generated@@418 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@233 $generated@@546 ($generated@@426 $generated@@547 $generated@@548))) (and (= ($generated@@293 ($generated@@390 ($generated@@324 $generated@@145 $generated@@145) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@390 ($generated@@324 $generated@@145 $generated@@145) $generated@@546) ($generated@@426 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@426 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@145)) ($generated@@233 $generated@@551 ($generated@@135 $generated@@549 $generated@@550))) (and (= ($generated@@293 ($generated@@390 $generated@@136 $generated@@551)) $generated@@551) ($generated@@132 ($generated@@390 $generated@@136 $generated@@551) ($generated@@135 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@135 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@553 T@T) ) (! (= (type ($generated@@552 $generated@@553)) ($generated@@76 $generated@@553 $generated@@4))
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@81 ($generated@@552 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@81 ($generated@@552 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@81 ($generated@@434 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@81 ($generated@@434 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@69)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@64) (= (type $generated@@561) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@560 $generated@@561)) $generated@@62) (= ($generated@@558 ($generated@@135 $generated@@560 $generated@@561)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@136) (= ($generated@@537 ($generated@@293 $generated@@562)) ($generated@@538 $generated@@562)))
 :pattern ( ($generated@@537 ($generated@@293 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@308 (type $generated@@563))))
(let (($generated@@565 ($generated@@307 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@306 $generated@@565 $generated@@564)) (= ($generated@@246 ($generated@@304 $generated@@563)) ($generated@@371 $generated@@563)))))
 :pattern ( ($generated@@246 ($generated@@304 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@308 (type $generated@@566))))
(let (($generated@@568 ($generated@@307 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@306 $generated@@568 $generated@@567)) (= ($generated@@246 ($generated@@389 $generated@@566)) ($generated@@371 $generated@@566)))))
 :pattern ( ($generated@@246 ($generated@@389 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@308 (type $generated@@569))))
(let (($generated@@571 ($generated@@307 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@306 $generated@@571 $generated@@570)) (<= ($generated@@246 ($generated@@350 $generated@@569)) ($generated@@371 $generated@@569)))))
 :pattern ( ($generated@@246 ($generated@@350 $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@145) ($generated@@233 $generated@@572 ($generated@@75 0))) (and (= ($generated@@293 ($generated@@390 $generated@@2 $generated@@572)) $generated@@572) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@572) ($generated@@75 0))))
 :pattern ( ($generated@@233 $generated@@572 ($generated@@75 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@64)) ($generated@@233 $generated@@573 ($generated@@244 $generated@@574))) (and (= ($generated@@293 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@573)) $generated@@573) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@573) ($generated@@244 $generated@@574))))
 :pattern ( ($generated@@233 $generated@@573 ($generated@@244 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@145) (= (type $generated@@576) $generated@@64)) ($generated@@233 $generated@@575 ($generated@@267 $generated@@576))) (and (= ($generated@@293 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@575)) $generated@@575) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@4) $generated@@575) ($generated@@267 $generated@@576))))
 :pattern ( ($generated@@233 $generated@@575 ($generated@@267 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@145) (= (type $generated@@578) $generated@@64)) ($generated@@233 $generated@@577 ($generated@@159 $generated@@578))) (and (= ($generated@@293 ($generated@@390 ($generated@@76 $generated@@145 $generated@@2) $generated@@577)) $generated@@577) ($generated@@132 ($generated@@390 ($generated@@76 $generated@@145 $generated@@2) $generated@@577) ($generated@@159 $generated@@578))))
 :pattern ( ($generated@@233 $generated@@577 ($generated@@159 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@145) (= (type $generated@@580) $generated@@64)) ($generated@@233 $generated@@579 ($generated@@245 $generated@@580))) (and (= ($generated@@293 ($generated@@390 ($generated@@152 $generated@@145) $generated@@579)) $generated@@579) ($generated@@132 ($generated@@390 ($generated@@152 $generated@@145) $generated@@579) ($generated@@245 $generated@@580))))
 :pattern ( ($generated@@233 $generated@@579 ($generated@@245 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@79 (type $generated@@581))))
 (=> (= (type $generated@@581) ($generated@@76 $generated@@582 $generated@@4)) (and (= (= ($generated@@246 $generated@@581) 0) (= $generated@@581 ($generated@@552 $generated@@582))) (=> (not (= ($generated@@246 $generated@@581) 0)) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@582) ($generated@@0 ($generated@@81 $generated@@581 $generated@@583)))
 :no-pattern (type $generated@@583)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
))))))
 :pattern ( ($generated@@246 $generated@@581))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@584 ($generated@@159 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@584 $generated@@587)))) ($generated@@275 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@81 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@159 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@136) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@590) (and ($generated@@134 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@64) ($generated@@74 $generated@@588 ($generated@@135 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@74 $generated@@588 ($generated@@135 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@275 ($generated@@143 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@275 ($generated@@143 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@136) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@594) (and ($generated@@134 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@64) ($generated@@74 $generated@@592 ($generated@@135 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@74 $generated@@592 ($generated@@135 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@275 ($generated@@144 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@275 ($generated@@144 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@145) (= (type $generated@@597) $generated@@145)) (= ($generated@@232 ($generated@@242 $generated@@596) ($generated@@242 $generated@@597)) ($generated@@242 ($generated@@232 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@232 ($generated@@242 $generated@@596) ($generated@@242 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@249 $generated@@598))) ($generated@@242 ($generated@@293 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@249 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@293 ($generated@@242 $generated@@599)) ($generated@@242 ($generated@@293 $generated@@599)))
 :pattern ( ($generated@@293 ($generated@@242 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@153 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@152 $generated@@601)) (= ($generated@@247 $generated@@600) 0)) (= $generated@@600 ($generated@@151 $generated@@601))))
 :pattern ( ($generated@@247 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@76 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@298 ($generated@@82 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@298 $generated@@602) ($generated ($generated@@81 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@2)) ($generated@@74 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@3)) ($generated@@74 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@4)) ($generated@@74 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@458)) ($generated@@74 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@74 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@145)) ($generated@@74 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@152 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= ($generated@@132 $generated@@616 ($generated@@245 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@247 $generated@@616))) ($generated@@233 ($generated@@248 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@248 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@245 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@247 $generated@@620))) (< ($generated@@538 ($generated@@390 $generated@@136 ($generated@@248 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@538 ($generated@@390 $generated@@136 ($generated@@248 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@623) $generated@@64)) (= (type $generated@@624) $generated@@64)) ($generated@@132 $generated@@622 ($generated@@418 $generated@@623 $generated@@624))) (and (and ($generated@@132 ($generated@@304 $generated@@622) ($generated@@244 $generated@@623)) ($generated@@132 ($generated@@350 $generated@@622) ($generated@@244 $generated@@624))) ($generated@@132 ($generated@@389 $generated@@622) ($generated@@244 ($generated@@135 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@132 $generated@@622 ($generated@@418 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@626) $generated@@64)) (= (type $generated@@627) $generated@@64)) ($generated@@132 $generated@@625 ($generated@@426 $generated@@626 $generated@@627))) (and (and ($generated@@132 ($generated@@322 $generated@@625) ($generated@@267 $generated@@626)) ($generated@@132 ($generated@@361 $generated@@625) ($generated@@267 $generated@@627))) ($generated@@132 ($generated@@400 $generated@@625) ($generated@@267 ($generated@@135 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@132 $generated@@625 ($generated@@426 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@132 $generated@@628 $generated@@46))
 :pattern ( ($generated@@132 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@132 $generated@@629 $generated@@47))
 :pattern ( ($generated@@132 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@132 $generated@@630 $generated@@44))
 :pattern ( ($generated@@132 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@458) ($generated@@132 $generated@@631 $generated@@45))
 :pattern ( ($generated@@132 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@145) ($generated@@132 $generated@@632 $generated@@48))
 :pattern ( ($generated@@132 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@633) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@637) ($generated@@152 $generated@@145))) (= (type $generated@@634) $generated@@145)) (= (type $generated@@635) $generated@@64)) (= (type $generated@@636) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@639) ($generated@@166 $generated@@77 $generated@@4))) (= (type $generated@@640) $generated@@77)) (= (type $generated@@641) ($generated@@166 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@643 true))
(let (($generated@@644 true))
(let (($generated@@645  (=> (and (not ($generated@@0 ($generated@@81 $generated@@633 $generated@@634))) (= (ControlFlow 0 8) 2)) $generated@@644)))
(let (($generated@@646  (=> (and ($generated@@0 ($generated@@81 $generated@@633 $generated@@634)) (= (ControlFlow 0 7) 2)) $generated@@644)))
(let (($generated@@647  (=> (and ($generated@@233 $generated@@634 $generated@@635) ($generated@@275 $generated@@634 $generated@@635 $generated@@636)) (and (=> (= (ControlFlow 0 9) 7) $generated@@646) (=> (= (ControlFlow 0 9) 8) $generated@@645)))))
(let (($generated@@648  (=> (and (not (and ($generated@@233 $generated@@634 $generated@@635) ($generated@@275 $generated@@634 $generated@@635 $generated@@636))) (= (ControlFlow 0 6) 2)) $generated@@644)))
(let (($generated@@649  (=> (forall (($generated@@650 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@650) (< $generated@@650 ($generated@@247 $generated@@637))) ($generated@@0 ($generated@@81 $generated@@633 ($generated@@248 $generated@@637 $generated@@650)))))
 :pattern ( ($generated@@248 $generated@@637 $generated@@650))
)) (and (=> (= (ControlFlow 0 10) 9) $generated@@647) (=> (= (ControlFlow 0 10) 6) $generated@@648)))))
(let (($generated@@651  (=> (and (not (forall (($generated@@652 Int) ) (!  (=> true (=> (and (<= ($generated@@249 0) $generated@@652) (< $generated@@652 ($generated@@247 $generated@@637))) ($generated@@0 ($generated@@81 $generated@@633 ($generated@@248 $generated@@637 $generated@@652)))))
 :pattern ( ($generated@@248 $generated@@637 $generated@@652))
))) (= (ControlFlow 0 5) 2)) $generated@@644)))
(let (($generated@@653  (=> (not (and (<= ($generated@@249 0) $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637)))) (and (=> (= (ControlFlow 0 13) 10) $generated@@649) (=> (= (ControlFlow 0 13) 5) $generated@@651)))))
(let (($generated@@654  (=> (and (<= ($generated@@249 0) $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637)))) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@247 $generated@@637))) (and (=> (= (ControlFlow 0 11) 10) $generated@@649) (=> (= (ControlFlow 0 11) 5) $generated@@651)))))))
(let (($generated@@655  (=> (< $generated@@638 ($generated@@249 0)) (and (=> (= (ControlFlow 0 15) 11) $generated@@654) (=> (= (ControlFlow 0 15) 13) $generated@@653)))))
(let (($generated@@656  (=> (<= ($generated@@249 0) $generated@@638) (and (=> (= (ControlFlow 0 14) 11) $generated@@654) (=> (= (ControlFlow 0 14) 13) $generated@@653)))))
(let (($generated@@657  (and (=> (= (ControlFlow 0 16) 14) $generated@@656) (=> (= (ControlFlow 0 16) 15) $generated@@655))))
(let (($generated@@658  (=> (= ($generated@@246 $generated@@633) ($generated@@247 $generated@@637)) (and (=> (= (ControlFlow 0 17) 16) $generated@@657) (=> (= (ControlFlow 0 17) 4) $generated@@643)))))
(let (($generated@@659  (=> (and (not (= ($generated@@246 $generated@@633) ($generated@@247 $generated@@637))) (= (ControlFlow 0 3) 2)) $generated@@644)))
(let (($generated@@660  (=> (= $generated@@639 ($generated@@220 $generated@@640 $generated@@636 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 17) $generated@@658) (=> (= (ControlFlow 0 18) 3) $generated@@659)))))
(let (($generated@@661 true))
(let (($generated@@662  (=> (= $generated@@641 ($generated@@165 $generated@@640 $generated@@636 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 1) $generated@@661) (=> (= (ControlFlow 0 19) 18) $generated@@660)))))
(let (($generated@@663  (=> (and ($generated@@274 $generated@@636) ($generated@@642 $generated@@636)) (=> (and (and ($generated@@132 $generated@@633 ($generated@@244 $generated@@635)) ($generated@@132 $generated@@637 ($generated@@245 $generated@@635))) (and (= 0 $generated@@240) (= (ControlFlow 0 20) 19))) $generated@@662))))
$generated@@663))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@442 (T@U) Bool)
(declare-fun $generated@@443 (T@U) Int)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@4))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@76 $generated@@145 $generated@@4)) (or ($generated@@272 $generated@@276) (and (not (= 0 $generated@@270)) (and ($generated@@132 $generated@@276 ($generated@@233 $generated@@46)) (not ($generated@@273 $generated@@276 ($generated@@274 $generated@@145))))))) true)
 :pattern ( ($generated@@271 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@145)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@250 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@324))))
 (=> (and (= (type $generated@@324) ($generated@@76 $generated@@326 $generated@@4)) (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@4))) (= ($generated@@273 $generated@@324 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (= ($generated@@0 ($generated@@81 $generated@@324 $generated@@327)) ($generated@@0 ($generated@@81 $generated@@325 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@327))
 :pattern ( ($generated@@81 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@273 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (= ($generated@@151 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@81 $generated@@328 $generated@@330))) (<= ($generated ($generated@@81 $generated@@328 $generated@@330)) ($generated@@282 $generated@@328))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@151 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@292 (type $generated@@331))))
(let (($generated@@333 ($generated@@291 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@290 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@289 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@288 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@292 (type $generated@@338))))
(let (($generated@@340 ($generated@@291 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@290 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@289 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@310 (type $generated@@342))))
(let (($generated@@344 ($generated@@309 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@308 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@307 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@306 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@310 (type $generated@@349))))
(let (($generated@@351 ($generated@@309 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@308 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@307 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@354) $generated@@64)) (= ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@353 $generated@@355)))) ($generated@@224 $generated@@355 $generated@@354))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@233 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@250 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@233 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@238 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@250 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@238 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@81 ($generated@@283 $generated@@365) $generated@@364)))
)))
(assert  (and (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@366 $generated@@369)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@366 $generated@@369))
)) (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@367 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@292 (type $generated@@372))))
(let (($generated@@374 ($generated@@291 (type $generated@@372))))
(= (type ($generated@@368 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@368 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@375) ($generated@@143 ($generated@@367 $generated@@136 $generated@@376)))) (= ($generated@@81 ($generated@@368 $generated@@375) ($generated@@143 ($generated@@367 $generated@@136 $generated@@376))) ($generated@@144 ($generated@@367 $generated@@136 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@310 (type $generated@@380))))
(let (($generated@@382 ($generated@@309 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@383) ($generated@@143 ($generated@@367 $generated@@136 $generated@@384)))) (= ($generated@@81 ($generated@@378 $generated@@383) ($generated@@143 ($generated@@367 $generated@@136 $generated@@384))) ($generated@@144 ($generated@@367 $generated@@136 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@291 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@290 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@309 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@308 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@81 ($generated@@368 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@406) $generated@@410))) (and ($generated@@250 ($generated@@81 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@250 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@79 (type $generated@@411))))
 (=> (and (and (= (type $generated@@411) ($generated@@76 $generated@@413 $generated@@4)) (= (type $generated@@412) ($generated@@76 $generated@@413 $generated@@4))) ($generated@@273 $generated@@411 $generated@@412)) (= $generated@@411 $generated@@412)))
 :pattern ( ($generated@@273 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@310 (type $generated@@416))))
(let (($generated@@418 ($generated@@309 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@308 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@307 $generated@@418 $generated@@417)) (= ($generated@@306 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@306 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@310 (type $generated@@419))))
(let (($generated@@421 ($generated@@309 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@308 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@307 $generated@@421 $generated@@420)) (= ($generated@@346 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@346 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@310 (type $generated@@422))))
(let (($generated@@424 ($generated@@309 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@308 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@307 $generated@@424 $generated@@423)) (= ($generated@@377 $generated@@422) ($generated@@414 $generated@@145))))))
 :pattern ( ($generated@@377 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@292 (type $generated@@425))))
(let (($generated@@427 ($generated@@291 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@290 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@289 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@145) (= (type $generated@@429) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@425) ($generated@@277 ($generated@@223 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@366 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@310 (type $generated@@430))))
(let (($generated@@432 ($generated@@309 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@308 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@307 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@430) ($generated@@277 ($generated@@223 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@377 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@224 $generated@@435 $generated@@46)) (and (= ($generated@@277 ($generated@@367 $generated@@2 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@367 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@47)) (and (= ($generated@@277 ($generated@@367 $generated@@3 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@367 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@44)) (and (= ($generated@@277 ($generated@@367 $generated@@4 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@367 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@45)) (and (= ($generated@@277 ($generated@@367 $generated@@438 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@367 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@64) (= ($generated@@224 ($generated@@277 $generated@@440) $generated@@441) ($generated@@132 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@224 ($generated@@277 $generated@@440) $generated@@441))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@445) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@272 $generated@@445) (and (not (= 0 $generated@@270)) (and (and ($generated@@249 $generated@@444) ($generated@@132 $generated@@445 ($generated@@233 $generated@@46))) (not ($generated@@273 $generated@@445 ($generated@@274 $generated@@145))))))) (and ($generated@@442 $generated@@445) (= ($generated@@271 $generated@@445) (let (($generated@@446 ($generated@@443 $generated@@445)))
$generated@@446))))
 :pattern ( ($generated@@271 $generated@@445) ($generated@@249 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@265 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@264 $generated@@450)) (<= 0 ($generated@@263 $generated@@449))))
 :pattern ( ($generated@@263 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@395 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@395 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@395 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@403 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@403 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@403 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@223 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@265 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@264 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@263 $generated@@491))) ($generated@@250 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@233 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@238 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@150 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@367 $generated@@514 ($generated@@277 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@277 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@368 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@395 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@403 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@519) $generated@@522))) (and ($generated@@224 ($generated@@81 ($generated@@378 $generated@@519) $generated@@522) $generated@@521) ($generated@@224 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@403 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@223 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@223 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@529 ($generated@@395 $generated@@530 $generated@@531))) (and (= ($generated@@277 ($generated@@367 ($generated@@290 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@367 ($generated@@290 $generated@@145 $generated@@145) $generated@@529) ($generated@@395 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@395 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@403 $generated@@533 $generated@@534))) (and (= ($generated@@277 ($generated@@367 ($generated@@308 $generated@@145 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@367 ($generated@@308 $generated@@145 $generated@@145) $generated@@532) ($generated@@403 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@403 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@145)) ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536))) (and (= ($generated@@277 ($generated@@367 $generated@@136 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@367 $generated@@136 $generated@@537) ($generated@@135 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@274 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@81 ($generated@@414 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@81 ($generated@@414 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@69)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@135 $generated@@544 $generated@@545)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@136) (= ($generated@@523 ($generated@@277 $generated@@546)) ($generated@@524 $generated@@546)))
 :pattern ( ($generated@@523 ($generated@@277 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) ($generated@@224 $generated@@547 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@367 $generated@@2 $generated@@547)) $generated@@547) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@75 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@233 $generated@@549))) (and (= ($generated@@277 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@233 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@233 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@238 $generated@@551))) (and (= ($generated@@277 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@238 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@238 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@150 $generated@@553))) (and (= ($generated@@277 ($generated@@367 ($generated@@76 $generated@@145 $generated@@2) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@367 ($generated@@76 $generated@@145 $generated@@2) $generated@@552) ($generated@@150 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@150 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@485 $generated@@555))) (and (= ($generated@@277 ($generated@@367 ($generated@@264 $generated@@145) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@367 ($generated@@264 $generated@@145) $generated@@554) ($generated@@485 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@485 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@556 ($generated@@150 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@556 $generated@@559)))) ($generated@@250 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@81 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@150 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@250 ($generated@@143 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@566) (and ($generated@@134 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@64) ($generated@@74 $generated@@564 ($generated@@135 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@135 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@250 ($generated@@144 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@145) (= (type $generated@@569) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@568) ($generated@@245 $generated@@569)) ($generated@@245 ($generated@@223 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@568) ($generated@@245 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@145 $generated@@4)) ($generated@@442 $generated@@570)) ($generated@@0 ($generated@@81 $generated@@570 ($generated@@277 ($generated@@8 ($generated@@443 $generated@@570))))))
 :pattern ( ($generated@@443 $generated@@570))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@243 $generated@@571))) ($generated@@245 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@243 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@245 $generated@@572)) ($generated@@245 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@245 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@265 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@264 $generated@@574)) (= ($generated@@263 $generated@@573) 0)) (= $generated@@573 ($generated@@262 $generated@@574))))
 :pattern ( ($generated@@263 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@272 ($generated@@245 $generated@@580)) (and (not (= 0 $generated@@270)) (and (and ($generated@@249 $generated@@579) ($generated@@132 $generated@@580 ($generated@@233 $generated@@46))) (not ($generated@@273 $generated@@580 ($generated@@274 $generated@@145))))))) (and ($generated@@442 ($generated@@245 $generated@@580)) (= ($generated@@271 ($generated@@245 $generated@@580)) (let (($generated@@581 ($generated@@443 ($generated@@245 $generated@@580))))
$generated@@581))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@245 $generated@@580)) ($generated@@249 $generated@@579))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@2)) ($generated@@74 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@3)) ($generated@@74 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@4)) ($generated@@74 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@438)) ($generated@@74 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@145)) ($generated@@74 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@264 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= ($generated@@132 $generated@@592 ($generated@@485 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@263 $generated@@592))) ($generated@@224 ($generated@@486 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@486 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@485 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@596))) (< ($generated@@524 ($generated@@367 $generated@@136 ($generated@@486 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@524 ($generated@@367 $generated@@136 ($generated@@486 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@290 $generated@@145 $generated@@145)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@132 $generated@@598 ($generated@@395 $generated@@599 $generated@@600))) (and (and ($generated@@132 ($generated@@288 $generated@@598) ($generated@@233 $generated@@599)) ($generated@@132 ($generated@@335 $generated@@598) ($generated@@233 $generated@@600))) ($generated@@132 ($generated@@366 $generated@@598) ($generated@@233 ($generated@@135 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@132 $generated@@598 ($generated@@395 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@403 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@306 $generated@@601) ($generated@@238 $generated@@602)) ($generated@@132 ($generated@@346 $generated@@601) ($generated@@238 $generated@@603))) ($generated@@132 ($generated@@377 $generated@@601) ($generated@@238 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@403 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@132 $generated@@604 $generated@@46))
 :pattern ( ($generated@@132 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@132 $generated@@605 $generated@@47))
 :pattern ( ($generated@@132 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@132 $generated@@606 $generated@@44))
 :pattern ( ($generated@@132 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@438) ($generated@@132 $generated@@607 $generated@@45))
 :pattern ( ($generated@@132 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@145) ($generated@@132 $generated@@608 $generated@@48))
 :pattern ( ($generated@@132 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@609) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@612) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@613) $generated@@77)) (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@615) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@617 true))
(let (($generated@@618  (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and ($generated@@132 ($generated@@8 ($generated@@243 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@277 ($generated@@8 ($generated@@243 0)))))) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@2) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@277 $generated@@619))))
 :no-pattern (type $generated@@619)
 :no-pattern ($generated $generated@@619)
 :no-pattern ($generated@@0 $generated@@619)
)))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@243 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@277 ($generated@@8 ($generated@@243 0)))))) (exists (($generated@@620 Int) ) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@277 ($generated@@8 $generated@@620)))))) (=> ($generated@@0 ($generated@@81 $generated@@609 ($generated@@277 ($generated@@8 $generated@@610)))) (=> (and ($generated@@0 ($generated@@81 $generated@@609 ($generated@@277 ($generated@@8 $generated@@611)))) (= (ControlFlow 0 3) (- 0 2))) (= $generated@@610 $generated@@611)))))))
(let (($generated@@621  (=> (= $generated@@612 ($generated@@211 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@618) (=> (= (ControlFlow 0 6) 5) $generated@@617)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (and (= $generated@@615 ($generated@@156 $generated@@613 $generated@@614 $generated@@60 false)) (not ($generated@@273 $generated@@609 ($generated@@274 $generated@@145)))) (and (=> (= (ControlFlow 0 7) 1) $generated@@622) (=> (= (ControlFlow 0 7) 6) $generated@@621)))))
(let (($generated@@624  (=> (and (and (and ($generated@@249 $generated@@614) ($generated@@616 $generated@@614)) ($generated@@132 $generated@@609 ($generated@@233 $generated@@46))) (and (= 0 $generated@@270) (= (ControlFlow 0 8) 7))) $generated@@623)))
$generated@@624)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@T) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) Bool)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@U Int) T@U)
(declare-fun $generated@@287 (Int) Int)
(declare-fun $generated@@305 (T@U) Bool)
(declare-fun $generated@@306 (T@U T@U) Bool)
(declare-fun $generated@@307 (T@U T@U) Bool)
(declare-fun $generated@@308 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U) T@U)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U T@U) T@U)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@348 (T@U T@U T@U) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@362 (T@U T@U) Bool)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@379 (T@U) Int)
(declare-fun $generated@@380 (T@T) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@T) T@U)
(declare-fun $generated@@387 (T@T T@T) T@T)
(declare-fun $generated@@388 (T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@T T@T) T@U)
(declare-fun $generated@@405 (T@T T@T) T@T)
(declare-fun $generated@@406 (T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) Bool)
(declare-fun $generated@@467 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@T T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@522 (T@U T@U) T@U)
(declare-fun $generated@@530 (T@U T@U) T@U)
(declare-fun $generated@@561 (T@T) T@U)
(declare-fun $generated@@585 () T@T)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@645 (T@U) Int)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@673 (T@U) Int)
(declare-fun $generated@@674 (T@U) Int)
(declare-fun $generated@@700 (T@U) T@U)
(declare-fun $generated@@704 (T@U) T@U)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@735 (T@U T@U) Bool)
(declare-fun $generated@@803 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@139)) 16))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@137 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@137 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@132 $generated@@141 $generated@@142 $generated@@143)) ($generated@@137 $generated@@135))
 :pattern ( ($generated@@132 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@133 $generated@@144)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@144))
))) (= (type $generated@@136) $generated@@134)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@134)) (= (type $generated@@147) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@132 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@145 $generated@@136 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@145 ($generated@@133 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(= (type ($generated@@149 $generated@@150 $generated@@151)) ($generated@@137 $generated@@152)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@154)))
 (=> (and (= (type $generated@@153) ($generated@@137 $generated@@156)) (= (type $generated@@155) $generated@@156)) (= ($generated@@148 ($generated@@149 $generated@@153 $generated@@154) $generated@@155)  (or (= $generated@@154 $generated@@155) ($generated@@148 $generated@@153 $generated@@155)))))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@153 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@75 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 17) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@64) (= (type $generated@@165) $generated@@64)) (= (type $generated@@166) $generated@@161)) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@135)
 :pattern ( ($generated@@168 $generated@@170))
)) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@135)
 :pattern ( ($generated@@169 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@161) (= (type $generated@@173) $generated@@161)) true) (= ($generated@@167 $generated@@172 $generated@@173)  (and (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)) (= ($generated@@169 $generated@@172) ($generated@@169 $generated@@173)))))
 :pattern ( ($generated@@167 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@T) ) (! (= (type ($generated@@174 $generated@@175)) ($generated@@137 $generated@@175))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
 (not ($generated@@148 ($generated@@174 $generated@@177) $generated@@176)))
 :pattern ( (let (($generated@@177 (type $generated@@176)))
($generated@@148 ($generated@@174 $generated@@177) $generated@@176)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@134)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@64) (= (type $generated@@181) $generated@@134)) (= (type $generated@@182) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@132 $generated@@180 ($generated@@178 $generated@@181) $generated@@182) ($generated@@132 $generated@@180 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@132 $generated@@180 ($generated@@178 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@187) $generated@@64)) ($generated@@157 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@157 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@77 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@67 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@239) ($generated@@66 $generated@@4))) (= (type $generated@@241) $generated@@77)) (= (type $generated@@242) ($generated@@66 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@190 $generated@@77 $generated@@4))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@67 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@77) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@251) ($generated@@66 $generated@@4))) (= (type $generated@@253) $generated@@77)) (= (type $generated@@254) ($generated@@66 $generated@@255))) (= ($generated@@0 ($generated@@188 ($generated@@244 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@188 ($generated@@244 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@79 (type $generated@@257))))
(= (type ($generated@@256 $generated@@257 $generated@@258)) ($generated@@76 $generated@@259 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@79 (type $generated@@260))))
 (=> (and (= (type $generated@@260) ($generated@@76 $generated@@262 $generated@@4)) (= (type $generated@@261) ($generated@@76 $generated@@262 $generated@@4))) (= ($generated@@256 ($generated@@256 $generated@@260 $generated@@261) $generated@@261) ($generated@@256 $generated@@260 $generated@@261))))
 :pattern ( ($generated@@256 ($generated@@256 $generated@@260 $generated@@261) $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@79 (type $generated@@264))))
(= (type ($generated@@263 $generated@@264 $generated@@265)) ($generated@@76 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@79 (type $generated@@267))))
 (=> (and (= (type $generated@@267) ($generated@@76 $generated@@269 $generated@@4)) (= (type $generated@@268) ($generated@@76 $generated@@269 $generated@@4))) (= ($generated@@263 ($generated@@263 $generated@@267 $generated@@268) $generated@@268) ($generated@@263 $generated@@267 $generated@@268))))
 :pattern ( ($generated@@263 ($generated@@263 $generated@@267 $generated@@268) $generated@@268))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@161)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@64)) (= (type $generated@@276) $generated@@135)) (= (type $generated@@277) $generated@@135)) (= ($generated@@157 ($generated@@270 $generated@@276 $generated@@277) ($generated@@160 $generated@@274 $generated@@275))  (and ($generated@@271 $generated@@276 $generated@@274) ($generated@@271 $generated@@277 $generated@@275))))
 :pattern ( ($generated@@157 ($generated@@270 $generated@@276 $generated@@277) ($generated@@160 $generated@@274 $generated@@275)))
)))
(assert  (and (and (and (forall (($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
(= (type ($generated@@280 $generated@@288)) $generated@@289))
 :pattern ( ($generated@@280 $generated@@288))
)) (forall (($generated@@290 T@U) ) (! (= (type ($generated@@282 $generated@@290)) $generated@@64)
 :pattern ( ($generated@@282 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (= (type ($generated@@283 $generated@@291)) $generated@@64)
 :pattern ( ($generated@@283 $generated@@291))
))) (forall (($generated@@292 T@U) ($generated@@293 Int) ) (! (let (($generated@@294 ($generated@@138 (type $generated@@292))))
(= (type ($generated@@286 $generated@@292 $generated@@293)) $generated@@294))
 :pattern ( ($generated@@286 $generated@@292 $generated@@293))
))))
(assert  (=> (<= 0 $generated@@278) (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@297) ($generated@@137 $generated@@135))) (or ($generated@@281 $generated@@295 ($generated@@280 $generated@@296) ($generated@@280 $generated@@297)) (and (not (= 0 $generated@@278)) (and ($generated@@157 $generated@@296 ($generated@@282 $generated@@295)) ($generated@@157 $generated@@297 ($generated@@283 $generated@@295)))))) (= ($generated@@279 $generated@@295 ($generated@@280 $generated@@296) ($generated@@280 $generated@@297))  (=> (= ($generated@@284 ($generated@@280 $generated@@296)) ($generated@@285 ($generated@@280 $generated@@297))) (and (forall (($generated@@298 Int) ) (!  (=> true (=> (and (<= ($generated@@287 0) $generated@@298) (< $generated@@298 ($generated@@285 ($generated@@280 $generated@@297)))) ($generated@@0 ($generated@@81 ($generated@@280 $generated@@296) ($generated@@286 ($generated@@280 $generated@@297) $generated@@298)))))
 :pattern ( ($generated@@286 $generated@@297 $generated@@298))
)) (forall (($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@299) $generated@@135) ($generated@@271 $generated@@299 $generated@@295)) ($generated@@0 ($generated@@81 ($generated@@280 $generated@@296) $generated@@299))) ($generated@@148 $generated@@297 $generated@@299))
 :pattern ( ($generated@@148 $generated@@297 $generated@@299))
 :pattern ( ($generated@@81 $generated@@296 $generated@@299))
))))))
 :weight 3
 :pattern ( ($generated@@279 $generated@@295 ($generated@@280 $generated@@296) ($generated@@280 $generated@@297)))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@300))))
 (=> (and (= (type $generated@@300) ($generated@@76 $generated@@302 $generated@@4)) (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@4))) (= (+ ($generated@@284 ($generated@@256 $generated@@300 $generated@@301)) ($generated@@284 ($generated@@263 $generated@@300 $generated@@301))) (+ ($generated@@284 $generated@@300) ($generated@@284 $generated@@301)))))
 :pattern ( ($generated@@284 ($generated@@256 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@284 ($generated@@263 $generated@@300 $generated@@301)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@161) (= (type $generated@@304) $generated@@161)) (= ($generated@@167 $generated@@303 $generated@@304) (= $generated@@303 $generated@@304)))
 :pattern ( ($generated@@167 $generated@@303 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@79 (type $generated@@313))))
(= (type ($generated@@308 $generated@@313 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
)) (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 (type $generated@@317)))
(= (type ($generated@@309 $generated@@316 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@319 T@T) ) (! (= (type ($generated@@310 $generated@@319)) ($generated@@76 $generated@@319 $generated@@4))
 :pattern ( ($generated@@310 $generated@@319))
))) (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (= (type ($generated@@311 $generated@@320 $generated@@321)) $generated@@135)
 :pattern ( ($generated@@311 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@138 (type $generated@@322))))
(= (type ($generated@@312 $generated@@322 $generated@@323)) ($generated@@137 $generated@@324)))
 :pattern ( ($generated@@312 $generated@@322 $generated@@323))
))))
(assert  (=> (<= 1 $generated@@278) (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@325) $generated@@64) (= (type $generated@@326) $generated@@134)) (= (type $generated@@327) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@328) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@306 $generated@@325 $generated@@328) (and (not (= 1 $generated@@278)) (and ($generated@@305 $generated@@327) ($generated@@157 $generated@@328 ($generated@@282 $generated@@325)))))) (and (let (($generated@@329 $generated@@328))
 (=> (not (= ($generated@@284 $generated@@329) ($generated@@287 0))) (and ($generated@@307 $generated@@325 $generated@@329) (let (($generated@@330 ($generated@@308 $generated@@329 ($generated@@309 ($generated@@310 $generated@@135) ($generated@@311 $generated@@325 $generated@@329)))))
($generated@@306 $generated@@325 $generated@@330))))) (= ($generated@@132 $generated@@325 ($generated@@178 $generated@@326) $generated@@328) (let (($generated@@331 $generated@@328))
(ite (= ($generated@@284 $generated@@331) ($generated@@287 0)) ($generated@@174 $generated@@135) (let (($generated@@332 ($generated@@311 $generated@@325 $generated@@331)))
(let (($generated@@333 ($generated@@308 $generated@@331 ($generated@@309 ($generated@@310 $generated@@135) $generated@@332))))
(let (($generated@@334 ($generated@@132 $generated@@325 $generated@@326 $generated@@333)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@332) $generated@@334)))))))))
 :pattern ( ($generated@@132 $generated@@325 ($generated@@178 $generated@@326) $generated@@328) ($generated@@305 $generated@@327))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= ($generated@@157 $generated@@335 ($generated@@282 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@135) ($generated@@0 ($generated@@81 $generated@@335 $generated@@337))) ($generated@@271 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@157 $generated@@335 ($generated@@282 $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@64)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= ($generated@@157 $generated@@340 ($generated@@338 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@135) ($generated@@0 ($generated@@81 $generated@@340 $generated@@342))) ($generated@@271 $generated@@342 $generated@@341))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@157 $generated@@340 ($generated@@338 $generated@@341)))
)))
(assert (forall (($generated@@343 Int) ) (! (= ($generated@@287 $generated@@343) $generated@@343)
 :pattern ( ($generated@@287 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (! (= ($generated@@280 $generated@@344) $generated@@344)
 :pattern ( ($generated@@280 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (= (type $generated@@345) ($generated@@137 $generated@@135)) (= (type $generated@@346) $generated@@135)) (= (type $generated@@347) $generated@@64)) (and ($generated@@157 $generated@@345 ($generated@@283 $generated@@347)) ($generated@@271 $generated@@346 $generated@@347))) ($generated@@157 ($generated@@149 $generated@@345 $generated@@346) ($generated@@283 $generated@@347)))
 :pattern ( ($generated@@157 ($generated@@149 $generated@@345 $generated@@346) ($generated@@283 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@349) $generated@@64) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) $generated@@135)) (= (type $generated@@352) $generated@@135)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@305 $generated@@353)) (= ($generated@@74 ($generated@@270 $generated@@351 $generated@@352) ($generated@@160 $generated@@349 $generated@@350) $generated@@353)  (and ($generated@@348 $generated@@351 $generated@@349 $generated@@353) ($generated@@348 $generated@@352 $generated@@350 $generated@@353))))
 :pattern ( ($generated@@74 ($generated@@270 $generated@@351 $generated@@352) ($generated@@160 $generated@@349 $generated@@350) $generated@@353))
)))
(assert  (=> (<= 0 $generated@@278) (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (= (type $generated@@354) $generated@@64) (= (type $generated@@355) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@356) ($generated@@137 $generated@@135))) (or ($generated@@281 $generated@@354 $generated@@355 $generated@@356) (and (not (= 0 $generated@@278)) (and ($generated@@157 $generated@@355 ($generated@@282 $generated@@354)) ($generated@@157 $generated@@356 ($generated@@283 $generated@@354)))))) (= ($generated@@279 $generated@@354 $generated@@355 $generated@@356)  (=> (= ($generated@@284 $generated@@355) ($generated@@285 $generated@@356)) (and (forall (($generated@@357 Int) ) (!  (=> true (=> (and (<= ($generated@@287 0) $generated@@357) (< $generated@@357 ($generated@@285 $generated@@356))) ($generated@@0 ($generated@@81 $generated@@355 ($generated@@286 $generated@@356 $generated@@357)))))
 :pattern ( ($generated@@286 $generated@@356 $generated@@357))
)) (forall (($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@358) $generated@@135) ($generated@@271 $generated@@358 $generated@@354)) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@148 $generated@@356 $generated@@358))
 :pattern ( ($generated@@148 $generated@@356 $generated@@358))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))))
 :pattern ( ($generated@@279 $generated@@354 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@68)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@161) (= ($generated@@159 $generated@@361) (= ($generated@@359 $generated@@361) $generated@@61)))
 :pattern ( ($generated@@159 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@138 (type $generated@@363))))
 (=> (and (= (type $generated@@363) ($generated@@137 $generated@@365)) (= (type $generated@@364) ($generated@@137 $generated@@365))) (= ($generated@@362 $generated@@363 $generated@@364)  (and (= ($generated@@285 $generated@@363) ($generated@@285 $generated@@364)) (forall (($generated@@366 Int) ) (!  (=> (and (<= 0 $generated@@366) (< $generated@@366 ($generated@@285 $generated@@363))) (= ($generated@@286 $generated@@363 $generated@@366) ($generated@@286 $generated@@364 $generated@@366)))
 :pattern ( ($generated@@286 $generated@@363 $generated@@366))
 :pattern ( ($generated@@286 $generated@@364 $generated@@366))
))))))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@161) ($generated@@159 $generated@@367)) (exists (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (and (and (= (type $generated@@368) $generated@@135) (= (type $generated@@369) $generated@@135)) (= $generated@@367 ($generated@@270 $generated@@368 $generated@@369)))
 :no-pattern (type $generated@@368)
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
)))
 :pattern ( ($generated@@159 $generated@@367))
)))
(assert (forall (($generated@@370 T@T) ) (! (= ($generated@@285 ($generated@@174 $generated@@370)) 0)
 :pattern ( ($generated@@174 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (= (type $generated@@371) ($generated@@137 $generated@@373)) (= ($generated@@285 ($generated@@149 $generated@@371 $generated@@372)) (+ 1 ($generated@@285 $generated@@371)))))
 :pattern ( ($generated@@149 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@135)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@64) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@348 ($generated@@374 $generated@@376) $generated@@377 $generated@@378) ($generated@@74 $generated@@376 $generated@@377 $generated@@378)))
 :pattern ( ($generated@@348 ($generated@@374 $generated@@376) $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@381 T@T) ) (! (= (type ($generated@@380 $generated@@381)) ($generated@@76 $generated@@381 $generated@@2))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@79 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@76 $generated@@383 $generated@@2)) (and (= (= ($generated@@379 $generated@@382) 0) (= $generated@@382 ($generated@@380 $generated@@383))) (=> (not (= ($generated@@379 $generated@@382) 0)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (< 0 ($generated ($generated@@81 $generated@@382 $generated@@384))))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (and (and (and (and (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (= ($generated@@1 ($generated@@387 $generated@@390 $generated@@391)) 19)) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= ($generated@@388 ($generated@@387 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@387 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@389 ($generated@@387 $generated@@394 $generated@@395)) $generated@@395)
 :pattern ( ($generated@@387 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@388 (type $generated@@396))))
(= (type ($generated@@385 $generated@@396)) ($generated@@76 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@396))
))) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= (type ($generated@@386 $generated@@398 $generated@@399)) ($generated@@387 $generated@@398 $generated@@399))
 :pattern ( ($generated@@386 $generated@@398 $generated@@399))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@T) ) (! (let (($generated@@402 (type $generated@@400)))
 (not ($generated@@0 ($generated@@81 ($generated@@385 ($generated@@386 $generated@@402 $generated@@401)) $generated@@400))))
 :pattern ( (let (($generated@@402 (type $generated@@400)))
($generated@@81 ($generated@@385 ($generated@@386 $generated@@402 $generated@@401)) $generated@@400)))
)))
(assert  (and (and (and (and (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (= ($generated@@1 ($generated@@405 $generated@@408 $generated@@409)) 20)) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= ($generated@@406 ($generated@@405 $generated@@410 $generated@@411)) $generated@@410)
 :pattern ( ($generated@@405 $generated@@410 $generated@@411))
))) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= ($generated@@407 ($generated@@405 $generated@@412 $generated@@413)) $generated@@413)
 :pattern ( ($generated@@405 $generated@@412 $generated@@413))
))) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@406 (type $generated@@414))))
(= (type ($generated@@403 $generated@@414)) ($generated@@76 $generated@@415 $generated@@4)))
 :pattern ( ($generated@@403 $generated@@414))
))) (forall (($generated@@416 T@T) ($generated@@417 T@T) ) (! (= (type ($generated@@404 $generated@@416 $generated@@417)) ($generated@@405 $generated@@416 $generated@@417))
 :pattern ( ($generated@@404 $generated@@416 $generated@@417))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@T) ) (! (let (($generated@@420 (type $generated@@418)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 ($generated@@404 $generated@@420 $generated@@419)) $generated@@418))))
 :pattern ( (let (($generated@@420 (type $generated@@418)))
($generated@@81 ($generated@@403 ($generated@@404 $generated@@420 $generated@@419)) $generated@@418)))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@138 (type $generated@@421))))
 (=> (and (= (type $generated@@421) ($generated@@137 $generated@@423)) (= (type $generated@@422) ($generated@@137 $generated@@423))) (= ($generated@@285 ($generated@@312 $generated@@421 $generated@@422)) (+ ($generated@@285 $generated@@421) ($generated@@285 $generated@@422)))))
 :pattern ( ($generated@@285 ($generated@@312 $generated@@421 $generated@@422)))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@79 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@76 $generated@@425 $generated@@2)) (= ($generated@@184 $generated@@424) (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@425) (and (<= 0 ($generated ($generated@@81 $generated@@424 $generated@@426))) (<= ($generated ($generated@@81 $generated@@424 $generated@@426)) ($generated@@379 $generated@@424))))
 :pattern ( ($generated@@81 $generated@@424 $generated@@426))
)))))
 :pattern ( ($generated@@184 $generated@@424))
)))
(assert  (=> (<= 0 $generated@@278) (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@429) ($generated@@137 $generated@@135))) (or ($generated@@281 $generated@@427 $generated@@428 $generated@@429) (and (not (= 0 $generated@@278)) (and ($generated@@157 $generated@@428 ($generated@@282 $generated@@427)) ($generated@@157 $generated@@429 ($generated@@283 $generated@@427)))))) true)
 :pattern ( ($generated@@279 $generated@@427 $generated@@428 $generated@@429))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 Int) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
 (=> (= (type $generated@@430) ($generated@@137 $generated@@433)) (and (=> (= $generated@@431 ($generated@@285 $generated@@430)) (= ($generated@@286 ($generated@@149 $generated@@430 $generated@@432) $generated@@431) $generated@@432)) (=> (not (= $generated@@431 ($generated@@285 $generated@@430))) (= ($generated@@286 ($generated@@149 $generated@@430 $generated@@432) $generated@@431) ($generated@@286 $generated@@430 $generated@@431))))))
 :pattern ( ($generated@@286 ($generated@@149 $generated@@430 $generated@@432) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@389 (type $generated@@434))))
(let (($generated@@436 ($generated@@388 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@387 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@386 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@385 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@389 (type $generated@@439))))
(= (type ($generated@@438 $generated@@439)) ($generated@@76 $generated@@440 $generated@@4)))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@389 (type $generated@@441))))
(let (($generated@@443 ($generated@@388 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@387 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@386 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@442) ($generated@@0 ($generated@@81 ($generated@@438 $generated@@441) $generated@@444)))
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@438 $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@407 (type $generated@@445))))
(let (($generated@@447 ($generated@@406 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@405 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@404 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@403 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@407 (type $generated@@450))))
(= (type ($generated@@449 $generated@@450)) ($generated@@76 $generated@@451 $generated@@4)))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@407 (type $generated@@452))))
(let (($generated@@454 ($generated@@406 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@405 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@404 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@453) ($generated@@0 ($generated@@81 ($generated@@449 $generated@@452) $generated@@455)))
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@449 $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@457) $generated@@64)) (= ($generated@@157 $generated@@456 ($generated@@183 $generated@@457)) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@456 $generated@@458)))) ($generated@@271 $generated@@458 $generated@@457))
 :pattern ( ($generated@@81 $generated@@456 $generated@@458))
))))
 :pattern ( ($generated@@157 $generated@@456 ($generated@@183 $generated@@457)))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
 (=> (and (= (type $generated@@459) ($generated@@137 $generated@@462)) (= (type $generated@@460) ($generated@@137 $generated@@462))) (= ($generated@@148 ($generated@@312 $generated@@459 $generated@@460) $generated@@461)  (or ($generated@@148 $generated@@459 $generated@@461) ($generated@@148 $generated@@460 $generated@@461)))))
 :pattern ( ($generated@@148 ($generated@@312 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@79 (type $generated@@464))))
 (=> (and (and (= (type $generated@@464) ($generated@@76 $generated@@466 $generated@@4)) (= (type $generated@@465) ($generated@@76 $generated@@466 $generated@@4))) ($generated@@463 $generated@@464 $generated@@465)) (and (= ($generated@@308 ($generated@@256 $generated@@464 $generated@@465) $generated@@464) $generated@@465) (= ($generated@@308 ($generated@@256 $generated@@464 $generated@@465) $generated@@465) $generated@@464))))
 :pattern ( ($generated@@256 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@389 (type $generated@@468))))
(let (($generated@@470 ($generated@@388 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@387 $generated@@470 $generated@@469)) (= (= ($generated@@467 $generated@@468) 0) (= $generated@@468 ($generated@@386 $generated@@470 $generated@@469))))))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
 (=> (= (type $generated@@471) ($generated@@137 $generated@@473)) (= ($generated@@148 $generated@@471 $generated@@472) (exists (($generated@@474 Int) ) (!  (and (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@285 $generated@@471))) (= ($generated@@286 $generated@@471 $generated@@474) $generated@@472))
 :pattern ( ($generated@@286 $generated@@471 $generated@@474))
)))))
 :pattern ( ($generated@@148 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
 (=> (and (= (type $generated@@475) ($generated@@76 $generated@@478 $generated@@4)) (= (type $generated@@476) ($generated@@76 $generated@@478 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@263 $generated@@475 $generated@@476) $generated@@477))  (and ($generated@@0 ($generated@@81 $generated@@475 $generated@@477)) ($generated@@0 ($generated@@81 $generated@@476 $generated@@477))))))
 :pattern ( ($generated@@81 ($generated@@263 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
 (=> (and (= (type $generated@@479) ($generated@@76 $generated@@482 $generated@@4)) (= (type $generated@@480) ($generated@@76 $generated@@482 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@308 $generated@@479 $generated@@480) $generated@@481))  (and ($generated@@0 ($generated@@81 $generated@@479 $generated@@481)) (not ($generated@@0 ($generated@@81 $generated@@480 $generated@@481)))))))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@282 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@135) ($generated@@0 ($generated@@81 $generated@@483 $generated@@486))) ($generated@@348 $generated@@486 $generated@@484 $generated@@485))
 :pattern ( ($generated@@81 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@282 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@338 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@135) ($generated@@0 ($generated@@81 $generated@@487 $generated@@490))) ($generated@@348 $generated@@490 $generated@@488 $generated@@489))
 :pattern ( ($generated@@81 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@338 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated ($generated@@81 ($generated@@380 $generated@@492) $generated@@491)) 0))
 :pattern ( (let (($generated@@492 (type $generated@@491)))
($generated@@81 ($generated@@380 $generated@@492) $generated@@491)))
)))
(assert  (and (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@493 $generated@@496)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@493 $generated@@496))
)) (forall (($generated@@497 T@T) ($generated@@498 T@U) ) (! (= (type ($generated@@494 $generated@@497 $generated@@498)) $generated@@497)
 :pattern ( ($generated@@494 $generated@@497 $generated@@498))
))) (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@389 (type $generated@@499))))
(let (($generated@@501 ($generated@@388 (type $generated@@499))))
(= (type ($generated@@495 $generated@@499)) ($generated@@76 $generated@@501 $generated@@500))))
 :pattern ( ($generated@@495 $generated@@499))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) ($generated@@387 $generated@@135 $generated@@135)) (= (type $generated@@503) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@493 $generated@@502) $generated@@503))  (and ($generated@@0 ($generated@@81 ($generated@@385 $generated@@502) ($generated@@168 ($generated@@494 $generated@@161 $generated@@503)))) (= ($generated@@81 ($generated@@495 $generated@@502) ($generated@@168 ($generated@@494 $generated@@161 $generated@@503))) ($generated@@169 ($generated@@494 $generated@@161 $generated@@503))))))
 :pattern ( ($generated@@81 ($generated@@493 $generated@@502) $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@407 (type $generated@@507))))
(let (($generated@@509 ($generated@@406 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507)) ($generated@@76 $generated@@509 $generated@@508))))
 :pattern ( ($generated@@505 $generated@@507))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) ($generated@@405 $generated@@135 $generated@@135)) (= (type $generated@@511) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@504 $generated@@510) $generated@@511))  (and ($generated@@0 ($generated@@81 ($generated@@403 $generated@@510) ($generated@@168 ($generated@@494 $generated@@161 $generated@@511)))) (= ($generated@@81 ($generated@@505 $generated@@510) ($generated@@168 ($generated@@494 $generated@@161 $generated@@511))) ($generated@@169 ($generated@@494 $generated@@161 $generated@@511))))))
 :pattern ( ($generated@@81 ($generated@@504 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(let (($generated@@515 ($generated@@388 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@387 $generated@@515 $generated@@514)) (= ($generated@@0 ($generated@@81 ($generated@@438 $generated@@512) $generated@@513)) (exists (($generated@@516 T@U) ) (!  (and (= (type $generated@@516) $generated@@515) (and ($generated@@0 ($generated@@81 ($generated@@385 $generated@@512) $generated@@516)) (= $generated@@513 ($generated@@81 ($generated@@495 $generated@@512) $generated@@516))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@512) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@495 $generated@@512) $generated@@516))
))))))
 :pattern ( ($generated@@81 ($generated@@438 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(let (($generated@@520 ($generated@@406 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@405 $generated@@520 $generated@@519)) (= ($generated@@0 ($generated@@81 ($generated@@449 $generated@@517) $generated@@518)) (exists (($generated@@521 T@U) ) (!  (and (= (type $generated@@521) $generated@@520) (and ($generated@@0 ($generated@@81 ($generated@@403 $generated@@517) $generated@@521)) (= $generated@@518 ($generated@@81 ($generated@@505 $generated@@517) $generated@@521))))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@517) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@505 $generated@@517) $generated@@521))
))))))
 :pattern ( ($generated@@81 ($generated@@449 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) ($generated@@387 $generated@@135 $generated@@135)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@525) $generated@@529))) (and ($generated@@348 ($generated@@81 ($generated@@495 $generated@@525) $generated@@529) $generated@@527 $generated@@528) ($generated@@348 $generated@@529 $generated@@526 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@495 $generated@@525) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@525) $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) ($generated@@405 $generated@@135 $generated@@135)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@533 ($generated@@530 $generated@@534 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@533) $generated@@537))) (and ($generated@@348 ($generated@@81 ($generated@@505 $generated@@533) $generated@@537) $generated@@535 $generated@@536) ($generated@@348 $generated@@537 $generated@@534 $generated@@536)))
 :pattern ( ($generated@@81 ($generated@@505 $generated@@533) $generated@@537))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@533) $generated@@537))
))))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@530 $generated@@534 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@138 (type $generated@@538))))
 (=> (and (and (= (type $generated@@538) ($generated@@137 $generated@@540)) (= (type $generated@@539) ($generated@@137 $generated@@540))) ($generated@@362 $generated@@538 $generated@@539)) (= $generated@@538 $generated@@539)))
 :pattern ( ($generated@@362 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@4)) (= (type $generated@@543) $generated@@544)) ($generated@@0 ($generated@@81 $generated@@541 $generated@@543))) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@541 $generated@@542) $generated@@543))))
 :pattern ( ($generated@@309 $generated@@541 $generated@@542) ($generated@@81 $generated@@541 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@548 $generated@@4)) (= (type $generated@@546) ($generated@@76 $generated@@548 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@545 $generated@@547))) ($generated@@0 ($generated@@81 ($generated@@256 $generated@@545 $generated@@546) $generated@@547))))
 :pattern ( ($generated@@256 $generated@@545 $generated@@546) ($generated@@81 $generated@@545 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@4)) (= (type $generated@@550) ($generated@@76 $generated@@552 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@550 $generated@@551))) ($generated@@0 ($generated@@81 ($generated@@256 $generated@@549 $generated@@550) $generated@@551))))
 :pattern ( ($generated@@256 $generated@@549 $generated@@550) ($generated@@81 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@554)))
 (=> (and (= (type $generated@@553) ($generated@@76 $generated@@556 $generated@@4)) (= (type $generated@@555) $generated@@556)) (= ($generated@@0 ($generated@@81 ($generated@@309 $generated@@553 $generated@@554) $generated@@555))  (or (= $generated@@555 $generated@@554) ($generated@@0 ($generated@@81 $generated@@553 $generated@@555))))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@553 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@560 $generated@@4)) (= (type $generated@@558) ($generated@@76 $generated@@560 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@558 $generated@@559))) (not ($generated@@0 ($generated@@81 ($generated@@308 $generated@@557 $generated@@558) $generated@@559)))))
 :pattern ( ($generated@@308 $generated@@557 $generated@@558) ($generated@@81 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@562 T@T) ) (! (= (type ($generated@@561 $generated@@562)) ($generated@@76 $generated@@562 $generated@@4))
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@407 (type $generated@@563))))
(let (($generated@@565 ($generated@@406 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@405 $generated@@565 $generated@@564)) (= (= $generated@@563 ($generated@@404 $generated@@565 $generated@@564)) (= ($generated@@403 $generated@@563) ($generated@@561 $generated@@565))))))
 :pattern ( ($generated@@403 $generated@@563))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@407 (type $generated@@566))))
(let (($generated@@568 ($generated@@406 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@405 $generated@@568 $generated@@567)) (= (= $generated@@566 ($generated@@404 $generated@@568 $generated@@567)) (= ($generated@@449 $generated@@566) ($generated@@561 $generated@@567))))))
 :pattern ( ($generated@@449 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@407 (type $generated@@569))))
(let (($generated@@571 ($generated@@406 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@405 $generated@@571 $generated@@570)) (= (= $generated@@569 ($generated@@404 $generated@@571 $generated@@570)) (= ($generated@@504 $generated@@569) ($generated@@561 $generated@@135))))))
 :pattern ( ($generated@@504 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@389 (type $generated@@572))))
(let (($generated@@574 ($generated@@388 (type $generated@@572))))
 (=> (= (type $generated@@572) ($generated@@387 $generated@@574 $generated@@573)) (or (= $generated@@572 ($generated@@386 $generated@@574 $generated@@573)) (exists (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (and (and (= (type $generated@@575) $generated@@135) (= (type $generated@@576) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@493 $generated@@572) ($generated@@374 ($generated@@270 $generated@@575 $generated@@576)))))
 :no-pattern (type $generated@@575)
 :no-pattern (type $generated@@576)
 :no-pattern ($generated $generated@@575)
 :no-pattern ($generated@@0 $generated@@575)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
))))))
 :pattern ( ($generated@@493 $generated@@572))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@407 (type $generated@@577))))
(let (($generated@@579 ($generated@@406 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@405 $generated@@579 $generated@@578)) (or (= $generated@@577 ($generated@@404 $generated@@579 $generated@@578)) (exists (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (and (and (= (type $generated@@580) $generated@@135) (= (type $generated@@581) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@504 $generated@@577) ($generated@@374 ($generated@@270 $generated@@580 $generated@@581)))))
 :no-pattern (type $generated@@580)
 :no-pattern (type $generated@@581)
 :no-pattern ($generated $generated@@580)
 :no-pattern ($generated@@0 $generated@@580)
 :no-pattern ($generated $generated@@581)
 :no-pattern ($generated@@0 $generated@@581)
))))))
 :pattern ( ($generated@@504 $generated@@577))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@135) ($generated@@271 $generated@@582 $generated@@46)) (and (= ($generated@@374 ($generated@@494 $generated@@2 $generated@@582)) $generated@@582) ($generated@@157 ($generated@@494 $generated@@2 $generated@@582) $generated@@46)))
 :pattern ( ($generated@@271 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@135) ($generated@@271 $generated@@583 $generated@@47)) (and (= ($generated@@374 ($generated@@494 $generated@@3 $generated@@583)) $generated@@583) ($generated@@157 ($generated@@494 $generated@@3 $generated@@583) $generated@@47)))
 :pattern ( ($generated@@271 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@135) ($generated@@271 $generated@@584 $generated@@44)) (and (= ($generated@@374 ($generated@@494 $generated@@4 $generated@@584)) $generated@@584) ($generated@@157 ($generated@@494 $generated@@4 $generated@@584) $generated@@44)))
 :pattern ( ($generated@@271 $generated@@584 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@585) 21))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@135) ($generated@@271 $generated@@586 $generated@@45)) (and (= ($generated@@374 ($generated@@494 $generated@@585 $generated@@586)) $generated@@586) ($generated@@157 ($generated@@494 $generated@@585 $generated@@586) $generated@@45)))
 :pattern ( ($generated@@271 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@79 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@76 $generated@@589 $generated@@4)) (= (type $generated@@588) ($generated@@76 $generated@@589 $generated@@4))) (and (= (+ (+ ($generated@@284 ($generated@@308 $generated@@587 $generated@@588)) ($generated@@284 ($generated@@308 $generated@@588 $generated@@587))) ($generated@@284 ($generated@@263 $generated@@587 $generated@@588))) ($generated@@284 ($generated@@256 $generated@@587 $generated@@588))) (= ($generated@@284 ($generated@@308 $generated@@587 $generated@@588)) (- ($generated@@284 $generated@@587) ($generated@@284 ($generated@@263 $generated@@587 $generated@@588)))))))
 :pattern ( ($generated@@284 ($generated@@308 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@64) (= ($generated@@271 ($generated@@374 $generated@@590) $generated@@591) ($generated@@157 $generated@@590 $generated@@591)))
 :pattern ( ($generated@@271 ($generated@@374 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@79 (type $generated@@592))))
 (=> (= (type $generated@@592) ($generated@@76 $generated@@593 $generated@@4)) (<= 0 ($generated@@284 $generated@@592))))
 :pattern ( ($generated@@284 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@79 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@76 $generated@@595 $generated@@2)) (<= 0 ($generated@@379 $generated@@594))))
 :pattern ( ($generated@@379 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@138 (type $generated@@596))))
 (=> (= (type $generated@@596) ($generated@@137 $generated@@597)) (<= 0 ($generated@@285 $generated@@596))))
 :pattern ( ($generated@@285 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@389 (type $generated@@598))))
(let (($generated@@600 ($generated@@388 (type $generated@@598))))
 (=> (= (type $generated@@598) ($generated@@387 $generated@@600 $generated@@599)) (<= 0 ($generated@@467 $generated@@598)))))
 :pattern ( ($generated@@467 $generated@@598))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@64)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@64) (= (type $generated@@604) $generated@@64)) (= ($generated@@601 ($generated@@522 $generated@@603 $generated@@604)) $generated@@603))
 :pattern ( ($generated@@522 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@64)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@64) (= (type $generated@@608) $generated@@64)) (= ($generated@@605 ($generated@@522 $generated@@607 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@522 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) $generated@@64)) (= ($generated@@72 ($generated@@522 $generated@@609 $generated@@610)) $generated@@58))
 :pattern ( ($generated@@522 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@64)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@64) (= (type $generated@@614) $generated@@64)) (= ($generated@@611 ($generated@@530 $generated@@613 $generated@@614)) $generated@@613))
 :pattern ( ($generated@@530 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@64)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@64) (= (type $generated@@618) $generated@@64)) (= ($generated@@615 ($generated@@530 $generated@@617 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@530 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@64) (= (type $generated@@620) $generated@@64)) (= ($generated@@72 ($generated@@530 $generated@@619 $generated@@620)) $generated@@59))
 :pattern ( ($generated@@530 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@135) (= (type $generated@@622) $generated@@135)) (= ($generated@@359 ($generated@@270 $generated@@621 $generated@@622)) $generated@@61))
 :pattern ( ($generated@@270 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@64)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (= ($generated@@623 ($generated@@160 $generated@@625 $generated@@626)) $generated@@625))
 :pattern ( ($generated@@160 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@64)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@64) (= (type $generated@@630) $generated@@64)) (= ($generated@@627 ($generated@@160 $generated@@629 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@160 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@135) (= (type $generated@@632) $generated@@135)) (= ($generated@@168 ($generated@@270 $generated@@631 $generated@@632)) $generated@@631))
 :pattern ( ($generated@@270 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@135) (= (type $generated@@634) $generated@@135)) (= ($generated@@169 ($generated@@270 $generated@@633 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@270 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@635) ($generated@@137 $generated@@135)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@635 ($generated@@283 $generated@@636) $generated@@637) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@285 $generated@@635))) ($generated@@348 ($generated@@286 $generated@@635 $generated@@638) $generated@@636 $generated@@637))
 :pattern ( ($generated@@286 $generated@@635 $generated@@638))
))))
 :pattern ( ($generated@@74 $generated@@635 ($generated@@283 $generated@@636) $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
 (=> (= (type $generated@@639) ($generated@@76 $generated@@641 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@639 $generated@@640) $generated@@640))))
 :pattern ( ($generated@@309 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@643)))
 (=> (and (= (type $generated@@642) ($generated@@76 $generated@@644 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@642 $generated@@643))) (= ($generated@@284 ($generated@@309 $generated@@642 $generated@@643)) ($generated@@284 $generated@@642))))
 :pattern ( ($generated@@284 ($generated@@309 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@646 Int) ) (! (= ($generated@@645 ($generated@@75 $generated@@646)) $generated@@646)
 :pattern ( ($generated@@75 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@64)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@64) (= ($generated@@647 ($generated@@282 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@282 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@64) (= ($generated@@72 ($generated@@282 $generated@@650)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@64)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@64) (= ($generated@@651 ($generated@@338 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@338 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@64) (= ($generated@@72 ($generated@@338 $generated@@654)) $generated@@55))
 :pattern ( ($generated@@338 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@64)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@64) (= ($generated@@655 ($generated@@183 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@183 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@64) (= ($generated@@72 ($generated@@183 $generated@@658)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@64)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@64) (= ($generated@@659 ($generated@@283 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@283 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@64) (= ($generated@@72 ($generated@@283 $generated@@662)) $generated@@57))
 :pattern ( ($generated@@283 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (! (let (($generated@@664 (type $generated@@663)))
(= ($generated@@494 $generated@@664 ($generated@@374 $generated@@663)) $generated@@663))
 :pattern ( ($generated@@374 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@387 $generated@@135 $generated@@135)) (= (type $generated@@666) $generated@@64)) (= (type $generated@@667) $generated@@64)) (= ($generated@@157 $generated@@665 ($generated@@522 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@665) $generated@@668))) (and ($generated@@271 ($generated@@81 ($generated@@495 $generated@@665) $generated@@668) $generated@@667) ($generated@@271 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@81 ($generated@@495 $generated@@665) $generated@@668))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@157 $generated@@665 ($generated@@522 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@669) ($generated@@405 $generated@@135 $generated@@135)) (= (type $generated@@670) $generated@@64)) (= (type $generated@@671) $generated@@64)) (= ($generated@@157 $generated@@669 ($generated@@530 $generated@@670 $generated@@671)) (forall (($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@669) $generated@@672))) (and ($generated@@271 ($generated@@81 ($generated@@505 $generated@@669) $generated@@672) $generated@@671) ($generated@@271 $generated@@672 $generated@@670)))
 :pattern ( ($generated@@81 ($generated@@505 $generated@@669) $generated@@672))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@669) $generated@@672))
))))
 :pattern ( ($generated@@157 $generated@@669 ($generated@@530 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@135) (= (type $generated@@676) $generated@@135)) (< ($generated@@673 $generated@@675) ($generated@@674 ($generated@@270 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@270 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@135) (= (type $generated@@678) $generated@@135)) (< ($generated@@673 $generated@@678) ($generated@@674 ($generated@@270 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@270 $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@79 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@76 $generated@@681 $generated@@4)) (= (type $generated@@680) ($generated@@76 $generated@@681 $generated@@4))) (= ($generated@@256 $generated@@679 ($generated@@256 $generated@@679 $generated@@680)) ($generated@@256 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@256 $generated@@679 ($generated@@256 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@79 (type $generated@@682))))
 (=> (and (= (type $generated@@682) ($generated@@76 $generated@@684 $generated@@4)) (= (type $generated@@683) ($generated@@76 $generated@@684 $generated@@4))) (= ($generated@@263 $generated@@682 ($generated@@263 $generated@@682 $generated@@683)) ($generated@@263 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@263 $generated@@682 ($generated@@263 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@64) (= (type $generated@@686) ($generated@@76 $generated@@135 $generated@@4))) ($generated@@307 $generated@@685 $generated@@686)) ($generated@@0 ($generated@@81 $generated@@686 ($generated@@311 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@311 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@135) (= (type $generated@@688) $generated@@64)) (= (type $generated@@689) $generated@@64)) ($generated@@271 $generated@@687 ($generated@@522 $generated@@688 $generated@@689))) (and (= ($generated@@374 ($generated@@494 ($generated@@387 $generated@@135 $generated@@135) $generated@@687)) $generated@@687) ($generated@@157 ($generated@@494 ($generated@@387 $generated@@135 $generated@@135) $generated@@687) ($generated@@522 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@271 $generated@@687 ($generated@@522 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@135) (= (type $generated@@691) $generated@@64)) (= (type $generated@@692) $generated@@64)) ($generated@@271 $generated@@690 ($generated@@530 $generated@@691 $generated@@692))) (and (= ($generated@@374 ($generated@@494 ($generated@@405 $generated@@135 $generated@@135) $generated@@690)) $generated@@690) ($generated@@157 ($generated@@494 ($generated@@405 $generated@@135 $generated@@135) $generated@@690) ($generated@@530 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@271 $generated@@690 ($generated@@530 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@64) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) $generated@@135)) ($generated@@271 $generated@@695 ($generated@@160 $generated@@693 $generated@@694))) (and (= ($generated@@374 ($generated@@494 $generated@@161 $generated@@695)) $generated@@695) ($generated@@157 ($generated@@494 $generated@@161 $generated@@695) ($generated@@160 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@271 $generated@@695 ($generated@@160 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ) (! (let (($generated@@697 (type $generated@@696)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 $generated@@697) $generated@@696))))
 :pattern ( (let (($generated@@697 (type $generated@@696)))
($generated@@81 ($generated@@310 $generated@@697) $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ) (! (let (($generated@@699 (type $generated@@698)))
 (not ($generated@@0 ($generated@@81 ($generated@@561 $generated@@699) $generated@@698))))
 :pattern ( (let (($generated@@699 (type $generated@@698)))
($generated@@81 ($generated@@561 $generated@@699) $generated@@698)))
)))
(assert (forall (($generated@@701 T@U) ) (! (= (type ($generated@@700 $generated@@701)) $generated@@69)
 :pattern ( ($generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@64) (= (type $generated@@703) $generated@@64)) (and (= ($generated@@72 ($generated@@160 $generated@@702 $generated@@703)) $generated@@62) (= ($generated@@700 ($generated@@160 $generated@@702 $generated@@703)) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@702 $generated@@703))
)))
(assert  (and (forall (($generated@@706 T@U) ) (! (let (($generated@@707 ($generated@@138 (type $generated@@706))))
(= (type ($generated@@704 $generated@@706)) ($generated@@137 $generated@@707)))
 :pattern ( ($generated@@704 $generated@@706))
)) (forall (($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@138 (type $generated@@708))))
(= (type ($generated@@705 $generated@@708)) $generated@@709))
 :pattern ( ($generated@@705 $generated@@708))
))))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (! (let (($generated@@712 (type $generated@@711)))
 (=> (= (type $generated@@710) ($generated@@137 $generated@@712)) (and (= ($generated@@704 ($generated@@149 $generated@@710 $generated@@711)) $generated@@710) (= ($generated@@705 ($generated@@149 $generated@@710 $generated@@711)) $generated@@711))))
 :pattern ( ($generated@@149 $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@161) (= ($generated@@673 ($generated@@374 $generated@@713)) ($generated@@674 $generated@@713)))
 :pattern ( ($generated@@673 ($generated@@374 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@389 (type $generated@@714))))
(let (($generated@@716 ($generated@@388 (type $generated@@714))))
 (=> (= (type $generated@@714) ($generated@@387 $generated@@716 $generated@@715)) (= ($generated@@284 ($generated@@385 $generated@@714)) ($generated@@467 $generated@@714)))))
 :pattern ( ($generated@@284 ($generated@@385 $generated@@714)))
)))
(assert (forall (($generated@@717 T@U) ) (! (let (($generated@@718 ($generated@@389 (type $generated@@717))))
(let (($generated@@719 ($generated@@388 (type $generated@@717))))
 (=> (= (type $generated@@717) ($generated@@387 $generated@@719 $generated@@718)) (= ($generated@@284 ($generated@@493 $generated@@717)) ($generated@@467 $generated@@717)))))
 :pattern ( ($generated@@284 ($generated@@493 $generated@@717)))
)))
(assert (forall (($generated@@720 T@U) ) (! (let (($generated@@721 ($generated@@389 (type $generated@@720))))
(let (($generated@@722 ($generated@@388 (type $generated@@720))))
 (=> (= (type $generated@@720) ($generated@@387 $generated@@722 $generated@@721)) (<= ($generated@@284 ($generated@@438 $generated@@720)) ($generated@@467 $generated@@720)))))
 :pattern ( ($generated@@284 ($generated@@438 $generated@@720)))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@723) $generated@@135) ($generated@@271 $generated@@723 ($generated@@75 0))) (and (= ($generated@@374 ($generated@@494 $generated@@2 $generated@@723)) $generated@@723) ($generated@@157 ($generated@@494 ($generated@@76 $generated@@135 $generated@@4) $generated@@723) ($generated@@75 0))))
 :pattern ( ($generated@@271 $generated@@723 ($generated@@75 0)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@135) (= (type $generated@@725) $generated@@64)) ($generated@@271 $generated@@724 ($generated@@282 $generated@@725))) (and (= ($generated@@374 ($generated@@494 ($generated@@76 $generated@@135 $generated@@4) $generated@@724)) $generated@@724) ($generated@@157 ($generated@@494 ($generated@@76 $generated@@135 $generated@@4) $generated@@724) ($generated@@282 $generated@@725))))
 :pattern ( ($generated@@271 $generated@@724 ($generated@@282 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@135) (= (type $generated@@727) $generated@@64)) ($generated@@271 $generated@@726 ($generated@@338 $generated@@727))) (and (= ($generated@@374 ($generated@@494 ($generated@@76 $generated@@135 $generated@@4) $generated@@726)) $generated@@726) ($generated@@157 ($generated@@494 ($generated@@76 $generated@@135 $generated@@4) $generated@@726) ($generated@@338 $generated@@727))))
 :pattern ( ($generated@@271 $generated@@726 ($generated@@338 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@135) (= (type $generated@@729) $generated@@64)) ($generated@@271 $generated@@728 ($generated@@183 $generated@@729))) (and (= ($generated@@374 ($generated@@494 ($generated@@76 $generated@@135 $generated@@2) $generated@@728)) $generated@@728) ($generated@@157 ($generated@@494 ($generated@@76 $generated@@135 $generated@@2) $generated@@728) ($generated@@183 $generated@@729))))
 :pattern ( ($generated@@271 $generated@@728 ($generated@@183 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) $generated@@135) (= (type $generated@@731) $generated@@64)) ($generated@@271 $generated@@730 ($generated@@283 $generated@@731))) (and (= ($generated@@374 ($generated@@494 ($generated@@137 $generated@@135) $generated@@730)) $generated@@730) ($generated@@157 ($generated@@494 ($generated@@137 $generated@@135) $generated@@730) ($generated@@283 $generated@@731))))
 :pattern ( ($generated@@271 $generated@@730 ($generated@@283 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ) (! (let (($generated@@733 ($generated@@79 (type $generated@@732))))
 (=> (= (type $generated@@732) ($generated@@76 $generated@@733 $generated@@4)) (and (= (= ($generated@@284 $generated@@732) 0) (= $generated@@732 ($generated@@310 $generated@@733))) (=> (not (= ($generated@@284 $generated@@732) 0)) (exists (($generated@@734 T@U) ) (!  (and (= (type $generated@@734) $generated@@733) ($generated@@0 ($generated@@81 $generated@@732 $generated@@734)))
 :no-pattern (type $generated@@734)
 :no-pattern ($generated $generated@@734)
 :no-pattern ($generated@@0 $generated@@734)
))))))
 :pattern ( ($generated@@284 $generated@@732))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (! (let (($generated@@738 ($generated@@79 (type $generated@@736))))
 (=> (and (= (type $generated@@736) ($generated@@76 $generated@@738 $generated@@4)) (= (type $generated@@737) ($generated@@76 $generated@@738 $generated@@4))) (= ($generated@@735 $generated@@736 $generated@@737) (forall (($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@739) $generated@@738) ($generated@@0 ($generated@@81 $generated@@736 $generated@@739))) ($generated@@0 ($generated@@81 $generated@@737 $generated@@739)))
 :pattern ( ($generated@@81 $generated@@736 $generated@@739))
 :pattern ( ($generated@@81 $generated@@737 $generated@@739))
)))))
 :pattern ( ($generated@@735 $generated@@736 $generated@@737))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (= (type $generated@@740) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@741) $generated@@64)) (= (type $generated@@742) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@740 ($generated@@183 $generated@@741) $generated@@742) (forall (($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@743) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@740 $generated@@743)))) ($generated@@348 $generated@@743 $generated@@741 $generated@@742))
 :pattern ( ($generated@@81 $generated@@740 $generated@@743))
))))
 :pattern ( ($generated@@74 $generated@@740 ($generated@@183 $generated@@741) $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (! (let (($generated@@746 (type $generated@@745)))
 (=> (and (= (type $generated@@744) ($generated@@76 $generated@@746 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@744 $generated@@745)))) (= ($generated@@284 ($generated@@309 $generated@@744 $generated@@745)) (+ ($generated@@284 $generated@@744) 1))))
 :pattern ( ($generated@@284 ($generated@@309 $generated@@744 $generated@@745)))
)))
(assert  (=> (<= 1 $generated@@278) (forall (($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@747) $generated@@64) (= (type $generated@@748) $generated@@134)) (= (type $generated@@749) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@750) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@306 $generated@@747 ($generated@@280 $generated@@750)) (and (not (= 1 $generated@@278)) (and ($generated@@305 $generated@@749) ($generated@@157 $generated@@750 ($generated@@282 $generated@@747)))))) (and (let (($generated@@751 ($generated@@280 $generated@@750)))
 (=> (not (= ($generated@@284 $generated@@751) ($generated@@287 0))) (and ($generated@@307 $generated@@747 $generated@@751) (let (($generated@@752 ($generated@@308 $generated@@751 ($generated@@309 ($generated@@310 $generated@@135) ($generated@@311 $generated@@747 $generated@@751)))))
($generated@@306 $generated@@747 $generated@@752))))) (= ($generated@@132 $generated@@747 ($generated@@178 $generated@@748) ($generated@@280 $generated@@750)) (let (($generated@@753 ($generated@@280 $generated@@750)))
(ite (= ($generated@@284 $generated@@753) ($generated@@287 0)) ($generated@@174 $generated@@135) (let (($generated@@754 ($generated@@311 $generated@@747 $generated@@753)))
(let (($generated@@755 ($generated@@308 $generated@@753 ($generated@@309 ($generated@@310 $generated@@135) $generated@@754))))
(let (($generated@@756 ($generated@@132 $generated@@747 ($generated@@178 $generated@@748) $generated@@755)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@754) $generated@@756)))))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@747 ($generated@@178 $generated@@748) ($generated@@280 $generated@@750)) ($generated@@305 $generated@@749))
))))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (! (let (($generated@@759 ($generated@@79 (type $generated@@757))))
 (=> (and (= (type $generated@@757) ($generated@@76 $generated@@759 $generated@@4)) (= (type $generated@@758) ($generated@@76 $generated@@759 $generated@@4))) (= ($generated@@463 $generated@@757 $generated@@758) (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@759) (or (not ($generated@@0 ($generated@@81 $generated@@757 $generated@@760))) (not ($generated@@0 ($generated@@81 $generated@@758 $generated@@760)))))
 :pattern ( ($generated@@81 $generated@@757 $generated@@760))
 :pattern ( ($generated@@81 $generated@@758 $generated@@760))
)))))
 :pattern ( ($generated@@463 $generated@@757 $generated@@758))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) $generated@@161) (= (type $generated@@762) $generated@@64)) (= (type $generated@@763) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@305 $generated@@763) (and ($generated@@159 $generated@@761) (exists (($generated@@764 T@U) ) (!  (and (= (type $generated@@764) $generated@@64) ($generated@@74 $generated@@761 ($generated@@160 $generated@@762 $generated@@764) $generated@@763))
 :pattern ( ($generated@@74 $generated@@761 ($generated@@160 $generated@@762 $generated@@764) $generated@@763))
))))) ($generated@@348 ($generated@@168 $generated@@761) $generated@@762 $generated@@763))
 :pattern ( ($generated@@348 ($generated@@168 $generated@@761) $generated@@762 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ) (!  (=> (and (and (and (= (type $generated@@765) $generated@@161) (= (type $generated@@766) $generated@@64)) (= (type $generated@@767) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@305 $generated@@767) (and ($generated@@159 $generated@@765) (exists (($generated@@768 T@U) ) (!  (and (= (type $generated@@768) $generated@@64) ($generated@@74 $generated@@765 ($generated@@160 $generated@@768 $generated@@766) $generated@@767))
 :pattern ( ($generated@@74 $generated@@765 ($generated@@160 $generated@@768 $generated@@766) $generated@@767))
))))) ($generated@@348 ($generated@@169 $generated@@765) $generated@@766 $generated@@767))
 :pattern ( ($generated@@348 ($generated@@169 $generated@@765) $generated@@766 $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 Int) ) (! (let (($generated@@772 ($generated@@138 (type $generated@@769))))
 (=> (and (= (type $generated@@769) ($generated@@137 $generated@@772)) (= (type $generated@@770) ($generated@@137 $generated@@772))) (and (=> (< $generated@@771 ($generated@@285 $generated@@769)) (= ($generated@@286 ($generated@@312 $generated@@769 $generated@@770) $generated@@771) ($generated@@286 $generated@@769 $generated@@771))) (=> (<= ($generated@@285 $generated@@769) $generated@@771) (= ($generated@@286 ($generated@@312 $generated@@769 $generated@@770) $generated@@771) ($generated@@286 $generated@@770 (- $generated@@771 ($generated@@285 $generated@@769))))))))
 :pattern ( ($generated@@286 ($generated@@312 $generated@@769 $generated@@770) $generated@@771))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (= (type $generated@@773) $generated@@135) (= (type $generated@@774) $generated@@135)) (= ($generated@@270 ($generated@@280 $generated@@773) ($generated@@280 $generated@@774)) ($generated@@280 ($generated@@270 $generated@@773 $generated@@774))))
 :pattern ( ($generated@@270 ($generated@@280 $generated@@773) ($generated@@280 $generated@@774)))
)))
(assert (forall (($generated@@775 Int) ) (! (= ($generated@@374 ($generated@@8 ($generated@@287 $generated@@775))) ($generated@@280 ($generated@@374 ($generated@@8 $generated@@775))))
 :pattern ( ($generated@@374 ($generated@@8 ($generated@@287 $generated@@775))))
)))
(assert (forall (($generated@@776 T@U) ) (! (= ($generated@@374 ($generated@@280 $generated@@776)) ($generated@@280 ($generated@@374 $generated@@776)))
 :pattern ( ($generated@@374 ($generated@@280 $generated@@776)))
)))
(assert  (=> (<= 1 $generated@@278) (forall (($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (and (= (type $generated@@777) $generated@@64) (= (type $generated@@778) $generated@@134)) (= (type $generated@@779) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@306 $generated@@777 $generated@@779) (and (not (= 1 $generated@@278)) ($generated@@157 $generated@@779 ($generated@@282 $generated@@777))))) (and ($generated@@279 $generated@@777 $generated@@779 ($generated@@132 $generated@@777 $generated@@778 $generated@@779)) ($generated@@157 ($generated@@132 $generated@@777 $generated@@778 $generated@@779) ($generated@@283 $generated@@777))))
 :pattern ( ($generated@@132 $generated@@777 $generated@@778 $generated@@779))
))))
(assert (forall (($generated@@780 T@U) ) (! (let (($generated@@781 ($generated@@138 (type $generated@@780))))
 (=> (and (= (type $generated@@780) ($generated@@137 $generated@@781)) (= ($generated@@285 $generated@@780) 0)) (= $generated@@780 ($generated@@174 $generated@@781))))
 :pattern ( ($generated@@285 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (! (let (($generated@@785 (type $generated@@783)))
 (=> (and (and (= (type $generated@@782) ($generated@@76 $generated@@785 $generated@@2)) (= (type $generated@@784) $generated@@2)) (<= 0 ($generated $generated@@784))) (= ($generated@@379 ($generated@@82 $generated@@782 $generated@@783 $generated@@784)) (+ (- ($generated@@379 $generated@@782) ($generated ($generated@@81 $generated@@782 $generated@@783))) ($generated $generated@@784)))))
 :pattern ( ($generated@@379 ($generated@@82 $generated@@782 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ($generated@@788 T@U) ) (! (let (($generated@@789 (type $generated@@788)))
 (=> (and (= (type $generated@@786) ($generated@@76 $generated@@789 $generated@@4)) (= (type $generated@@787) ($generated@@76 $generated@@789 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@256 $generated@@786 $generated@@787) $generated@@788))  (or ($generated@@0 ($generated@@81 $generated@@786 $generated@@788)) ($generated@@0 ($generated@@81 $generated@@787 $generated@@788))))))
 :pattern ( ($generated@@81 ($generated@@256 $generated@@786 $generated@@787) $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@791) $generated@@2)) ($generated@@74 $generated@@791 $generated@@46 $generated@@790))
 :pattern ( ($generated@@74 $generated@@791 $generated@@46 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@793) $generated@@3)) ($generated@@74 $generated@@793 $generated@@47 $generated@@792))
 :pattern ( ($generated@@74 $generated@@793 $generated@@47 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@795) $generated@@4)) ($generated@@74 $generated@@795 $generated@@44 $generated@@794))
 :pattern ( ($generated@@74 $generated@@795 $generated@@44 $generated@@794))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (= (type $generated@@796) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@797) $generated@@585)) ($generated@@74 $generated@@797 $generated@@45 $generated@@796))
 :pattern ( ($generated@@74 $generated@@797 $generated@@45 $generated@@796))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ) (!  (=> (and (= (type $generated@@798) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@799) $generated@@135)) ($generated@@74 $generated@@799 $generated@@48 $generated@@798))
 :pattern ( ($generated@@74 $generated@@799 $generated@@48 $generated@@798))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (= (type $generated@@800) ($generated@@137 $generated@@135)) (= (type $generated@@801) $generated@@64)) (= ($generated@@157 $generated@@800 ($generated@@283 $generated@@801)) (forall (($generated@@802 Int) ) (!  (=> (and (<= 0 $generated@@802) (< $generated@@802 ($generated@@285 $generated@@800))) ($generated@@271 ($generated@@286 $generated@@800 $generated@@802) $generated@@801))
 :pattern ( ($generated@@286 $generated@@800 $generated@@802))
))))
 :pattern ( ($generated@@157 $generated@@800 ($generated@@283 $generated@@801)))
)))
(assert (forall (($generated@@804 T@U) ($generated@@805 Int) ) (!  (=> (= (type $generated@@804) ($generated@@137 $generated@@135)) (=> (and (<= 0 $generated@@805) (< $generated@@805 ($generated@@285 $generated@@804))) (< ($generated@@674 ($generated@@494 $generated@@161 ($generated@@286 $generated@@804 $generated@@805))) ($generated@@803 $generated@@804))))
 :pattern ( ($generated@@674 ($generated@@494 $generated@@161 ($generated@@286 $generated@@804 $generated@@805))))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 T@U) ($generated@@808 T@U) ) (!  (=> (and (and (and (= (type $generated@@806) ($generated@@387 $generated@@135 $generated@@135)) (= (type $generated@@807) $generated@@64)) (= (type $generated@@808) $generated@@64)) ($generated@@157 $generated@@806 ($generated@@522 $generated@@807 $generated@@808))) (and (and ($generated@@157 ($generated@@385 $generated@@806) ($generated@@282 $generated@@807)) ($generated@@157 ($generated@@438 $generated@@806) ($generated@@282 $generated@@808))) ($generated@@157 ($generated@@493 $generated@@806) ($generated@@282 ($generated@@160 $generated@@807 $generated@@808)))))
 :pattern ( ($generated@@157 $generated@@806 ($generated@@522 $generated@@807 $generated@@808)))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ) (!  (=> (and (and (and (= (type $generated@@809) ($generated@@405 $generated@@135 $generated@@135)) (= (type $generated@@810) $generated@@64)) (= (type $generated@@811) $generated@@64)) ($generated@@157 $generated@@809 ($generated@@530 $generated@@810 $generated@@811))) (and (and ($generated@@157 ($generated@@403 $generated@@809) ($generated@@338 $generated@@810)) ($generated@@157 ($generated@@449 $generated@@809) ($generated@@338 $generated@@811))) ($generated@@157 ($generated@@504 $generated@@809) ($generated@@338 ($generated@@160 $generated@@810 $generated@@811)))))
 :pattern ( ($generated@@157 $generated@@809 ($generated@@530 $generated@@810 $generated@@811)))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@2) ($generated@@157 $generated@@812 $generated@@46))
 :pattern ( ($generated@@157 $generated@@812 $generated@@46))
)))
(assert (forall (($generated@@813 T@U) ) (!  (=> (= (type $generated@@813) $generated@@3) ($generated@@157 $generated@@813 $generated@@47))
 :pattern ( ($generated@@157 $generated@@813 $generated@@47))
)))
(assert (forall (($generated@@814 T@U) ) (!  (=> (= (type $generated@@814) $generated@@4) ($generated@@157 $generated@@814 $generated@@44))
 :pattern ( ($generated@@157 $generated@@814 $generated@@44))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (= (type $generated@@815) $generated@@585) ($generated@@157 $generated@@815 $generated@@45))
 :pattern ( ($generated@@157 $generated@@815 $generated@@45))
)))
(assert (forall (($generated@@816 T@U) ) (!  (=> (= (type $generated@@816) $generated@@135) ($generated@@157 $generated@@816 $generated@@48))
 :pattern ( ($generated@@157 $generated@@816 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 () T@U)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () T@U)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@817) $generated@@64) (= (type $generated@@818) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@819) ($generated@@137 $generated@@135))) (= (type $generated@@820) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@821) $generated@@135)) (= (type $generated@@822) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@823) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@824) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@825) ($generated@@137 $generated@@135))) (= (type $generated@@826) ($generated@@137 $generated@@135))) (= (type $generated@@827) $generated@@135)) (= (type $generated@@828) ($generated@@190 $generated@@77 $generated@@4))) (= (type $generated@@829) $generated@@77)) (= (type $generated@@830) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@831) ($generated@@190 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@833  (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@281 $generated@@817 $generated@@818 $generated@@819) (or ($generated@@279 $generated@@817 $generated@@818 $generated@@819) (=> (= ($generated@@284 $generated@@818) ($generated@@285 $generated@@819)) (forall (($generated@@834 Int) ) (!  (=> true (=> (and (<= ($generated@@287 0) $generated@@834) (< $generated@@834 ($generated@@285 $generated@@819))) ($generated@@0 ($generated@@81 $generated@@818 ($generated@@286 $generated@@819 $generated@@834)))))
 :pattern ( ($generated@@286 $generated@@819 $generated@@834))
)))))) (=> (=> ($generated@@281 $generated@@817 $generated@@818 $generated@@819) (or ($generated@@279 $generated@@817 $generated@@818 $generated@@819) (=> (= ($generated@@284 $generated@@818) ($generated@@285 $generated@@819)) (forall (($generated@@835 Int) ) (!  (=> true (=> (and (<= ($generated@@287 0) $generated@@835) (< $generated@@835 ($generated@@285 $generated@@819))) ($generated@@0 ($generated@@81 $generated@@818 ($generated@@286 $generated@@819 $generated@@835)))))
 :pattern ( ($generated@@286 $generated@@819 $generated@@835))
))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@281 $generated@@817 $generated@@818 $generated@@819) (or ($generated@@279 $generated@@817 $generated@@818 $generated@@819) (=> (= ($generated@@284 $generated@@818) ($generated@@285 $generated@@819)) (forall (($generated@@836 T@U) ) (!  (=> (and (and (= (type $generated@@836) $generated@@135) ($generated@@271 $generated@@836 $generated@@817)) ($generated@@0 ($generated@@81 $generated@@818 $generated@@836))) ($generated@@148 $generated@@819 $generated@@836))
 :pattern ( ($generated@@148 $generated@@819 $generated@@836))
 :pattern ( ($generated@@81 $generated@@818 $generated@@836))
))))))))))
(let (($generated@@837  (=> (and (= ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@818) $generated@@819) (= (ControlFlow 0 5) 3)) $generated@@833)))
(let (($generated@@838  (and (=> (= (ControlFlow 0 7) (- 0 10)) (exists (($generated@@839 T@U) ) (!  (and (= (type $generated@@839) $generated@@135) (and ($generated@@271 $generated@@839 $generated@@817) ($generated@@0 ($generated@@81 $generated@@820 $generated@@839))))
 :no-pattern (type $generated@@839)
 :no-pattern ($generated $generated@@839)
 :no-pattern ($generated@@0 $generated@@839)
))) (=> (exists (($generated@@840 T@U) ) (!  (and (= (type $generated@@840) $generated@@135) (and ($generated@@271 $generated@@840 $generated@@817) ($generated@@0 ($generated@@81 $generated@@820 $generated@@840))))
 :no-pattern (type $generated@@840)
 :no-pattern ($generated $generated@@840)
 :no-pattern ($generated@@0 $generated@@840)
)) (=> (and (and ($generated@@271 $generated@@821 $generated@@817) ($generated@@348 $generated@@821 $generated@@817 $generated@@822)) ($generated@@0 ($generated@@81 $generated@@820 $generated@@821))) (=> (and (and (and (and ($generated@@157 $generated@@823 ($generated@@282 $generated@@817)) ($generated@@74 $generated@@823 ($generated@@282 $generated@@817) $generated@@822)) (= $generated@@824 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@821)))) (and ($generated@@157 $generated@@824 ($generated@@282 $generated@@817)) (= $generated@@823 $generated@@824))) (and (and ($generated@@157 $generated@@825 ($generated@@283 $generated@@817)) ($generated@@74 $generated@@825 ($generated@@283 $generated@@817) $generated@@822)) ($generated@@74 $generated@@823 ($generated@@282 $generated@@817) $generated@@822))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and ($generated@@735 $generated@@823 $generated@@818) (not ($generated@@735 $generated@@818 $generated@@823)))) (=> (and ($generated@@735 $generated@@823 $generated@@818) (not ($generated@@735 $generated@@818 $generated@@823))) (=> ($generated@@306 $generated@@817 $generated@@823) (=> (and (and (and (= $generated@@826 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@823)) ($generated@@306 $generated@@817 $generated@@823)) (and ($generated@@157 $generated@@826 ($generated@@283 $generated@@817)) (= $generated@@825 $generated@@826))) (and (and ($generated@@271 $generated@@827 $generated@@817) ($generated@@348 $generated@@827 $generated@@817 $generated@@822)) (and ($generated@@0 ($generated@@81 $generated@@820 $generated@@827)) (let (($generated@@841 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@827))))
($generated@@306 $generated@@817 $generated@@841))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@362 (let (($generated@@842 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@821))))
(let (($generated@@843 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@842)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@821) $generated@@843))) (let (($generated@@844 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@827))))
(let (($generated@@845 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@844)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@827) $generated@@845))))) (=> ($generated@@362 (let (($generated@@846 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@821))))
(let (($generated@@847 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@846)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@821) $generated@@847))) (let (($generated@@848 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@827))))
(let (($generated@@849 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@848)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@827) $generated@@849)))) (=> ($generated@@307 $generated@@817 $generated@@820) (=> (and (and (= ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@818) (let (($generated@@850 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@821))))
(let (($generated@@851 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@850)))
($generated@@312 ($generated@@149 ($generated@@174 $generated@@135) $generated@@821) $generated@@851)))) (let (($generated@@852 ($generated@@308 $generated@@820 ($generated@@309 ($generated@@310 $generated@@135) $generated@@821))))
($generated@@306 $generated@@817 $generated@@852))) (and ($generated@@157 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@818) ($generated@@283 $generated@@817)) (= (ControlFlow 0 7) 5))) $generated@@837))))))))))))))
(let (($generated@@853  (=> (and (not (and ($generated@@271 $generated@@821 $generated@@817) ($generated@@348 $generated@@821 $generated@@817 $generated@@822))) (= (ControlFlow 0 12) 7)) $generated@@838)))
(let (($generated@@854  (=> (and (and ($generated@@271 $generated@@821 $generated@@817) ($generated@@348 $generated@@821 $generated@@817 $generated@@822)) (= (ControlFlow 0 11) 7)) $generated@@838)))
(let (($generated@@855  (=> (not (= ($generated@@284 $generated@@820) ($generated@@287 0))) (and (=> (= (ControlFlow 0 13) 11) $generated@@854) (=> (= (ControlFlow 0 13) 12) $generated@@853)))))
(let (($generated@@856  (=> (and (and (= ($generated@@284 $generated@@820) ($generated@@287 0)) (= ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@818) ($generated@@280 ($generated@@174 $generated@@135)))) (and ($generated@@157 ($generated@@132 $generated@@817 ($generated@@178 $generated@@136) $generated@@818) ($generated@@283 $generated@@817)) (= (ControlFlow 0 6) 5))) $generated@@837)))
(let (($generated@@857  (=> (= $generated@@828 ($generated@@244 $generated@@829 $generated@@822 $generated@@60 false)) (=> (and (and (and ($generated@@157 $generated@@820 ($generated@@282 $generated@@817)) ($generated@@74 $generated@@820 ($generated@@282 $generated@@817) $generated@@822)) (= $generated@@830 $generated@@818)) (and ($generated@@157 $generated@@830 ($generated@@282 $generated@@817)) (= $generated@@820 $generated@@830))) (and (=> (= (ControlFlow 0 14) 6) $generated@@856) (=> (= (ControlFlow 0 14) 13) $generated@@855))))))
(let (($generated@@858 true))
(let (($generated@@859  (=> (= $generated@@831 ($generated@@189 $generated@@829 $generated@@822 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@858) (=> (= (ControlFlow 0 15) 14) $generated@@857)))))
(let (($generated@@860  (=> (and ($generated@@305 $generated@@822) ($generated@@832 $generated@@822)) (=> (and (and ($generated@@157 $generated@@818 ($generated@@282 $generated@@817)) ($generated@@157 $generated@@819 ($generated@@283 $generated@@817))) (and (= 1 $generated@@278) (= (ControlFlow 0 16) 15))) $generated@@859))))
$generated@@860))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (Int) Int)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@T) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U) Bool)
(declare-fun $generated@@183 (Int) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@193 (T@U T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 (T@U T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@207 (T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@224 (T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@226 (T@T T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@280 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U) T@U)
(declare-fun $generated@@306 (T@U T@U) T@U)
(declare-fun $generated@@307 (T@U T@U) Bool)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@315 (T@U T@U T@U) Bool)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@U Int) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@346 (T@U T@U T@U) Bool)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@360 (T@U T@U) Bool)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@385 (T@U) Int)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@T) T@U)
(declare-fun $generated@@411 (T@T T@T) T@T)
(declare-fun $generated@@412 (T@T) T@T)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) Bool)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@T T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@528 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@U T@U) T@U)
(declare-fun $generated@@567 (T@T) T@U)
(declare-fun $generated@@591 () T@T)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(declare-fun $generated@@651 (T@U) Int)
(declare-fun $generated@@653 (T@U) T@U)
(declare-fun $generated@@657 (T@U) T@U)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@665 (T@U) T@U)
(declare-fun $generated@@679 (T@U) Int)
(declare-fun $generated@@680 (T@U) Int)
(declare-fun $generated@@706 (T@U) T@U)
(declare-fun $generated@@710 (T@U) T@U)
(declare-fun $generated@@711 (T@U) T@U)
(declare-fun $generated@@741 (T@U T@U) Bool)
(declare-fun $generated@@799 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@103 $generated@@104)) 12))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@95 ($generated@@78 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@78 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@96 ($generated@@78 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@78 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@96 (type $generated@@109))))
(= (type ($generated@@97 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@98 $generated@@112 $generated@@113 $generated@@114)) ($generated@@78 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@98 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@96 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@97 ($generated@@98 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@97 ($generated@@98 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@97 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@97 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@67 (type $generated@@130))))
(= (type ($generated@@99 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@99 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@80) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@100 $generated@@132 $generated@@133 $generated@@134)) $generated@@80)
 :pattern ( ($generated@@100 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@67 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@99 ($generated@@100 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@99 ($generated@@100 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@99 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@99 $generated@@144 $generated@@146)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 15)) (forall (($generated@@147 T@T) ) (= ($generated@@1 ($generated@@101 $generated@@147)) 16))) (forall (($generated@@148 T@T) ) (! (= ($generated@@102 ($generated@@101 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@101 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@73 $generated@@149 $generated@@150 $generated@@151)) ($generated@@101 $generated@@81))
 :pattern ( ($generated@@73 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@74 $generated@@152)) $generated@@77)
 :pattern ( ($generated@@74 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (let (($generated@@154 (type $generated@@153)))
(= (type ($generated@@75 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@75 $generated@@153))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@84 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@84 $generated@@155))
))) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@95 (type $generated@@156))))
(= (type ($generated@@88 $generated@@156 $generated@@157)) ($generated@@78 $generated@@158 $generated@@4)))
 :pattern ( ($generated@@88 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@89 $generated@@159 $generated@@160)) ($generated@@78 $generated@@161 $generated@@4)))
 :pattern ( ($generated@@89 $generated@@159 $generated@@160))
))) (forall (($generated@@162 T@T) ) (! (= (type ($generated@@90 $generated@@162)) ($generated@@78 $generated@@162 $generated@@4))
 :pattern ( ($generated@@90 $generated@@162))
))) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@91 $generated@@163 $generated@@164)) $generated@@81)
 :pattern ( ($generated@@91 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ) (! (= (type ($generated@@92 $generated@@165)) ($generated@@101 $generated@@165))
 :pattern ( ($generated@@92 $generated@@165))
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (let (($generated@@168 ($generated@@102 (type $generated@@166))))
(= (type ($generated@@93 $generated@@166 $generated@@167)) ($generated@@101 $generated@@168)))
 :pattern ( ($generated@@93 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
(= (type ($generated@@94 $generated@@169 $generated@@170)) ($generated@@101 $generated@@171)))
 :pattern ( ($generated@@94 $generated@@169 $generated@@170))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@172) $generated@@64) (= (type $generated@@173) $generated@@77)) (= (type $generated@@174) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@175) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@172 ($generated@@75 $generated@@175)) (and (not (= 1 $generated@@72)) (and ($generated@@76 $generated@@174) ($generated@@83 $generated@@175 ($generated@@84 $generated@@172)))))) (and (=> (not (= ($generated@@85 ($generated@@75 $generated@@175)) ($generated@@86 0))) (and ($generated@@87 $generated@@172 ($generated@@75 $generated@@175)) (let (($generated@@176 ($generated@@88 $generated@@175 ($generated@@89 ($generated@@90 $generated@@81) ($generated@@91 $generated@@172 ($generated@@75 $generated@@175))))))
($generated@@82 $generated@@172 $generated@@176)))) (= ($generated@@73 $generated@@172 ($generated@@74 $generated@@173) ($generated@@75 $generated@@175)) (ite (= ($generated@@85 ($generated@@75 $generated@@175)) ($generated@@86 0)) ($generated@@92 $generated@@81) (let (($generated@@177 ($generated@@91 $generated@@172 ($generated@@75 $generated@@175))))
(let (($generated@@178 ($generated@@88 $generated@@175 ($generated@@89 ($generated@@90 $generated@@81) $generated@@177))))
(let (($generated@@179 ($generated@@73 $generated@@172 ($generated@@74 $generated@@173) $generated@@178)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@177) $generated@@179))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@172 ($generated@@74 $generated@@173) ($generated@@75 $generated@@175)) ($generated@@76 $generated@@174))
))))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@65)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (= ($generated@@180 $generated@@44) $generated@@49))
(assert (= ($generated@@180 $generated@@45) $generated@@50))
(assert (= ($generated@@180 $generated@@46) $generated@@51))
(assert (= ($generated@@180 $generated@@47) $generated@@52))
(assert (= ($generated@@180 $generated@@48) $generated@@53))
(assert (forall (($generated@@184 Int) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@64)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (= (type $generated@@185) $generated@@2) (= (type $generated@@186) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@182 $generated@@185 ($generated@@183 0) $generated@@186))
 :pattern ( ($generated@@182 $generated@@185 ($generated@@183 0) $generated@@186))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@77)
 :pattern ( ($generated@@187 $generated@@189))
)) (= (type $generated@@188) $generated@@77)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@64) (= (type $generated@@191) $generated@@77)) (= (type $generated@@192) ($generated@@78 $generated@@81 $generated@@4))) (= ($generated@@73 $generated@@190 $generated@@191 $generated@@192) ($generated@@73 $generated@@190 $generated@@188 $generated@@192)))
 :pattern ( ($generated@@73 $generated@@190 ($generated@@187 $generated@@191) $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@195)))
 (=> (and (= (type $generated@@194) ($generated@@101 $generated@@197)) (= (type $generated@@196) $generated@@197)) (= ($generated@@193 ($generated@@94 $generated@@194 $generated@@195) $generated@@196)  (or (= $generated@@195 $generated@@196) ($generated@@193 $generated@@194 $generated@@196)))))
 :pattern ( ($generated@@193 ($generated@@94 $generated@@194 $generated@@195) $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= (type $generated@@198) $generated@@2) ($generated@@83 $generated@@198 ($generated@@183 0)))
 :pattern ( ($generated@@83 $generated@@198 ($generated@@183 0)))
)))
(assert  (and (= ($generated@@1 $generated@@201) 17) (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@202 $generated@@203)) $generated@@64)
 :pattern ( ($generated@@200 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (and (= (type $generated@@204) $generated@@64) (= (type $generated@@205) $generated@@64)) (= (type $generated@@206) $generated@@201)) ($generated@@83 $generated@@206 ($generated@@200 $generated@@204 $generated@@205))) ($generated@@199 $generated@@206))
 :pattern ( ($generated@@199 $generated@@206) ($generated@@83 $generated@@206 ($generated@@200 $generated@@204 $generated@@205)))
)))
(assert  (and (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@81)
 :pattern ( ($generated@@208 $generated@@210))
)) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@81)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@201) (= (type $generated@@213) $generated@@201)) true) (= ($generated@@207 $generated@@212 $generated@@213)  (and (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)) (= ($generated@@209 $generated@@212) ($generated@@209 $generated@@213)))))
 :pattern ( ($generated@@207 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
 (not ($generated@@193 ($generated@@92 $generated@@215) $generated@@214)))
 :pattern ( (let (($generated@@215 (type $generated@@214)))
($generated@@193 ($generated@@92 $generated@@215) $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@216) $generated@@64) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@78 $generated@@81 $generated@@4))) (= ($generated@@73 $generated@@216 ($generated@@74 $generated@@217) $generated@@218) ($generated@@73 $generated@@216 $generated@@217 $generated@@218)))
 :pattern ( ($generated@@73 $generated@@216 ($generated@@74 $generated@@217) $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ) (! (= (type ($generated@@219 $generated@@221)) $generated@@64)
 :pattern ( ($generated@@219 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (= (type $generated@@222) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@223) $generated@@64)) ($generated@@83 $generated@@222 ($generated@@219 $generated@@223))) ($generated@@220 $generated@@222))
 :pattern ( ($generated@@83 $generated@@222 ($generated@@219 $generated@@223)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@230 $generated@@231)) 18)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@226 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@228 ($generated@@226 $generated@@234 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@226 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@228 (type $generated@@236))))
(= (type ($generated@@224 $generated@@236 $generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@224 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(let (($generated@@245 (type $generated@@241)))
(= (type ($generated@@229 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@226 $generated@@245 $generated@@244))))
 :pattern ( ($generated@@229 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@228 (type $generated@@246))))
 (=> (= (type $generated@@249) $generated@@250) (= ($generated@@224 ($generated@@229 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@247 $generated@@248) $generated@@249)))
 :weight 0
))) (and (and (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (or (= $generated@@253 $generated@@255) (= ($generated@@224 ($generated@@229 $generated@@252 $generated@@253 $generated@@254 $generated@@251) $generated@@255 $generated@@256) ($generated@@224 $generated@@252 $generated@@255 $generated@@256)))
 :weight 0
)) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or (= $generated@@260 $generated@@262) (= ($generated@@224 ($generated@@229 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@224 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or true (= ($generated@@224 ($generated@@229 $generated@@264 $generated@@265 $generated@@266 $generated@@263) $generated@@267 $generated@@268) ($generated@@224 $generated@@264 $generated@@267 $generated@@268)))
 :weight 0
)))) (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 Bool) ) (! (= (type ($generated@@225 $generated@@269 $generated@@270 $generated@@271 $generated@@272)) ($generated@@226 $generated@@79 $generated@@4))
 :pattern ( ($generated@@225 $generated@@269 $generated@@270 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 Bool) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@67 (type $generated@@278))))
 (=> (and (and (and (and (= (type $generated@@273) $generated@@79) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) ($generated@@66 $generated@@4))) (= (type $generated@@277) $generated@@79)) (= (type $generated@@278) ($generated@@66 $generated@@279))) (= ($generated@@0 ($generated@@224 ($generated@@225 $generated@@273 $generated@@274 $generated@@275 $generated@@276) $generated@@277 $generated@@278))  (=> (and (not (= $generated@@277 $generated@@273)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@274 $generated@@277) $generated@@275))) $generated@@276))))
 :pattern ( ($generated@@224 ($generated@@225 $generated@@273 $generated@@274 $generated@@275 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 Bool) ) (! (= (type ($generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284)) ($generated@@226 $generated@@79 $generated@@4))
 :pattern ( ($generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Bool) ($generated@@289 T@U) ($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@67 (type $generated@@290))))
 (=> (and (and (and (and (= (type $generated@@285) $generated@@79) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@287) ($generated@@66 $generated@@4))) (= (type $generated@@289) $generated@@79)) (= (type $generated@@290) ($generated@@66 $generated@@291))) (= ($generated@@0 ($generated@@224 ($generated@@280 $generated@@285 $generated@@286 $generated@@287 $generated@@288) $generated@@289 $generated@@290))  (=> (and (not (= $generated@@289 $generated@@285)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@286 $generated@@289) $generated@@287))) $generated@@288))))
 :pattern ( ($generated@@224 ($generated@@280 $generated@@285 $generated@@286 $generated@@287 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@95 (type $generated@@293))))
(= (type ($generated@@292 $generated@@293 $generated@@294)) ($generated@@78 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@95 (type $generated@@296))))
 (=> (and (= (type $generated@@296) ($generated@@78 $generated@@298 $generated@@4)) (= (type $generated@@297) ($generated@@78 $generated@@298 $generated@@4))) (= ($generated@@292 ($generated@@292 $generated@@296 $generated@@297) $generated@@297) ($generated@@292 $generated@@296 $generated@@297))))
 :pattern ( ($generated@@292 ($generated@@292 $generated@@296 $generated@@297) $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@95 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300 $generated@@301)) ($generated@@78 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@95 (type $generated@@303))))
 (=> (and (= (type $generated@@303) ($generated@@78 $generated@@305 $generated@@4)) (= (type $generated@@304) ($generated@@78 $generated@@305 $generated@@4))) (= ($generated@@299 ($generated@@299 $generated@@303 $generated@@304) $generated@@304) ($generated@@299 $generated@@303 $generated@@304))))
 :pattern ( ($generated@@299 ($generated@@299 $generated@@303 $generated@@304) $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (= (type ($generated@@306 $generated@@308 $generated@@309)) $generated@@201)
 :pattern ( ($generated@@306 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (= (type $generated@@310) $generated@@64) (= (type $generated@@311) $generated@@64)) (= (type $generated@@312) $generated@@81)) (= (type $generated@@313) $generated@@81)) (= ($generated@@83 ($generated@@306 $generated@@312 $generated@@313) ($generated@@200 $generated@@310 $generated@@311))  (and ($generated@@307 $generated@@312 $generated@@310) ($generated@@307 $generated@@313 $generated@@311))))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@312 $generated@@313) ($generated@@200 $generated@@310 $generated@@311)))
)))
(assert  (and (forall (($generated@@319 T@U) ) (! (= (type ($generated@@316 $generated@@319)) $generated@@64)
 :pattern ( ($generated@@316 $generated@@319))
)) (forall (($generated@@320 T@U) ($generated@@321 Int) ) (! (let (($generated@@322 ($generated@@102 (type $generated@@320))))
(= (type ($generated@@318 $generated@@320 $generated@@321)) $generated@@322))
 :pattern ( ($generated@@318 $generated@@320 $generated@@321))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) $generated@@64) (= (type $generated@@324) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@325) ($generated@@101 $generated@@81))) (or ($generated@@315 $generated@@323 ($generated@@75 $generated@@324) ($generated@@75 $generated@@325)) (and (not (= 0 $generated@@72)) (and ($generated@@83 $generated@@324 ($generated@@84 $generated@@323)) ($generated@@83 $generated@@325 ($generated@@316 $generated@@323)))))) (= ($generated@@314 $generated@@323 ($generated@@75 $generated@@324) ($generated@@75 $generated@@325))  (=> (= ($generated@@85 ($generated@@75 $generated@@324)) ($generated@@317 ($generated@@75 $generated@@325))) (and (forall (($generated@@326 Int) ) (!  (=> true (=> (and (<= ($generated@@86 0) $generated@@326) (< $generated@@326 ($generated@@317 ($generated@@75 $generated@@325)))) ($generated@@0 ($generated@@97 ($generated@@75 $generated@@324) ($generated@@318 ($generated@@75 $generated@@325) $generated@@326)))))
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
)) (forall (($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@327) $generated@@81) ($generated@@307 $generated@@327 $generated@@323)) ($generated@@0 ($generated@@97 ($generated@@75 $generated@@324) $generated@@327))) ($generated@@193 $generated@@325 $generated@@327))
 :pattern ( ($generated@@193 $generated@@325 $generated@@327))
 :pattern ( ($generated@@97 $generated@@324 $generated@@327))
))))))
 :weight 3
 :pattern ( ($generated@@314 $generated@@323 ($generated@@75 $generated@@324) ($generated@@75 $generated@@325)))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@95 (type $generated@@328))))
 (=> (and (= (type $generated@@328) ($generated@@78 $generated@@330 $generated@@4)) (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@4))) (= (+ ($generated@@85 ($generated@@292 $generated@@328 $generated@@329)) ($generated@@85 ($generated@@299 $generated@@328 $generated@@329))) (+ ($generated@@85 $generated@@328) ($generated@@85 $generated@@329)))))
 :pattern ( ($generated@@85 ($generated@@292 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@328 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@201) (= (type $generated@@332) $generated@@201)) (= ($generated@@207 $generated@@331 $generated@@332) (= $generated@@331 $generated@@332)))
 :pattern ( ($generated@@207 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= ($generated@@83 $generated@@333 ($generated@@84 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@81) ($generated@@0 ($generated@@97 $generated@@333 $generated@@335))) ($generated@@307 $generated@@335 $generated@@334))
 :pattern ( ($generated@@97 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@83 $generated@@333 ($generated@@84 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@64)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= ($generated@@83 $generated@@338 ($generated@@336 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@81) ($generated@@0 ($generated@@97 $generated@@338 $generated@@340))) ($generated@@307 $generated@@340 $generated@@339))
 :pattern ( ($generated@@97 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@83 $generated@@338 ($generated@@336 $generated@@339)))
)))
(assert (forall (($generated@@341 Int) ) (! (= ($generated@@86 $generated@@341) $generated@@341)
 :pattern ( ($generated@@86 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (= ($generated@@75 $generated@@342) $generated@@342)
 :pattern ( ($generated@@75 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) ($generated@@101 $generated@@81)) (= (type $generated@@344) $generated@@81)) (= (type $generated@@345) $generated@@64)) (and ($generated@@83 $generated@@343 ($generated@@316 $generated@@345)) ($generated@@307 $generated@@344 $generated@@345))) ($generated@@83 ($generated@@94 $generated@@343 $generated@@344) ($generated@@316 $generated@@345)))
 :pattern ( ($generated@@83 ($generated@@94 $generated@@343 $generated@@344) ($generated@@316 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@347) $generated@@64) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) $generated@@81)) (= (type $generated@@350) $generated@@81)) (= (type $generated@@351) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@351)) (= ($generated@@182 ($generated@@306 $generated@@349 $generated@@350) ($generated@@200 $generated@@347 $generated@@348) $generated@@351)  (and ($generated@@346 $generated@@349 $generated@@347 $generated@@351) ($generated@@346 $generated@@350 $generated@@348 $generated@@351))))
 :pattern ( ($generated@@182 ($generated@@306 $generated@@349 $generated@@350) ($generated@@200 $generated@@347 $generated@@348) $generated@@351))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (and (= (type $generated@@352) $generated@@64) (= (type $generated@@353) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@354) ($generated@@101 $generated@@81))) (or ($generated@@315 $generated@@352 $generated@@353 $generated@@354) (and (not (= 0 $generated@@72)) (and ($generated@@83 $generated@@353 ($generated@@84 $generated@@352)) ($generated@@83 $generated@@354 ($generated@@316 $generated@@352)))))) (= ($generated@@314 $generated@@352 $generated@@353 $generated@@354)  (=> (= ($generated@@85 $generated@@353) ($generated@@317 $generated@@354)) (and (forall (($generated@@355 Int) ) (!  (=> true (=> (and (<= ($generated@@86 0) $generated@@355) (< $generated@@355 ($generated@@317 $generated@@354))) ($generated@@0 ($generated@@97 $generated@@353 ($generated@@318 $generated@@354 $generated@@355)))))
 :pattern ( ($generated@@318 $generated@@354 $generated@@355))
)) (forall (($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@356) $generated@@81) ($generated@@307 $generated@@356 $generated@@352)) ($generated@@0 ($generated@@97 $generated@@353 $generated@@356))) ($generated@@193 $generated@@354 $generated@@356))
 :pattern ( ($generated@@193 $generated@@354 $generated@@356))
 :pattern ( ($generated@@97 $generated@@353 $generated@@356))
))))))
 :pattern ( ($generated@@314 $generated@@352 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@68)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@201) (= ($generated@@199 $generated@@359) (= ($generated@@357 $generated@@359) $generated@@61)))
 :pattern ( ($generated@@199 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@102 (type $generated@@361))))
 (=> (and (= (type $generated@@361) ($generated@@101 $generated@@363)) (= (type $generated@@362) ($generated@@101 $generated@@363))) (= ($generated@@360 $generated@@361 $generated@@362)  (and (= ($generated@@317 $generated@@361) ($generated@@317 $generated@@362)) (forall (($generated@@364 Int) ) (!  (=> (and (<= 0 $generated@@364) (< $generated@@364 ($generated@@317 $generated@@361))) (= ($generated@@318 $generated@@361 $generated@@364) ($generated@@318 $generated@@362 $generated@@364)))
 :pattern ( ($generated@@318 $generated@@361 $generated@@364))
 :pattern ( ($generated@@318 $generated@@362 $generated@@364))
))))))
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@201) ($generated@@199 $generated@@365)) (exists (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (and (and (= (type $generated@@366) $generated@@81) (= (type $generated@@367) $generated@@81)) (= $generated@@365 ($generated@@306 $generated@@366 $generated@@367)))
 :no-pattern (type $generated@@366)
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
)))
 :pattern ( ($generated@@199 $generated@@365))
)))
(assert (forall (($generated@@368 T@T) ) (! (= ($generated@@317 ($generated@@92 $generated@@368)) 0)
 :pattern ( ($generated@@92 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
 (=> (= (type $generated@@369) ($generated@@101 $generated@@371)) (= ($generated@@317 ($generated@@94 $generated@@369 $generated@@370)) (+ 1 ($generated@@317 $generated@@369)))))
 :pattern ( ($generated@@94 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@81)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@64) (= (type $generated@@376) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@346 ($generated@@372 $generated@@374) $generated@@375 $generated@@376) ($generated@@182 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@346 ($generated@@372 $generated@@374) $generated@@375 $generated@@376))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@377) $generated@@64) (= (type $generated@@378) $generated@@77)) (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@380) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@377 $generated@@380) (and (not (= 1 $generated@@72)) (and ($generated@@76 $generated@@379) ($generated@@83 $generated@@380 ($generated@@84 $generated@@377)))))) (and (=> (not (= ($generated@@85 $generated@@380) ($generated@@86 0))) (and ($generated@@87 $generated@@377 $generated@@380) (let (($generated@@381 ($generated@@88 $generated@@380 ($generated@@89 ($generated@@90 $generated@@81) ($generated@@91 $generated@@377 $generated@@380)))))
($generated@@82 $generated@@377 $generated@@381)))) (= ($generated@@73 $generated@@377 ($generated@@74 $generated@@378) $generated@@380) (ite (= ($generated@@85 $generated@@380) ($generated@@86 0)) ($generated@@92 $generated@@81) (let (($generated@@382 ($generated@@91 $generated@@377 $generated@@380)))
(let (($generated@@383 ($generated@@88 $generated@@380 ($generated@@89 ($generated@@90 $generated@@81) $generated@@382))))
(let (($generated@@384 ($generated@@73 $generated@@377 $generated@@378 $generated@@383)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@382) $generated@@384))))))))
 :pattern ( ($generated@@73 $generated@@377 ($generated@@74 $generated@@378) $generated@@380) ($generated@@76 $generated@@379))
))))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@78 $generated@@387 $generated@@2))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@95 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@78 $generated@@389 $generated@@2)) (and (= (= ($generated@@385 $generated@@388) 0) (= $generated@@388 ($generated@@386 $generated@@389))) (=> (not (= ($generated@@385 $generated@@388) 0)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (< 0 ($generated ($generated@@97 $generated@@388 $generated@@390))))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 19)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@78 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@97 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@97 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert  (and (and (and (and (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (= ($generated@@1 ($generated@@411 $generated@@414 $generated@@415)) 20)) (forall (($generated@@416 T@T) ($generated@@417 T@T) ) (! (= ($generated@@412 ($generated@@411 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@411 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@T) ($generated@@419 T@T) ) (! (= ($generated@@413 ($generated@@411 $generated@@418 $generated@@419)) $generated@@419)
 :pattern ( ($generated@@411 $generated@@418 $generated@@419))
))) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@412 (type $generated@@420))))
(= (type ($generated@@409 $generated@@420)) ($generated@@78 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@420))
))) (forall (($generated@@422 T@T) ($generated@@423 T@T) ) (! (= (type ($generated@@410 $generated@@422 $generated@@423)) ($generated@@411 $generated@@422 $generated@@423))
 :pattern ( ($generated@@410 $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@T) ) (! (let (($generated@@426 (type $generated@@424)))
 (not ($generated@@0 ($generated@@97 ($generated@@409 ($generated@@410 $generated@@426 $generated@@425)) $generated@@424))))
 :pattern ( (let (($generated@@426 (type $generated@@424)))
($generated@@97 ($generated@@409 ($generated@@410 $generated@@426 $generated@@425)) $generated@@424)))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@102 (type $generated@@427))))
 (=> (and (= (type $generated@@427) ($generated@@101 $generated@@429)) (= (type $generated@@428) ($generated@@101 $generated@@429))) (= ($generated@@317 ($generated@@93 $generated@@427 $generated@@428)) (+ ($generated@@317 $generated@@427) ($generated@@317 $generated@@428)))))
 :pattern ( ($generated@@317 ($generated@@93 $generated@@427 $generated@@428)))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@95 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@78 $generated@@431 $generated@@2)) (= ($generated@@220 $generated@@430) (forall (($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@431) (and (<= 0 ($generated ($generated@@97 $generated@@430 $generated@@432))) (<= ($generated ($generated@@97 $generated@@430 $generated@@432)) ($generated@@385 $generated@@430))))
 :pattern ( ($generated@@97 $generated@@430 $generated@@432))
)))))
 :pattern ( ($generated@@220 $generated@@430))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@435) ($generated@@101 $generated@@81))) (or ($generated@@315 $generated@@433 $generated@@434 $generated@@435) (and (not (= 0 $generated@@72)) (and ($generated@@83 $generated@@434 ($generated@@84 $generated@@433)) ($generated@@83 $generated@@435 ($generated@@316 $generated@@433)))))) true)
 :pattern ( ($generated@@314 $generated@@433 $generated@@434 $generated@@435))
))))
(assert (forall (($generated@@436 T@U) ($generated@@437 Int) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
 (=> (= (type $generated@@436) ($generated@@101 $generated@@439)) (and (=> (= $generated@@437 ($generated@@317 $generated@@436)) (= ($generated@@318 ($generated@@94 $generated@@436 $generated@@438) $generated@@437) $generated@@438)) (=> (not (= $generated@@437 ($generated@@317 $generated@@436))) (= ($generated@@318 ($generated@@94 $generated@@436 $generated@@438) $generated@@437) ($generated@@318 $generated@@436 $generated@@437))))))
 :pattern ( ($generated@@318 ($generated@@94 $generated@@436 $generated@@438) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@395 (type $generated@@440))))
(let (($generated@@442 ($generated@@394 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@393 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@392 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) ($generated@@0 ($generated@@97 ($generated@@391 $generated@@440) $generated@@443)))
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@391 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@395 (type $generated@@445))))
(= (type ($generated@@444 $generated@@445)) ($generated@@78 $generated@@446 $generated@@4)))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@395 (type $generated@@447))))
(let (($generated@@449 ($generated@@394 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@393 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@392 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@448) ($generated@@0 ($generated@@97 ($generated@@444 $generated@@447) $generated@@450)))
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@444 $generated@@447))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@413 (type $generated@@451))))
(let (($generated@@453 ($generated@@412 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@411 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@410 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) ($generated@@0 ($generated@@97 ($generated@@409 $generated@@451) $generated@@454)))
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@409 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@413 (type $generated@@456))))
(= (type ($generated@@455 $generated@@456)) ($generated@@78 $generated@@457 $generated@@4)))
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@413 (type $generated@@458))))
(let (($generated@@460 ($generated@@412 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@411 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@410 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@459) ($generated@@0 ($generated@@97 ($generated@@455 $generated@@458) $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@455 $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@463) $generated@@64)) (= ($generated@@83 $generated@@462 ($generated@@219 $generated@@463)) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@81) (< 0 ($generated ($generated@@97 $generated@@462 $generated@@464)))) ($generated@@307 $generated@@464 $generated@@463))
 :pattern ( ($generated@@97 $generated@@462 $generated@@464))
))))
 :pattern ( ($generated@@83 $generated@@462 ($generated@@219 $generated@@463)))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
 (=> (and (= (type $generated@@465) ($generated@@101 $generated@@468)) (= (type $generated@@466) ($generated@@101 $generated@@468))) (= ($generated@@193 ($generated@@93 $generated@@465 $generated@@466) $generated@@467)  (or ($generated@@193 $generated@@465 $generated@@467) ($generated@@193 $generated@@466 $generated@@467)))))
 :pattern ( ($generated@@193 ($generated@@93 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@95 (type $generated@@470))))
 (=> (and (and (= (type $generated@@470) ($generated@@78 $generated@@472 $generated@@4)) (= (type $generated@@471) ($generated@@78 $generated@@472 $generated@@4))) ($generated@@469 $generated@@470 $generated@@471)) (and (= ($generated@@88 ($generated@@292 $generated@@470 $generated@@471) $generated@@470) $generated@@471) (= ($generated@@88 ($generated@@292 $generated@@470 $generated@@471) $generated@@471) $generated@@470))))
 :pattern ( ($generated@@292 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@395 (type $generated@@474))))
(let (($generated@@476 ($generated@@394 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@393 $generated@@476 $generated@@475)) (= (= ($generated@@473 $generated@@474) 0) (= $generated@@474 ($generated@@392 $generated@@476 $generated@@475))))))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
 (=> (= (type $generated@@477) ($generated@@101 $generated@@479)) (= ($generated@@193 $generated@@477 $generated@@478) (exists (($generated@@480 Int) ) (!  (and (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@317 $generated@@477))) (= ($generated@@318 $generated@@477 $generated@@480) $generated@@478))
 :pattern ( ($generated@@318 $generated@@477 $generated@@480))
)))))
 :pattern ( ($generated@@193 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (! (let (($generated@@484 (type $generated@@483)))
 (=> (and (= (type $generated@@481) ($generated@@78 $generated@@484 $generated@@4)) (= (type $generated@@482) ($generated@@78 $generated@@484 $generated@@4))) (= ($generated@@0 ($generated@@97 ($generated@@299 $generated@@481 $generated@@482) $generated@@483))  (and ($generated@@0 ($generated@@97 $generated@@481 $generated@@483)) ($generated@@0 ($generated@@97 $generated@@482 $generated@@483))))))
 :pattern ( ($generated@@97 ($generated@@299 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
 (=> (and (= (type $generated@@485) ($generated@@78 $generated@@488 $generated@@4)) (= (type $generated@@486) ($generated@@78 $generated@@488 $generated@@4))) (= ($generated@@0 ($generated@@97 ($generated@@88 $generated@@485 $generated@@486) $generated@@487))  (and ($generated@@0 ($generated@@97 $generated@@485 $generated@@487)) (not ($generated@@0 ($generated@@97 $generated@@486 $generated@@487)))))))
 :pattern ( ($generated@@97 ($generated@@88 $generated@@485 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@182 $generated@@489 ($generated@@84 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@81) ($generated@@0 ($generated@@97 $generated@@489 $generated@@492))) ($generated@@346 $generated@@492 $generated@@490 $generated@@491))
 :pattern ( ($generated@@97 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@182 $generated@@489 ($generated@@84 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@182 $generated@@493 ($generated@@336 $generated@@494) $generated@@495) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@81) ($generated@@0 ($generated@@97 $generated@@493 $generated@@496))) ($generated@@346 $generated@@496 $generated@@494 $generated@@495))
 :pattern ( ($generated@@97 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@182 $generated@@493 ($generated@@336 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated ($generated@@97 ($generated@@386 $generated@@498) $generated@@497)) 0))
 :pattern ( (let (($generated@@498 (type $generated@@497)))
($generated@@97 ($generated@@386 $generated@@498) $generated@@497)))
)))
(assert  (and (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@499 $generated@@502)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@499 $generated@@502))
)) (forall (($generated@@503 T@T) ($generated@@504 T@U) ) (! (= (type ($generated@@500 $generated@@503 $generated@@504)) $generated@@503)
 :pattern ( ($generated@@500 $generated@@503 $generated@@504))
))) (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@395 (type $generated@@505))))
(let (($generated@@507 ($generated@@394 (type $generated@@505))))
(= (type ($generated@@501 $generated@@505)) ($generated@@78 $generated@@507 $generated@@506))))
 :pattern ( ($generated@@501 $generated@@505))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) ($generated@@393 $generated@@81 $generated@@81)) (= (type $generated@@509) $generated@@81)) (= ($generated@@0 ($generated@@97 ($generated@@499 $generated@@508) $generated@@509))  (and ($generated@@0 ($generated@@97 ($generated@@391 $generated@@508) ($generated@@208 ($generated@@500 $generated@@201 $generated@@509)))) (= ($generated@@97 ($generated@@501 $generated@@508) ($generated@@208 ($generated@@500 $generated@@201 $generated@@509))) ($generated@@209 ($generated@@500 $generated@@201 $generated@@509))))))
 :pattern ( ($generated@@97 ($generated@@499 $generated@@508) $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@413 (type $generated@@513))))
(let (($generated@@515 ($generated@@412 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513)) ($generated@@78 $generated@@515 $generated@@514))))
 :pattern ( ($generated@@511 $generated@@513))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) ($generated@@411 $generated@@81 $generated@@81)) (= (type $generated@@517) $generated@@81)) (= ($generated@@0 ($generated@@97 ($generated@@510 $generated@@516) $generated@@517))  (and ($generated@@0 ($generated@@97 ($generated@@409 $generated@@516) ($generated@@208 ($generated@@500 $generated@@201 $generated@@517)))) (= ($generated@@97 ($generated@@511 $generated@@516) ($generated@@208 ($generated@@500 $generated@@201 $generated@@517))) ($generated@@209 ($generated@@500 $generated@@201 $generated@@517))))))
 :pattern ( ($generated@@97 ($generated@@510 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(let (($generated@@521 ($generated@@394 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@393 $generated@@521 $generated@@520)) (= ($generated@@0 ($generated@@97 ($generated@@444 $generated@@518) $generated@@519)) (exists (($generated@@522 T@U) ) (!  (and (= (type $generated@@522) $generated@@521) (and ($generated@@0 ($generated@@97 ($generated@@391 $generated@@518) $generated@@522)) (= $generated@@519 ($generated@@97 ($generated@@501 $generated@@518) $generated@@522))))
 :pattern ( ($generated@@97 ($generated@@391 $generated@@518) $generated@@522))
 :pattern ( ($generated@@97 ($generated@@501 $generated@@518) $generated@@522))
))))))
 :pattern ( ($generated@@97 ($generated@@444 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(let (($generated@@526 ($generated@@412 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@411 $generated@@526 $generated@@525)) (= ($generated@@0 ($generated@@97 ($generated@@455 $generated@@523) $generated@@524)) (exists (($generated@@527 T@U) ) (!  (and (= (type $generated@@527) $generated@@526) (and ($generated@@0 ($generated@@97 ($generated@@409 $generated@@523) $generated@@527)) (= $generated@@524 ($generated@@97 ($generated@@511 $generated@@523) $generated@@527))))
 :pattern ( ($generated@@97 ($generated@@409 $generated@@523) $generated@@527))
 :pattern ( ($generated@@97 ($generated@@511 $generated@@523) $generated@@527))
))))))
 :pattern ( ($generated@@97 ($generated@@455 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@529 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) ($generated@@393 $generated@@81 $generated@@81)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@182 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@81) ($generated@@0 ($generated@@97 ($generated@@391 $generated@@531) $generated@@535))) (and ($generated@@346 ($generated@@97 ($generated@@501 $generated@@531) $generated@@535) $generated@@533 $generated@@534) ($generated@@346 $generated@@535 $generated@@532 $generated@@534)))
 :pattern ( ($generated@@97 ($generated@@501 $generated@@531) $generated@@535))
 :pattern ( ($generated@@97 ($generated@@391 $generated@@531) $generated@@535))
))))
 :pattern ( ($generated@@182 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@537 $generated@@538)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) ($generated@@411 $generated@@81 $generated@@81)) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@182 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@81) ($generated@@0 ($generated@@97 ($generated@@409 $generated@@539) $generated@@543))) (and ($generated@@346 ($generated@@97 ($generated@@511 $generated@@539) $generated@@543) $generated@@541 $generated@@542) ($generated@@346 $generated@@543 $generated@@540 $generated@@542)))
 :pattern ( ($generated@@97 ($generated@@511 $generated@@539) $generated@@543))
 :pattern ( ($generated@@97 ($generated@@409 $generated@@539) $generated@@543))
))))
 :pattern ( ($generated@@182 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@102 (type $generated@@544))))
 (=> (and (and (= (type $generated@@544) ($generated@@101 $generated@@546)) (= (type $generated@@545) ($generated@@101 $generated@@546))) ($generated@@360 $generated@@544 $generated@@545)) (= $generated@@544 $generated@@545)))
 :pattern ( ($generated@@360 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@548)))
 (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@550 $generated@@4)) (= (type $generated@@549) $generated@@550)) ($generated@@0 ($generated@@97 $generated@@547 $generated@@549))) ($generated@@0 ($generated@@97 ($generated@@89 $generated@@547 $generated@@548) $generated@@549))))
 :pattern ( ($generated@@89 $generated@@547 $generated@@548) ($generated@@97 $generated@@547 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (=> (and (and (= (type $generated@@551) ($generated@@78 $generated@@554 $generated@@4)) (= (type $generated@@552) ($generated@@78 $generated@@554 $generated@@4))) ($generated@@0 ($generated@@97 $generated@@551 $generated@@553))) ($generated@@0 ($generated@@97 ($generated@@292 $generated@@551 $generated@@552) $generated@@553))))
 :pattern ( ($generated@@292 $generated@@551 $generated@@552) ($generated@@97 $generated@@551 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (=> (and (and (= (type $generated@@555) ($generated@@78 $generated@@558 $generated@@4)) (= (type $generated@@556) ($generated@@78 $generated@@558 $generated@@4))) ($generated@@0 ($generated@@97 $generated@@556 $generated@@557))) ($generated@@0 ($generated@@97 ($generated@@292 $generated@@555 $generated@@556) $generated@@557))))
 :pattern ( ($generated@@292 $generated@@555 $generated@@556) ($generated@@97 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (= (type $generated@@559) ($generated@@78 $generated@@562 $generated@@4)) (= (type $generated@@561) $generated@@562)) (= ($generated@@0 ($generated@@97 ($generated@@89 $generated@@559 $generated@@560) $generated@@561))  (or (= $generated@@561 $generated@@560) ($generated@@0 ($generated@@97 $generated@@559 $generated@@561))))))
 :pattern ( ($generated@@97 ($generated@@89 $generated@@559 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@4)) (= (type $generated@@564) ($generated@@78 $generated@@566 $generated@@4))) ($generated@@0 ($generated@@97 $generated@@564 $generated@@565))) (not ($generated@@0 ($generated@@97 ($generated@@88 $generated@@563 $generated@@564) $generated@@565)))))
 :pattern ( ($generated@@88 $generated@@563 $generated@@564) ($generated@@97 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@T) ) (! (= (type ($generated@@567 $generated@@568)) ($generated@@78 $generated@@568 $generated@@4))
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@413 (type $generated@@569))))
(let (($generated@@571 ($generated@@412 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@411 $generated@@571 $generated@@570)) (= (= $generated@@569 ($generated@@410 $generated@@571 $generated@@570)) (= ($generated@@409 $generated@@569) ($generated@@567 $generated@@571))))))
 :pattern ( ($generated@@409 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@413 (type $generated@@572))))
(let (($generated@@574 ($generated@@412 (type $generated@@572))))
 (=> (= (type $generated@@572) ($generated@@411 $generated@@574 $generated@@573)) (= (= $generated@@572 ($generated@@410 $generated@@574 $generated@@573)) (= ($generated@@455 $generated@@572) ($generated@@567 $generated@@573))))))
 :pattern ( ($generated@@455 $generated@@572))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@413 (type $generated@@575))))
(let (($generated@@577 ($generated@@412 (type $generated@@575))))
 (=> (= (type $generated@@575) ($generated@@411 $generated@@577 $generated@@576)) (= (= $generated@@575 ($generated@@410 $generated@@577 $generated@@576)) (= ($generated@@510 $generated@@575) ($generated@@567 $generated@@81))))))
 :pattern ( ($generated@@510 $generated@@575))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@395 (type $generated@@578))))
(let (($generated@@580 ($generated@@394 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@393 $generated@@580 $generated@@579)) (or (= $generated@@578 ($generated@@392 $generated@@580 $generated@@579)) (exists (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (and (and (= (type $generated@@581) $generated@@81) (= (type $generated@@582) $generated@@81)) ($generated@@0 ($generated@@97 ($generated@@499 $generated@@578) ($generated@@372 ($generated@@306 $generated@@581 $generated@@582)))))
 :no-pattern (type $generated@@581)
 :no-pattern (type $generated@@582)
 :no-pattern ($generated $generated@@581)
 :no-pattern ($generated@@0 $generated@@581)
 :no-pattern ($generated $generated@@582)
 :no-pattern ($generated@@0 $generated@@582)
))))))
 :pattern ( ($generated@@499 $generated@@578))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@413 (type $generated@@583))))
(let (($generated@@585 ($generated@@412 (type $generated@@583))))
 (=> (= (type $generated@@583) ($generated@@411 $generated@@585 $generated@@584)) (or (= $generated@@583 ($generated@@410 $generated@@585 $generated@@584)) (exists (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (and (and (= (type $generated@@586) $generated@@81) (= (type $generated@@587) $generated@@81)) ($generated@@0 ($generated@@97 ($generated@@510 $generated@@583) ($generated@@372 ($generated@@306 $generated@@586 $generated@@587)))))
 :no-pattern (type $generated@@586)
 :no-pattern (type $generated@@587)
 :no-pattern ($generated $generated@@586)
 :no-pattern ($generated@@0 $generated@@586)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
))))))
 :pattern ( ($generated@@510 $generated@@583))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@81) ($generated@@307 $generated@@588 $generated@@46)) (and (= ($generated@@372 ($generated@@500 $generated@@2 $generated@@588)) $generated@@588) ($generated@@83 ($generated@@500 $generated@@2 $generated@@588) $generated@@46)))
 :pattern ( ($generated@@307 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@81) ($generated@@307 $generated@@589 $generated@@47)) (and (= ($generated@@372 ($generated@@500 $generated@@3 $generated@@589)) $generated@@589) ($generated@@83 ($generated@@500 $generated@@3 $generated@@589) $generated@@47)))
 :pattern ( ($generated@@307 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@81) ($generated@@307 $generated@@590 $generated@@44)) (and (= ($generated@@372 ($generated@@500 $generated@@4 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@500 $generated@@4 $generated@@590) $generated@@44)))
 :pattern ( ($generated@@307 $generated@@590 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@591) 21))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@81) ($generated@@307 $generated@@592 $generated@@45)) (and (= ($generated@@372 ($generated@@500 $generated@@591 $generated@@592)) $generated@@592) ($generated@@83 ($generated@@500 $generated@@591 $generated@@592) $generated@@45)))
 :pattern ( ($generated@@307 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@95 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@78 $generated@@595 $generated@@4)) (= (type $generated@@594) ($generated@@78 $generated@@595 $generated@@4))) (and (= (+ (+ ($generated@@85 ($generated@@88 $generated@@593 $generated@@594)) ($generated@@85 ($generated@@88 $generated@@594 $generated@@593))) ($generated@@85 ($generated@@299 $generated@@593 $generated@@594))) ($generated@@85 ($generated@@292 $generated@@593 $generated@@594))) (= ($generated@@85 ($generated@@88 $generated@@593 $generated@@594)) (- ($generated@@85 $generated@@593) ($generated@@85 ($generated@@299 $generated@@593 $generated@@594)))))))
 :pattern ( ($generated@@85 ($generated@@88 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@64) (= ($generated@@307 ($generated@@372 $generated@@596) $generated@@597) ($generated@@83 $generated@@596 $generated@@597)))
 :pattern ( ($generated@@307 ($generated@@372 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@95 (type $generated@@598))))
 (=> (= (type $generated@@598) ($generated@@78 $generated@@599 $generated@@4)) (<= 0 ($generated@@85 $generated@@598))))
 :pattern ( ($generated@@85 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@95 (type $generated@@600))))
 (=> (= (type $generated@@600) ($generated@@78 $generated@@601 $generated@@2)) (<= 0 ($generated@@385 $generated@@600))))
 :pattern ( ($generated@@385 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@102 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@101 $generated@@603)) (<= 0 ($generated@@317 $generated@@602))))
 :pattern ( ($generated@@317 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@395 (type $generated@@604))))
(let (($generated@@606 ($generated@@394 (type $generated@@604))))
 (=> (= (type $generated@@604) ($generated@@393 $generated@@606 $generated@@605)) (<= 0 ($generated@@473 $generated@@604)))))
 :pattern ( ($generated@@473 $generated@@604))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@64)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) $generated@@64)) (= ($generated@@607 ($generated@@528 $generated@@609 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@528 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@64)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@64) (= (type $generated@@614) $generated@@64)) (= ($generated@@611 ($generated@@528 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@528 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@64) (= (type $generated@@616) $generated@@64)) (= ($generated@@180 ($generated@@528 $generated@@615 $generated@@616)) $generated@@58))
 :pattern ( ($generated@@528 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@64)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@64) (= (type $generated@@620) $generated@@64)) (= ($generated@@617 ($generated@@536 $generated@@619 $generated@@620)) $generated@@619))
 :pattern ( ($generated@@536 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@64)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@64) (= (type $generated@@624) $generated@@64)) (= ($generated@@621 ($generated@@536 $generated@@623 $generated@@624)) $generated@@624))
 :pattern ( ($generated@@536 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (= ($generated@@180 ($generated@@536 $generated@@625 $generated@@626)) $generated@@59))
 :pattern ( ($generated@@536 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@81) (= (type $generated@@628) $generated@@81)) (= ($generated@@357 ($generated@@306 $generated@@627 $generated@@628)) $generated@@61))
 :pattern ( ($generated@@306 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (! (= (type ($generated@@629 $generated@@630)) $generated@@64)
 :pattern ( ($generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@64) (= (type $generated@@632) $generated@@64)) (= ($generated@@629 ($generated@@200 $generated@@631 $generated@@632)) $generated@@631))
 :pattern ( ($generated@@200 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ) (! (= (type ($generated@@633 $generated@@634)) $generated@@64)
 :pattern ( ($generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@64) (= (type $generated@@636) $generated@@64)) (= ($generated@@633 ($generated@@200 $generated@@635 $generated@@636)) $generated@@636))
 :pattern ( ($generated@@200 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@81) (= (type $generated@@638) $generated@@81)) (= ($generated@@208 ($generated@@306 $generated@@637 $generated@@638)) $generated@@637))
 :pattern ( ($generated@@306 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@81) (= (type $generated@@640) $generated@@81)) (= ($generated@@209 ($generated@@306 $generated@@639 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@306 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@101 $generated@@81)) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@182 $generated@@641 ($generated@@316 $generated@@642) $generated@@643) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@317 $generated@@641))) ($generated@@346 ($generated@@318 $generated@@641 $generated@@644) $generated@@642 $generated@@643))
 :pattern ( ($generated@@318 $generated@@641 $generated@@644))
))))
 :pattern ( ($generated@@182 $generated@@641 ($generated@@316 $generated@@642) $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@646)))
 (=> (= (type $generated@@645) ($generated@@78 $generated@@647 $generated@@4)) ($generated@@0 ($generated@@97 ($generated@@89 $generated@@645 $generated@@646) $generated@@646))))
 :pattern ( ($generated@@89 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@649)))
 (=> (and (= (type $generated@@648) ($generated@@78 $generated@@650 $generated@@4)) ($generated@@0 ($generated@@97 $generated@@648 $generated@@649))) (= ($generated@@85 ($generated@@89 $generated@@648 $generated@@649)) ($generated@@85 $generated@@648))))
 :pattern ( ($generated@@85 ($generated@@89 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@652 Int) ) (! (= ($generated@@651 ($generated@@183 $generated@@652)) $generated@@652)
 :pattern ( ($generated@@183 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ) (! (= (type ($generated@@653 $generated@@654)) $generated@@64)
 :pattern ( ($generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@64) (= ($generated@@653 ($generated@@84 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@84 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@64) (= ($generated@@180 ($generated@@84 $generated@@656)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ) (! (= (type ($generated@@657 $generated@@658)) $generated@@64)
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@64) (= ($generated@@657 ($generated@@336 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@336 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@64) (= ($generated@@180 ($generated@@336 $generated@@660)) $generated@@55))
 :pattern ( ($generated@@336 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ) (! (= (type ($generated@@661 $generated@@662)) $generated@@64)
 :pattern ( ($generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@64) (= ($generated@@661 ($generated@@219 $generated@@663)) $generated@@663))
 :pattern ( ($generated@@219 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@64) (= ($generated@@180 ($generated@@219 $generated@@664)) $generated@@56))
 :pattern ( ($generated@@219 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ) (! (= (type ($generated@@665 $generated@@666)) $generated@@64)
 :pattern ( ($generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@64) (= ($generated@@665 ($generated@@316 $generated@@667)) $generated@@667))
 :pattern ( ($generated@@316 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@64) (= ($generated@@180 ($generated@@316 $generated@@668)) $generated@@57))
 :pattern ( ($generated@@316 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@669)))
(= ($generated@@500 $generated@@670 ($generated@@372 $generated@@669)) $generated@@669))
 :pattern ( ($generated@@372 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@671) ($generated@@393 $generated@@81 $generated@@81)) (= (type $generated@@672) $generated@@64)) (= (type $generated@@673) $generated@@64)) (= ($generated@@83 $generated@@671 ($generated@@528 $generated@@672 $generated@@673)) (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@81) ($generated@@0 ($generated@@97 ($generated@@391 $generated@@671) $generated@@674))) (and ($generated@@307 ($generated@@97 ($generated@@501 $generated@@671) $generated@@674) $generated@@673) ($generated@@307 $generated@@674 $generated@@672)))
 :pattern ( ($generated@@97 ($generated@@501 $generated@@671) $generated@@674))
 :pattern ( ($generated@@97 ($generated@@391 $generated@@671) $generated@@674))
))))
 :pattern ( ($generated@@83 $generated@@671 ($generated@@528 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@411 $generated@@81 $generated@@81)) (= (type $generated@@676) $generated@@64)) (= (type $generated@@677) $generated@@64)) (= ($generated@@83 $generated@@675 ($generated@@536 $generated@@676 $generated@@677)) (forall (($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@678) $generated@@81) ($generated@@0 ($generated@@97 ($generated@@409 $generated@@675) $generated@@678))) (and ($generated@@307 ($generated@@97 ($generated@@511 $generated@@675) $generated@@678) $generated@@677) ($generated@@307 $generated@@678 $generated@@676)))
 :pattern ( ($generated@@97 ($generated@@511 $generated@@675) $generated@@678))
 :pattern ( ($generated@@97 ($generated@@409 $generated@@675) $generated@@678))
))))
 :pattern ( ($generated@@83 $generated@@675 ($generated@@536 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@81) (= (type $generated@@682) $generated@@81)) (< ($generated@@679 $generated@@681) ($generated@@680 ($generated@@306 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@306 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@81) (= (type $generated@@684) $generated@@81)) (< ($generated@@679 $generated@@684) ($generated@@680 ($generated@@306 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@306 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@95 (type $generated@@685))))
 (=> (and (= (type $generated@@685) ($generated@@78 $generated@@687 $generated@@4)) (= (type $generated@@686) ($generated@@78 $generated@@687 $generated@@4))) (= ($generated@@292 $generated@@685 ($generated@@292 $generated@@685 $generated@@686)) ($generated@@292 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@292 $generated@@685 ($generated@@292 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@95 (type $generated@@688))))
 (=> (and (= (type $generated@@688) ($generated@@78 $generated@@690 $generated@@4)) (= (type $generated@@689) ($generated@@78 $generated@@690 $generated@@4))) (= ($generated@@299 $generated@@688 ($generated@@299 $generated@@688 $generated@@689)) ($generated@@299 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@299 $generated@@688 ($generated@@299 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@64) (= (type $generated@@692) ($generated@@78 $generated@@81 $generated@@4))) ($generated@@87 $generated@@691 $generated@@692)) ($generated@@0 ($generated@@97 $generated@@692 ($generated@@91 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@91 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@81) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) $generated@@64)) ($generated@@307 $generated@@693 ($generated@@528 $generated@@694 $generated@@695))) (and (= ($generated@@372 ($generated@@500 ($generated@@393 $generated@@81 $generated@@81) $generated@@693)) $generated@@693) ($generated@@83 ($generated@@500 ($generated@@393 $generated@@81 $generated@@81) $generated@@693) ($generated@@528 $generated@@694 $generated@@695))))
 :pattern ( ($generated@@307 $generated@@693 ($generated@@528 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) $generated@@81) (= (type $generated@@697) $generated@@64)) (= (type $generated@@698) $generated@@64)) ($generated@@307 $generated@@696 ($generated@@536 $generated@@697 $generated@@698))) (and (= ($generated@@372 ($generated@@500 ($generated@@411 $generated@@81 $generated@@81) $generated@@696)) $generated@@696) ($generated@@83 ($generated@@500 ($generated@@411 $generated@@81 $generated@@81) $generated@@696) ($generated@@536 $generated@@697 $generated@@698))))
 :pattern ( ($generated@@307 $generated@@696 ($generated@@536 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (= (type $generated@@699) $generated@@64) (= (type $generated@@700) $generated@@64)) (= (type $generated@@701) $generated@@81)) ($generated@@307 $generated@@701 ($generated@@200 $generated@@699 $generated@@700))) (and (= ($generated@@372 ($generated@@500 $generated@@201 $generated@@701)) $generated@@701) ($generated@@83 ($generated@@500 $generated@@201 $generated@@701) ($generated@@200 $generated@@699 $generated@@700))))
 :pattern ( ($generated@@307 $generated@@701 ($generated@@200 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@702 T@U) ) (! (let (($generated@@703 (type $generated@@702)))
 (not ($generated@@0 ($generated@@97 ($generated@@90 $generated@@703) $generated@@702))))
 :pattern ( (let (($generated@@703 (type $generated@@702)))
($generated@@97 ($generated@@90 $generated@@703) $generated@@702)))
)))
(assert (forall (($generated@@704 T@U) ) (! (let (($generated@@705 (type $generated@@704)))
 (not ($generated@@0 ($generated@@97 ($generated@@567 $generated@@705) $generated@@704))))
 :pattern ( (let (($generated@@705 (type $generated@@704)))
($generated@@97 ($generated@@567 $generated@@705) $generated@@704)))
)))
(assert (forall (($generated@@707 T@U) ) (! (= (type ($generated@@706 $generated@@707)) $generated@@69)
 :pattern ( ($generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@64) (= (type $generated@@709) $generated@@64)) (and (= ($generated@@180 ($generated@@200 $generated@@708 $generated@@709)) $generated@@62) (= ($generated@@706 ($generated@@200 $generated@@708 $generated@@709)) $generated@@63)))
 :pattern ( ($generated@@200 $generated@@708 $generated@@709))
)))
(assert  (and (forall (($generated@@712 T@U) ) (! (let (($generated@@713 ($generated@@102 (type $generated@@712))))
(= (type ($generated@@710 $generated@@712)) ($generated@@101 $generated@@713)))
 :pattern ( ($generated@@710 $generated@@712))
)) (forall (($generated@@714 T@U) ) (! (let (($generated@@715 ($generated@@102 (type $generated@@714))))
(= (type ($generated@@711 $generated@@714)) $generated@@715))
 :pattern ( ($generated@@711 $generated@@714))
))))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (! (let (($generated@@718 (type $generated@@717)))
 (=> (= (type $generated@@716) ($generated@@101 $generated@@718)) (and (= ($generated@@710 ($generated@@94 $generated@@716 $generated@@717)) $generated@@716) (= ($generated@@711 ($generated@@94 $generated@@716 $generated@@717)) $generated@@717))))
 :pattern ( ($generated@@94 $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@201) (= ($generated@@679 ($generated@@372 $generated@@719)) ($generated@@680 $generated@@719)))
 :pattern ( ($generated@@679 ($generated@@372 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ) (! (let (($generated@@721 ($generated@@395 (type $generated@@720))))
(let (($generated@@722 ($generated@@394 (type $generated@@720))))
 (=> (= (type $generated@@720) ($generated@@393 $generated@@722 $generated@@721)) (= ($generated@@85 ($generated@@391 $generated@@720)) ($generated@@473 $generated@@720)))))
 :pattern ( ($generated@@85 ($generated@@391 $generated@@720)))
)))
(assert (forall (($generated@@723 T@U) ) (! (let (($generated@@724 ($generated@@395 (type $generated@@723))))
(let (($generated@@725 ($generated@@394 (type $generated@@723))))
 (=> (= (type $generated@@723) ($generated@@393 $generated@@725 $generated@@724)) (= ($generated@@85 ($generated@@499 $generated@@723)) ($generated@@473 $generated@@723)))))
 :pattern ( ($generated@@85 ($generated@@499 $generated@@723)))
)))
(assert (forall (($generated@@726 T@U) ) (! (let (($generated@@727 ($generated@@395 (type $generated@@726))))
(let (($generated@@728 ($generated@@394 (type $generated@@726))))
 (=> (= (type $generated@@726) ($generated@@393 $generated@@728 $generated@@727)) (<= ($generated@@85 ($generated@@444 $generated@@726)) ($generated@@473 $generated@@726)))))
 :pattern ( ($generated@@85 ($generated@@444 $generated@@726)))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@729) $generated@@81) ($generated@@307 $generated@@729 ($generated@@183 0))) (and (= ($generated@@372 ($generated@@500 $generated@@2 $generated@@729)) $generated@@729) ($generated@@83 ($generated@@500 ($generated@@78 $generated@@81 $generated@@4) $generated@@729) ($generated@@183 0))))
 :pattern ( ($generated@@307 $generated@@729 ($generated@@183 0)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) $generated@@81) (= (type $generated@@731) $generated@@64)) ($generated@@307 $generated@@730 ($generated@@84 $generated@@731))) (and (= ($generated@@372 ($generated@@500 ($generated@@78 $generated@@81 $generated@@4) $generated@@730)) $generated@@730) ($generated@@83 ($generated@@500 ($generated@@78 $generated@@81 $generated@@4) $generated@@730) ($generated@@84 $generated@@731))))
 :pattern ( ($generated@@307 $generated@@730 ($generated@@84 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@732) $generated@@81) (= (type $generated@@733) $generated@@64)) ($generated@@307 $generated@@732 ($generated@@336 $generated@@733))) (and (= ($generated@@372 ($generated@@500 ($generated@@78 $generated@@81 $generated@@4) $generated@@732)) $generated@@732) ($generated@@83 ($generated@@500 ($generated@@78 $generated@@81 $generated@@4) $generated@@732) ($generated@@336 $generated@@733))))
 :pattern ( ($generated@@307 $generated@@732 ($generated@@336 $generated@@733)))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@734) $generated@@81) (= (type $generated@@735) $generated@@64)) ($generated@@307 $generated@@734 ($generated@@219 $generated@@735))) (and (= ($generated@@372 ($generated@@500 ($generated@@78 $generated@@81 $generated@@2) $generated@@734)) $generated@@734) ($generated@@83 ($generated@@500 ($generated@@78 $generated@@81 $generated@@2) $generated@@734) ($generated@@219 $generated@@735))))
 :pattern ( ($generated@@307 $generated@@734 ($generated@@219 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (= (type $generated@@736) $generated@@81) (= (type $generated@@737) $generated@@64)) ($generated@@307 $generated@@736 ($generated@@316 $generated@@737))) (and (= ($generated@@372 ($generated@@500 ($generated@@101 $generated@@81) $generated@@736)) $generated@@736) ($generated@@83 ($generated@@500 ($generated@@101 $generated@@81) $generated@@736) ($generated@@316 $generated@@737))))
 :pattern ( ($generated@@307 $generated@@736 ($generated@@316 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (! (let (($generated@@739 ($generated@@95 (type $generated@@738))))
 (=> (= (type $generated@@738) ($generated@@78 $generated@@739 $generated@@4)) (and (= (= ($generated@@85 $generated@@738) 0) (= $generated@@738 ($generated@@90 $generated@@739))) (=> (not (= ($generated@@85 $generated@@738) 0)) (exists (($generated@@740 T@U) ) (!  (and (= (type $generated@@740) $generated@@739) ($generated@@0 ($generated@@97 $generated@@738 $generated@@740)))
 :no-pattern (type $generated@@740)
 :no-pattern ($generated $generated@@740)
 :no-pattern ($generated@@0 $generated@@740)
))))))
 :pattern ( ($generated@@85 $generated@@738))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (! (let (($generated@@744 ($generated@@95 (type $generated@@742))))
 (=> (and (= (type $generated@@742) ($generated@@78 $generated@@744 $generated@@4)) (= (type $generated@@743) ($generated@@78 $generated@@744 $generated@@4))) (= ($generated@@741 $generated@@742 $generated@@743) (forall (($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@745) $generated@@744) ($generated@@0 ($generated@@97 $generated@@742 $generated@@745))) ($generated@@0 ($generated@@97 $generated@@743 $generated@@745)))
 :pattern ( ($generated@@97 $generated@@742 $generated@@745))
 :pattern ( ($generated@@97 $generated@@743 $generated@@745))
)))))
 :pattern ( ($generated@@741 $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (= (type $generated@@746) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@747) $generated@@64)) (= (type $generated@@748) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@182 $generated@@746 ($generated@@219 $generated@@747) $generated@@748) (forall (($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@81) (< 0 ($generated ($generated@@97 $generated@@746 $generated@@749)))) ($generated@@346 $generated@@749 $generated@@747 $generated@@748))
 :pattern ( ($generated@@97 $generated@@746 $generated@@749))
))))
 :pattern ( ($generated@@182 $generated@@746 ($generated@@219 $generated@@747) $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 (type $generated@@751)))
 (=> (and (= (type $generated@@750) ($generated@@78 $generated@@752 $generated@@4)) (not ($generated@@0 ($generated@@97 $generated@@750 $generated@@751)))) (= ($generated@@85 ($generated@@89 $generated@@750 $generated@@751)) (+ ($generated@@85 $generated@@750) 1))))
 :pattern ( ($generated@@85 ($generated@@89 $generated@@750 $generated@@751)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (! (let (($generated@@755 ($generated@@95 (type $generated@@753))))
 (=> (and (= (type $generated@@753) ($generated@@78 $generated@@755 $generated@@4)) (= (type $generated@@754) ($generated@@78 $generated@@755 $generated@@4))) (= ($generated@@469 $generated@@753 $generated@@754) (forall (($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@755) (or (not ($generated@@0 ($generated@@97 $generated@@753 $generated@@756))) (not ($generated@@0 ($generated@@97 $generated@@754 $generated@@756)))))
 :pattern ( ($generated@@97 $generated@@753 $generated@@756))
 :pattern ( ($generated@@97 $generated@@754 $generated@@756))
)))))
 :pattern ( ($generated@@469 $generated@@753 $generated@@754))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (= (type $generated@@757) $generated@@201) (= (type $generated@@758) $generated@@64)) (= (type $generated@@759) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@76 $generated@@759) (and ($generated@@199 $generated@@757) (exists (($generated@@760 T@U) ) (!  (and (= (type $generated@@760) $generated@@64) ($generated@@182 $generated@@757 ($generated@@200 $generated@@758 $generated@@760) $generated@@759))
 :pattern ( ($generated@@182 $generated@@757 ($generated@@200 $generated@@758 $generated@@760) $generated@@759))
))))) ($generated@@346 ($generated@@208 $generated@@757) $generated@@758 $generated@@759))
 :pattern ( ($generated@@346 ($generated@@208 $generated@@757) $generated@@758 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) $generated@@201) (= (type $generated@@762) $generated@@64)) (= (type $generated@@763) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@76 $generated@@763) (and ($generated@@199 $generated@@761) (exists (($generated@@764 T@U) ) (!  (and (= (type $generated@@764) $generated@@64) ($generated@@182 $generated@@761 ($generated@@200 $generated@@764 $generated@@762) $generated@@763))
 :pattern ( ($generated@@182 $generated@@761 ($generated@@200 $generated@@764 $generated@@762) $generated@@763))
))))) ($generated@@346 ($generated@@209 $generated@@761) $generated@@762 $generated@@763))
 :pattern ( ($generated@@346 ($generated@@209 $generated@@761) $generated@@762 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 Int) ) (! (let (($generated@@768 ($generated@@102 (type $generated@@765))))
 (=> (and (= (type $generated@@765) ($generated@@101 $generated@@768)) (= (type $generated@@766) ($generated@@101 $generated@@768))) (and (=> (< $generated@@767 ($generated@@317 $generated@@765)) (= ($generated@@318 ($generated@@93 $generated@@765 $generated@@766) $generated@@767) ($generated@@318 $generated@@765 $generated@@767))) (=> (<= ($generated@@317 $generated@@765) $generated@@767) (= ($generated@@318 ($generated@@93 $generated@@765 $generated@@766) $generated@@767) ($generated@@318 $generated@@766 (- $generated@@767 ($generated@@317 $generated@@765))))))))
 :pattern ( ($generated@@318 ($generated@@93 $generated@@765 $generated@@766) $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@769) $generated@@81) (= (type $generated@@770) $generated@@81)) (= ($generated@@306 ($generated@@75 $generated@@769) ($generated@@75 $generated@@770)) ($generated@@75 ($generated@@306 $generated@@769 $generated@@770))))
 :pattern ( ($generated@@306 ($generated@@75 $generated@@769) ($generated@@75 $generated@@770)))
)))
(assert (forall (($generated@@771 Int) ) (! (= ($generated@@372 ($generated@@8 ($generated@@86 $generated@@771))) ($generated@@75 ($generated@@372 ($generated@@8 $generated@@771))))
 :pattern ( ($generated@@372 ($generated@@8 ($generated@@86 $generated@@771))))
)))
(assert (forall (($generated@@772 T@U) ) (! (= ($generated@@372 ($generated@@75 $generated@@772)) ($generated@@75 ($generated@@372 $generated@@772)))
 :pattern ( ($generated@@372 ($generated@@75 $generated@@772)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (= (type $generated@@773) $generated@@64) (= (type $generated@@774) $generated@@77)) (= (type $generated@@775) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@773 $generated@@775) (and (not (= 1 $generated@@72)) ($generated@@83 $generated@@775 ($generated@@84 $generated@@773))))) (and ($generated@@314 $generated@@773 $generated@@775 ($generated@@73 $generated@@773 $generated@@774 $generated@@775)) ($generated@@83 ($generated@@73 $generated@@773 $generated@@774 $generated@@775) ($generated@@316 $generated@@773))))
 :pattern ( ($generated@@73 $generated@@773 $generated@@774 $generated@@775))
))))
(assert (forall (($generated@@776 T@U) ) (! (let (($generated@@777 ($generated@@102 (type $generated@@776))))
 (=> (and (= (type $generated@@776) ($generated@@101 $generated@@777)) (= ($generated@@317 $generated@@776) 0)) (= $generated@@776 ($generated@@92 $generated@@777))))
 :pattern ( ($generated@@317 $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (! (let (($generated@@781 (type $generated@@779)))
 (=> (and (and (= (type $generated@@778) ($generated@@78 $generated@@781 $generated@@2)) (= (type $generated@@780) $generated@@2)) (<= 0 ($generated $generated@@780))) (= ($generated@@385 ($generated@@98 $generated@@778 $generated@@779 $generated@@780)) (+ (- ($generated@@385 $generated@@778) ($generated ($generated@@97 $generated@@778 $generated@@779))) ($generated $generated@@780)))))
 :pattern ( ($generated@@385 ($generated@@98 $generated@@778 $generated@@779 $generated@@780)))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (! (let (($generated@@785 (type $generated@@784)))
 (=> (and (= (type $generated@@782) ($generated@@78 $generated@@785 $generated@@4)) (= (type $generated@@783) ($generated@@78 $generated@@785 $generated@@4))) (= ($generated@@0 ($generated@@97 ($generated@@292 $generated@@782 $generated@@783) $generated@@784))  (or ($generated@@0 ($generated@@97 $generated@@782 $generated@@784)) ($generated@@0 ($generated@@97 $generated@@783 $generated@@784))))))
 :pattern ( ($generated@@97 ($generated@@292 $generated@@782 $generated@@783) $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@787) $generated@@2)) ($generated@@182 $generated@@787 $generated@@46 $generated@@786))
 :pattern ( ($generated@@182 $generated@@787 $generated@@46 $generated@@786))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@789) $generated@@3)) ($generated@@182 $generated@@789 $generated@@47 $generated@@788))
 :pattern ( ($generated@@182 $generated@@789 $generated@@47 $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@791) $generated@@4)) ($generated@@182 $generated@@791 $generated@@44 $generated@@790))
 :pattern ( ($generated@@182 $generated@@791 $generated@@44 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@793) $generated@@591)) ($generated@@182 $generated@@793 $generated@@45 $generated@@792))
 :pattern ( ($generated@@182 $generated@@793 $generated@@45 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@795) $generated@@81)) ($generated@@182 $generated@@795 $generated@@48 $generated@@794))
 :pattern ( ($generated@@182 $generated@@795 $generated@@48 $generated@@794))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (= (type $generated@@796) ($generated@@101 $generated@@81)) (= (type $generated@@797) $generated@@64)) (= ($generated@@83 $generated@@796 ($generated@@316 $generated@@797)) (forall (($generated@@798 Int) ) (!  (=> (and (<= 0 $generated@@798) (< $generated@@798 ($generated@@317 $generated@@796))) ($generated@@307 ($generated@@318 $generated@@796 $generated@@798) $generated@@797))
 :pattern ( ($generated@@318 $generated@@796 $generated@@798))
))))
 :pattern ( ($generated@@83 $generated@@796 ($generated@@316 $generated@@797)))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 Int) ) (!  (=> (= (type $generated@@800) ($generated@@101 $generated@@81)) (=> (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@317 $generated@@800))) (< ($generated@@680 ($generated@@500 $generated@@201 ($generated@@318 $generated@@800 $generated@@801))) ($generated@@799 $generated@@800))))
 :pattern ( ($generated@@680 ($generated@@500 $generated@@201 ($generated@@318 $generated@@800 $generated@@801))))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (and (= (type $generated@@802) ($generated@@393 $generated@@81 $generated@@81)) (= (type $generated@@803) $generated@@64)) (= (type $generated@@804) $generated@@64)) ($generated@@83 $generated@@802 ($generated@@528 $generated@@803 $generated@@804))) (and (and ($generated@@83 ($generated@@391 $generated@@802) ($generated@@84 $generated@@803)) ($generated@@83 ($generated@@444 $generated@@802) ($generated@@84 $generated@@804))) ($generated@@83 ($generated@@499 $generated@@802) ($generated@@84 ($generated@@200 $generated@@803 $generated@@804)))))
 :pattern ( ($generated@@83 $generated@@802 ($generated@@528 $generated@@803 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) ($generated@@411 $generated@@81 $generated@@81)) (= (type $generated@@806) $generated@@64)) (= (type $generated@@807) $generated@@64)) ($generated@@83 $generated@@805 ($generated@@536 $generated@@806 $generated@@807))) (and (and ($generated@@83 ($generated@@409 $generated@@805) ($generated@@336 $generated@@806)) ($generated@@83 ($generated@@455 $generated@@805) ($generated@@336 $generated@@807))) ($generated@@83 ($generated@@510 $generated@@805) ($generated@@336 ($generated@@200 $generated@@806 $generated@@807)))))
 :pattern ( ($generated@@83 $generated@@805 ($generated@@536 $generated@@806 $generated@@807)))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) $generated@@2) ($generated@@83 $generated@@808 $generated@@46))
 :pattern ( ($generated@@83 $generated@@808 $generated@@46))
)))
(assert (forall (($generated@@809 T@U) ) (!  (=> (= (type $generated@@809) $generated@@3) ($generated@@83 $generated@@809 $generated@@47))
 :pattern ( ($generated@@83 $generated@@809 $generated@@47))
)))
(assert (forall (($generated@@810 T@U) ) (!  (=> (= (type $generated@@810) $generated@@4) ($generated@@83 $generated@@810 $generated@@44))
 :pattern ( ($generated@@83 $generated@@810 $generated@@44))
)))
(assert (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@591) ($generated@@83 $generated@@811 $generated@@45))
 :pattern ( ($generated@@83 $generated@@811 $generated@@45))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@81) ($generated@@83 $generated@@812 $generated@@48))
 :pattern ( ($generated@@83 $generated@@812 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@813) $generated@@64) (= (type $generated@@814) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@815) ($generated@@101 $generated@@81))) (= (type $generated@@816) $generated@@81)) (= (type $generated@@817) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@818) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@819) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@820) ($generated@@101 $generated@@81))) (= (type $generated@@821) ($generated@@101 $generated@@81))) (= (type $generated@@822) $generated@@81)) (= (type $generated@@823) ($generated@@226 $generated@@79 $generated@@4))) (= (type $generated@@824) $generated@@79)) (= (type $generated@@825) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@826) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@827) ($generated@@226 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@829  (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@315 $generated@@813 $generated@@814 $generated@@815) (or ($generated@@314 $generated@@813 $generated@@814 $generated@@815) (=> (= ($generated@@85 $generated@@814) ($generated@@317 $generated@@815)) (forall (($generated@@830 Int) ) (!  (=> true (=> (and (<= ($generated@@86 0) $generated@@830) (< $generated@@830 ($generated@@317 $generated@@815))) ($generated@@0 ($generated@@97 $generated@@814 ($generated@@318 $generated@@815 $generated@@830)))))
 :pattern ( ($generated@@318 $generated@@815 $generated@@830))
)))))) (=> (=> ($generated@@315 $generated@@813 $generated@@814 $generated@@815) (or ($generated@@314 $generated@@813 $generated@@814 $generated@@815) (=> (= ($generated@@85 $generated@@814) ($generated@@317 $generated@@815)) (forall (($generated@@831 Int) ) (!  (=> true (=> (and (<= ($generated@@86 0) $generated@@831) (< $generated@@831 ($generated@@317 $generated@@815))) ($generated@@0 ($generated@@97 $generated@@814 ($generated@@318 $generated@@815 $generated@@831)))))
 :pattern ( ($generated@@318 $generated@@815 $generated@@831))
))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@315 $generated@@813 $generated@@814 $generated@@815) (or ($generated@@314 $generated@@813 $generated@@814 $generated@@815) (=> (= ($generated@@85 $generated@@814) ($generated@@317 $generated@@815)) (forall (($generated@@832 T@U) ) (!  (=> (and (and (= (type $generated@@832) $generated@@81) ($generated@@307 $generated@@832 $generated@@813)) ($generated@@0 ($generated@@97 $generated@@814 $generated@@832))) ($generated@@193 $generated@@815 $generated@@832))
 :pattern ( ($generated@@193 $generated@@815 $generated@@832))
 :pattern ( ($generated@@97 $generated@@814 $generated@@832))
))))))))))
(let (($generated@@833  (=> (and (= ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@814) $generated@@815) (= (ControlFlow 0 5) 3)) $generated@@829)))
(let (($generated@@834  (and (=> (= (ControlFlow 0 7) (- 0 10)) (exists (($generated@@835 T@U) ) (!  (and (= (type $generated@@835) $generated@@81) (and ($generated@@307 $generated@@835 $generated@@813) ($generated@@0 ($generated@@97 $generated@@814 $generated@@835))))
 :no-pattern (type $generated@@835)
 :no-pattern ($generated $generated@@835)
 :no-pattern ($generated@@0 $generated@@835)
))) (=> (exists (($generated@@836 T@U) ) (!  (and (= (type $generated@@836) $generated@@81) (and ($generated@@307 $generated@@836 $generated@@813) ($generated@@0 ($generated@@97 $generated@@814 $generated@@836))))
 :no-pattern (type $generated@@836)
 :no-pattern ($generated $generated@@836)
 :no-pattern ($generated@@0 $generated@@836)
)) (=> (and (and ($generated@@307 $generated@@816 $generated@@813) ($generated@@346 $generated@@816 $generated@@813 $generated@@817)) ($generated@@0 ($generated@@97 $generated@@814 $generated@@816))) (=> (and (and (and (and ($generated@@83 $generated@@818 ($generated@@84 $generated@@813)) ($generated@@182 $generated@@818 ($generated@@84 $generated@@813) $generated@@817)) (= $generated@@819 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@816)))) (and ($generated@@83 $generated@@819 ($generated@@84 $generated@@813)) (= $generated@@818 $generated@@819))) (and (and ($generated@@83 $generated@@820 ($generated@@316 $generated@@813)) ($generated@@182 $generated@@820 ($generated@@316 $generated@@813) $generated@@817)) ($generated@@182 $generated@@818 ($generated@@84 $generated@@813) $generated@@817))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and ($generated@@741 $generated@@818 $generated@@814) (not ($generated@@741 $generated@@814 $generated@@818)))) (=> (and ($generated@@741 $generated@@818 $generated@@814) (not ($generated@@741 $generated@@814 $generated@@818))) (=> ($generated@@82 $generated@@813 $generated@@818) (=> (and (and (and (= $generated@@821 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@818)) ($generated@@82 $generated@@813 $generated@@818)) (and ($generated@@83 $generated@@821 ($generated@@316 $generated@@813)) (= $generated@@820 $generated@@821))) (and (and ($generated@@307 $generated@@822 $generated@@813) ($generated@@346 $generated@@822 $generated@@813 $generated@@817)) (and ($generated@@0 ($generated@@97 $generated@@814 $generated@@822)) (let (($generated@@837 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@822))))
($generated@@82 $generated@@813 $generated@@837))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@360 (let (($generated@@838 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@816))))
(let (($generated@@839 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@838)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@816) $generated@@839))) (let (($generated@@840 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@822))))
(let (($generated@@841 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@840)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@822) $generated@@841))))) (=> ($generated@@360 (let (($generated@@842 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@816))))
(let (($generated@@843 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@842)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@816) $generated@@843))) (let (($generated@@844 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@822))))
(let (($generated@@845 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@844)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@822) $generated@@845)))) (=> ($generated@@87 $generated@@813 $generated@@814) (=> (and (and (= ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@814) (let (($generated@@846 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@816))))
(let (($generated@@847 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@846)))
($generated@@93 ($generated@@94 ($generated@@92 $generated@@81) $generated@@816) $generated@@847)))) (let (($generated@@848 ($generated@@88 $generated@@814 ($generated@@89 ($generated@@90 $generated@@81) $generated@@816))))
($generated@@82 $generated@@813 $generated@@848))) (and ($generated@@83 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@814) ($generated@@316 $generated@@813)) (= (ControlFlow 0 7) 5))) $generated@@833))))))))))))))
(let (($generated@@849  (=> (and (not (and ($generated@@307 $generated@@816 $generated@@813) ($generated@@346 $generated@@816 $generated@@813 $generated@@817))) (= (ControlFlow 0 12) 7)) $generated@@834)))
(let (($generated@@850  (=> (and (and ($generated@@307 $generated@@816 $generated@@813) ($generated@@346 $generated@@816 $generated@@813 $generated@@817)) (= (ControlFlow 0 11) 7)) $generated@@834)))
(let (($generated@@851  (=> (not (= ($generated@@85 $generated@@814) ($generated@@86 0))) (and (=> (= (ControlFlow 0 13) 11) $generated@@850) (=> (= (ControlFlow 0 13) 12) $generated@@849)))))
(let (($generated@@852  (=> (and (and (= ($generated@@85 $generated@@814) ($generated@@86 0)) (= ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@814) ($generated@@75 ($generated@@92 $generated@@81)))) (and ($generated@@83 ($generated@@73 $generated@@813 ($generated@@74 $generated@@188) $generated@@814) ($generated@@316 $generated@@813)) (= (ControlFlow 0 6) 5))) $generated@@833)))
(let (($generated@@853  (=> (= $generated@@823 ($generated@@280 $generated@@824 $generated@@817 $generated@@60 false)) (=> (and (and (and ($generated@@83 $generated@@825 ($generated@@84 $generated@@813)) ($generated@@182 $generated@@825 ($generated@@84 $generated@@813) $generated@@817)) (= $generated@@826 $generated@@814)) (and ($generated@@83 $generated@@826 ($generated@@84 $generated@@813)) (= $generated@@825 $generated@@826))) (and (=> (= (ControlFlow 0 14) 6) $generated@@852) (=> (= (ControlFlow 0 14) 13) $generated@@851))))))
(let (($generated@@854 true))
(let (($generated@@855  (=> (= $generated@@827 ($generated@@225 $generated@@824 $generated@@817 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@854) (=> (= (ControlFlow 0 15) 14) $generated@@853)))))
(let (($generated@@856  (=> (and ($generated@@76 $generated@@817) ($generated@@828 $generated@@817)) (=> (and (and ($generated@@83 $generated@@814 ($generated@@84 $generated@@813)) ($generated@@83 $generated@@815 ($generated@@316 $generated@@813))) (and (= 1 $generated@@72) (= (ControlFlow 0 16) 15))) $generated@@855))))
$generated@@856))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (T@U) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@T) T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert  (and (and (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@233 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@233 $generated@@241))
)) (forall (($generated@@243 T@U) ) (! (= (type ($generated@@236 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@243))
))) (forall (($generated@@244 T@T) ) (! (= (type ($generated@@238 $generated@@244)) ($generated@@76 $generated@@244 $generated@@4))
 :pattern ( ($generated@@238 $generated@@244))
))))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@246) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@235 ($generated@@233 $generated@@246)) (and (not (= 0 $generated@@231)) (and (and ($generated@@234 $generated@@245) ($generated@@132 $generated@@246 ($generated@@236 $generated@@46))) (not ($generated@@237 $generated@@246 ($generated@@238 $generated@@145))))))) (and ($generated@@239 ($generated@@233 $generated@@246)) (= ($generated@@232 ($generated@@233 $generated@@246)) (let (($generated@@247 ($generated@@240 ($generated@@233 $generated@@246))))
$generated@@247))))
 :weight 3
 :pattern ( ($generated@@232 ($generated@@233 $generated@@246)) ($generated@@234 $generated@@245))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@136) (= (type $generated@@249) $generated@@136)) (= ($generated@@142 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@142 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@132 $generated@@250 ($generated@@236 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@145) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@224 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@132 $generated@@250 ($generated@@236 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@145) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@224 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@233 $generated@@260) $generated@@260)
 :pattern ( ($generated@@233 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@64) (= (type $generated@@263) $generated@@64)) (= (type $generated@@264) $generated@@145)) (= (type $generated@@265) $generated@@145)) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@234 $generated@@266)) (= ($generated@@74 ($generated@@223 $generated@@264 $generated@@265) ($generated@@135 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@264 $generated@@265) ($generated@@135 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@136) (= ($generated@@134 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@136) ($generated@@134 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@145) (= (type $generated@@272) $generated@@145)) (= $generated@@270 ($generated@@223 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@134 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 17)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@76 $generated@@145 $generated@@4)) (or ($generated@@235 $generated@@281) (and (not (= 0 $generated@@231)) (and ($generated@@132 $generated@@281 ($generated@@236 $generated@@46)) (not ($generated@@237 $generated@@281 ($generated@@238 $generated@@145))))))) true)
 :pattern ( ($generated@@232 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@145)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@261 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@74 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@261 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@76 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@79 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@76 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@81 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@76 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@329))))
 (=> (and (= (type $generated@@329) ($generated@@76 $generated@@331 $generated@@4)) (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@4))) (= ($generated@@237 $generated@@329 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (= ($generated@@0 ($generated@@81 $generated@@329 $generated@@332)) ($generated@@0 ($generated@@81 $generated@@330 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@329 $generated@@332))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@237 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@151 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@287 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@151 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@293 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@297 (type $generated@@343))))
(let (($generated@@345 ($generated@@296 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@295 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@294 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@315 (type $generated@@347))))
(let (($generated@@349 ($generated@@314 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@313 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@312 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@311 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@132 $generated@@358 ($generated@@150 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@224 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@132 $generated@@358 ($generated@@150 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@236 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@261 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@236 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@253 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@145) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@261 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@253 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@288 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@288 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@297 (type $generated@@377))))
(let (($generated@@379 ($generated@@296 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@380) ($generated@@143 ($generated@@372 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@373 $generated@@380) ($generated@@143 ($generated@@372 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@372 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@315 (type $generated@@385))))
(let (($generated@@387 ($generated@@314 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@388) ($generated@@143 ($generated@@372 $generated@@136 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@143 ($generated@@372 $generated@@136 $generated@@389))) ($generated@@144 ($generated@@372 $generated@@136 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@296 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@295 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@314 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@313 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@403) $generated@@407))) (and ($generated@@261 ($generated@@81 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@261 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@411) $generated@@415))) (and ($generated@@261 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@261 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@79 (type $generated@@416))))
 (=> (and (and (= (type $generated@@416) ($generated@@76 $generated@@418 $generated@@4)) (= (type $generated@@417) ($generated@@76 $generated@@418 $generated@@4))) ($generated@@237 $generated@@416 $generated@@417)) (= $generated@@416 $generated@@417)))
 :pattern ( ($generated@@237 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@311 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@311 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@315 (type $generated@@424))))
(let (($generated@@426 ($generated@@314 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@313 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@312 $generated@@426 $generated@@425)) (= ($generated@@351 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@351 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@315 (type $generated@@427))))
(let (($generated@@429 ($generated@@314 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@313 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@312 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@145))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@297 (type $generated@@430))))
(let (($generated@@432 ($generated@@296 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@295 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@294 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@430) ($generated@@282 ($generated@@223 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@371 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@315 (type $generated@@435))))
(let (($generated@@437 ($generated@@314 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@313 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@312 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@435) ($generated@@282 ($generated@@223 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@46)) (and (= ($generated@@282 ($generated@@372 $generated@@2 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@372 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@224 $generated@@441 $generated@@47)) (and (= ($generated@@282 ($generated@@372 $generated@@3 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@372 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@224 $generated@@442 $generated@@44)) (and (= ($generated@@282 ($generated@@372 $generated@@4 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@372 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@224 $generated@@444 $generated@@45)) (and (= ($generated@@282 ($generated@@372 $generated@@443 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@372 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@224 ($generated@@282 $generated@@445) $generated@@446) ($generated@@132 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@224 ($generated@@282 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@287 $generated@@447))))
 :pattern ( ($generated@@287 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@276 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@275 $generated@@450)) (<= 0 ($generated@@274 $generated@@449))))
 :pattern ( ($generated@@274 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@267 ($generated@@223 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@223 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@276 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@275 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@274 $generated@@491))) ($generated@@261 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@236 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@236 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@253 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@253 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@150 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@372 $generated@@514 ($generated@@282 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@282 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@519) $generated@@522))) (and ($generated@@224 ($generated@@81 ($generated@@383 $generated@@519) $generated@@522) $generated@@521) ($generated@@224 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@223 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@223 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@529 ($generated@@400 $generated@@530 $generated@@531))) (and (= ($generated@@282 ($generated@@372 ($generated@@295 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@372 ($generated@@295 $generated@@145 $generated@@145) $generated@@529) ($generated@@400 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@400 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@408 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@372 ($generated@@313 $generated@@145 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@372 ($generated@@313 $generated@@145 $generated@@145) $generated@@532) ($generated@@408 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@408 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@145)) ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536))) (and (= ($generated@@282 ($generated@@372 $generated@@136 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@372 $generated@@136 $generated@@537) ($generated@@135 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@238 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@238 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@81 ($generated@@419 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@69)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@135 $generated@@544 $generated@@545)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@136) (= ($generated@@523 ($generated@@282 $generated@@546)) ($generated@@524 $generated@@546)))
 :pattern ( ($generated@@523 ($generated@@282 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) ($generated@@224 $generated@@547 ($generated@@75 0))) (and (= ($generated@@282 ($generated@@372 $generated@@2 $generated@@547)) $generated@@547) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@75 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@236 $generated@@549))) (and (= ($generated@@282 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@236 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@236 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@253 $generated@@551))) (and (= ($generated@@282 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@253 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@253 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@150 $generated@@553))) (and (= ($generated@@282 ($generated@@372 ($generated@@76 $generated@@145 $generated@@2) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@2) $generated@@552) ($generated@@150 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@150 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@485 $generated@@555))) (and (= ($generated@@282 ($generated@@372 ($generated@@275 $generated@@145) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@372 ($generated@@275 $generated@@145) $generated@@554) ($generated@@485 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@485 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@556 ($generated@@150 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@556 $generated@@559)))) ($generated@@261 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@81 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@150 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@234 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@261 ($generated@@143 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@261 ($generated@@143 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@234 $generated@@566) (and ($generated@@134 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@64) ($generated@@74 $generated@@564 ($generated@@135 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@135 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@261 ($generated@@144 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@261 ($generated@@144 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@145) (= (type $generated@@569) $generated@@145)) (= ($generated@@223 ($generated@@233 $generated@@568) ($generated@@233 $generated@@569)) ($generated@@233 ($generated@@223 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@223 ($generated@@233 $generated@@568) ($generated@@233 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@145 $generated@@4)) ($generated@@239 $generated@@570)) ($generated@@0 ($generated@@81 $generated@@570 ($generated@@282 ($generated@@8 ($generated@@240 $generated@@570))))))
 :pattern ( ($generated@@240 $generated@@570))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@258 $generated@@571))) ($generated@@233 ($generated@@282 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@258 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@282 ($generated@@233 $generated@@572)) ($generated@@233 ($generated@@282 $generated@@572)))
 :pattern ( ($generated@@282 ($generated@@233 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@276 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@275 $generated@@574)) (= ($generated@@274 $generated@@573) 0)) (= $generated@@573 ($generated@@273 $generated@@574))))
 :pattern ( ($generated@@274 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@287 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@287 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@287 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@235 $generated@@580) (and (not (= 0 $generated@@231)) (and (and ($generated@@234 $generated@@579) ($generated@@132 $generated@@580 ($generated@@236 $generated@@46))) (not ($generated@@237 $generated@@580 ($generated@@238 $generated@@145))))))) (and ($generated@@239 $generated@@580) (= ($generated@@232 $generated@@580) (let (($generated@@581 ($generated@@240 $generated@@580)))
$generated@@581))))
 :pattern ( ($generated@@232 $generated@@580) ($generated@@234 $generated@@579))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@2)) ($generated@@74 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@3)) ($generated@@74 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@4)) ($generated@@74 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@443)) ($generated@@74 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@145)) ($generated@@74 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@275 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= ($generated@@132 $generated@@592 ($generated@@485 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@274 $generated@@592))) ($generated@@224 ($generated@@486 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@486 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@485 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@275 $generated@@145)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@274 $generated@@596))) (< ($generated@@524 ($generated@@372 $generated@@136 ($generated@@486 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@524 ($generated@@372 $generated@@136 ($generated@@486 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@132 $generated@@598 ($generated@@400 $generated@@599 $generated@@600))) (and (and ($generated@@132 ($generated@@293 $generated@@598) ($generated@@236 $generated@@599)) ($generated@@132 ($generated@@340 $generated@@598) ($generated@@236 $generated@@600))) ($generated@@132 ($generated@@371 $generated@@598) ($generated@@236 ($generated@@135 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@132 $generated@@598 ($generated@@400 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@408 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@311 $generated@@601) ($generated@@253 $generated@@602)) ($generated@@132 ($generated@@351 $generated@@601) ($generated@@253 $generated@@603))) ($generated@@132 ($generated@@382 $generated@@601) ($generated@@253 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@408 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@132 $generated@@604 $generated@@46))
 :pattern ( ($generated@@132 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@132 $generated@@605 $generated@@47))
 :pattern ( ($generated@@132 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@132 $generated@@606 $generated@@44))
 :pattern ( ($generated@@132 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@443) ($generated@@132 $generated@@607 $generated@@45))
 :pattern ( ($generated@@132 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@145) ($generated@@132 $generated@@608 $generated@@48))
 :pattern ( ($generated@@132 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@609) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@612) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@613) $generated@@77)) (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@617) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@619 true))
(let (($generated@@620  (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and ($generated@@132 ($generated@@8 ($generated@@258 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@282 ($generated@@8 ($generated@@258 0)))))) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@2) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@282 $generated@@621))))
 :no-pattern (type $generated@@621)
 :no-pattern ($generated $generated@@621)
 :no-pattern ($generated@@0 $generated@@621)
)))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@258 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@282 ($generated@@8 ($generated@@258 0)))))) (exists (($generated@@622 Int) ) ($generated@@0 ($generated@@81 $generated@@609 ($generated@@282 ($generated@@8 $generated@@622)))))) (=> ($generated@@0 ($generated@@81 $generated@@609 ($generated@@282 ($generated@@8 $generated@@610)))) (=> (and ($generated@@0 ($generated@@81 $generated@@609 ($generated@@282 ($generated@@8 $generated@@611)))) (= (ControlFlow 0 3) (- 0 2))) (= $generated@@610 $generated@@611)))))))
(let (($generated@@623  (=> (and (and (= $generated@@612 ($generated@@211 $generated@@613 $generated@@614 $generated@@60 false)) (= $generated@@615 ($generated@@258 10))) (and ($generated@@132 ($generated@@8 $generated@@615) $generated@@46) (= $generated@@616 $generated@@615))) (and (=> (= (ControlFlow 0 6) 3) $generated@@620) (=> (= (ControlFlow 0 6) 5) $generated@@619)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (= $generated@@617 ($generated@@156 $generated@@613 $generated@@614 $generated@@60 false)) (not ($generated@@237 $generated@@609 ($generated@@238 $generated@@145)))) (and (=> (= (ControlFlow 0 7) 1) $generated@@624) (=> (= (ControlFlow 0 7) 6) $generated@@623)))))
(let (($generated@@626  (=> (and (and (and ($generated@@234 $generated@@614) ($generated@@618 $generated@@614)) ($generated@@132 $generated@@609 ($generated@@236 $generated@@46))) (and (= 0 $generated@@231) (= (ControlFlow 0 8) 7))) $generated@@625)))
$generated@@626)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@T) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@U Int) T@U)
(declare-fun $generated@@275 (Int) Int)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@294 (T@U T@U) Bool)
(declare-fun $generated@@295 (T@U T@U) Bool)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U T@U) T@U)
(declare-fun $generated@@300 (T@U T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U T@U) Bool)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@456 (T@U T@U) Bool)
(declare-fun $generated@@460 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@T T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U T@U) T@U)
(declare-fun $generated@@523 (T@U T@U) T@U)
(declare-fun $generated@@557 (T@T) T@U)
(declare-fun $generated@@581 () T@T)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@641 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(declare-fun $generated@@670 (T@U) Int)
(declare-fun $generated@@696 (T@U) T@U)
(declare-fun $generated@@700 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@731 (T@U T@U) Bool)
(declare-fun $generated@@799 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@139)) 16))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@137 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@137 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@132 $generated@@141 $generated@@142 $generated@@143)) ($generated@@137 $generated@@135))
 :pattern ( ($generated@@132 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@133 $generated@@144)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@144))
))) (= (type $generated@@136) $generated@@134)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@134)) (= (type $generated@@147) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@132 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@145 $generated@@136 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@145 ($generated@@133 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(= (type ($generated@@149 $generated@@150 $generated@@151)) ($generated@@137 $generated@@152)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@154)))
 (=> (and (= (type $generated@@153) ($generated@@137 $generated@@156)) (= (type $generated@@155) $generated@@156)) (= ($generated@@148 ($generated@@149 $generated@@153 $generated@@154) $generated@@155)  (or (= $generated@@154 $generated@@155) ($generated@@148 $generated@@153 $generated@@155)))))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@153 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@75 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 17) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@64) (= (type $generated@@165) $generated@@64)) (= (type $generated@@166) $generated@@161)) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@135)
 :pattern ( ($generated@@168 $generated@@170))
)) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@135)
 :pattern ( ($generated@@169 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@161) (= (type $generated@@173) $generated@@161)) true) (= ($generated@@167 $generated@@172 $generated@@173)  (and (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)) (= ($generated@@169 $generated@@172) ($generated@@169 $generated@@173)))))
 :pattern ( ($generated@@167 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@T) ) (! (= (type ($generated@@174 $generated@@175)) ($generated@@137 $generated@@175))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
 (not ($generated@@148 ($generated@@174 $generated@@177) $generated@@176)))
 :pattern ( (let (($generated@@177 (type $generated@@176)))
($generated@@148 ($generated@@174 $generated@@177) $generated@@176)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@134)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@64) (= (type $generated@@181) $generated@@134)) (= (type $generated@@182) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@132 $generated@@180 ($generated@@178 $generated@@181) $generated@@182) ($generated@@132 $generated@@180 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@132 $generated@@180 ($generated@@178 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@187) $generated@@64)) ($generated@@157 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@157 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@77 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@67 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@239) ($generated@@66 $generated@@4))) (= (type $generated@@241) $generated@@77)) (= (type $generated@@242) ($generated@@66 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@79 (type $generated@@245))))
(= (type ($generated@@244 $generated@@245 $generated@@246)) ($generated@@76 $generated@@247 $generated@@4)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@79 (type $generated@@248))))
 (=> (and (= (type $generated@@248) ($generated@@76 $generated@@250 $generated@@4)) (= (type $generated@@249) ($generated@@76 $generated@@250 $generated@@4))) (= ($generated@@244 ($generated@@244 $generated@@248 $generated@@249) $generated@@249) ($generated@@244 $generated@@248 $generated@@249))))
 :pattern ( ($generated@@244 ($generated@@244 $generated@@248 $generated@@249) $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@79 (type $generated@@252))))
(= (type ($generated@@251 $generated@@252 $generated@@253)) ($generated@@76 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@79 (type $generated@@255))))
 (=> (and (= (type $generated@@255) ($generated@@76 $generated@@257 $generated@@4)) (= (type $generated@@256) ($generated@@76 $generated@@257 $generated@@4))) (= ($generated@@251 ($generated@@251 $generated@@255 $generated@@256) $generated@@256) ($generated@@251 $generated@@255 $generated@@256))))
 :pattern ( ($generated@@251 ($generated@@251 $generated@@255 $generated@@256) $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@161)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@64) (= (type $generated@@263) $generated@@64)) (= (type $generated@@264) $generated@@135)) (= (type $generated@@265) $generated@@135)) (= ($generated@@157 ($generated@@258 $generated@@264 $generated@@265) ($generated@@160 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@157 ($generated@@258 $generated@@264 $generated@@265) ($generated@@160 $generated@@262 $generated@@263)))
)))
(assert  (and (and (and (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@268 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@268 $generated@@276))
)) (forall (($generated@@278 T@U) ) (! (= (type ($generated@@270 $generated@@278)) $generated@@64)
 :pattern ( ($generated@@270 $generated@@278))
))) (forall (($generated@@279 T@U) ) (! (= (type ($generated@@271 $generated@@279)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@279))
))) (forall (($generated@@280 T@U) ($generated@@281 Int) ) (! (let (($generated@@282 ($generated@@138 (type $generated@@280))))
(= (type ($generated@@274 $generated@@280 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@274 $generated@@280 $generated@@281))
))))
(assert  (=> (<= 0 $generated@@266) (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@285) ($generated@@137 $generated@@135))) (or ($generated@@269 $generated@@283 ($generated@@268 $generated@@284) ($generated@@268 $generated@@285)) (and (not (= 0 $generated@@266)) (and ($generated@@157 $generated@@284 ($generated@@270 $generated@@283)) ($generated@@157 $generated@@285 ($generated@@271 $generated@@283)))))) (= ($generated@@267 $generated@@283 ($generated@@268 $generated@@284) ($generated@@268 $generated@@285))  (=> (= ($generated@@272 ($generated@@268 $generated@@284)) ($generated@@273 ($generated@@268 $generated@@285))) (and (forall (($generated@@286 Int) ) (!  (=> true (=> (and (<= ($generated@@275 0) $generated@@286) (< $generated@@286 ($generated@@273 ($generated@@268 $generated@@285)))) ($generated@@0 ($generated@@81 ($generated@@268 $generated@@284) ($generated@@274 ($generated@@268 $generated@@285) $generated@@286)))))
 :pattern ( ($generated@@274 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@135) ($generated@@259 $generated@@287 $generated@@283)) ($generated@@0 ($generated@@81 ($generated@@268 $generated@@284) $generated@@287))) ($generated@@148 $generated@@285 $generated@@287))
 :pattern ( ($generated@@148 $generated@@285 $generated@@287))
 :pattern ( ($generated@@81 $generated@@284 $generated@@287))
))))))
 :weight 3
 :pattern ( ($generated@@267 $generated@@283 ($generated@@268 $generated@@284) ($generated@@268 $generated@@285)))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@76 $generated@@290 $generated@@4)) (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@4))) (= (+ ($generated@@272 ($generated@@244 $generated@@288 $generated@@289)) ($generated@@272 ($generated@@251 $generated@@288 $generated@@289))) (+ ($generated@@272 $generated@@288) ($generated@@272 $generated@@289)))))
 :pattern ( ($generated@@272 ($generated@@244 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@272 ($generated@@251 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@161) (= (type $generated@@292) $generated@@161)) (= ($generated@@167 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@167 $generated@@291 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@79 (type $generated@@301))))
(= (type ($generated@@296 $generated@@301 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
)) (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
(= (type ($generated@@297 $generated@@304 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@298 $generated@@307)) ($generated@@76 $generated@@307 $generated@@4))
 :pattern ( ($generated@@298 $generated@@307))
))) (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (= (type ($generated@@299 $generated@@308 $generated@@309)) $generated@@135)
 :pattern ( ($generated@@299 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@138 (type $generated@@310))))
(= (type ($generated@@300 $generated@@310 $generated@@311)) ($generated@@137 $generated@@312)))
 :pattern ( ($generated@@300 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) $generated@@64) (= (type $generated@@314) $generated@@134)) (= (type $generated@@315) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@316) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@294 $generated@@313 $generated@@316) (and (not (= 1 $generated@@266)) (and ($generated@@293 $generated@@315) ($generated@@157 $generated@@316 ($generated@@270 $generated@@313)))))) (and (let (($generated@@317 $generated@@316))
 (=> (not (= ($generated@@272 $generated@@317) ($generated@@275 0))) (and ($generated@@295 $generated@@313 $generated@@317) (let (($generated@@318 ($generated@@296 $generated@@317 ($generated@@297 ($generated@@298 $generated@@135) ($generated@@299 $generated@@313 $generated@@317)))))
($generated@@294 $generated@@313 $generated@@318))))) (= ($generated@@132 $generated@@313 ($generated@@178 $generated@@314) $generated@@316) (let (($generated@@319 $generated@@316))
(ite (= ($generated@@272 $generated@@319) ($generated@@275 0)) ($generated@@174 $generated@@135) (let (($generated@@320 ($generated@@299 $generated@@313 $generated@@319)))
(let (($generated@@321 ($generated@@296 $generated@@319 ($generated@@297 ($generated@@298 $generated@@135) $generated@@320))))
(let (($generated@@322 ($generated@@132 $generated@@313 $generated@@314 $generated@@321)))
($generated@@300 ($generated@@149 ($generated@@174 $generated@@135) $generated@@320) $generated@@322)))))))))
 :pattern ( ($generated@@132 $generated@@313 ($generated@@178 $generated@@314) $generated@@316) ($generated@@293 $generated@@315))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@324) $generated@@64)) (= ($generated@@157 $generated@@323 ($generated@@270 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@135) ($generated@@0 ($generated@@81 $generated@@323 $generated@@325))) ($generated@@259 $generated@@325 $generated@@324))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@157 $generated@@323 ($generated@@270 $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@64)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@329) $generated@@64)) (= ($generated@@157 $generated@@328 ($generated@@326 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@135) ($generated@@0 ($generated@@81 $generated@@328 $generated@@330))) ($generated@@259 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@157 $generated@@328 ($generated@@326 $generated@@329)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@275 $generated@@331) $generated@@331)
 :pattern ( ($generated@@275 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (! (= ($generated@@268 $generated@@332) $generated@@332)
 :pattern ( ($generated@@268 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@137 $generated@@135)) (= (type $generated@@334) $generated@@135)) (= (type $generated@@335) $generated@@64)) (and ($generated@@157 $generated@@333 ($generated@@271 $generated@@335)) ($generated@@259 $generated@@334 $generated@@335))) ($generated@@157 ($generated@@149 $generated@@333 $generated@@334) ($generated@@271 $generated@@335)))
 :pattern ( ($generated@@157 ($generated@@149 $generated@@333 $generated@@334) ($generated@@271 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@337) $generated@@64) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) $generated@@135)) (= (type $generated@@340) $generated@@135)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@293 $generated@@341)) (= ($generated@@74 ($generated@@258 $generated@@339 $generated@@340) ($generated@@160 $generated@@337 $generated@@338) $generated@@341)  (and ($generated@@336 $generated@@339 $generated@@337 $generated@@341) ($generated@@336 $generated@@340 $generated@@338 $generated@@341))))
 :pattern ( ($generated@@74 ($generated@@258 $generated@@339 $generated@@340) ($generated@@160 $generated@@337 $generated@@338) $generated@@341))
)))
(assert  (=> (<= 0 $generated@@266) (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@344) ($generated@@137 $generated@@135))) (or ($generated@@269 $generated@@342 $generated@@343 $generated@@344) (and (not (= 0 $generated@@266)) (and ($generated@@157 $generated@@343 ($generated@@270 $generated@@342)) ($generated@@157 $generated@@344 ($generated@@271 $generated@@342)))))) (= ($generated@@267 $generated@@342 $generated@@343 $generated@@344)  (=> (= ($generated@@272 $generated@@343) ($generated@@273 $generated@@344)) (and (forall (($generated@@345 Int) ) (!  (=> true (=> (and (<= ($generated@@275 0) $generated@@345) (< $generated@@345 ($generated@@273 $generated@@344))) ($generated@@0 ($generated@@81 $generated@@343 ($generated@@274 $generated@@344 $generated@@345)))))
 :pattern ( ($generated@@274 $generated@@344 $generated@@345))
)) (forall (($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@135) ($generated@@259 $generated@@346 $generated@@342)) ($generated@@0 ($generated@@81 $generated@@343 $generated@@346))) ($generated@@148 $generated@@344 $generated@@346))
 :pattern ( ($generated@@148 $generated@@344 $generated@@346))
 :pattern ( ($generated@@81 $generated@@343 $generated@@346))
))))))
 :pattern ( ($generated@@267 $generated@@342 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@161) (= ($generated@@159 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@159 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@138 (type $generated@@351))))
 (=> (and (= (type $generated@@351) ($generated@@137 $generated@@353)) (= (type $generated@@352) ($generated@@137 $generated@@353))) (= ($generated@@350 $generated@@351 $generated@@352)  (and (= ($generated@@273 $generated@@351) ($generated@@273 $generated@@352)) (forall (($generated@@354 Int) ) (!  (=> (and (<= 0 $generated@@354) (< $generated@@354 ($generated@@273 $generated@@351))) (= ($generated@@274 $generated@@351 $generated@@354) ($generated@@274 $generated@@352 $generated@@354)))
 :pattern ( ($generated@@274 $generated@@351 $generated@@354))
 :pattern ( ($generated@@274 $generated@@352 $generated@@354))
))))))
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@161) ($generated@@159 $generated@@355)) (exists (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (and (and (= (type $generated@@356) $generated@@135) (= (type $generated@@357) $generated@@135)) (= $generated@@355 ($generated@@258 $generated@@356 $generated@@357)))
 :no-pattern (type $generated@@356)
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
)))
 :pattern ( ($generated@@159 $generated@@355))
)))
(assert (forall (($generated@@358 T@T) ) (! (= ($generated@@273 ($generated@@174 $generated@@358)) 0)
 :pattern ( ($generated@@174 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@359) ($generated@@137 $generated@@361)) (= ($generated@@273 ($generated@@149 $generated@@359 $generated@@360)) (+ 1 ($generated@@273 $generated@@359)))))
 :pattern ( ($generated@@149 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@135)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@64) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@336 ($generated@@362 $generated@@364) $generated@@365 $generated@@366) ($generated@@74 $generated@@364 $generated@@365 $generated@@366)))
 :pattern ( ($generated@@336 ($generated@@362 $generated@@364) $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@369 $generated@@2))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@79 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@76 $generated@@371 $generated@@2)) (and (= (= ($generated@@367 $generated@@370) 0) (= $generated@@370 ($generated@@368 $generated@@371))) (=> (not (= ($generated@@367 $generated@@370) 0)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (< 0 ($generated ($generated@@81 $generated@@370 $generated@@372))))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 19)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@76 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@81 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@81 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 20)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@76 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@81 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@81 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@79 (type $generated@@410))))
 (=> (and (= (type $generated@@410) ($generated@@76 $generated@@412 $generated@@4)) (= (type $generated@@411) ($generated@@76 $generated@@412 $generated@@4))) (= ($generated@@409 $generated@@410 $generated@@411) (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@412) (= ($generated@@0 ($generated@@81 $generated@@410 $generated@@413)) ($generated@@0 ($generated@@81 $generated@@411 $generated@@413))))
 :pattern ( ($generated@@81 $generated@@410 $generated@@413))
 :pattern ( ($generated@@81 $generated@@411 $generated@@413))
)))))
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@138 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@137 $generated@@416)) (= (type $generated@@415) ($generated@@137 $generated@@416))) (= ($generated@@273 ($generated@@300 $generated@@414 $generated@@415)) (+ ($generated@@273 $generated@@414) ($generated@@273 $generated@@415)))))
 :pattern ( ($generated@@273 ($generated@@300 $generated@@414 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@79 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@76 $generated@@418 $generated@@2)) (= ($generated@@184 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (and (<= 0 ($generated ($generated@@81 $generated@@417 $generated@@419))) (<= ($generated ($generated@@81 $generated@@417 $generated@@419)) ($generated@@367 $generated@@417))))
 :pattern ( ($generated@@81 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@184 $generated@@417))
)))
(assert  (=> (<= 0 $generated@@266) (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@422) ($generated@@137 $generated@@135))) (or ($generated@@269 $generated@@420 $generated@@421 $generated@@422) (and (not (= 0 $generated@@266)) (and ($generated@@157 $generated@@421 ($generated@@270 $generated@@420)) ($generated@@157 $generated@@422 ($generated@@271 $generated@@420)))))) true)
 :pattern ( ($generated@@267 $generated@@420 $generated@@421 $generated@@422))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 Int) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (=> (= (type $generated@@423) ($generated@@137 $generated@@426)) (and (=> (= $generated@@424 ($generated@@273 $generated@@423)) (= ($generated@@274 ($generated@@149 $generated@@423 $generated@@425) $generated@@424) $generated@@425)) (=> (not (= $generated@@424 ($generated@@273 $generated@@423))) (= ($generated@@274 ($generated@@149 $generated@@423 $generated@@425) $generated@@424) ($generated@@274 $generated@@423 $generated@@424))))))
 :pattern ( ($generated@@274 ($generated@@149 $generated@@423 $generated@@425) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@377 (type $generated@@427))))
(let (($generated@@429 ($generated@@376 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@375 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@374 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@377 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@76 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@377 (type $generated@@434))))
(let (($generated@@436 ($generated@@376 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@375 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@374 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@81 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@395 (type $generated@@438))))
(let (($generated@@440 ($generated@@394 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@393 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@392 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@391 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@395 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@76 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@395 (type $generated@@445))))
(let (($generated@@447 ($generated@@394 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@393 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@392 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@450) $generated@@64)) (= ($generated@@157 $generated@@449 ($generated@@183 $generated@@450)) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@449 $generated@@451)))) ($generated@@259 $generated@@451 $generated@@450))
 :pattern ( ($generated@@81 $generated@@449 $generated@@451))
))))
 :pattern ( ($generated@@157 $generated@@449 ($generated@@183 $generated@@450)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (and (= (type $generated@@452) ($generated@@137 $generated@@455)) (= (type $generated@@453) ($generated@@137 $generated@@455))) (= ($generated@@148 ($generated@@300 $generated@@452 $generated@@453) $generated@@454)  (or ($generated@@148 $generated@@452 $generated@@454) ($generated@@148 $generated@@453 $generated@@454)))))
 :pattern ( ($generated@@148 ($generated@@300 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@76 $generated@@459 $generated@@4)) (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@4))) ($generated@@456 $generated@@457 $generated@@458)) (and (= ($generated@@296 ($generated@@244 $generated@@457 $generated@@458) $generated@@457) $generated@@458) (= ($generated@@296 ($generated@@244 $generated@@457 $generated@@458) $generated@@458) $generated@@457))))
 :pattern ( ($generated@@244 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@377 (type $generated@@461))))
(let (($generated@@463 ($generated@@376 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@375 $generated@@463 $generated@@462)) (= (= ($generated@@460 $generated@@461) 0) (= $generated@@461 ($generated@@374 $generated@@463 $generated@@462))))))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
 (=> (= (type $generated@@464) ($generated@@137 $generated@@466)) (= ($generated@@148 $generated@@464 $generated@@465) (exists (($generated@@467 Int) ) (!  (and (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@273 $generated@@464))) (= ($generated@@274 $generated@@464 $generated@@467) $generated@@465))
 :pattern ( ($generated@@274 $generated@@464 $generated@@467))
)))))
 :pattern ( ($generated@@148 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
 (=> (and (= (type $generated@@468) ($generated@@76 $generated@@471 $generated@@4)) (= (type $generated@@469) ($generated@@76 $generated@@471 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@251 $generated@@468 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@81 $generated@@468 $generated@@470)) ($generated@@0 ($generated@@81 $generated@@469 $generated@@470))))))
 :pattern ( ($generated@@81 ($generated@@251 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
 (=> (and (= (type $generated@@472) ($generated@@76 $generated@@475 $generated@@4)) (= (type $generated@@473) ($generated@@76 $generated@@475 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@296 $generated@@472 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@81 $generated@@472 $generated@@474)) (not ($generated@@0 ($generated@@81 $generated@@473 $generated@@474)))))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@270 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) ($generated@@0 ($generated@@81 $generated@@476 $generated@@479))) ($generated@@336 $generated@@479 $generated@@477 $generated@@478))
 :pattern ( ($generated@@81 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@270 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@326 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@135) ($generated@@0 ($generated@@81 $generated@@480 $generated@@483))) ($generated@@336 $generated@@483 $generated@@481 $generated@@482))
 :pattern ( ($generated@@81 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@326 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated ($generated@@81 ($generated@@368 $generated@@485) $generated@@484)) 0))
 :pattern ( (let (($generated@@485 (type $generated@@484)))
($generated@@81 ($generated@@368 $generated@@485) $generated@@484)))
)))
(assert  (and (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@486 $generated@@489)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@486 $generated@@489))
)) (forall (($generated@@490 T@T) ($generated@@491 T@U) ) (! (= (type ($generated@@487 $generated@@490 $generated@@491)) $generated@@490)
 :pattern ( ($generated@@487 $generated@@490 $generated@@491))
))) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@377 (type $generated@@492))))
(let (($generated@@494 ($generated@@376 (type $generated@@492))))
(= (type ($generated@@488 $generated@@492)) ($generated@@76 $generated@@494 $generated@@493))))
 :pattern ( ($generated@@488 $generated@@492))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@496) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@486 $generated@@495) $generated@@496))  (and ($generated@@0 ($generated@@81 ($generated@@373 $generated@@495) ($generated@@168 ($generated@@487 $generated@@161 $generated@@496)))) (= ($generated@@81 ($generated@@488 $generated@@495) ($generated@@168 ($generated@@487 $generated@@161 $generated@@496))) ($generated@@169 ($generated@@487 $generated@@161 $generated@@496))))))
 :pattern ( ($generated@@81 ($generated@@486 $generated@@495) $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@395 (type $generated@@500))))
(let (($generated@@502 ($generated@@394 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500)) ($generated@@76 $generated@@502 $generated@@501))))
 :pattern ( ($generated@@498 $generated@@500))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@504) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@497 $generated@@503) $generated@@504))  (and ($generated@@0 ($generated@@81 ($generated@@391 $generated@@503) ($generated@@168 ($generated@@487 $generated@@161 $generated@@504)))) (= ($generated@@81 ($generated@@498 $generated@@503) ($generated@@168 ($generated@@487 $generated@@161 $generated@@504))) ($generated@@169 ($generated@@487 $generated@@161 $generated@@504))))))
 :pattern ( ($generated@@81 ($generated@@497 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 ($generated@@376 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@375 $generated@@508 $generated@@507)) (= ($generated@@0 ($generated@@81 ($generated@@431 $generated@@505) $generated@@506)) (exists (($generated@@509 T@U) ) (!  (and (= (type $generated@@509) $generated@@508) (and ($generated@@0 ($generated@@81 ($generated@@373 $generated@@505) $generated@@509)) (= $generated@@506 ($generated@@81 ($generated@@488 $generated@@505) $generated@@509))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@505) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@488 $generated@@505) $generated@@509))
))))))
 :pattern ( ($generated@@81 ($generated@@431 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(let (($generated@@513 ($generated@@394 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@393 $generated@@513 $generated@@512)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@510) $generated@@511)) (exists (($generated@@514 T@U) ) (!  (and (= (type $generated@@514) $generated@@513) (and ($generated@@0 ($generated@@81 ($generated@@391 $generated@@510) $generated@@514)) (= $generated@@511 ($generated@@81 ($generated@@498 $generated@@510) $generated@@514))))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@510) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@498 $generated@@510) $generated@@514))
))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@518) $generated@@522))) (and ($generated@@336 ($generated@@81 ($generated@@488 $generated@@518) $generated@@522) $generated@@520 $generated@@521) ($generated@@336 $generated@@522 $generated@@519 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@488 $generated@@518) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@518) $generated@@522))
))))
 :pattern ( ($generated@@74 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@523 $generated@@527 $generated@@528) $generated@@529) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@526) $generated@@530))) (and ($generated@@336 ($generated@@81 ($generated@@498 $generated@@526) $generated@@530) $generated@@528 $generated@@529) ($generated@@336 $generated@@530 $generated@@527 $generated@@529)))
 :pattern ( ($generated@@81 ($generated@@498 $generated@@526) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@526) $generated@@530))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@523 $generated@@527 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@79 (type $generated@@531))))
 (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@533 $generated@@4)) (= (type $generated@@532) ($generated@@76 $generated@@533 $generated@@4))) ($generated@@409 $generated@@531 $generated@@532)) (= $generated@@531 $generated@@532)))
 :pattern ( ($generated@@409 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@138 (type $generated@@534))))
 (=> (and (and (= (type $generated@@534) ($generated@@137 $generated@@536)) (= (type $generated@@535) ($generated@@137 $generated@@536))) ($generated@@350 $generated@@534 $generated@@535)) (= $generated@@534 $generated@@535)))
 :pattern ( ($generated@@350 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@538)))
 (=> (and (and (= (type $generated@@537) ($generated@@76 $generated@@540 $generated@@4)) (= (type $generated@@539) $generated@@540)) ($generated@@0 ($generated@@81 $generated@@537 $generated@@539))) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@537 $generated@@538) $generated@@539))))
 :pattern ( ($generated@@297 $generated@@537 $generated@@538) ($generated@@81 $generated@@537 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@4)) (= (type $generated@@542) ($generated@@76 $generated@@544 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@541 $generated@@543))) ($generated@@0 ($generated@@81 ($generated@@244 $generated@@541 $generated@@542) $generated@@543))))
 :pattern ( ($generated@@244 $generated@@541 $generated@@542) ($generated@@81 $generated@@541 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@548 $generated@@4)) (= (type $generated@@546) ($generated@@76 $generated@@548 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@546 $generated@@547))) ($generated@@0 ($generated@@81 ($generated@@244 $generated@@545 $generated@@546) $generated@@547))))
 :pattern ( ($generated@@244 $generated@@545 $generated@@546) ($generated@@81 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@4)) (= (type $generated@@551) $generated@@552)) (= ($generated@@0 ($generated@@81 ($generated@@297 $generated@@549 $generated@@550) $generated@@551))  (or (= $generated@@551 $generated@@550) ($generated@@0 ($generated@@81 $generated@@549 $generated@@551))))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@549 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@556 $generated@@4)) (= (type $generated@@554) ($generated@@76 $generated@@556 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@554 $generated@@555))) (not ($generated@@0 ($generated@@81 ($generated@@296 $generated@@553 $generated@@554) $generated@@555)))))
 :pattern ( ($generated@@296 $generated@@553 $generated@@554) ($generated@@81 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 T@T) ) (! (= (type ($generated@@557 $generated@@558)) ($generated@@76 $generated@@558 $generated@@4))
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@395 (type $generated@@559))))
(let (($generated@@561 ($generated@@394 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@393 $generated@@561 $generated@@560)) (= (= $generated@@559 ($generated@@392 $generated@@561 $generated@@560)) (= ($generated@@391 $generated@@559) ($generated@@557 $generated@@561))))))
 :pattern ( ($generated@@391 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@395 (type $generated@@562))))
(let (($generated@@564 ($generated@@394 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@393 $generated@@564 $generated@@563)) (= (= $generated@@562 ($generated@@392 $generated@@564 $generated@@563)) (= ($generated@@442 $generated@@562) ($generated@@557 $generated@@563))))))
 :pattern ( ($generated@@442 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@395 (type $generated@@565))))
(let (($generated@@567 ($generated@@394 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@393 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@392 $generated@@567 $generated@@566)) (= ($generated@@497 $generated@@565) ($generated@@557 $generated@@135))))))
 :pattern ( ($generated@@497 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@377 (type $generated@@568))))
(let (($generated@@570 ($generated@@376 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@375 $generated@@570 $generated@@569)) (or (= $generated@@568 ($generated@@374 $generated@@570 $generated@@569)) (exists (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (and (and (= (type $generated@@571) $generated@@135) (= (type $generated@@572) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@486 $generated@@568) ($generated@@362 ($generated@@258 $generated@@571 $generated@@572)))))
 :no-pattern (type $generated@@571)
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
))))))
 :pattern ( ($generated@@486 $generated@@568))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@395 (type $generated@@573))))
(let (($generated@@575 ($generated@@394 (type $generated@@573))))
 (=> (= (type $generated@@573) ($generated@@393 $generated@@575 $generated@@574)) (or (= $generated@@573 ($generated@@392 $generated@@575 $generated@@574)) (exists (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (and (and (= (type $generated@@576) $generated@@135) (= (type $generated@@577) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@497 $generated@@573) ($generated@@362 ($generated@@258 $generated@@576 $generated@@577)))))
 :no-pattern (type $generated@@576)
 :no-pattern (type $generated@@577)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
))))))
 :pattern ( ($generated@@497 $generated@@573))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@135) ($generated@@259 $generated@@578 $generated@@46)) (and (= ($generated@@362 ($generated@@487 $generated@@2 $generated@@578)) $generated@@578) ($generated@@157 ($generated@@487 $generated@@2 $generated@@578) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@135) ($generated@@259 $generated@@579 $generated@@47)) (and (= ($generated@@362 ($generated@@487 $generated@@3 $generated@@579)) $generated@@579) ($generated@@157 ($generated@@487 $generated@@3 $generated@@579) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@135) ($generated@@259 $generated@@580 $generated@@44)) (and (= ($generated@@362 ($generated@@487 $generated@@4 $generated@@580)) $generated@@580) ($generated@@157 ($generated@@487 $generated@@4 $generated@@580) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@580 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@581) 21))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@135) ($generated@@259 $generated@@582 $generated@@45)) (and (= ($generated@@362 ($generated@@487 $generated@@581 $generated@@582)) $generated@@582) ($generated@@157 ($generated@@487 $generated@@581 $generated@@582) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@582 $generated@@45))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@79 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@76 $generated@@585 $generated@@4)) (= (type $generated@@584) ($generated@@76 $generated@@585 $generated@@4))) (and (= (+ (+ ($generated@@272 ($generated@@296 $generated@@583 $generated@@584)) ($generated@@272 ($generated@@296 $generated@@584 $generated@@583))) ($generated@@272 ($generated@@251 $generated@@583 $generated@@584))) ($generated@@272 ($generated@@244 $generated@@583 $generated@@584))) (= ($generated@@272 ($generated@@296 $generated@@583 $generated@@584)) (- ($generated@@272 $generated@@583) ($generated@@272 ($generated@@251 $generated@@583 $generated@@584)))))))
 :pattern ( ($generated@@272 ($generated@@296 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@259 ($generated@@362 $generated@@586) $generated@@587) ($generated@@157 $generated@@586 $generated@@587)))
 :pattern ( ($generated@@259 ($generated@@362 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@79 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@76 $generated@@589 $generated@@4)) (<= 0 ($generated@@272 $generated@@588))))
 :pattern ( ($generated@@272 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@79 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@76 $generated@@591 $generated@@2)) (<= 0 ($generated@@367 $generated@@590))))
 :pattern ( ($generated@@367 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@138 (type $generated@@592))))
 (=> (= (type $generated@@592) ($generated@@137 $generated@@593)) (<= 0 ($generated@@273 $generated@@592))))
 :pattern ( ($generated@@273 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@377 (type $generated@@594))))
(let (($generated@@596 ($generated@@376 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@375 $generated@@596 $generated@@595)) (<= 0 ($generated@@460 $generated@@594)))))
 :pattern ( ($generated@@460 $generated@@594))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@64)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@64) (= (type $generated@@600) $generated@@64)) (= ($generated@@597 ($generated@@515 $generated@@599 $generated@@600)) $generated@@599))
 :pattern ( ($generated@@515 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@64)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@64) (= (type $generated@@604) $generated@@64)) (= ($generated@@601 ($generated@@515 $generated@@603 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@515 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@64) (= (type $generated@@606) $generated@@64)) (= ($generated@@72 ($generated@@515 $generated@@605 $generated@@606)) $generated@@58))
 :pattern ( ($generated@@515 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@64)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) $generated@@64)) (= ($generated@@607 ($generated@@523 $generated@@609 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@523 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@64)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@64) (= (type $generated@@614) $generated@@64)) (= ($generated@@611 ($generated@@523 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@523 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@64) (= (type $generated@@616) $generated@@64)) (= ($generated@@72 ($generated@@523 $generated@@615 $generated@@616)) $generated@@59))
 :pattern ( ($generated@@523 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@135) (= (type $generated@@618) $generated@@135)) (= ($generated@@347 ($generated@@258 $generated@@617 $generated@@618)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@64)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@64) (= (type $generated@@622) $generated@@64)) (= ($generated@@619 ($generated@@160 $generated@@621 $generated@@622)) $generated@@621))
 :pattern ( ($generated@@160 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@64)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (= ($generated@@623 ($generated@@160 $generated@@625 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@160 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@135) (= (type $generated@@628) $generated@@135)) (= ($generated@@168 ($generated@@258 $generated@@627 $generated@@628)) $generated@@627))
 :pattern ( ($generated@@258 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@135) (= (type $generated@@630) $generated@@135)) (= ($generated@@169 ($generated@@258 $generated@@629 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@258 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@137 $generated@@135)) (= (type $generated@@632) $generated@@64)) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@631 ($generated@@271 $generated@@632) $generated@@633) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@273 $generated@@631))) ($generated@@336 ($generated@@274 $generated@@631 $generated@@634) $generated@@632 $generated@@633))
 :pattern ( ($generated@@274 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@74 $generated@@631 ($generated@@271 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@636)))
 (=> (= (type $generated@@635) ($generated@@76 $generated@@637 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@635 $generated@@636) $generated@@636))))
 :pattern ( ($generated@@297 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@639)))
 (=> (and (= (type $generated@@638) ($generated@@76 $generated@@640 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@638 $generated@@639))) (= ($generated@@272 ($generated@@297 $generated@@638 $generated@@639)) ($generated@@272 $generated@@638))))
 :pattern ( ($generated@@272 ($generated@@297 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@641 ($generated@@75 $generated@@642)) $generated@@642)
 :pattern ( ($generated@@75 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@64)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@64) (= ($generated@@643 ($generated@@270 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@270 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@64) (= ($generated@@72 ($generated@@270 $generated@@646)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@64)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@64) (= ($generated@@647 ($generated@@326 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@326 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@64) (= ($generated@@72 ($generated@@326 $generated@@650)) $generated@@55))
 :pattern ( ($generated@@326 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@64)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@64) (= ($generated@@651 ($generated@@183 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@183 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@64) (= ($generated@@72 ($generated@@183 $generated@@654)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@64)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@64) (= ($generated@@655 ($generated@@271 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@271 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@64) (= ($generated@@72 ($generated@@271 $generated@@658)) $generated@@57))
 :pattern ( ($generated@@271 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@659)))
(= ($generated@@487 $generated@@660 ($generated@@362 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@362 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@662) $generated@@64)) (= (type $generated@@663) $generated@@64)) (= ($generated@@157 $generated@@661 ($generated@@515 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@661) $generated@@664))) (and ($generated@@259 ($generated@@81 ($generated@@488 $generated@@661) $generated@@664) $generated@@663) ($generated@@259 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@81 ($generated@@488 $generated@@661) $generated@@664))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@157 $generated@@661 ($generated@@515 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@666) $generated@@64)) (= (type $generated@@667) $generated@@64)) (= ($generated@@157 $generated@@665 ($generated@@523 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@665) $generated@@668))) (and ($generated@@259 ($generated@@81 ($generated@@498 $generated@@665) $generated@@668) $generated@@667) ($generated@@259 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@81 ($generated@@498 $generated@@665) $generated@@668))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@157 $generated@@665 ($generated@@523 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@135) (= (type $generated@@672) $generated@@135)) (< ($generated@@669 $generated@@671) ($generated@@670 ($generated@@258 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@258 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@135) (= (type $generated@@674) $generated@@135)) (< ($generated@@669 $generated@@674) ($generated@@670 ($generated@@258 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@258 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@79 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@76 $generated@@677 $generated@@4)) (= (type $generated@@676) ($generated@@76 $generated@@677 $generated@@4))) (= ($generated@@244 $generated@@675 ($generated@@244 $generated@@675 $generated@@676)) ($generated@@244 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@244 $generated@@675 ($generated@@244 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@79 (type $generated@@678))))
 (=> (and (= (type $generated@@678) ($generated@@76 $generated@@680 $generated@@4)) (= (type $generated@@679) ($generated@@76 $generated@@680 $generated@@4))) (= ($generated@@251 $generated@@678 ($generated@@251 $generated@@678 $generated@@679)) ($generated@@251 $generated@@678 $generated@@679))))
 :pattern ( ($generated@@251 $generated@@678 ($generated@@251 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@64) (= (type $generated@@682) ($generated@@76 $generated@@135 $generated@@4))) ($generated@@295 $generated@@681 $generated@@682)) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@299 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@299 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@135) (= (type $generated@@684) $generated@@64)) (= (type $generated@@685) $generated@@64)) ($generated@@259 $generated@@683 ($generated@@515 $generated@@684 $generated@@685))) (and (= ($generated@@362 ($generated@@487 ($generated@@375 $generated@@135 $generated@@135) $generated@@683)) $generated@@683) ($generated@@157 ($generated@@487 ($generated@@375 $generated@@135 $generated@@135) $generated@@683) ($generated@@515 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@259 $generated@@683 ($generated@@515 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@135) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@259 $generated@@686 ($generated@@523 $generated@@687 $generated@@688))) (and (= ($generated@@362 ($generated@@487 ($generated@@393 $generated@@135 $generated@@135) $generated@@686)) $generated@@686) ($generated@@157 ($generated@@487 ($generated@@393 $generated@@135 $generated@@135) $generated@@686) ($generated@@523 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@259 $generated@@686 ($generated@@523 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@64) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@135)) ($generated@@259 $generated@@691 ($generated@@160 $generated@@689 $generated@@690))) (and (= ($generated@@362 ($generated@@487 $generated@@161 $generated@@691)) $generated@@691) ($generated@@157 ($generated@@487 $generated@@161 $generated@@691) ($generated@@160 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@259 $generated@@691 ($generated@@160 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (not ($generated@@0 ($generated@@81 ($generated@@298 $generated@@693) $generated@@692))))
 :pattern ( (let (($generated@@693 (type $generated@@692)))
($generated@@81 ($generated@@298 $generated@@693) $generated@@692)))
)))
(assert (forall (($generated@@694 T@U) ) (! (let (($generated@@695 (type $generated@@694)))
 (not ($generated@@0 ($generated@@81 ($generated@@557 $generated@@695) $generated@@694))))
 :pattern ( (let (($generated@@695 (type $generated@@694)))
($generated@@81 ($generated@@557 $generated@@695) $generated@@694)))
)))
(assert (forall (($generated@@697 T@U) ) (! (= (type ($generated@@696 $generated@@697)) $generated@@69)
 :pattern ( ($generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@64) (= (type $generated@@699) $generated@@64)) (and (= ($generated@@72 ($generated@@160 $generated@@698 $generated@@699)) $generated@@62) (= ($generated@@696 ($generated@@160 $generated@@698 $generated@@699)) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@698 $generated@@699))
)))
(assert  (and (forall (($generated@@702 T@U) ) (! (let (($generated@@703 ($generated@@138 (type $generated@@702))))
(= (type ($generated@@700 $generated@@702)) ($generated@@137 $generated@@703)))
 :pattern ( ($generated@@700 $generated@@702))
)) (forall (($generated@@704 T@U) ) (! (let (($generated@@705 ($generated@@138 (type $generated@@704))))
(= (type ($generated@@701 $generated@@704)) $generated@@705))
 :pattern ( ($generated@@701 $generated@@704))
))))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
 (=> (= (type $generated@@706) ($generated@@137 $generated@@708)) (and (= ($generated@@700 ($generated@@149 $generated@@706 $generated@@707)) $generated@@706) (= ($generated@@701 ($generated@@149 $generated@@706 $generated@@707)) $generated@@707))))
 :pattern ( ($generated@@149 $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@161) (= ($generated@@669 ($generated@@362 $generated@@709)) ($generated@@670 $generated@@709)))
 :pattern ( ($generated@@669 ($generated@@362 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@377 (type $generated@@710))))
(let (($generated@@712 ($generated@@376 (type $generated@@710))))
 (=> (= (type $generated@@710) ($generated@@375 $generated@@712 $generated@@711)) (= ($generated@@272 ($generated@@373 $generated@@710)) ($generated@@460 $generated@@710)))))
 :pattern ( ($generated@@272 ($generated@@373 $generated@@710)))
)))
(assert (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@377 (type $generated@@713))))
(let (($generated@@715 ($generated@@376 (type $generated@@713))))
 (=> (= (type $generated@@713) ($generated@@375 $generated@@715 $generated@@714)) (= ($generated@@272 ($generated@@486 $generated@@713)) ($generated@@460 $generated@@713)))))
 :pattern ( ($generated@@272 ($generated@@486 $generated@@713)))
)))
(assert (forall (($generated@@716 T@U) ) (! (let (($generated@@717 ($generated@@377 (type $generated@@716))))
(let (($generated@@718 ($generated@@376 (type $generated@@716))))
 (=> (= (type $generated@@716) ($generated@@375 $generated@@718 $generated@@717)) (<= ($generated@@272 ($generated@@431 $generated@@716)) ($generated@@460 $generated@@716)))))
 :pattern ( ($generated@@272 ($generated@@431 $generated@@716)))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@135) ($generated@@259 $generated@@719 ($generated@@75 0))) (and (= ($generated@@362 ($generated@@487 $generated@@2 $generated@@719)) $generated@@719) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@719) ($generated@@75 0))))
 :pattern ( ($generated@@259 $generated@@719 ($generated@@75 0)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@135) (= (type $generated@@721) $generated@@64)) ($generated@@259 $generated@@720 ($generated@@270 $generated@@721))) (and (= ($generated@@362 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@720)) $generated@@720) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@720) ($generated@@270 $generated@@721))))
 :pattern ( ($generated@@259 $generated@@720 ($generated@@270 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@135) (= (type $generated@@723) $generated@@64)) ($generated@@259 $generated@@722 ($generated@@326 $generated@@723))) (and (= ($generated@@362 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@722)) $generated@@722) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@722) ($generated@@326 $generated@@723))))
 :pattern ( ($generated@@259 $generated@@722 ($generated@@326 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@135) (= (type $generated@@725) $generated@@64)) ($generated@@259 $generated@@724 ($generated@@183 $generated@@725))) (and (= ($generated@@362 ($generated@@487 ($generated@@76 $generated@@135 $generated@@2) $generated@@724)) $generated@@724) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@2) $generated@@724) ($generated@@183 $generated@@725))))
 :pattern ( ($generated@@259 $generated@@724 ($generated@@183 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@135) (= (type $generated@@727) $generated@@64)) ($generated@@259 $generated@@726 ($generated@@271 $generated@@727))) (and (= ($generated@@362 ($generated@@487 ($generated@@137 $generated@@135) $generated@@726)) $generated@@726) ($generated@@157 ($generated@@487 ($generated@@137 $generated@@135) $generated@@726) ($generated@@271 $generated@@727))))
 :pattern ( ($generated@@259 $generated@@726 ($generated@@271 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ) (! (let (($generated@@729 ($generated@@79 (type $generated@@728))))
 (=> (= (type $generated@@728) ($generated@@76 $generated@@729 $generated@@4)) (and (= (= ($generated@@272 $generated@@728) 0) (= $generated@@728 ($generated@@298 $generated@@729))) (=> (not (= ($generated@@272 $generated@@728) 0)) (exists (($generated@@730 T@U) ) (!  (and (= (type $generated@@730) $generated@@729) ($generated@@0 ($generated@@81 $generated@@728 $generated@@730)))
 :no-pattern (type $generated@@730)
 :no-pattern ($generated $generated@@730)
 :no-pattern ($generated@@0 $generated@@730)
))))))
 :pattern ( ($generated@@272 $generated@@728))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (! (let (($generated@@734 ($generated@@79 (type $generated@@732))))
 (=> (and (= (type $generated@@732) ($generated@@76 $generated@@734 $generated@@4)) (= (type $generated@@733) ($generated@@76 $generated@@734 $generated@@4))) (= ($generated@@731 $generated@@732 $generated@@733) (forall (($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@735) $generated@@734) ($generated@@0 ($generated@@81 $generated@@732 $generated@@735))) ($generated@@0 ($generated@@81 $generated@@733 $generated@@735)))
 :pattern ( ($generated@@81 $generated@@732 $generated@@735))
 :pattern ( ($generated@@81 $generated@@733 $generated@@735))
)))))
 :pattern ( ($generated@@731 $generated@@732 $generated@@733))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (= (type $generated@@736) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@737) $generated@@64)) (= (type $generated@@738) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@736 ($generated@@183 $generated@@737) $generated@@738) (forall (($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@739) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@736 $generated@@739)))) ($generated@@336 $generated@@739 $generated@@737 $generated@@738))
 :pattern ( ($generated@@81 $generated@@736 $generated@@739))
))))
 :pattern ( ($generated@@74 $generated@@736 ($generated@@183 $generated@@737) $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (! (let (($generated@@742 (type $generated@@741)))
 (=> (and (= (type $generated@@740) ($generated@@76 $generated@@742 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@740 $generated@@741)))) (= ($generated@@272 ($generated@@297 $generated@@740 $generated@@741)) (+ ($generated@@272 $generated@@740) 1))))
 :pattern ( ($generated@@272 ($generated@@297 $generated@@740 $generated@@741)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@743) $generated@@64) (= (type $generated@@744) $generated@@134)) (= (type $generated@@745) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@746) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@294 $generated@@743 ($generated@@268 $generated@@746)) (and (not (= 1 $generated@@266)) (and ($generated@@293 $generated@@745) ($generated@@157 $generated@@746 ($generated@@270 $generated@@743)))))) (and (let (($generated@@747 ($generated@@268 $generated@@746)))
 (=> (not (= ($generated@@272 $generated@@747) ($generated@@275 0))) (and ($generated@@295 $generated@@743 $generated@@747) (let (($generated@@748 ($generated@@296 $generated@@747 ($generated@@297 ($generated@@298 $generated@@135) ($generated@@299 $generated@@743 $generated@@747)))))
($generated@@294 $generated@@743 $generated@@748))))) (= ($generated@@132 $generated@@743 ($generated@@178 $generated@@744) ($generated@@268 $generated@@746)) (let (($generated@@749 ($generated@@268 $generated@@746)))
(ite (= ($generated@@272 $generated@@749) ($generated@@275 0)) ($generated@@174 $generated@@135) (let (($generated@@750 ($generated@@299 $generated@@743 $generated@@749)))
(let (($generated@@751 ($generated@@296 $generated@@749 ($generated@@297 ($generated@@298 $generated@@135) $generated@@750))))
(let (($generated@@752 ($generated@@132 $generated@@743 ($generated@@178 $generated@@744) $generated@@751)))
($generated@@300 ($generated@@149 ($generated@@174 $generated@@135) $generated@@750) $generated@@752)))))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@743 ($generated@@178 $generated@@744) ($generated@@268 $generated@@746)) ($generated@@293 $generated@@745))
))))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (! (let (($generated@@755 ($generated@@79 (type $generated@@753))))
 (=> (and (= (type $generated@@753) ($generated@@76 $generated@@755 $generated@@4)) (= (type $generated@@754) ($generated@@76 $generated@@755 $generated@@4))) (= ($generated@@456 $generated@@753 $generated@@754) (forall (($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@755) (or (not ($generated@@0 ($generated@@81 $generated@@753 $generated@@756))) (not ($generated@@0 ($generated@@81 $generated@@754 $generated@@756)))))
 :pattern ( ($generated@@81 $generated@@753 $generated@@756))
 :pattern ( ($generated@@81 $generated@@754 $generated@@756))
)))))
 :pattern ( ($generated@@456 $generated@@753 $generated@@754))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (= (type $generated@@757) $generated@@161) (= (type $generated@@758) $generated@@64)) (= (type $generated@@759) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@293 $generated@@759) (and ($generated@@159 $generated@@757) (exists (($generated@@760 T@U) ) (!  (and (= (type $generated@@760) $generated@@64) ($generated@@74 $generated@@757 ($generated@@160 $generated@@758 $generated@@760) $generated@@759))
 :pattern ( ($generated@@74 $generated@@757 ($generated@@160 $generated@@758 $generated@@760) $generated@@759))
))))) ($generated@@336 ($generated@@168 $generated@@757) $generated@@758 $generated@@759))
 :pattern ( ($generated@@336 ($generated@@168 $generated@@757) $generated@@758 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) $generated@@161) (= (type $generated@@762) $generated@@64)) (= (type $generated@@763) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@293 $generated@@763) (and ($generated@@159 $generated@@761) (exists (($generated@@764 T@U) ) (!  (and (= (type $generated@@764) $generated@@64) ($generated@@74 $generated@@761 ($generated@@160 $generated@@764 $generated@@762) $generated@@763))
 :pattern ( ($generated@@74 $generated@@761 ($generated@@160 $generated@@764 $generated@@762) $generated@@763))
))))) ($generated@@336 ($generated@@169 $generated@@761) $generated@@762 $generated@@763))
 :pattern ( ($generated@@336 ($generated@@169 $generated@@761) $generated@@762 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 Int) ) (! (let (($generated@@768 ($generated@@138 (type $generated@@765))))
 (=> (and (= (type $generated@@765) ($generated@@137 $generated@@768)) (= (type $generated@@766) ($generated@@137 $generated@@768))) (and (=> (< $generated@@767 ($generated@@273 $generated@@765)) (= ($generated@@274 ($generated@@300 $generated@@765 $generated@@766) $generated@@767) ($generated@@274 $generated@@765 $generated@@767))) (=> (<= ($generated@@273 $generated@@765) $generated@@767) (= ($generated@@274 ($generated@@300 $generated@@765 $generated@@766) $generated@@767) ($generated@@274 $generated@@766 (- $generated@@767 ($generated@@273 $generated@@765))))))))
 :pattern ( ($generated@@274 ($generated@@300 $generated@@765 $generated@@766) $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@769) $generated@@135) (= (type $generated@@770) $generated@@135)) (= ($generated@@258 ($generated@@268 $generated@@769) ($generated@@268 $generated@@770)) ($generated@@268 ($generated@@258 $generated@@769 $generated@@770))))
 :pattern ( ($generated@@258 ($generated@@268 $generated@@769) ($generated@@268 $generated@@770)))
)))
(assert (forall (($generated@@771 Int) ) (! (= ($generated@@362 ($generated@@8 ($generated@@275 $generated@@771))) ($generated@@268 ($generated@@362 ($generated@@8 $generated@@771))))
 :pattern ( ($generated@@362 ($generated@@8 ($generated@@275 $generated@@771))))
)))
(assert (forall (($generated@@772 T@U) ) (! (= ($generated@@362 ($generated@@268 $generated@@772)) ($generated@@268 ($generated@@362 $generated@@772)))
 :pattern ( ($generated@@362 ($generated@@268 $generated@@772)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (= (type $generated@@773) $generated@@64) (= (type $generated@@774) $generated@@134)) (= (type $generated@@775) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@294 $generated@@773 $generated@@775) (and (not (= 1 $generated@@266)) ($generated@@157 $generated@@775 ($generated@@270 $generated@@773))))) (and ($generated@@267 $generated@@773 $generated@@775 ($generated@@132 $generated@@773 $generated@@774 $generated@@775)) ($generated@@157 ($generated@@132 $generated@@773 $generated@@774 $generated@@775) ($generated@@271 $generated@@773))))
 :pattern ( ($generated@@132 $generated@@773 $generated@@774 $generated@@775))
))))
(assert (forall (($generated@@776 T@U) ) (! (let (($generated@@777 ($generated@@138 (type $generated@@776))))
 (=> (and (= (type $generated@@776) ($generated@@137 $generated@@777)) (= ($generated@@273 $generated@@776) 0)) (= $generated@@776 ($generated@@174 $generated@@777))))
 :pattern ( ($generated@@273 $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (! (let (($generated@@781 (type $generated@@779)))
 (=> (and (and (= (type $generated@@778) ($generated@@76 $generated@@781 $generated@@2)) (= (type $generated@@780) $generated@@2)) (<= 0 ($generated $generated@@780))) (= ($generated@@367 ($generated@@82 $generated@@778 $generated@@779 $generated@@780)) (+ (- ($generated@@367 $generated@@778) ($generated ($generated@@81 $generated@@778 $generated@@779))) ($generated $generated@@780)))))
 :pattern ( ($generated@@367 ($generated@@82 $generated@@778 $generated@@779 $generated@@780)))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (! (let (($generated@@785 (type $generated@@784)))
 (=> (and (= (type $generated@@782) ($generated@@76 $generated@@785 $generated@@4)) (= (type $generated@@783) ($generated@@76 $generated@@785 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@244 $generated@@782 $generated@@783) $generated@@784))  (or ($generated@@0 ($generated@@81 $generated@@782 $generated@@784)) ($generated@@0 ($generated@@81 $generated@@783 $generated@@784))))))
 :pattern ( ($generated@@81 ($generated@@244 $generated@@782 $generated@@783) $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@787) $generated@@2)) ($generated@@74 $generated@@787 $generated@@46 $generated@@786))
 :pattern ( ($generated@@74 $generated@@787 $generated@@46 $generated@@786))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@789) $generated@@3)) ($generated@@74 $generated@@789 $generated@@47 $generated@@788))
 :pattern ( ($generated@@74 $generated@@789 $generated@@47 $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@791) $generated@@4)) ($generated@@74 $generated@@791 $generated@@44 $generated@@790))
 :pattern ( ($generated@@74 $generated@@791 $generated@@44 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@793) $generated@@581)) ($generated@@74 $generated@@793 $generated@@45 $generated@@792))
 :pattern ( ($generated@@74 $generated@@793 $generated@@45 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@795) $generated@@135)) ($generated@@74 $generated@@795 $generated@@48 $generated@@794))
 :pattern ( ($generated@@74 $generated@@795 $generated@@48 $generated@@794))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (= (type $generated@@796) ($generated@@137 $generated@@135)) (= (type $generated@@797) $generated@@64)) (= ($generated@@157 $generated@@796 ($generated@@271 $generated@@797)) (forall (($generated@@798 Int) ) (!  (=> (and (<= 0 $generated@@798) (< $generated@@798 ($generated@@273 $generated@@796))) ($generated@@259 ($generated@@274 $generated@@796 $generated@@798) $generated@@797))
 :pattern ( ($generated@@274 $generated@@796 $generated@@798))
))))
 :pattern ( ($generated@@157 $generated@@796 ($generated@@271 $generated@@797)))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 Int) ) (!  (=> (= (type $generated@@800) ($generated@@137 $generated@@135)) (=> (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@273 $generated@@800))) (< ($generated@@670 ($generated@@487 $generated@@161 ($generated@@274 $generated@@800 $generated@@801))) ($generated@@799 $generated@@800))))
 :pattern ( ($generated@@670 ($generated@@487 $generated@@161 ($generated@@274 $generated@@800 $generated@@801))))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (and (= (type $generated@@802) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@803) $generated@@64)) (= (type $generated@@804) $generated@@64)) ($generated@@157 $generated@@802 ($generated@@515 $generated@@803 $generated@@804))) (and (and ($generated@@157 ($generated@@373 $generated@@802) ($generated@@270 $generated@@803)) ($generated@@157 ($generated@@431 $generated@@802) ($generated@@270 $generated@@804))) ($generated@@157 ($generated@@486 $generated@@802) ($generated@@270 ($generated@@160 $generated@@803 $generated@@804)))))
 :pattern ( ($generated@@157 $generated@@802 ($generated@@515 $generated@@803 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@806) $generated@@64)) (= (type $generated@@807) $generated@@64)) ($generated@@157 $generated@@805 ($generated@@523 $generated@@806 $generated@@807))) (and (and ($generated@@157 ($generated@@391 $generated@@805) ($generated@@326 $generated@@806)) ($generated@@157 ($generated@@442 $generated@@805) ($generated@@326 $generated@@807))) ($generated@@157 ($generated@@497 $generated@@805) ($generated@@326 ($generated@@160 $generated@@806 $generated@@807)))))
 :pattern ( ($generated@@157 $generated@@805 ($generated@@523 $generated@@806 $generated@@807)))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) $generated@@2) ($generated@@157 $generated@@808 $generated@@46))
 :pattern ( ($generated@@157 $generated@@808 $generated@@46))
)))
(assert (forall (($generated@@809 T@U) ) (!  (=> (= (type $generated@@809) $generated@@3) ($generated@@157 $generated@@809 $generated@@47))
 :pattern ( ($generated@@157 $generated@@809 $generated@@47))
)))
(assert (forall (($generated@@810 T@U) ) (!  (=> (= (type $generated@@810) $generated@@4) ($generated@@157 $generated@@810 $generated@@44))
 :pattern ( ($generated@@157 $generated@@810 $generated@@44))
)))
(assert (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@581) ($generated@@157 $generated@@811 $generated@@45))
 :pattern ( ($generated@@157 $generated@@811 $generated@@45))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@135) ($generated@@157 $generated@@812 $generated@@48))
 :pattern ( ($generated@@157 $generated@@812 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 (T@U) Bool)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@813) ($generated@@190 $generated@@77 $generated@@4)) (= (type $generated@@814) $generated@@77)) (= (type $generated@@815) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@816) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@818) $generated@@64)) (= (type $generated@@819) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@820) ($generated@@76 $generated@@135 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@821  (=> (= $generated@@813 ($generated@@189 $generated@@814 $generated@@815 $generated@@60 false)) (=> (and (and (and ($generated@@293 $generated@@816) ($generated@@817 $generated@@816)) (= $generated@@815 $generated@@816)) (and (and (forall (($generated@@822 T@U) ($generated@@823 T@U) ) (!  (=> (and (= (type $generated@@822) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@823) ($generated@@76 $generated@@135 $generated@@4))) (=> (and (and (and ($generated@@157 $generated@@822 ($generated@@270 $generated@@818)) ($generated@@157 $generated@@823 ($generated@@270 $generated@@818))) ($generated@@0 ($generated@@268 ($generated@@11 true)))) (or (and ($generated@@731 $generated@@822 $generated@@819) (not ($generated@@731 $generated@@819 $generated@@822))) (and ($generated@@409 $generated@@822 $generated@@819) (and ($generated@@731 $generated@@823 $generated@@820) (not ($generated@@731 $generated@@820 $generated@@823)))))) (=> ($generated@@409 $generated@@822 $generated@@823) ($generated@@350 ($generated@@132 $generated@@818 ($generated@@178 $generated@@136) $generated@@822) ($generated@@132 $generated@@818 ($generated@@178 $generated@@136) $generated@@823)))))
 :no-pattern (type $generated@@822)
 :no-pattern (type $generated@@823)
 :no-pattern ($generated $generated@@822)
 :no-pattern ($generated@@0 $generated@@822)
 :no-pattern ($generated $generated@@823)
 :no-pattern ($generated@@0 $generated@@823)
)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@409 $generated@@819 $generated@@820))) ($generated@@350 ($generated@@132 $generated@@818 ($generated@@178 ($generated@@178 $generated@@136)) $generated@@819) ($generated@@132 $generated@@818 ($generated@@178 ($generated@@178 $generated@@136)) $generated@@820))))))
(let (($generated@@824  (=> (and (and (and ($generated@@293 $generated@@815) ($generated@@817 $generated@@815)) (and ($generated@@157 $generated@@819 ($generated@@270 $generated@@818)) ($generated@@74 $generated@@819 ($generated@@270 $generated@@818) $generated@@815))) (and (and ($generated@@157 $generated@@820 ($generated@@270 $generated@@818)) ($generated@@74 $generated@@820 ($generated@@270 $generated@@818) $generated@@815)) (and (= 2 $generated@@266) (= (ControlFlow 0 3) 2)))) $generated@@821)))
$generated@@824)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 () Bool)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@T) T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert  (=> $generated@@233 (= $generated@@234 ($generated@@235 10))))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@240 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@245))
)) (forall (($generated@@246 T@T) ) (! (= (type ($generated@@242 $generated@@246)) ($generated@@76 $generated@@246 $generated@@4))
 :pattern ( ($generated@@242 $generated@@246))
))))
(assert  (=> (<= 0 $generated@@236) (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@239 $generated@@248) (and (not (= 0 $generated@@236)) (and (and ($generated@@238 $generated@@247) ($generated@@132 $generated@@248 ($generated@@240 $generated@@46))) (not ($generated@@241 $generated@@248 ($generated@@242 $generated@@145))))))) (and (and $generated@@233 ($generated@@243 $generated@@248)) (= ($generated@@237 $generated@@248) (let (($generated@@249 ($generated@@244 $generated@@248)))
$generated@@249))))
 :pattern ( ($generated@@237 $generated@@248) ($generated@@238 $generated@@247))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@132 $generated@@250 ($generated@@240 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@145) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@224 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@132 $generated@@250 ($generated@@240 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@145) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@224 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@235 $generated@@258) $generated@@258)
 :pattern ( ($generated@@235 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) $generated@@145)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@238 $generated@@268)) (= ($generated@@74 ($generated@@223 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@136) (= ($generated@@134 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@136) ($generated@@134 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@145) (= (type $generated@@274) $generated@@145)) (= $generated@@272 ($generated@@223 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@134 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert  (=> (<= 0 $generated@@236) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@76 $generated@@145 $generated@@4)) (or ($generated@@239 $generated@@283) (and (not (= 0 $generated@@236)) (and ($generated@@132 $generated@@283 ($generated@@240 $generated@@46)) (not ($generated@@241 $generated@@283 ($generated@@242 $generated@@145))))))) true)
 :pattern ( ($generated@@237 $generated@@283))
))))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@145)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@64) (= (type $generated@@288) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@74 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@76 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@79 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@76 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@81 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@76 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@81 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@81 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@81 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@81 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@331))))
 (=> (and (= (type $generated@@331) ($generated@@76 $generated@@333 $generated@@4)) (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@4))) (= ($generated@@241 $generated@@331 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (= ($generated@@0 ($generated@@81 $generated@@331 $generated@@334)) ($generated@@0 ($generated@@81 $generated@@332 $generated@@334))))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@241 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2)) (= ($generated@@151 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@81 $generated@@335 $generated@@337))) (<= ($generated ($generated@@81 $generated@@335 $generated@@337)) ($generated@@289 $generated@@335))))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@151 $generated@@335))
)))
(assert  (=> (<= 0 $generated@@236) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@339) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@239 ($generated@@259 $generated@@339)) (and (not (= 0 $generated@@236)) (and (and ($generated@@238 $generated@@338) ($generated@@132 $generated@@339 ($generated@@240 $generated@@46))) (not ($generated@@241 $generated@@339 ($generated@@242 $generated@@145))))))) (and (and $generated@@233 ($generated@@243 ($generated@@259 $generated@@339))) (= ($generated@@237 ($generated@@259 $generated@@339)) (let (($generated@@340 ($generated@@244 ($generated@@259 $generated@@339))))
$generated@@340))))
 :weight 3
 :pattern ( ($generated@@237 ($generated@@259 $generated@@339)) ($generated@@238 $generated@@338))
))))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@299 (type $generated@@341))))
(let (($generated@@343 ($generated@@298 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@297 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@296 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@295 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@295 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@299 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@299 (type $generated@@348))))
(let (($generated@@350 ($generated@@298 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@297 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@296 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@317 (type $generated@@352))))
(let (($generated@@354 ($generated@@316 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@315 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@314 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@313 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@317 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(let (($generated@@361 ($generated@@316 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@315 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@314 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@132 $generated@@363 ($generated@@150 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@224 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@132 $generated@@363 ($generated@@150 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@240 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@263 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@240 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@370 ($generated@@253 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@145) ($generated@@0 ($generated@@81 $generated@@370 $generated@@373))) ($generated@@263 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@74 $generated@@370 ($generated@@253 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@81 ($generated@@290 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@81 ($generated@@290 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@299 (type $generated@@382))))
(let (($generated@@384 ($generated@@298 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@297 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@295 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@378 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@317 (type $generated@@390))))
(let (($generated@@392 ($generated@@316 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@315 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@313 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394)))) (= ($generated@@81 ($generated@@388 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@298 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@297 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@295 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@295 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@316 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@315 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@313 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@297 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@295 $generated@@408) $generated@@412))) (and ($generated@@263 ($generated@@81 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@263 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@295 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@315 $generated@@145 $generated@@145)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@416) $generated@@420))) (and ($generated@@263 ($generated@@81 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@263 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@421))))
 (=> (and (and (= (type $generated@@421) ($generated@@76 $generated@@423 $generated@@4)) (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@4))) ($generated@@241 $generated@@421 $generated@@422)) (= $generated@@421 $generated@@422)))
 :pattern ( ($generated@@241 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@76 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@317 (type $generated@@426))))
(let (($generated@@428 ($generated@@316 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@315 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@314 $generated@@428 $generated@@427)) (= ($generated@@313 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@313 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@317 (type $generated@@429))))
(let (($generated@@431 ($generated@@316 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@315 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@314 $generated@@431 $generated@@430)) (= ($generated@@356 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@356 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@317 (type $generated@@432))))
(let (($generated@@434 ($generated@@316 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@315 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@314 $generated@@434 $generated@@433)) (= ($generated@@387 $generated@@432) ($generated@@424 $generated@@145))))))
 :pattern ( ($generated@@387 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@299 (type $generated@@435))))
(let (($generated@@437 ($generated@@298 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@297 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@296 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@435) ($generated@@284 ($generated@@223 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@376 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@317 (type $generated@@440))))
(let (($generated@@442 ($generated@@316 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@315 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@314 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@145) (= (type $generated@@444) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@440) ($generated@@284 ($generated@@223 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) ($generated@@224 $generated@@445 $generated@@46)) (and (= ($generated@@284 ($generated@@377 $generated@@2 $generated@@445)) $generated@@445) ($generated@@132 ($generated@@377 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@145) ($generated@@224 $generated@@446 $generated@@47)) (and (= ($generated@@284 ($generated@@377 $generated@@3 $generated@@446)) $generated@@446) ($generated@@132 ($generated@@377 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@145) ($generated@@224 $generated@@447 $generated@@44)) (and (= ($generated@@284 ($generated@@377 $generated@@4 $generated@@447)) $generated@@447) ($generated@@132 ($generated@@377 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@145) ($generated@@224 $generated@@449 $generated@@45)) (and (= ($generated@@284 ($generated@@377 $generated@@448 $generated@@449)) $generated@@449) ($generated@@132 ($generated@@377 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@224 ($generated@@284 $generated@@450) $generated@@451) ($generated@@132 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@224 ($generated@@284 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@289 $generated@@452))))
 :pattern ( ($generated@@289 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@278 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@277 $generated@@455)) (<= 0 ($generated@@276 $generated@@454))))
 :pattern ( ($generated@@276 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@405 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@405 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@413 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@413 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@413 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@145) (= (type $generated@@477) $generated@@145)) (= ($generated@@269 ($generated@@223 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@135 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@135 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@135 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@145) (= (type $generated@@487) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@223 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) (= (type $generated@@489) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@223 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@278 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@277 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@276 $generated@@496))) ($generated@@263 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@240 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@240 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@240 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@253 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@253 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@150 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@150 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@377 $generated@@519 ($generated@@284 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@284 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@297 $generated@@145 $generated@@145)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@132 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@295 $generated@@520) $generated@@523))) (and ($generated@@224 ($generated@@81 ($generated@@378 $generated@@520) $generated@@523) $generated@@522) ($generated@@224 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@295 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@132 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@315 $generated@@145 $generated@@145)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@132 $generated@@524 ($generated@@413 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@524) $generated@@527))) (and ($generated@@224 ($generated@@81 ($generated@@388 $generated@@524) $generated@@527) $generated@@526) ($generated@@224 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@132 $generated@@524 ($generated@@413 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@145)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@223 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@223 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@145)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@223 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@223 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@405 $generated@@535 $generated@@536))) (and (= ($generated@@284 ($generated@@377 ($generated@@297 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@377 ($generated@@297 $generated@@145 $generated@@145) $generated@@534) ($generated@@405 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@413 $generated@@538 $generated@@539))) (and (= ($generated@@284 ($generated@@377 ($generated@@315 $generated@@145 $generated@@145) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@377 ($generated@@315 $generated@@145 $generated@@145) $generated@@537) ($generated@@413 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@413 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@145)) ($generated@@224 $generated@@542 ($generated@@135 $generated@@540 $generated@@541))) (and (= ($generated@@284 ($generated@@377 $generated@@136 $generated@@542)) $generated@@542) ($generated@@132 ($generated@@377 $generated@@136 $generated@@542) ($generated@@135 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@135 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@242 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@242 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@424 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@424 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@135 $generated@@549 $generated@@550)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@136) (= ($generated@@528 ($generated@@284 $generated@@551)) ($generated@@529 $generated@@551)))
 :pattern ( ($generated@@528 ($generated@@284 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) ($generated@@224 $generated@@552 ($generated@@75 0))) (and (= ($generated@@284 ($generated@@377 $generated@@2 $generated@@552)) $generated@@552) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@224 $generated@@553 ($generated@@240 $generated@@554))) (and (= ($generated@@284 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@553) ($generated@@240 $generated@@554))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@240 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) ($generated@@224 $generated@@555 ($generated@@253 $generated@@556))) (and (= ($generated@@284 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@555) ($generated@@253 $generated@@556))))
 :pattern ( ($generated@@224 $generated@@555 ($generated@@253 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@64)) ($generated@@224 $generated@@557 ($generated@@150 $generated@@558))) (and (= ($generated@@284 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@557)) $generated@@557) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@557) ($generated@@150 $generated@@558))))
 :pattern ( ($generated@@224 $generated@@557 ($generated@@150 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@64)) ($generated@@224 $generated@@559 ($generated@@490 $generated@@560))) (and (= ($generated@@284 ($generated@@377 ($generated@@277 $generated@@145) $generated@@559)) $generated@@559) ($generated@@132 ($generated@@377 ($generated@@277 $generated@@145) $generated@@559) ($generated@@490 $generated@@560))))
 :pattern ( ($generated@@224 $generated@@559 ($generated@@490 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@263 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@238 $generated@@567) (and ($generated@@134 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@263 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@263 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@136) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@238 $generated@@571) (and ($generated@@134 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@263 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@263 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@145)) (= ($generated@@223 ($generated@@259 $generated@@573) ($generated@@259 $generated@@574)) ($generated@@259 ($generated@@223 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@223 ($generated@@259 $generated@@573) ($generated@@259 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@145 $generated@@4)) ($generated@@243 $generated@@575)) ($generated@@0 ($generated@@81 $generated@@575 ($generated@@284 ($generated@@8 ($generated@@244 $generated@@575))))))
 :pattern ( ($generated@@244 $generated@@575))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@235 $generated@@576))) ($generated@@259 ($generated@@284 ($generated@@8 $generated@@576))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@235 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ) (! (= ($generated@@284 ($generated@@259 $generated@@577)) ($generated@@259 ($generated@@284 $generated@@577)))
 :pattern ( ($generated@@284 ($generated@@259 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@278 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@277 $generated@@579)) (= ($generated@@276 $generated@@578) 0)) (= $generated@@578 ($generated@@275 $generated@@579))))
 :pattern ( ($generated@@276 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@581)))
 (=> (and (and (= (type $generated@@580) ($generated@@76 $generated@@583 $generated@@2)) (= (type $generated@@582) $generated@@2)) (<= 0 ($generated $generated@@582))) (= ($generated@@289 ($generated@@82 $generated@@580 $generated@@581 $generated@@582)) (+ (- ($generated@@289 $generated@@580) ($generated ($generated@@81 $generated@@580 $generated@@581))) ($generated $generated@@582)))))
 :pattern ( ($generated@@289 ($generated@@82 $generated@@580 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@2)) ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@3)) ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@4)) ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@448)) ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@145)) ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@277 $generated@@145)) (= (type $generated@@595) $generated@@64)) (= ($generated@@132 $generated@@594 ($generated@@490 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@276 $generated@@594))) ($generated@@224 ($generated@@491 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@491 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@132 $generated@@594 ($generated@@490 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@277 $generated@@145)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@276 $generated@@598))) (< ($generated@@529 ($generated@@377 $generated@@136 ($generated@@491 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@529 ($generated@@377 $generated@@136 ($generated@@491 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@297 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@132 $generated@@600 ($generated@@405 $generated@@601 $generated@@602))) (and (and ($generated@@132 ($generated@@295 $generated@@600) ($generated@@240 $generated@@601)) ($generated@@132 ($generated@@345 $generated@@600) ($generated@@240 $generated@@602))) ($generated@@132 ($generated@@376 $generated@@600) ($generated@@240 ($generated@@135 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@132 $generated@@600 ($generated@@405 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@315 $generated@@145 $generated@@145)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@132 $generated@@603 ($generated@@413 $generated@@604 $generated@@605))) (and (and ($generated@@132 ($generated@@313 $generated@@603) ($generated@@253 $generated@@604)) ($generated@@132 ($generated@@356 $generated@@603) ($generated@@253 $generated@@605))) ($generated@@132 ($generated@@387 $generated@@603) ($generated@@253 ($generated@@135 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@132 $generated@@603 ($generated@@413 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@132 $generated@@606 $generated@@46))
 :pattern ( ($generated@@132 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@132 $generated@@607 $generated@@47))
 :pattern ( ($generated@@132 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@132 $generated@@608 $generated@@44))
 :pattern ( ($generated@@132 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@448) ($generated@@132 $generated@@609 $generated@@45))
 :pattern ( ($generated@@132 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@145) ($generated@@132 $generated@@610 $generated@@48))
 :pattern ( ($generated@@132 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@611) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@616) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@617) $generated@@77)) (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@619) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@621 true))
(let (($generated@@622  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and ($generated@@132 ($generated@@8 ($generated@@235 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@611 ($generated@@284 ($generated@@8 ($generated@@235 0)))))) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@2) ($generated@@0 ($generated@@81 $generated@@611 ($generated@@284 $generated@@623))))
 :no-pattern (type $generated@@623)
 :no-pattern ($generated $generated@@623)
 :no-pattern ($generated@@0 $generated@@623)
)))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@235 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@611 ($generated@@284 ($generated@@8 ($generated@@235 0)))))) (exists (($generated@@624 Int) ) ($generated@@0 ($generated@@81 $generated@@611 ($generated@@284 ($generated@@8 $generated@@624)))))) (=> (and ($generated@@0 ($generated@@81 $generated@@611 ($generated@@284 ($generated@@8 $generated@@612)))) ($generated@@0 ($generated@@81 $generated@@611 ($generated@@284 ($generated@@8 $generated@@613))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= $generated@@612 $generated@@613)) (=> (= $generated@@612 $generated@@613) (=> (and (and ($generated@@243 $generated@@611) (= $generated@@614 ($generated@@235 10))) (and ($generated@@243 $generated@@611) (= (ControlFlow 0 4) (- 0 3)))) (= (let (($generated@@625 ($generated@@244 $generated@@611)))
$generated@@625) (let (($generated@@626 ($generated@@244 $generated@@611)))
$generated@@626))))))))))
(let (($generated@@627  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (and ($generated@@132 ($generated@@8 ($generated@@235 10)) $generated@@46) (= ($generated@@235 10) ($generated@@235 10))) (or (and ($generated@@132 ($generated@@8 ($generated@@235 0)) $generated@@46) (= ($generated@@235 0) ($generated@@235 10))) (exists (($generated@@628 Int) ) (= $generated@@628 ($generated@@235 10)))))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@235 10)) $generated@@46) (= ($generated@@235 10) ($generated@@235 10))) (or (and ($generated@@132 ($generated@@8 ($generated@@235 0)) $generated@@46) (= ($generated@@235 0) ($generated@@235 10))) (exists (($generated@@629 Int) ) (= $generated@@629 ($generated@@235 10))))) (=> (= $generated@@615 ($generated@@235 10)) (and (=> (= (ControlFlow 0 8) 4) $generated@@622) (=> (= (ControlFlow 0 8) 7) $generated@@621)))))))
(let (($generated@@630 true))
(let (($generated@@631  (=> (= $generated@@616 ($generated@@211 $generated@@617 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@627) (=> (= (ControlFlow 0 10) 2) $generated@@630)))))
(let (($generated@@632 true))
(let (($generated@@633  (=> (and (= $generated@@619 ($generated@@156 $generated@@617 $generated@@618 $generated@@60 false)) (not ($generated@@241 $generated@@611 ($generated@@242 $generated@@145)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@632) (=> (= (ControlFlow 0 11) 10) $generated@@631)))))
(let (($generated@@634  (=> (and (and (and ($generated@@238 $generated@@618) ($generated@@620 $generated@@618)) ($generated@@132 $generated@@611 ($generated@@240 $generated@@46))) (and (= 0 $generated@@236) (= (ControlFlow 0 12) 11))) $generated@@633)))
$generated@@634)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@T) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@U Int) T@U)
(declare-fun $generated@@275 (Int) Int)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@294 (T@U T@U) Bool)
(declare-fun $generated@@295 (T@U T@U) Bool)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@297 (T@U T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U T@U) T@U)
(declare-fun $generated@@300 (T@U T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@U T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U T@U) Bool)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@456 (T@U T@U) Bool)
(declare-fun $generated@@460 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@T T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U T@U) T@U)
(declare-fun $generated@@523 (T@U T@U) T@U)
(declare-fun $generated@@557 (T@T) T@U)
(declare-fun $generated@@581 () T@T)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@641 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@669 (T@U) Int)
(declare-fun $generated@@670 (T@U) Int)
(declare-fun $generated@@696 (T@U) T@U)
(declare-fun $generated@@700 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@794 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@139)) 16))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@137 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@137 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@132 $generated@@141 $generated@@142 $generated@@143)) ($generated@@137 $generated@@135))
 :pattern ( ($generated@@132 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@133 $generated@@144)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@144))
))) (= (type $generated@@136) $generated@@134)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@134)) (= (type $generated@@147) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@132 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@145 $generated@@136 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@145 ($generated@@133 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 (type $generated@@151)))
(= (type ($generated@@149 $generated@@150 $generated@@151)) ($generated@@137 $generated@@152)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@154)))
 (=> (and (= (type $generated@@153) ($generated@@137 $generated@@156)) (= (type $generated@@155) $generated@@156)) (= ($generated@@148 ($generated@@149 $generated@@153 $generated@@154) $generated@@155)  (or (= $generated@@154 $generated@@155) ($generated@@148 $generated@@153 $generated@@155)))))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@153 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@75 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 17) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@64) (= (type $generated@@165) $generated@@64)) (= (type $generated@@166) $generated@@161)) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@135)
 :pattern ( ($generated@@168 $generated@@170))
)) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@135)
 :pattern ( ($generated@@169 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@161) (= (type $generated@@173) $generated@@161)) true) (= ($generated@@167 $generated@@172 $generated@@173)  (and (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)) (= ($generated@@169 $generated@@172) ($generated@@169 $generated@@173)))))
 :pattern ( ($generated@@167 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@T) ) (! (= (type ($generated@@174 $generated@@175)) ($generated@@137 $generated@@175))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
 (not ($generated@@148 ($generated@@174 $generated@@177) $generated@@176)))
 :pattern ( (let (($generated@@177 (type $generated@@176)))
($generated@@148 ($generated@@174 $generated@@177) $generated@@176)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@134)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@64) (= (type $generated@@181) $generated@@134)) (= (type $generated@@182) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@132 $generated@@180 ($generated@@178 $generated@@181) $generated@@182) ($generated@@132 $generated@@180 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@132 $generated@@180 ($generated@@178 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@187) $generated@@64)) ($generated@@157 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@157 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@77 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@67 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@239) ($generated@@66 $generated@@4))) (= (type $generated@@241) $generated@@77)) (= (type $generated@@242) ($generated@@66 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@79 (type $generated@@245))))
(= (type ($generated@@244 $generated@@245 $generated@@246)) ($generated@@76 $generated@@247 $generated@@4)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@79 (type $generated@@248))))
 (=> (and (= (type $generated@@248) ($generated@@76 $generated@@250 $generated@@4)) (= (type $generated@@249) ($generated@@76 $generated@@250 $generated@@4))) (= ($generated@@244 ($generated@@244 $generated@@248 $generated@@249) $generated@@249) ($generated@@244 $generated@@248 $generated@@249))))
 :pattern ( ($generated@@244 ($generated@@244 $generated@@248 $generated@@249) $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@79 (type $generated@@252))))
(= (type ($generated@@251 $generated@@252 $generated@@253)) ($generated@@76 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@79 (type $generated@@255))))
 (=> (and (= (type $generated@@255) ($generated@@76 $generated@@257 $generated@@4)) (= (type $generated@@256) ($generated@@76 $generated@@257 $generated@@4))) (= ($generated@@251 ($generated@@251 $generated@@255 $generated@@256) $generated@@256) ($generated@@251 $generated@@255 $generated@@256))))
 :pattern ( ($generated@@251 ($generated@@251 $generated@@255 $generated@@256) $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@161)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@64) (= (type $generated@@263) $generated@@64)) (= (type $generated@@264) $generated@@135)) (= (type $generated@@265) $generated@@135)) (= ($generated@@157 ($generated@@258 $generated@@264 $generated@@265) ($generated@@160 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@157 ($generated@@258 $generated@@264 $generated@@265) ($generated@@160 $generated@@262 $generated@@263)))
)))
(assert  (and (and (and (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@268 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@268 $generated@@276))
)) (forall (($generated@@278 T@U) ) (! (= (type ($generated@@270 $generated@@278)) $generated@@64)
 :pattern ( ($generated@@270 $generated@@278))
))) (forall (($generated@@279 T@U) ) (! (= (type ($generated@@271 $generated@@279)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@279))
))) (forall (($generated@@280 T@U) ($generated@@281 Int) ) (! (let (($generated@@282 ($generated@@138 (type $generated@@280))))
(= (type ($generated@@274 $generated@@280 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@274 $generated@@280 $generated@@281))
))))
(assert  (=> (<= 0 $generated@@266) (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@285) ($generated@@137 $generated@@135))) (or ($generated@@269 $generated@@283 ($generated@@268 $generated@@284) ($generated@@268 $generated@@285)) (and (not (= 0 $generated@@266)) (and ($generated@@157 $generated@@284 ($generated@@270 $generated@@283)) ($generated@@157 $generated@@285 ($generated@@271 $generated@@283)))))) (= ($generated@@267 $generated@@283 ($generated@@268 $generated@@284) ($generated@@268 $generated@@285))  (=> (= ($generated@@272 ($generated@@268 $generated@@284)) ($generated@@273 ($generated@@268 $generated@@285))) (and (forall (($generated@@286 Int) ) (!  (=> true (=> (and (<= ($generated@@275 0) $generated@@286) (< $generated@@286 ($generated@@273 ($generated@@268 $generated@@285)))) ($generated@@0 ($generated@@81 ($generated@@268 $generated@@284) ($generated@@274 ($generated@@268 $generated@@285) $generated@@286)))))
 :pattern ( ($generated@@274 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@135) ($generated@@259 $generated@@287 $generated@@283)) ($generated@@0 ($generated@@81 ($generated@@268 $generated@@284) $generated@@287))) ($generated@@148 $generated@@285 $generated@@287))
 :pattern ( ($generated@@148 $generated@@285 $generated@@287))
 :pattern ( ($generated@@81 $generated@@284 $generated@@287))
))))))
 :weight 3
 :pattern ( ($generated@@267 $generated@@283 ($generated@@268 $generated@@284) ($generated@@268 $generated@@285)))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@288))))
 (=> (and (= (type $generated@@288) ($generated@@76 $generated@@290 $generated@@4)) (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@4))) (= (+ ($generated@@272 ($generated@@244 $generated@@288 $generated@@289)) ($generated@@272 ($generated@@251 $generated@@288 $generated@@289))) (+ ($generated@@272 $generated@@288) ($generated@@272 $generated@@289)))))
 :pattern ( ($generated@@272 ($generated@@244 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@272 ($generated@@251 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@161) (= (type $generated@@292) $generated@@161)) (= ($generated@@167 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@167 $generated@@291 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@79 (type $generated@@301))))
(= (type ($generated@@296 $generated@@301 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
)) (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
(= (type ($generated@@297 $generated@@304 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@298 $generated@@307)) ($generated@@76 $generated@@307 $generated@@4))
 :pattern ( ($generated@@298 $generated@@307))
))) (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (= (type ($generated@@299 $generated@@308 $generated@@309)) $generated@@135)
 :pattern ( ($generated@@299 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@138 (type $generated@@310))))
(= (type ($generated@@300 $generated@@310 $generated@@311)) ($generated@@137 $generated@@312)))
 :pattern ( ($generated@@300 $generated@@310 $generated@@311))
))))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) $generated@@64) (= (type $generated@@314) $generated@@134)) (= (type $generated@@315) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@316) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@294 $generated@@313 $generated@@316) (and (not (= 1 $generated@@266)) (and ($generated@@293 $generated@@315) ($generated@@157 $generated@@316 ($generated@@270 $generated@@313)))))) (and (let (($generated@@317 $generated@@316))
 (=> (not (= ($generated@@272 $generated@@317) ($generated@@275 0))) (and ($generated@@295 $generated@@313 $generated@@317) (let (($generated@@318 ($generated@@296 $generated@@317 ($generated@@297 ($generated@@298 $generated@@135) ($generated@@299 $generated@@313 $generated@@317)))))
($generated@@294 $generated@@313 $generated@@318))))) (= ($generated@@132 $generated@@313 ($generated@@178 $generated@@314) $generated@@316) (let (($generated@@319 $generated@@316))
(ite (= ($generated@@272 $generated@@319) ($generated@@275 0)) ($generated@@174 $generated@@135) (let (($generated@@320 ($generated@@299 $generated@@313 $generated@@319)))
(let (($generated@@321 ($generated@@296 $generated@@319 ($generated@@297 ($generated@@298 $generated@@135) $generated@@320))))
(let (($generated@@322 ($generated@@132 $generated@@313 $generated@@314 $generated@@321)))
($generated@@300 ($generated@@149 ($generated@@174 $generated@@135) $generated@@320) $generated@@322)))))))))
 :pattern ( ($generated@@132 $generated@@313 ($generated@@178 $generated@@314) $generated@@316) ($generated@@293 $generated@@315))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@324) $generated@@64)) (= ($generated@@157 $generated@@323 ($generated@@270 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@135) ($generated@@0 ($generated@@81 $generated@@323 $generated@@325))) ($generated@@259 $generated@@325 $generated@@324))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@157 $generated@@323 ($generated@@270 $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@64)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@329) $generated@@64)) (= ($generated@@157 $generated@@328 ($generated@@326 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@135) ($generated@@0 ($generated@@81 $generated@@328 $generated@@330))) ($generated@@259 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@157 $generated@@328 ($generated@@326 $generated@@329)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@275 $generated@@331) $generated@@331)
 :pattern ( ($generated@@275 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (! (= ($generated@@268 $generated@@332) $generated@@332)
 :pattern ( ($generated@@268 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@137 $generated@@135)) (= (type $generated@@334) $generated@@135)) (= (type $generated@@335) $generated@@64)) (and ($generated@@157 $generated@@333 ($generated@@271 $generated@@335)) ($generated@@259 $generated@@334 $generated@@335))) ($generated@@157 ($generated@@149 $generated@@333 $generated@@334) ($generated@@271 $generated@@335)))
 :pattern ( ($generated@@157 ($generated@@149 $generated@@333 $generated@@334) ($generated@@271 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@337) $generated@@64) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) $generated@@135)) (= (type $generated@@340) $generated@@135)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@293 $generated@@341)) (= ($generated@@74 ($generated@@258 $generated@@339 $generated@@340) ($generated@@160 $generated@@337 $generated@@338) $generated@@341)  (and ($generated@@336 $generated@@339 $generated@@337 $generated@@341) ($generated@@336 $generated@@340 $generated@@338 $generated@@341))))
 :pattern ( ($generated@@74 ($generated@@258 $generated@@339 $generated@@340) ($generated@@160 $generated@@337 $generated@@338) $generated@@341))
)))
(assert  (=> (<= 0 $generated@@266) (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (= (type $generated@@342) $generated@@64) (= (type $generated@@343) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@344) ($generated@@137 $generated@@135))) (or ($generated@@269 $generated@@342 $generated@@343 $generated@@344) (and (not (= 0 $generated@@266)) (and ($generated@@157 $generated@@343 ($generated@@270 $generated@@342)) ($generated@@157 $generated@@344 ($generated@@271 $generated@@342)))))) (= ($generated@@267 $generated@@342 $generated@@343 $generated@@344)  (=> (= ($generated@@272 $generated@@343) ($generated@@273 $generated@@344)) (and (forall (($generated@@345 Int) ) (!  (=> true (=> (and (<= ($generated@@275 0) $generated@@345) (< $generated@@345 ($generated@@273 $generated@@344))) ($generated@@0 ($generated@@81 $generated@@343 ($generated@@274 $generated@@344 $generated@@345)))))
 :pattern ( ($generated@@274 $generated@@344 $generated@@345))
)) (forall (($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@135) ($generated@@259 $generated@@346 $generated@@342)) ($generated@@0 ($generated@@81 $generated@@343 $generated@@346))) ($generated@@148 $generated@@344 $generated@@346))
 :pattern ( ($generated@@148 $generated@@344 $generated@@346))
 :pattern ( ($generated@@81 $generated@@343 $generated@@346))
))))))
 :pattern ( ($generated@@267 $generated@@342 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@68)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@161) (= ($generated@@159 $generated@@349) (= ($generated@@347 $generated@@349) $generated@@61)))
 :pattern ( ($generated@@159 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@138 (type $generated@@351))))
 (=> (and (= (type $generated@@351) ($generated@@137 $generated@@353)) (= (type $generated@@352) ($generated@@137 $generated@@353))) (= ($generated@@350 $generated@@351 $generated@@352)  (and (= ($generated@@273 $generated@@351) ($generated@@273 $generated@@352)) (forall (($generated@@354 Int) ) (!  (=> (and (<= 0 $generated@@354) (< $generated@@354 ($generated@@273 $generated@@351))) (= ($generated@@274 $generated@@351 $generated@@354) ($generated@@274 $generated@@352 $generated@@354)))
 :pattern ( ($generated@@274 $generated@@351 $generated@@354))
 :pattern ( ($generated@@274 $generated@@352 $generated@@354))
))))))
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@161) ($generated@@159 $generated@@355)) (exists (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (and (and (= (type $generated@@356) $generated@@135) (= (type $generated@@357) $generated@@135)) (= $generated@@355 ($generated@@258 $generated@@356 $generated@@357)))
 :no-pattern (type $generated@@356)
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
)))
 :pattern ( ($generated@@159 $generated@@355))
)))
(assert (forall (($generated@@358 T@T) ) (! (= ($generated@@273 ($generated@@174 $generated@@358)) 0)
 :pattern ( ($generated@@174 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@359) ($generated@@137 $generated@@361)) (= ($generated@@273 ($generated@@149 $generated@@359 $generated@@360)) (+ 1 ($generated@@273 $generated@@359)))))
 :pattern ( ($generated@@149 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@135)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@64) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@336 ($generated@@362 $generated@@364) $generated@@365 $generated@@366) ($generated@@74 $generated@@364 $generated@@365 $generated@@366)))
 :pattern ( ($generated@@336 ($generated@@362 $generated@@364) $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@369 $generated@@2))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@79 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@76 $generated@@371 $generated@@2)) (and (= (= ($generated@@367 $generated@@370) 0) (= $generated@@370 ($generated@@368 $generated@@371))) (=> (not (= ($generated@@367 $generated@@370) 0)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (< 0 ($generated ($generated@@81 $generated@@370 $generated@@372))))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 19)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@76 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@81 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@81 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 20)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@76 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@81 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@81 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@79 (type $generated@@410))))
 (=> (and (= (type $generated@@410) ($generated@@76 $generated@@412 $generated@@4)) (= (type $generated@@411) ($generated@@76 $generated@@412 $generated@@4))) (= ($generated@@409 $generated@@410 $generated@@411) (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@412) (= ($generated@@0 ($generated@@81 $generated@@410 $generated@@413)) ($generated@@0 ($generated@@81 $generated@@411 $generated@@413))))
 :pattern ( ($generated@@81 $generated@@410 $generated@@413))
 :pattern ( ($generated@@81 $generated@@411 $generated@@413))
)))))
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@138 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@137 $generated@@416)) (= (type $generated@@415) ($generated@@137 $generated@@416))) (= ($generated@@273 ($generated@@300 $generated@@414 $generated@@415)) (+ ($generated@@273 $generated@@414) ($generated@@273 $generated@@415)))))
 :pattern ( ($generated@@273 ($generated@@300 $generated@@414 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@79 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@76 $generated@@418 $generated@@2)) (= ($generated@@184 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (and (<= 0 ($generated ($generated@@81 $generated@@417 $generated@@419))) (<= ($generated ($generated@@81 $generated@@417 $generated@@419)) ($generated@@367 $generated@@417))))
 :pattern ( ($generated@@81 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@184 $generated@@417))
)))
(assert  (=> (<= 0 $generated@@266) (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@422) ($generated@@137 $generated@@135))) (or ($generated@@269 $generated@@420 $generated@@421 $generated@@422) (and (not (= 0 $generated@@266)) (and ($generated@@157 $generated@@421 ($generated@@270 $generated@@420)) ($generated@@157 $generated@@422 ($generated@@271 $generated@@420)))))) true)
 :pattern ( ($generated@@267 $generated@@420 $generated@@421 $generated@@422))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 Int) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
 (=> (= (type $generated@@423) ($generated@@137 $generated@@426)) (and (=> (= $generated@@424 ($generated@@273 $generated@@423)) (= ($generated@@274 ($generated@@149 $generated@@423 $generated@@425) $generated@@424) $generated@@425)) (=> (not (= $generated@@424 ($generated@@273 $generated@@423))) (= ($generated@@274 ($generated@@149 $generated@@423 $generated@@425) $generated@@424) ($generated@@274 $generated@@423 $generated@@424))))))
 :pattern ( ($generated@@274 ($generated@@149 $generated@@423 $generated@@425) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@377 (type $generated@@427))))
(let (($generated@@429 ($generated@@376 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@375 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@374 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@377 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@76 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@377 (type $generated@@434))))
(let (($generated@@436 ($generated@@376 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@375 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@374 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@81 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@395 (type $generated@@438))))
(let (($generated@@440 ($generated@@394 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@393 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@392 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@391 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@395 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@76 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@395 (type $generated@@445))))
(let (($generated@@447 ($generated@@394 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@393 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@392 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@81 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@450) $generated@@64)) (= ($generated@@157 $generated@@449 ($generated@@183 $generated@@450)) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@449 $generated@@451)))) ($generated@@259 $generated@@451 $generated@@450))
 :pattern ( ($generated@@81 $generated@@449 $generated@@451))
))))
 :pattern ( ($generated@@157 $generated@@449 ($generated@@183 $generated@@450)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (and (= (type $generated@@452) ($generated@@137 $generated@@455)) (= (type $generated@@453) ($generated@@137 $generated@@455))) (= ($generated@@148 ($generated@@300 $generated@@452 $generated@@453) $generated@@454)  (or ($generated@@148 $generated@@452 $generated@@454) ($generated@@148 $generated@@453 $generated@@454)))))
 :pattern ( ($generated@@148 ($generated@@300 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@76 $generated@@459 $generated@@4)) (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@4))) ($generated@@456 $generated@@457 $generated@@458)) (and (= ($generated@@296 ($generated@@244 $generated@@457 $generated@@458) $generated@@457) $generated@@458) (= ($generated@@296 ($generated@@244 $generated@@457 $generated@@458) $generated@@458) $generated@@457))))
 :pattern ( ($generated@@244 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@377 (type $generated@@461))))
(let (($generated@@463 ($generated@@376 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@375 $generated@@463 $generated@@462)) (= (= ($generated@@460 $generated@@461) 0) (= $generated@@461 ($generated@@374 $generated@@463 $generated@@462))))))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
 (=> (= (type $generated@@464) ($generated@@137 $generated@@466)) (= ($generated@@148 $generated@@464 $generated@@465) (exists (($generated@@467 Int) ) (!  (and (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@273 $generated@@464))) (= ($generated@@274 $generated@@464 $generated@@467) $generated@@465))
 :pattern ( ($generated@@274 $generated@@464 $generated@@467))
)))))
 :pattern ( ($generated@@148 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
 (=> (and (= (type $generated@@468) ($generated@@76 $generated@@471 $generated@@4)) (= (type $generated@@469) ($generated@@76 $generated@@471 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@251 $generated@@468 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@81 $generated@@468 $generated@@470)) ($generated@@0 ($generated@@81 $generated@@469 $generated@@470))))))
 :pattern ( ($generated@@81 ($generated@@251 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
 (=> (and (= (type $generated@@472) ($generated@@76 $generated@@475 $generated@@4)) (= (type $generated@@473) ($generated@@76 $generated@@475 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@296 $generated@@472 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@81 $generated@@472 $generated@@474)) (not ($generated@@0 ($generated@@81 $generated@@473 $generated@@474)))))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@270 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) ($generated@@0 ($generated@@81 $generated@@476 $generated@@479))) ($generated@@336 $generated@@479 $generated@@477 $generated@@478))
 :pattern ( ($generated@@81 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@270 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@326 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@135) ($generated@@0 ($generated@@81 $generated@@480 $generated@@483))) ($generated@@336 $generated@@483 $generated@@481 $generated@@482))
 :pattern ( ($generated@@81 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@326 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated ($generated@@81 ($generated@@368 $generated@@485) $generated@@484)) 0))
 :pattern ( (let (($generated@@485 (type $generated@@484)))
($generated@@81 ($generated@@368 $generated@@485) $generated@@484)))
)))
(assert  (and (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@486 $generated@@489)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@486 $generated@@489))
)) (forall (($generated@@490 T@T) ($generated@@491 T@U) ) (! (= (type ($generated@@487 $generated@@490 $generated@@491)) $generated@@490)
 :pattern ( ($generated@@487 $generated@@490 $generated@@491))
))) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@377 (type $generated@@492))))
(let (($generated@@494 ($generated@@376 (type $generated@@492))))
(= (type ($generated@@488 $generated@@492)) ($generated@@76 $generated@@494 $generated@@493))))
 :pattern ( ($generated@@488 $generated@@492))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@496) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@486 $generated@@495) $generated@@496))  (and ($generated@@0 ($generated@@81 ($generated@@373 $generated@@495) ($generated@@168 ($generated@@487 $generated@@161 $generated@@496)))) (= ($generated@@81 ($generated@@488 $generated@@495) ($generated@@168 ($generated@@487 $generated@@161 $generated@@496))) ($generated@@169 ($generated@@487 $generated@@161 $generated@@496))))))
 :pattern ( ($generated@@81 ($generated@@486 $generated@@495) $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@395 (type $generated@@500))))
(let (($generated@@502 ($generated@@394 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500)) ($generated@@76 $generated@@502 $generated@@501))))
 :pattern ( ($generated@@498 $generated@@500))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@504) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@497 $generated@@503) $generated@@504))  (and ($generated@@0 ($generated@@81 ($generated@@391 $generated@@503) ($generated@@168 ($generated@@487 $generated@@161 $generated@@504)))) (= ($generated@@81 ($generated@@498 $generated@@503) ($generated@@168 ($generated@@487 $generated@@161 $generated@@504))) ($generated@@169 ($generated@@487 $generated@@161 $generated@@504))))))
 :pattern ( ($generated@@81 ($generated@@497 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 ($generated@@376 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@375 $generated@@508 $generated@@507)) (= ($generated@@0 ($generated@@81 ($generated@@431 $generated@@505) $generated@@506)) (exists (($generated@@509 T@U) ) (!  (and (= (type $generated@@509) $generated@@508) (and ($generated@@0 ($generated@@81 ($generated@@373 $generated@@505) $generated@@509)) (= $generated@@506 ($generated@@81 ($generated@@488 $generated@@505) $generated@@509))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@505) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@488 $generated@@505) $generated@@509))
))))))
 :pattern ( ($generated@@81 ($generated@@431 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(let (($generated@@513 ($generated@@394 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@393 $generated@@513 $generated@@512)) (= ($generated@@0 ($generated@@81 ($generated@@442 $generated@@510) $generated@@511)) (exists (($generated@@514 T@U) ) (!  (and (= (type $generated@@514) $generated@@513) (and ($generated@@0 ($generated@@81 ($generated@@391 $generated@@510) $generated@@514)) (= $generated@@511 ($generated@@81 ($generated@@498 $generated@@510) $generated@@514))))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@510) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@498 $generated@@510) $generated@@514))
))))))
 :pattern ( ($generated@@81 ($generated@@442 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@518) $generated@@522))) (and ($generated@@336 ($generated@@81 ($generated@@488 $generated@@518) $generated@@522) $generated@@520 $generated@@521) ($generated@@336 $generated@@522 $generated@@519 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@488 $generated@@518) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@518) $generated@@522))
))))
 :pattern ( ($generated@@74 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@523 $generated@@527 $generated@@528) $generated@@529) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@526) $generated@@530))) (and ($generated@@336 ($generated@@81 ($generated@@498 $generated@@526) $generated@@530) $generated@@528 $generated@@529) ($generated@@336 $generated@@530 $generated@@527 $generated@@529)))
 :pattern ( ($generated@@81 ($generated@@498 $generated@@526) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@526) $generated@@530))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@523 $generated@@527 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@79 (type $generated@@531))))
 (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@533 $generated@@4)) (= (type $generated@@532) ($generated@@76 $generated@@533 $generated@@4))) ($generated@@409 $generated@@531 $generated@@532)) (= $generated@@531 $generated@@532)))
 :pattern ( ($generated@@409 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@138 (type $generated@@534))))
 (=> (and (and (= (type $generated@@534) ($generated@@137 $generated@@536)) (= (type $generated@@535) ($generated@@137 $generated@@536))) ($generated@@350 $generated@@534 $generated@@535)) (= $generated@@534 $generated@@535)))
 :pattern ( ($generated@@350 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@538)))
 (=> (and (and (= (type $generated@@537) ($generated@@76 $generated@@540 $generated@@4)) (= (type $generated@@539) $generated@@540)) ($generated@@0 ($generated@@81 $generated@@537 $generated@@539))) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@537 $generated@@538) $generated@@539))))
 :pattern ( ($generated@@297 $generated@@537 $generated@@538) ($generated@@81 $generated@@537 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@4)) (= (type $generated@@542) ($generated@@76 $generated@@544 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@541 $generated@@543))) ($generated@@0 ($generated@@81 ($generated@@244 $generated@@541 $generated@@542) $generated@@543))))
 :pattern ( ($generated@@244 $generated@@541 $generated@@542) ($generated@@81 $generated@@541 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@548 $generated@@4)) (= (type $generated@@546) ($generated@@76 $generated@@548 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@546 $generated@@547))) ($generated@@0 ($generated@@81 ($generated@@244 $generated@@545 $generated@@546) $generated@@547))))
 :pattern ( ($generated@@244 $generated@@545 $generated@@546) ($generated@@81 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@4)) (= (type $generated@@551) $generated@@552)) (= ($generated@@0 ($generated@@81 ($generated@@297 $generated@@549 $generated@@550) $generated@@551))  (or (= $generated@@551 $generated@@550) ($generated@@0 ($generated@@81 $generated@@549 $generated@@551))))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@549 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@556 $generated@@4)) (= (type $generated@@554) ($generated@@76 $generated@@556 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@554 $generated@@555))) (not ($generated@@0 ($generated@@81 ($generated@@296 $generated@@553 $generated@@554) $generated@@555)))))
 :pattern ( ($generated@@296 $generated@@553 $generated@@554) ($generated@@81 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@558 T@T) ) (! (= (type ($generated@@557 $generated@@558)) ($generated@@76 $generated@@558 $generated@@4))
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@395 (type $generated@@559))))
(let (($generated@@561 ($generated@@394 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@393 $generated@@561 $generated@@560)) (= (= $generated@@559 ($generated@@392 $generated@@561 $generated@@560)) (= ($generated@@391 $generated@@559) ($generated@@557 $generated@@561))))))
 :pattern ( ($generated@@391 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@395 (type $generated@@562))))
(let (($generated@@564 ($generated@@394 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@393 $generated@@564 $generated@@563)) (= (= $generated@@562 ($generated@@392 $generated@@564 $generated@@563)) (= ($generated@@442 $generated@@562) ($generated@@557 $generated@@563))))))
 :pattern ( ($generated@@442 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@395 (type $generated@@565))))
(let (($generated@@567 ($generated@@394 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@393 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@392 $generated@@567 $generated@@566)) (= ($generated@@497 $generated@@565) ($generated@@557 $generated@@135))))))
 :pattern ( ($generated@@497 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@377 (type $generated@@568))))
(let (($generated@@570 ($generated@@376 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@375 $generated@@570 $generated@@569)) (or (= $generated@@568 ($generated@@374 $generated@@570 $generated@@569)) (exists (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (and (and (= (type $generated@@571) $generated@@135) (= (type $generated@@572) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@486 $generated@@568) ($generated@@362 ($generated@@258 $generated@@571 $generated@@572)))))
 :no-pattern (type $generated@@571)
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
))))))
 :pattern ( ($generated@@486 $generated@@568))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@395 (type $generated@@573))))
(let (($generated@@575 ($generated@@394 (type $generated@@573))))
 (=> (= (type $generated@@573) ($generated@@393 $generated@@575 $generated@@574)) (or (= $generated@@573 ($generated@@392 $generated@@575 $generated@@574)) (exists (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (and (and (= (type $generated@@576) $generated@@135) (= (type $generated@@577) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@497 $generated@@573) ($generated@@362 ($generated@@258 $generated@@576 $generated@@577)))))
 :no-pattern (type $generated@@576)
 :no-pattern (type $generated@@577)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
))))))
 :pattern ( ($generated@@497 $generated@@573))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@135) ($generated@@259 $generated@@578 $generated@@46)) (and (= ($generated@@362 ($generated@@487 $generated@@2 $generated@@578)) $generated@@578) ($generated@@157 ($generated@@487 $generated@@2 $generated@@578) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@135) ($generated@@259 $generated@@579 $generated@@47)) (and (= ($generated@@362 ($generated@@487 $generated@@3 $generated@@579)) $generated@@579) ($generated@@157 ($generated@@487 $generated@@3 $generated@@579) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@135) ($generated@@259 $generated@@580 $generated@@44)) (and (= ($generated@@362 ($generated@@487 $generated@@4 $generated@@580)) $generated@@580) ($generated@@157 ($generated@@487 $generated@@4 $generated@@580) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@580 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@581) 21))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@135) ($generated@@259 $generated@@582 $generated@@45)) (and (= ($generated@@362 ($generated@@487 $generated@@581 $generated@@582)) $generated@@582) ($generated@@157 ($generated@@487 $generated@@581 $generated@@582) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@582 $generated@@45))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@79 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@76 $generated@@585 $generated@@4)) (= (type $generated@@584) ($generated@@76 $generated@@585 $generated@@4))) (and (= (+ (+ ($generated@@272 ($generated@@296 $generated@@583 $generated@@584)) ($generated@@272 ($generated@@296 $generated@@584 $generated@@583))) ($generated@@272 ($generated@@251 $generated@@583 $generated@@584))) ($generated@@272 ($generated@@244 $generated@@583 $generated@@584))) (= ($generated@@272 ($generated@@296 $generated@@583 $generated@@584)) (- ($generated@@272 $generated@@583) ($generated@@272 ($generated@@251 $generated@@583 $generated@@584)))))))
 :pattern ( ($generated@@272 ($generated@@296 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@64) (= ($generated@@259 ($generated@@362 $generated@@586) $generated@@587) ($generated@@157 $generated@@586 $generated@@587)))
 :pattern ( ($generated@@259 ($generated@@362 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@79 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@76 $generated@@589 $generated@@4)) (<= 0 ($generated@@272 $generated@@588))))
 :pattern ( ($generated@@272 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@79 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@76 $generated@@591 $generated@@2)) (<= 0 ($generated@@367 $generated@@590))))
 :pattern ( ($generated@@367 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@138 (type $generated@@592))))
 (=> (= (type $generated@@592) ($generated@@137 $generated@@593)) (<= 0 ($generated@@273 $generated@@592))))
 :pattern ( ($generated@@273 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@377 (type $generated@@594))))
(let (($generated@@596 ($generated@@376 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@375 $generated@@596 $generated@@595)) (<= 0 ($generated@@460 $generated@@594)))))
 :pattern ( ($generated@@460 $generated@@594))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@64)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@64) (= (type $generated@@600) $generated@@64)) (= ($generated@@597 ($generated@@515 $generated@@599 $generated@@600)) $generated@@599))
 :pattern ( ($generated@@515 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@64)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@64) (= (type $generated@@604) $generated@@64)) (= ($generated@@601 ($generated@@515 $generated@@603 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@515 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@64) (= (type $generated@@606) $generated@@64)) (= ($generated@@72 ($generated@@515 $generated@@605 $generated@@606)) $generated@@58))
 :pattern ( ($generated@@515 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@64)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) $generated@@64)) (= ($generated@@607 ($generated@@523 $generated@@609 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@523 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@64)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@64) (= (type $generated@@614) $generated@@64)) (= ($generated@@611 ($generated@@523 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@523 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@64) (= (type $generated@@616) $generated@@64)) (= ($generated@@72 ($generated@@523 $generated@@615 $generated@@616)) $generated@@59))
 :pattern ( ($generated@@523 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@135) (= (type $generated@@618) $generated@@135)) (= ($generated@@347 ($generated@@258 $generated@@617 $generated@@618)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@64)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@64) (= (type $generated@@622) $generated@@64)) (= ($generated@@619 ($generated@@160 $generated@@621 $generated@@622)) $generated@@621))
 :pattern ( ($generated@@160 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@64)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) $generated@@64)) (= ($generated@@623 ($generated@@160 $generated@@625 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@160 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@135) (= (type $generated@@628) $generated@@135)) (= ($generated@@168 ($generated@@258 $generated@@627 $generated@@628)) $generated@@627))
 :pattern ( ($generated@@258 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@135) (= (type $generated@@630) $generated@@135)) (= ($generated@@169 ($generated@@258 $generated@@629 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@258 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@137 $generated@@135)) (= (type $generated@@632) $generated@@64)) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@631 ($generated@@271 $generated@@632) $generated@@633) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@273 $generated@@631))) ($generated@@336 ($generated@@274 $generated@@631 $generated@@634) $generated@@632 $generated@@633))
 :pattern ( ($generated@@274 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@74 $generated@@631 ($generated@@271 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@636)))
 (=> (= (type $generated@@635) ($generated@@76 $generated@@637 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@635 $generated@@636) $generated@@636))))
 :pattern ( ($generated@@297 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@639)))
 (=> (and (= (type $generated@@638) ($generated@@76 $generated@@640 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@638 $generated@@639))) (= ($generated@@272 ($generated@@297 $generated@@638 $generated@@639)) ($generated@@272 $generated@@638))))
 :pattern ( ($generated@@272 ($generated@@297 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@642 Int) ) (! (= ($generated@@641 ($generated@@75 $generated@@642)) $generated@@642)
 :pattern ( ($generated@@75 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@64)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@64) (= ($generated@@643 ($generated@@270 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@270 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@64) (= ($generated@@72 ($generated@@270 $generated@@646)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@64)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@64) (= ($generated@@647 ($generated@@326 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@326 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@64) (= ($generated@@72 ($generated@@326 $generated@@650)) $generated@@55))
 :pattern ( ($generated@@326 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@64)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@64) (= ($generated@@651 ($generated@@183 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@183 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@64) (= ($generated@@72 ($generated@@183 $generated@@654)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@64)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@64) (= ($generated@@655 ($generated@@271 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@271 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@64) (= ($generated@@72 ($generated@@271 $generated@@658)) $generated@@57))
 :pattern ( ($generated@@271 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@659)))
(= ($generated@@487 $generated@@660 ($generated@@362 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@362 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@662) $generated@@64)) (= (type $generated@@663) $generated@@64)) (= ($generated@@157 $generated@@661 ($generated@@515 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@661) $generated@@664))) (and ($generated@@259 ($generated@@81 ($generated@@488 $generated@@661) $generated@@664) $generated@@663) ($generated@@259 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@81 ($generated@@488 $generated@@661) $generated@@664))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@157 $generated@@661 ($generated@@515 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@666) $generated@@64)) (= (type $generated@@667) $generated@@64)) (= ($generated@@157 $generated@@665 ($generated@@523 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@665) $generated@@668))) (and ($generated@@259 ($generated@@81 ($generated@@498 $generated@@665) $generated@@668) $generated@@667) ($generated@@259 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@81 ($generated@@498 $generated@@665) $generated@@668))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@157 $generated@@665 ($generated@@523 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@135) (= (type $generated@@672) $generated@@135)) (< ($generated@@669 $generated@@671) ($generated@@670 ($generated@@258 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@258 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@135) (= (type $generated@@674) $generated@@135)) (< ($generated@@669 $generated@@674) ($generated@@670 ($generated@@258 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@258 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (! (let (($generated@@677 ($generated@@79 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@76 $generated@@677 $generated@@4)) (= (type $generated@@676) ($generated@@76 $generated@@677 $generated@@4))) (= ($generated@@244 $generated@@675 ($generated@@244 $generated@@675 $generated@@676)) ($generated@@244 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@244 $generated@@675 ($generated@@244 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@79 (type $generated@@678))))
 (=> (and (= (type $generated@@678) ($generated@@76 $generated@@680 $generated@@4)) (= (type $generated@@679) ($generated@@76 $generated@@680 $generated@@4))) (= ($generated@@251 $generated@@678 ($generated@@251 $generated@@678 $generated@@679)) ($generated@@251 $generated@@678 $generated@@679))))
 :pattern ( ($generated@@251 $generated@@678 ($generated@@251 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@64) (= (type $generated@@682) ($generated@@76 $generated@@135 $generated@@4))) ($generated@@295 $generated@@681 $generated@@682)) ($generated@@0 ($generated@@81 $generated@@682 ($generated@@299 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@299 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@135) (= (type $generated@@684) $generated@@64)) (= (type $generated@@685) $generated@@64)) ($generated@@259 $generated@@683 ($generated@@515 $generated@@684 $generated@@685))) (and (= ($generated@@362 ($generated@@487 ($generated@@375 $generated@@135 $generated@@135) $generated@@683)) $generated@@683) ($generated@@157 ($generated@@487 ($generated@@375 $generated@@135 $generated@@135) $generated@@683) ($generated@@515 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@259 $generated@@683 ($generated@@515 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@135) (= (type $generated@@687) $generated@@64)) (= (type $generated@@688) $generated@@64)) ($generated@@259 $generated@@686 ($generated@@523 $generated@@687 $generated@@688))) (and (= ($generated@@362 ($generated@@487 ($generated@@393 $generated@@135 $generated@@135) $generated@@686)) $generated@@686) ($generated@@157 ($generated@@487 ($generated@@393 $generated@@135 $generated@@135) $generated@@686) ($generated@@523 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@259 $generated@@686 ($generated@@523 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@64) (= (type $generated@@690) $generated@@64)) (= (type $generated@@691) $generated@@135)) ($generated@@259 $generated@@691 ($generated@@160 $generated@@689 $generated@@690))) (and (= ($generated@@362 ($generated@@487 $generated@@161 $generated@@691)) $generated@@691) ($generated@@157 ($generated@@487 $generated@@161 $generated@@691) ($generated@@160 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@259 $generated@@691 ($generated@@160 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (not ($generated@@0 ($generated@@81 ($generated@@298 $generated@@693) $generated@@692))))
 :pattern ( (let (($generated@@693 (type $generated@@692)))
($generated@@81 ($generated@@298 $generated@@693) $generated@@692)))
)))
(assert (forall (($generated@@694 T@U) ) (! (let (($generated@@695 (type $generated@@694)))
 (not ($generated@@0 ($generated@@81 ($generated@@557 $generated@@695) $generated@@694))))
 :pattern ( (let (($generated@@695 (type $generated@@694)))
($generated@@81 ($generated@@557 $generated@@695) $generated@@694)))
)))
(assert (forall (($generated@@697 T@U) ) (! (= (type ($generated@@696 $generated@@697)) $generated@@69)
 :pattern ( ($generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@64) (= (type $generated@@699) $generated@@64)) (and (= ($generated@@72 ($generated@@160 $generated@@698 $generated@@699)) $generated@@62) (= ($generated@@696 ($generated@@160 $generated@@698 $generated@@699)) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@698 $generated@@699))
)))
(assert  (and (forall (($generated@@702 T@U) ) (! (let (($generated@@703 ($generated@@138 (type $generated@@702))))
(= (type ($generated@@700 $generated@@702)) ($generated@@137 $generated@@703)))
 :pattern ( ($generated@@700 $generated@@702))
)) (forall (($generated@@704 T@U) ) (! (let (($generated@@705 ($generated@@138 (type $generated@@704))))
(= (type ($generated@@701 $generated@@704)) $generated@@705))
 :pattern ( ($generated@@701 $generated@@704))
))))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
 (=> (= (type $generated@@706) ($generated@@137 $generated@@708)) (and (= ($generated@@700 ($generated@@149 $generated@@706 $generated@@707)) $generated@@706) (= ($generated@@701 ($generated@@149 $generated@@706 $generated@@707)) $generated@@707))))
 :pattern ( ($generated@@149 $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@161) (= ($generated@@669 ($generated@@362 $generated@@709)) ($generated@@670 $generated@@709)))
 :pattern ( ($generated@@669 ($generated@@362 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@377 (type $generated@@710))))
(let (($generated@@712 ($generated@@376 (type $generated@@710))))
 (=> (= (type $generated@@710) ($generated@@375 $generated@@712 $generated@@711)) (= ($generated@@272 ($generated@@373 $generated@@710)) ($generated@@460 $generated@@710)))))
 :pattern ( ($generated@@272 ($generated@@373 $generated@@710)))
)))
(assert (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@377 (type $generated@@713))))
(let (($generated@@715 ($generated@@376 (type $generated@@713))))
 (=> (= (type $generated@@713) ($generated@@375 $generated@@715 $generated@@714)) (= ($generated@@272 ($generated@@486 $generated@@713)) ($generated@@460 $generated@@713)))))
 :pattern ( ($generated@@272 ($generated@@486 $generated@@713)))
)))
(assert (forall (($generated@@716 T@U) ) (! (let (($generated@@717 ($generated@@377 (type $generated@@716))))
(let (($generated@@718 ($generated@@376 (type $generated@@716))))
 (=> (= (type $generated@@716) ($generated@@375 $generated@@718 $generated@@717)) (<= ($generated@@272 ($generated@@431 $generated@@716)) ($generated@@460 $generated@@716)))))
 :pattern ( ($generated@@272 ($generated@@431 $generated@@716)))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@135) ($generated@@259 $generated@@719 ($generated@@75 0))) (and (= ($generated@@362 ($generated@@487 $generated@@2 $generated@@719)) $generated@@719) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@719) ($generated@@75 0))))
 :pattern ( ($generated@@259 $generated@@719 ($generated@@75 0)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@135) (= (type $generated@@721) $generated@@64)) ($generated@@259 $generated@@720 ($generated@@270 $generated@@721))) (and (= ($generated@@362 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@720)) $generated@@720) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@720) ($generated@@270 $generated@@721))))
 :pattern ( ($generated@@259 $generated@@720 ($generated@@270 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@135) (= (type $generated@@723) $generated@@64)) ($generated@@259 $generated@@722 ($generated@@326 $generated@@723))) (and (= ($generated@@362 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@722)) $generated@@722) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@4) $generated@@722) ($generated@@326 $generated@@723))))
 :pattern ( ($generated@@259 $generated@@722 ($generated@@326 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@135) (= (type $generated@@725) $generated@@64)) ($generated@@259 $generated@@724 ($generated@@183 $generated@@725))) (and (= ($generated@@362 ($generated@@487 ($generated@@76 $generated@@135 $generated@@2) $generated@@724)) $generated@@724) ($generated@@157 ($generated@@487 ($generated@@76 $generated@@135 $generated@@2) $generated@@724) ($generated@@183 $generated@@725))))
 :pattern ( ($generated@@259 $generated@@724 ($generated@@183 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@135) (= (type $generated@@727) $generated@@64)) ($generated@@259 $generated@@726 ($generated@@271 $generated@@727))) (and (= ($generated@@362 ($generated@@487 ($generated@@137 $generated@@135) $generated@@726)) $generated@@726) ($generated@@157 ($generated@@487 ($generated@@137 $generated@@135) $generated@@726) ($generated@@271 $generated@@727))))
 :pattern ( ($generated@@259 $generated@@726 ($generated@@271 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ) (! (let (($generated@@729 ($generated@@79 (type $generated@@728))))
 (=> (= (type $generated@@728) ($generated@@76 $generated@@729 $generated@@4)) (and (= (= ($generated@@272 $generated@@728) 0) (= $generated@@728 ($generated@@298 $generated@@729))) (=> (not (= ($generated@@272 $generated@@728) 0)) (exists (($generated@@730 T@U) ) (!  (and (= (type $generated@@730) $generated@@729) ($generated@@0 ($generated@@81 $generated@@728 $generated@@730)))
 :no-pattern (type $generated@@730)
 :no-pattern ($generated $generated@@730)
 :no-pattern ($generated@@0 $generated@@730)
))))))
 :pattern ( ($generated@@272 $generated@@728))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@731) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@732) $generated@@64)) (= (type $generated@@733) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@731 ($generated@@183 $generated@@732) $generated@@733) (forall (($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@731 $generated@@734)))) ($generated@@336 $generated@@734 $generated@@732 $generated@@733))
 :pattern ( ($generated@@81 $generated@@731 $generated@@734))
))))
 :pattern ( ($generated@@74 $generated@@731 ($generated@@183 $generated@@732) $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (! (let (($generated@@737 (type $generated@@736)))
 (=> (and (= (type $generated@@735) ($generated@@76 $generated@@737 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@735 $generated@@736)))) (= ($generated@@272 ($generated@@297 $generated@@735 $generated@@736)) (+ ($generated@@272 $generated@@735) 1))))
 :pattern ( ($generated@@272 ($generated@@297 $generated@@735 $generated@@736)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@738) $generated@@64) (= (type $generated@@739) $generated@@134)) (= (type $generated@@740) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@741) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@294 $generated@@738 ($generated@@268 $generated@@741)) (and (not (= 1 $generated@@266)) (and ($generated@@293 $generated@@740) ($generated@@157 $generated@@741 ($generated@@270 $generated@@738)))))) (and (let (($generated@@742 ($generated@@268 $generated@@741)))
 (=> (not (= ($generated@@272 $generated@@742) ($generated@@275 0))) (and ($generated@@295 $generated@@738 $generated@@742) (let (($generated@@743 ($generated@@296 $generated@@742 ($generated@@297 ($generated@@298 $generated@@135) ($generated@@299 $generated@@738 $generated@@742)))))
($generated@@294 $generated@@738 $generated@@743))))) (= ($generated@@132 $generated@@738 ($generated@@178 $generated@@739) ($generated@@268 $generated@@741)) (let (($generated@@744 ($generated@@268 $generated@@741)))
(ite (= ($generated@@272 $generated@@744) ($generated@@275 0)) ($generated@@174 $generated@@135) (let (($generated@@745 ($generated@@299 $generated@@738 $generated@@744)))
(let (($generated@@746 ($generated@@296 $generated@@744 ($generated@@297 ($generated@@298 $generated@@135) $generated@@745))))
(let (($generated@@747 ($generated@@132 $generated@@738 ($generated@@178 $generated@@739) $generated@@746)))
($generated@@300 ($generated@@149 ($generated@@174 $generated@@135) $generated@@745) $generated@@747)))))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@738 ($generated@@178 $generated@@739) ($generated@@268 $generated@@741)) ($generated@@293 $generated@@740))
))))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (! (let (($generated@@750 ($generated@@79 (type $generated@@748))))
 (=> (and (= (type $generated@@748) ($generated@@76 $generated@@750 $generated@@4)) (= (type $generated@@749) ($generated@@76 $generated@@750 $generated@@4))) (= ($generated@@456 $generated@@748 $generated@@749) (forall (($generated@@751 T@U) ) (!  (=> (= (type $generated@@751) $generated@@750) (or (not ($generated@@0 ($generated@@81 $generated@@748 $generated@@751))) (not ($generated@@0 ($generated@@81 $generated@@749 $generated@@751)))))
 :pattern ( ($generated@@81 $generated@@748 $generated@@751))
 :pattern ( ($generated@@81 $generated@@749 $generated@@751))
)))))
 :pattern ( ($generated@@456 $generated@@748 $generated@@749))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (and (= (type $generated@@752) $generated@@161) (= (type $generated@@753) $generated@@64)) (= (type $generated@@754) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@293 $generated@@754) (and ($generated@@159 $generated@@752) (exists (($generated@@755 T@U) ) (!  (and (= (type $generated@@755) $generated@@64) ($generated@@74 $generated@@752 ($generated@@160 $generated@@753 $generated@@755) $generated@@754))
 :pattern ( ($generated@@74 $generated@@752 ($generated@@160 $generated@@753 $generated@@755) $generated@@754))
))))) ($generated@@336 ($generated@@168 $generated@@752) $generated@@753 $generated@@754))
 :pattern ( ($generated@@336 ($generated@@168 $generated@@752) $generated@@753 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) $generated@@161) (= (type $generated@@757) $generated@@64)) (= (type $generated@@758) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@293 $generated@@758) (and ($generated@@159 $generated@@756) (exists (($generated@@759 T@U) ) (!  (and (= (type $generated@@759) $generated@@64) ($generated@@74 $generated@@756 ($generated@@160 $generated@@759 $generated@@757) $generated@@758))
 :pattern ( ($generated@@74 $generated@@756 ($generated@@160 $generated@@759 $generated@@757) $generated@@758))
))))) ($generated@@336 ($generated@@169 $generated@@756) $generated@@757 $generated@@758))
 :pattern ( ($generated@@336 ($generated@@169 $generated@@756) $generated@@757 $generated@@758))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 Int) ) (! (let (($generated@@763 ($generated@@138 (type $generated@@760))))
 (=> (and (= (type $generated@@760) ($generated@@137 $generated@@763)) (= (type $generated@@761) ($generated@@137 $generated@@763))) (and (=> (< $generated@@762 ($generated@@273 $generated@@760)) (= ($generated@@274 ($generated@@300 $generated@@760 $generated@@761) $generated@@762) ($generated@@274 $generated@@760 $generated@@762))) (=> (<= ($generated@@273 $generated@@760) $generated@@762) (= ($generated@@274 ($generated@@300 $generated@@760 $generated@@761) $generated@@762) ($generated@@274 $generated@@761 (- $generated@@762 ($generated@@273 $generated@@760))))))))
 :pattern ( ($generated@@274 ($generated@@300 $generated@@760 $generated@@761) $generated@@762))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@764) $generated@@135) (= (type $generated@@765) $generated@@135)) (= ($generated@@258 ($generated@@268 $generated@@764) ($generated@@268 $generated@@765)) ($generated@@268 ($generated@@258 $generated@@764 $generated@@765))))
 :pattern ( ($generated@@258 ($generated@@268 $generated@@764) ($generated@@268 $generated@@765)))
)))
(assert (forall (($generated@@766 Int) ) (! (= ($generated@@362 ($generated@@8 ($generated@@275 $generated@@766))) ($generated@@268 ($generated@@362 ($generated@@8 $generated@@766))))
 :pattern ( ($generated@@362 ($generated@@8 ($generated@@275 $generated@@766))))
)))
(assert (forall (($generated@@767 T@U) ) (! (= ($generated@@362 ($generated@@268 $generated@@767)) ($generated@@268 ($generated@@362 $generated@@767)))
 :pattern ( ($generated@@362 ($generated@@268 $generated@@767)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (and (and (= (type $generated@@768) $generated@@64) (= (type $generated@@769) $generated@@134)) (= (type $generated@@770) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@294 $generated@@768 $generated@@770) (and (not (= 1 $generated@@266)) ($generated@@157 $generated@@770 ($generated@@270 $generated@@768))))) (and ($generated@@267 $generated@@768 $generated@@770 ($generated@@132 $generated@@768 $generated@@769 $generated@@770)) ($generated@@157 ($generated@@132 $generated@@768 $generated@@769 $generated@@770) ($generated@@271 $generated@@768))))
 :pattern ( ($generated@@132 $generated@@768 $generated@@769 $generated@@770))
))))
(assert (forall (($generated@@771 T@U) ) (! (let (($generated@@772 ($generated@@138 (type $generated@@771))))
 (=> (and (= (type $generated@@771) ($generated@@137 $generated@@772)) (= ($generated@@273 $generated@@771) 0)) (= $generated@@771 ($generated@@174 $generated@@772))))
 :pattern ( ($generated@@273 $generated@@771))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (! (let (($generated@@776 (type $generated@@774)))
 (=> (and (and (= (type $generated@@773) ($generated@@76 $generated@@776 $generated@@2)) (= (type $generated@@775) $generated@@2)) (<= 0 ($generated $generated@@775))) (= ($generated@@367 ($generated@@82 $generated@@773 $generated@@774 $generated@@775)) (+ (- ($generated@@367 $generated@@773) ($generated ($generated@@81 $generated@@773 $generated@@774))) ($generated $generated@@775)))))
 :pattern ( ($generated@@367 ($generated@@82 $generated@@773 $generated@@774 $generated@@775)))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (! (let (($generated@@780 (type $generated@@779)))
 (=> (and (= (type $generated@@777) ($generated@@76 $generated@@780 $generated@@4)) (= (type $generated@@778) ($generated@@76 $generated@@780 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@244 $generated@@777 $generated@@778) $generated@@779))  (or ($generated@@0 ($generated@@81 $generated@@777 $generated@@779)) ($generated@@0 ($generated@@81 $generated@@778 $generated@@779))))))
 :pattern ( ($generated@@81 ($generated@@244 $generated@@777 $generated@@778) $generated@@779))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@782) $generated@@2)) ($generated@@74 $generated@@782 $generated@@46 $generated@@781))
 :pattern ( ($generated@@74 $generated@@782 $generated@@46 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@784) $generated@@3)) ($generated@@74 $generated@@784 $generated@@47 $generated@@783))
 :pattern ( ($generated@@74 $generated@@784 $generated@@47 $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (= (type $generated@@785) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@786) $generated@@4)) ($generated@@74 $generated@@786 $generated@@44 $generated@@785))
 :pattern ( ($generated@@74 $generated@@786 $generated@@44 $generated@@785))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@787) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@788) $generated@@581)) ($generated@@74 $generated@@788 $generated@@45 $generated@@787))
 :pattern ( ($generated@@74 $generated@@788 $generated@@45 $generated@@787))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@789) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@790) $generated@@135)) ($generated@@74 $generated@@790 $generated@@48 $generated@@789))
 :pattern ( ($generated@@74 $generated@@790 $generated@@48 $generated@@789))
)))
(assert (forall (($generated@@791 T@U) ($generated@@792 T@U) ) (!  (=> (and (= (type $generated@@791) ($generated@@137 $generated@@135)) (= (type $generated@@792) $generated@@64)) (= ($generated@@157 $generated@@791 ($generated@@271 $generated@@792)) (forall (($generated@@793 Int) ) (!  (=> (and (<= 0 $generated@@793) (< $generated@@793 ($generated@@273 $generated@@791))) ($generated@@259 ($generated@@274 $generated@@791 $generated@@793) $generated@@792))
 :pattern ( ($generated@@274 $generated@@791 $generated@@793))
))))
 :pattern ( ($generated@@157 $generated@@791 ($generated@@271 $generated@@792)))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 Int) ) (!  (=> (= (type $generated@@795) ($generated@@137 $generated@@135)) (=> (and (<= 0 $generated@@796) (< $generated@@796 ($generated@@273 $generated@@795))) (< ($generated@@670 ($generated@@487 $generated@@161 ($generated@@274 $generated@@795 $generated@@796))) ($generated@@794 $generated@@795))))
 :pattern ( ($generated@@670 ($generated@@487 $generated@@161 ($generated@@274 $generated@@795 $generated@@796))))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ($generated@@799 T@U) ) (!  (=> (and (and (and (= (type $generated@@797) ($generated@@375 $generated@@135 $generated@@135)) (= (type $generated@@798) $generated@@64)) (= (type $generated@@799) $generated@@64)) ($generated@@157 $generated@@797 ($generated@@515 $generated@@798 $generated@@799))) (and (and ($generated@@157 ($generated@@373 $generated@@797) ($generated@@270 $generated@@798)) ($generated@@157 ($generated@@431 $generated@@797) ($generated@@270 $generated@@799))) ($generated@@157 ($generated@@486 $generated@@797) ($generated@@270 ($generated@@160 $generated@@798 $generated@@799)))))
 :pattern ( ($generated@@157 $generated@@797 ($generated@@515 $generated@@798 $generated@@799)))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ($generated@@802 T@U) ) (!  (=> (and (and (and (= (type $generated@@800) ($generated@@393 $generated@@135 $generated@@135)) (= (type $generated@@801) $generated@@64)) (= (type $generated@@802) $generated@@64)) ($generated@@157 $generated@@800 ($generated@@523 $generated@@801 $generated@@802))) (and (and ($generated@@157 ($generated@@391 $generated@@800) ($generated@@326 $generated@@801)) ($generated@@157 ($generated@@442 $generated@@800) ($generated@@326 $generated@@802))) ($generated@@157 ($generated@@497 $generated@@800) ($generated@@326 ($generated@@160 $generated@@801 $generated@@802)))))
 :pattern ( ($generated@@157 $generated@@800 ($generated@@523 $generated@@801 $generated@@802)))
)))
(assert (forall (($generated@@803 T@U) ) (!  (=> (= (type $generated@@803) $generated@@2) ($generated@@157 $generated@@803 $generated@@46))
 :pattern ( ($generated@@157 $generated@@803 $generated@@46))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@3) ($generated@@157 $generated@@804 $generated@@47))
 :pattern ( ($generated@@157 $generated@@804 $generated@@47))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@4) ($generated@@157 $generated@@805 $generated@@44))
 :pattern ( ($generated@@157 $generated@@805 $generated@@44))
)))
(assert (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) $generated@@581) ($generated@@157 $generated@@806 $generated@@45))
 :pattern ( ($generated@@157 $generated@@806 $generated@@45))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) $generated@@135) ($generated@@157 $generated@@807 $generated@@48))
 :pattern ( ($generated@@157 $generated@@807 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@808 () T@U)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 (T@U) Bool)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@808) ($generated@@190 $generated@@77 $generated@@4)) (= (type $generated@@809) $generated@@77)) (= (type $generated@@810) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@811) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@812) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@813) ($generated@@137 $generated@@135))) (= (type $generated@@814) ($generated@@137 $generated@@135))) (= (type $generated@@815) ($generated@@137 $generated@@135))) (= (type $generated@@816) ($generated@@137 $generated@@135))) (= (type $generated@@818) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@819) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@820) ($generated@@137 $generated@@135))) (= (type $generated@@821) ($generated@@137 $generated@@135))) (= (type $generated@@822) ($generated@@137 $generated@@135))) (= (type $generated@@823) ($generated@@137 $generated@@135))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@824  (=> (= $generated@@808 ($generated@@189 $generated@@809 $generated@@810 $generated@@60 false)) (=> (and (= $generated@@811 ($generated@@268 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@298 $generated@@135) ($generated@@362 ($generated@@8 ($generated@@275 1)))) ($generated@@362 ($generated@@8 ($generated@@275 2)))) ($generated@@362 ($generated@@8 ($generated@@275 3)))))) (= $generated@@812 ($generated@@268 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@298 $generated@@135) ($generated@@362 ($generated@@8 ($generated@@275 3)))) ($generated@@362 ($generated@@8 ($generated@@275 1)))) ($generated@@362 ($generated@@8 ($generated@@275 2))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@409 $generated@@811 $generated@@812)) (=> ($generated@@409 $generated@@811 $generated@@812) (=> (and (and (and ($generated@@74 $generated@@811 ($generated@@270 $generated@@46) $generated@@810) ($generated@@294 $generated@@46 $generated@@811)) (and ($generated@@294 $generated@@46 $generated@@811) (= $generated@@813 ($generated@@132 $generated@@46 ($generated@@178 $generated@@136) $generated@@811)))) (and (and ($generated@@74 $generated@@812 ($generated@@270 $generated@@46) $generated@@810) ($generated@@294 $generated@@46 $generated@@812)) (and ($generated@@294 $generated@@46 $generated@@812) (= $generated@@814 ($generated@@132 $generated@@46 ($generated@@178 $generated@@136) $generated@@812))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@350 $generated@@813 $generated@@814)) (=> ($generated@@350 $generated@@813 $generated@@814) (=> (= $generated@@815 ($generated@@268 ($generated@@149 ($generated@@149 ($generated@@149 ($generated@@174 $generated@@135) ($generated@@362 ($generated@@8 ($generated@@275 1)))) ($generated@@362 ($generated@@8 ($generated@@275 2)))) ($generated@@362 ($generated@@8 ($generated@@275 3)))))) (=> (and (= $generated@@816 ($generated@@268 ($generated@@149 ($generated@@149 ($generated@@149 ($generated@@174 $generated@@135) ($generated@@362 ($generated@@8 ($generated@@275 3)))) ($generated@@362 ($generated@@8 ($generated@@275 1)))) ($generated@@362 ($generated@@8 ($generated@@275 2)))))) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@350 $generated@@815 $generated@@816)))))))))))))
(let (($generated@@825  (=> (and ($generated@@293 $generated@@810) ($generated@@817 $generated@@810)) (=> (and (and ($generated@@157 $generated@@818 ($generated@@270 $generated@@46)) ($generated@@74 $generated@@818 ($generated@@270 $generated@@46) $generated@@810)) true) (=> (and (and (and ($generated@@157 $generated@@819 ($generated@@270 $generated@@46)) ($generated@@74 $generated@@819 ($generated@@270 $generated@@46) $generated@@810)) true) (and (and ($generated@@157 $generated@@820 ($generated@@271 $generated@@46)) ($generated@@74 $generated@@820 ($generated@@271 $generated@@46) $generated@@810)) true)) (=> (and (and (and (and ($generated@@157 $generated@@821 ($generated@@271 $generated@@46)) ($generated@@74 $generated@@821 ($generated@@271 $generated@@46) $generated@@810)) true) (and (and ($generated@@157 $generated@@822 ($generated@@271 $generated@@46)) ($generated@@74 $generated@@822 ($generated@@271 $generated@@46) $generated@@810)) true)) (and (and (and ($generated@@157 $generated@@823 ($generated@@271 $generated@@46)) ($generated@@74 $generated@@823 ($generated@@271 $generated@@46) $generated@@810)) true) (and (= 2 $generated@@266) (= (ControlFlow 0 5) 2)))) $generated@@824))))))
$generated@@825)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
