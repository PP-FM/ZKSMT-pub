(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@320 (T@U Int) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@478 (T@U) Int)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@237 $generated@@243 $generated@@244)) ($generated@@239 $generated@@245)))
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@238 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) ($generated@@239 $generated@@145)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@64)) (and ($generated@@132 $generated@@247 ($generated@@238 $generated@@249)) ($generated@@212 $generated@@248 $generated@@249))) ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
 :pattern ( ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) $generated@@145)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@211 $generated@@254 $generated@@255) ($generated@@135 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@254 $generated@@255) ($generated@@135 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@136) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@136) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@145) (= (type $generated@@262) $generated@@145)) (= $generated@@260 ($generated@@211 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@263 $generated@@265)) ($generated@@239 $generated@@265))
 :pattern ( ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) 0)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
 (=> (= (type $generated@@267) ($generated@@239 $generated@@269)) (= ($generated@@264 ($generated@@237 $generated@@267 $generated@@268)) (+ 1 ($generated@@264 $generated@@267)))))
 :pattern ( ($generated@@237 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@251 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 Int) ) (! (let (($generated@@323 ($generated@@240 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@323))
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
 (=> (= (type $generated@@324) ($generated@@239 $generated@@327)) (and (=> (= $generated@@325 ($generated@@264 $generated@@324)) (= ($generated@@320 ($generated@@237 $generated@@324 $generated@@326) $generated@@325) $generated@@326)) (=> (not (= $generated@@325 ($generated@@264 $generated@@324))) (= ($generated@@320 ($generated@@237 $generated@@324 $generated@@326) $generated@@325) ($generated@@320 $generated@@324 $generated@@325))))))
 :pattern ( ($generated@@320 ($generated@@237 $generated@@324 $generated@@326) $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@285 (type $generated@@328))))
(let (($generated@@330 ($generated@@284 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@283 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@282 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@281 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@285 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@285 (type $generated@@335))))
(let (($generated@@337 ($generated@@284 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@283 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@282 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@303 (type $generated@@339))))
(let (($generated@@341 ($generated@@302 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@301 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@300 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@299 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@303 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@303 (type $generated@@346))))
(let (($generated@@348 ($generated@@302 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@301 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@300 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@212 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@221 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@251 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@221 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@251 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@276 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@285 (type $generated@@369))))
(let (($generated@@371 ($generated@@284 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@373) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@372) ($generated@@143 ($generated@@364 $generated@@136 $generated@@373)))) (= ($generated@@81 ($generated@@365 $generated@@372) ($generated@@143 ($generated@@364 $generated@@136 $generated@@373))) ($generated@@144 ($generated@@364 $generated@@136 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@303 (type $generated@@377))))
(let (($generated@@379 ($generated@@302 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@380) ($generated@@143 ($generated@@364 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@143 ($generated@@364 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@364 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@284 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@283 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@302 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@301 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))) (and ($generated@@251 ($generated@@81 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@251 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))) (and ($generated@@251 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@251 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@303 (type $generated@@410))))
(let (($generated@@412 ($generated@@302 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@301 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@300 $generated@@412 $generated@@411)) (= ($generated@@299 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@299 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@303 (type $generated@@413))))
(let (($generated@@415 ($generated@@302 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@301 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@300 $generated@@415 $generated@@414)) (= ($generated@@343 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@343 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@303 (type $generated@@416))))
(let (($generated@@418 ($generated@@302 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@301 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@300 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@285 (type $generated@@419))))
(let (($generated@@421 ($generated@@284 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@283 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@282 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@419) ($generated@@270 ($generated@@211 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@363 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@303 (type $generated@@424))))
(let (($generated@@426 ($generated@@302 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@301 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@300 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@424) ($generated@@270 ($generated@@211 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@46)) (and (= ($generated@@270 ($generated@@364 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@364 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@212 $generated@@430 $generated@@47)) (and (= ($generated@@270 ($generated@@364 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@364 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@212 $generated@@431 $generated@@44)) (and (= ($generated@@270 ($generated@@364 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@364 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@212 $generated@@433 $generated@@45)) (and (= ($generated@@270 ($generated@@364 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@364 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@212 ($generated@@270 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@212 ($generated@@270 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@275 $generated@@436))))
 :pattern ( ($generated@@275 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@240 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@239 $generated@@439)) (<= 0 ($generated@@264 $generated@@438))))
 :pattern ( ($generated@@264 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@257 ($generated@@211 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@135 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@135 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@211 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@211 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@239 $generated@@145)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@238 $generated@@475) $generated@@476) (forall (($generated@@477 Int) ) (!  (=> (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@264 $generated@@474))) ($generated@@251 ($generated@@320 $generated@@474 $generated@@477) $generated@@475 $generated@@476))
 :pattern ( ($generated@@320 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@238 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@478 ($generated@@75 $generated@@479)) $generated@@479)
 :pattern ( ($generated@@75 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@221 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@221 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@483)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@226 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@226 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@487)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@150 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@491)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@238 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@495)) $generated@@57))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(= ($generated@@364 $generated@@497 ($generated@@270 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@270 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) (= ($generated@@132 $generated@@498 ($generated@@392 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@498) $generated@@501))) (and ($generated@@212 ($generated@@81 ($generated@@365 $generated@@498) $generated@@501) $generated@@500) ($generated@@212 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@498) $generated@@501))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@132 $generated@@498 ($generated@@392 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@132 $generated@@502 ($generated@@400 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@502) $generated@@505))) (and ($generated@@212 ($generated@@81 ($generated@@375 $generated@@502) $generated@@505) $generated@@504) ($generated@@212 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@502) $generated@@505))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@132 $generated@@502 ($generated@@400 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (< ($generated@@506 $generated@@508) ($generated@@507 ($generated@@211 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@211 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@506 $generated@@511) ($generated@@507 ($generated@@211 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@211 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@512 ($generated@@392 $generated@@513 $generated@@514))) (and (= ($generated@@270 ($generated@@364 ($generated@@283 $generated@@145 $generated@@145) $generated@@512)) $generated@@512) ($generated@@132 ($generated@@364 ($generated@@283 $generated@@145 $generated@@145) $generated@@512) ($generated@@392 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@392 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@400 $generated@@516 $generated@@517))) (and (= ($generated@@270 ($generated@@364 ($generated@@301 $generated@@145 $generated@@145) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@364 ($generated@@301 $generated@@145 $generated@@145) $generated@@515) ($generated@@400 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@145)) ($generated@@212 $generated@@520 ($generated@@135 $generated@@518 $generated@@519))) (and (= ($generated@@270 ($generated@@364 $generated@@136 $generated@@520)) $generated@@520) ($generated@@132 ($generated@@364 $generated@@136 $generated@@520) ($generated@@135 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@135 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@522) $generated@@521))))
 :pattern ( (let (($generated@@522 (type $generated@@521)))
($generated@@81 ($generated@@408 $generated@@522) $generated@@521)))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@525 $generated@@526)) $generated@@62) (= ($generated@@523 ($generated@@135 $generated@@525 $generated@@526)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@525 $generated@@526))
)))
(assert  (and (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@240 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529)) ($generated@@239 $generated@@530)))
 :pattern ( ($generated@@527 $generated@@529))
)) (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@240 (type $generated@@531))))
(= (type ($generated@@528 $generated@@531)) $generated@@532))
 :pattern ( ($generated@@528 $generated@@531))
))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (=> (= (type $generated@@533) ($generated@@239 $generated@@535)) (and (= ($generated@@527 ($generated@@237 $generated@@533 $generated@@534)) $generated@@533) (= ($generated@@528 ($generated@@237 $generated@@533 $generated@@534)) $generated@@534))))
 :pattern ( ($generated@@237 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@506 ($generated@@270 $generated@@536)) ($generated@@507 $generated@@536)))
 :pattern ( ($generated@@506 ($generated@@270 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@212 $generated@@537 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@364 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@212 $generated@@538 ($generated@@221 $generated@@539))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@221 $generated@@539))))
 :pattern ( ($generated@@212 $generated@@538 ($generated@@221 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@212 $generated@@540 ($generated@@226 $generated@@541))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@226 $generated@@541))))
 :pattern ( ($generated@@212 $generated@@540 ($generated@@226 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@212 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@212 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@270 ($generated@@364 ($generated@@239 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@364 ($generated@@239 $generated@@145) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@251 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@251 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@251 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@251 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@251 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)) ($generated@@233 ($generated@@211 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@231 $generated@@560))) ($generated@@233 ($generated@@270 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@231 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@270 ($generated@@233 $generated@@561)) ($generated@@233 ($generated@@270 $generated@@561)))
 :pattern ( ($generated@@270 ($generated@@233 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@240 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@239 $generated@@563)) (= ($generated@@264 $generated@@562) 0)) (= $generated@@562 ($generated@@263 $generated@@563))))
 :pattern ( ($generated@@264 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@275 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@275 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@239 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@238 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@264 $generated@@578))) ($generated@@212 ($generated@@320 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@320 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@238 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@239 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@264 $generated@@582))) (< ($generated@@507 ($generated@@364 $generated@@136 ($generated@@320 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@507 ($generated@@364 $generated@@136 ($generated@@320 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@392 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@281 $generated@@584) ($generated@@221 $generated@@585)) ($generated@@132 ($generated@@332 $generated@@584) ($generated@@221 $generated@@586))) ($generated@@132 ($generated@@363 $generated@@584) ($generated@@221 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@392 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@400 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@299 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@132 ($generated@@343 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@132 ($generated@@374 $generated@@587) ($generated@@226 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@400 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 (T@U) Bool)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(assert  (and (and (and (= (type $generated@@595) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@596) $generated@@77)) (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@239 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@601  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@231 1) ($generated@@264 ($generated@@233 ($generated@@237 ($generated@@263 $generated@@145) ($generated@@270 ($generated@@8 ($generated@@231 1))))))))))
(let (($generated@@602 true))
(let (($generated@@603  (=> (= $generated@@595 ($generated@@156 $generated@@596 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@602) (=> (= (ControlFlow 0 4) 3) $generated@@601)))))
(let (($generated@@604  (=> (and (and (and ($generated@@250 $generated@@597) ($generated@@598 $generated@@597)) ($generated@@132 $generated@@599 ($generated@@238 $generated@@46))) (and (= 0 $generated@@600) (= (ControlFlow 0 5) 4))) $generated@@603)))
$generated@@604)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@320 (T@U Int) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@478 (T@U) Int)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@237 $generated@@243 $generated@@244)) ($generated@@239 $generated@@245)))
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@238 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) ($generated@@239 $generated@@145)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@64)) (and ($generated@@132 $generated@@247 ($generated@@238 $generated@@249)) ($generated@@212 $generated@@248 $generated@@249))) ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
 :pattern ( ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) $generated@@145)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@211 $generated@@254 $generated@@255) ($generated@@135 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@254 $generated@@255) ($generated@@135 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@136) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@136) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@145) (= (type $generated@@262) $generated@@145)) (= $generated@@260 ($generated@@211 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@263 $generated@@265)) ($generated@@239 $generated@@265))
 :pattern ( ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) 0)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
 (=> (= (type $generated@@267) ($generated@@239 $generated@@269)) (= ($generated@@264 ($generated@@237 $generated@@267 $generated@@268)) (+ 1 ($generated@@264 $generated@@267)))))
 :pattern ( ($generated@@237 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@251 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 Int) ) (! (let (($generated@@323 ($generated@@240 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@323))
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
 (=> (= (type $generated@@324) ($generated@@239 $generated@@327)) (and (=> (= $generated@@325 ($generated@@264 $generated@@324)) (= ($generated@@320 ($generated@@237 $generated@@324 $generated@@326) $generated@@325) $generated@@326)) (=> (not (= $generated@@325 ($generated@@264 $generated@@324))) (= ($generated@@320 ($generated@@237 $generated@@324 $generated@@326) $generated@@325) ($generated@@320 $generated@@324 $generated@@325))))))
 :pattern ( ($generated@@320 ($generated@@237 $generated@@324 $generated@@326) $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@285 (type $generated@@328))))
(let (($generated@@330 ($generated@@284 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@283 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@282 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@281 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@285 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@285 (type $generated@@335))))
(let (($generated@@337 ($generated@@284 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@283 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@282 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@303 (type $generated@@339))))
(let (($generated@@341 ($generated@@302 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@301 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@300 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@299 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@303 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@303 (type $generated@@346))))
(let (($generated@@348 ($generated@@302 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@301 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@300 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@212 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@221 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@251 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@221 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@251 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@276 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@285 (type $generated@@369))))
(let (($generated@@371 ($generated@@284 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@373) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@372) ($generated@@143 ($generated@@364 $generated@@136 $generated@@373)))) (= ($generated@@81 ($generated@@365 $generated@@372) ($generated@@143 ($generated@@364 $generated@@136 $generated@@373))) ($generated@@144 ($generated@@364 $generated@@136 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@303 (type $generated@@377))))
(let (($generated@@379 ($generated@@302 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@380) ($generated@@143 ($generated@@364 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@143 ($generated@@364 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@364 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@284 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@283 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@302 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@301 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))) (and ($generated@@251 ($generated@@81 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@251 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))) (and ($generated@@251 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@251 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@303 (type $generated@@410))))
(let (($generated@@412 ($generated@@302 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@301 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@300 $generated@@412 $generated@@411)) (= ($generated@@299 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@299 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@303 (type $generated@@413))))
(let (($generated@@415 ($generated@@302 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@301 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@300 $generated@@415 $generated@@414)) (= ($generated@@343 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@343 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@303 (type $generated@@416))))
(let (($generated@@418 ($generated@@302 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@301 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@300 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@145))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@285 (type $generated@@419))))
(let (($generated@@421 ($generated@@284 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@283 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@282 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@145) (= (type $generated@@423) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@419) ($generated@@270 ($generated@@211 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@363 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@303 (type $generated@@424))))
(let (($generated@@426 ($generated@@302 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@301 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@300 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@145) (= (type $generated@@428) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@424) ($generated@@270 ($generated@@211 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@46)) (and (= ($generated@@270 ($generated@@364 $generated@@2 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@364 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@212 $generated@@430 $generated@@47)) (and (= ($generated@@270 ($generated@@364 $generated@@3 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@364 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@212 $generated@@431 $generated@@44)) (and (= ($generated@@270 ($generated@@364 $generated@@4 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@364 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@212 $generated@@433 $generated@@45)) (and (= ($generated@@270 ($generated@@364 $generated@@432 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@364 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@212 ($generated@@270 $generated@@434) $generated@@435) ($generated@@132 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@212 ($generated@@270 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@275 $generated@@436))))
 :pattern ( ($generated@@275 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@240 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@239 $generated@@439)) (<= 0 ($generated@@264 $generated@@438))))
 :pattern ( ($generated@@264 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) (= (type $generated@@461) $generated@@145)) (= ($generated@@257 ($generated@@211 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@135 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@135 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@211 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@211 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@239 $generated@@145)) (= (type $generated@@475) $generated@@64)) (= (type $generated@@476) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@474 ($generated@@238 $generated@@475) $generated@@476) (forall (($generated@@477 Int) ) (!  (=> (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@264 $generated@@474))) ($generated@@251 ($generated@@320 $generated@@474 $generated@@477) $generated@@475 $generated@@476))
 :pattern ( ($generated@@320 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@74 $generated@@474 ($generated@@238 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@478 ($generated@@75 $generated@@479)) $generated@@479)
 :pattern ( ($generated@@75 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@221 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@221 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@483)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@226 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@226 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@487)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@150 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@491)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@238 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@495)) $generated@@57))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(= ($generated@@364 $generated@@497 ($generated@@270 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@270 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) (= ($generated@@132 $generated@@498 ($generated@@392 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@498) $generated@@501))) (and ($generated@@212 ($generated@@81 ($generated@@365 $generated@@498) $generated@@501) $generated@@500) ($generated@@212 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@498) $generated@@501))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@132 $generated@@498 ($generated@@392 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@132 $generated@@502 ($generated@@400 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@502) $generated@@505))) (and ($generated@@212 ($generated@@81 ($generated@@375 $generated@@502) $generated@@505) $generated@@504) ($generated@@212 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@502) $generated@@505))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@132 $generated@@502 ($generated@@400 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (< ($generated@@506 $generated@@508) ($generated@@507 ($generated@@211 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@211 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@506 $generated@@511) ($generated@@507 ($generated@@211 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@211 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@512 ($generated@@392 $generated@@513 $generated@@514))) (and (= ($generated@@270 ($generated@@364 ($generated@@283 $generated@@145 $generated@@145) $generated@@512)) $generated@@512) ($generated@@132 ($generated@@364 ($generated@@283 $generated@@145 $generated@@145) $generated@@512) ($generated@@392 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@392 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@400 $generated@@516 $generated@@517))) (and (= ($generated@@270 ($generated@@364 ($generated@@301 $generated@@145 $generated@@145) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@364 ($generated@@301 $generated@@145 $generated@@145) $generated@@515) ($generated@@400 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@145)) ($generated@@212 $generated@@520 ($generated@@135 $generated@@518 $generated@@519))) (and (= ($generated@@270 ($generated@@364 $generated@@136 $generated@@520)) $generated@@520) ($generated@@132 ($generated@@364 $generated@@136 $generated@@520) ($generated@@135 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@135 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@522) $generated@@521))))
 :pattern ( (let (($generated@@522 (type $generated@@521)))
($generated@@81 ($generated@@408 $generated@@522) $generated@@521)))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@525 $generated@@526)) $generated@@62) (= ($generated@@523 ($generated@@135 $generated@@525 $generated@@526)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@525 $generated@@526))
)))
(assert  (and (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@240 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529)) ($generated@@239 $generated@@530)))
 :pattern ( ($generated@@527 $generated@@529))
)) (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@240 (type $generated@@531))))
(= (type ($generated@@528 $generated@@531)) $generated@@532))
 :pattern ( ($generated@@528 $generated@@531))
))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (=> (= (type $generated@@533) ($generated@@239 $generated@@535)) (and (= ($generated@@527 ($generated@@237 $generated@@533 $generated@@534)) $generated@@533) (= ($generated@@528 ($generated@@237 $generated@@533 $generated@@534)) $generated@@534))))
 :pattern ( ($generated@@237 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@506 ($generated@@270 $generated@@536)) ($generated@@507 $generated@@536)))
 :pattern ( ($generated@@506 ($generated@@270 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@212 $generated@@537 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@364 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@212 $generated@@538 ($generated@@221 $generated@@539))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@221 $generated@@539))))
 :pattern ( ($generated@@212 $generated@@538 ($generated@@221 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@212 $generated@@540 ($generated@@226 $generated@@541))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@226 $generated@@541))))
 :pattern ( ($generated@@212 $generated@@540 ($generated@@226 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@212 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@212 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@270 ($generated@@364 ($generated@@239 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@364 ($generated@@239 $generated@@145) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@251 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@251 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@251 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@251 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@251 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)) ($generated@@233 ($generated@@211 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@231 $generated@@560))) ($generated@@233 ($generated@@270 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@231 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@270 ($generated@@233 $generated@@561)) ($generated@@233 ($generated@@270 $generated@@561)))
 :pattern ( ($generated@@270 ($generated@@233 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@240 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@239 $generated@@563)) (= ($generated@@264 $generated@@562) 0)) (= $generated@@562 ($generated@@263 $generated@@563))))
 :pattern ( ($generated@@264 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@275 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@275 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@432)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@239 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@238 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@264 $generated@@578))) ($generated@@212 ($generated@@320 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@320 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@238 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@239 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@264 $generated@@582))) (< ($generated@@507 ($generated@@364 $generated@@136 ($generated@@320 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@507 ($generated@@364 $generated@@136 ($generated@@320 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@392 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@281 $generated@@584) ($generated@@221 $generated@@585)) ($generated@@132 ($generated@@332 $generated@@584) ($generated@@221 $generated@@586))) ($generated@@132 ($generated@@363 $generated@@584) ($generated@@221 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@392 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@400 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@299 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@132 ($generated@@343 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@132 ($generated@@374 $generated@@587) ($generated@@226 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@400 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@432) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 (T@U) Bool)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(assert  (and (and (and (= (type $generated@@595) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@596) $generated@@77)) (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@239 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@601  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@231 1) ($generated@@264 ($generated@@233 ($generated@@237 ($generated@@263 $generated@@145) ($generated@@270 ($generated@@8 ($generated@@231 1))))))))))
(let (($generated@@602 true))
(let (($generated@@603  (=> (= $generated@@595 ($generated@@156 $generated@@596 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@602) (=> (= (ControlFlow 0 4) 3) $generated@@601)))))
(let (($generated@@604  (=> (and (and (and ($generated@@250 $generated@@597) ($generated@@598 $generated@@597)) ($generated@@132 $generated@@599 ($generated@@238 $generated@@46))) (and (= 0 $generated@@600) (= (ControlFlow 0 5) 4))) $generated@@603)))
$generated@@604)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U Int) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@T T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@146 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@146)) 14)) (forall (($generated@@147 T@T) ) (! (= ($generated@@145 ($generated@@139 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@139 $generated@@147))
))) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@148 T@U) ($generated@@149 Int) ) (! (let (($generated@@150 ($generated@@145 (type $generated@@148))))
(= (type ($generated@@137 $generated@@148 $generated@@149)) $generated@@150))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149))
))) (= ($generated@@1 $generated@@144) 16)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@138 $generated@@151)) $generated@@144)
 :pattern ( ($generated@@138 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@U) ) (! (= (type ($generated@@143 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@143 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (= (type $generated@@154) ($generated@@139 $generated@@140)) (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@141 $generated@@154))) (< ($generated@@142 ($generated@@143 $generated@@144 ($generated@@137 $generated@@154 $generated@@155))) ($generated@@142 ($generated@@138 $generated@@154)))))
 :pattern ( ($generated@@137 $generated@@154 $generated@@155) ($generated@@138 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@80 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@80 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@69) (= (type $generated@@163) $generated@@69)) (= (type $generated@@164) $generated@@144)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@140)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@140)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@144) (= (type $generated@@171) $generated@@144)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (= (type $generated@@172) $generated@@69) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@173 $generated@@174)) $generated@@69)
 :pattern ( ($generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) ($generated@@139 $generated@@140)) (= (type $generated@@176) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@175 $generated@@172 $generated@@176) ($generated@@79 $generated@@175 ($generated@@173 $generated@@46) $generated@@176)))
 :pattern ( ($generated@@79 $generated@@175 $generated@@172 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@69)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@81 $generated@@140 $generated@@2)) (= (type $generated@@181) $generated@@69)) ($generated@@156 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@156 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@82 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@72 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@233) ($generated@@71 $generated@@4))) (= (type $generated@@235) $generated@@82)) (= (type $generated@@236) ($generated@@71 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (= (type $generated@@239) $generated@@69))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@144) ($generated@@156 $generated@@240 $generated@@239)) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@238 $generated@@240) ($generated@@156 $generated@@240 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@144)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@69) (= (type $generated@@246) $generated@@69)) (= (type $generated@@247) $generated@@140)) (= (type $generated@@248) $generated@@140)) (= ($generated@@156 ($generated@@241 $generated@@247 $generated@@248) ($generated@@159 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@156 ($generated@@241 $generated@@247 $generated@@248) ($generated@@159 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@144) (= (type $generated@@250) $generated@@144)) (= ($generated@@165 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@165 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@144) (= (type $generated@@253) $generated@@144)) (= ($generated@@251 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@156 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@140) ($generated@@0 ($generated@@86 $generated@@256 $generated@@258))) ($generated@@242 $generated@@258 $generated@@257))
 :pattern ( ($generated@@86 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@156 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@156 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@140) ($generated@@0 ($generated@@86 $generated@@261 $generated@@263))) ($generated@@242 $generated@@263 $generated@@262))
 :pattern ( ($generated@@86 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@156 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@140)) (= (type $generated@@275) $generated@@140)) (= (type $generated@@276) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@270 $generated@@276)) (= ($generated@@79 ($generated@@241 $generated@@274 $generated@@275) ($generated@@159 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@241 $generated@@274 $generated@@275) ($generated@@159 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@73)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@144) (= ($generated@@158 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@144) (= ($generated@@238 $generated@@280) (= ($generated@@277 $generated@@280) $generated@@64)))
 :pattern ( ($generated@@238 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@145 (type $generated@@282))))
 (=> (and (= (type $generated@@282) ($generated@@139 $generated@@284)) (= (type $generated@@283) ($generated@@139 $generated@@284))) (= ($generated@@281 $generated@@282 $generated@@283)  (and (= ($generated@@141 $generated@@282) ($generated@@141 $generated@@283)) (forall (($generated@@285 Int) ) (!  (=> (and (<= 0 $generated@@285) (< $generated@@285 ($generated@@141 $generated@@282))) (= ($generated@@137 $generated@@282 $generated@@285) ($generated@@137 $generated@@283 $generated@@285)))
 :pattern ( ($generated@@137 $generated@@282 $generated@@285))
 :pattern ( ($generated@@137 $generated@@283 $generated@@285))
))))))
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@144) ($generated@@158 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@140) (= (type $generated@@288) $generated@@140)) (= $generated@@286 ($generated@@241 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@158 $generated@@286))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@139 $generated@@290))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@141 ($generated@@289 $generated@@291)) 0)
 :pattern ( ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@144) ($generated@@238 $generated@@292)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) ($generated@@139 $generated@@140)) (= $generated@@292 ($generated@@138 $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@238 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@140)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@69) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@271 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@79 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@271 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@81 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@84 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@81 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@86 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@81 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@86 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@86 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@81 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@86 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@86 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@84 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@81 $generated@@342 $generated@@2)) (= ($generated@@178 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@86 $generated@@341 $generated@@343))) (<= ($generated ($generated@@86 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@86 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@178 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@140) ($generated@@242 $generated@@344 $generated@@172)) (and (= ($generated@@294 ($generated@@143 ($generated@@139 $generated@@140) $generated@@344)) $generated@@344) ($generated@@156 ($generated@@143 ($generated@@139 $generated@@140) $generated@@344) $generated@@172)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@172))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@140) ($generated@@242 $generated@@345 $generated@@239)) (and (= ($generated@@294 ($generated@@143 $generated@@144 $generated@@345)) $generated@@345) ($generated@@156 ($generated@@143 $generated@@144 $generated@@345) $generated@@239)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@239))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) ($generated@@139 $generated@@140)) (= ($generated@@156 ($generated@@138 $generated@@346) $generated@@239) ($generated@@156 $generated@@346 $generated@@172)))
 :pattern ( ($generated@@156 ($generated@@138 $generated@@346) $generated@@239))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@309 (type $generated@@347))))
(let (($generated@@349 ($generated@@308 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@307 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@306 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@86 ($generated@@305 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@305 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@309 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@81 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@309 (type $generated@@354))))
(let (($generated@@356 ($generated@@308 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@307 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@306 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@86 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@327 (type $generated@@358))))
(let (($generated@@360 ($generated@@326 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@325 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@324 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@86 ($generated@@323 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@323 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@327 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@81 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@327 (type $generated@@365))))
(let (($generated@@367 ($generated@@326 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@325 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@324 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@86 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@81 $generated@@140 $generated@@2)) (= (type $generated@@370) $generated@@69)) (= ($generated@@156 $generated@@369 ($generated@@177 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@140) (< 0 ($generated ($generated@@86 $generated@@369 $generated@@371)))) ($generated@@242 $generated@@371 $generated@@370))
 :pattern ( ($generated@@86 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@156 $generated@@369 ($generated@@177 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@372 ($generated@@254 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@140) ($generated@@0 ($generated@@86 $generated@@372 $generated@@375))) ($generated@@271 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@86 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@79 $generated@@372 ($generated@@254 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@376 ($generated@@259 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@140) ($generated@@0 ($generated@@86 $generated@@376 $generated@@379))) ($generated@@271 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@86 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@79 $generated@@376 ($generated@@259 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@86 ($generated@@300 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@86 ($generated@@300 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@81 $generated@@140 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@309 (type $generated@@385))))
(let (($generated@@387 ($generated@@308 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@81 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@389) $generated@@140)) (= ($generated@@0 ($generated@@86 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@86 ($generated@@305 $generated@@388) ($generated@@166 ($generated@@143 $generated@@144 $generated@@389)))) (= ($generated@@86 ($generated@@383 $generated@@388) ($generated@@166 ($generated@@143 $generated@@144 $generated@@389))) ($generated@@167 ($generated@@143 $generated@@144 $generated@@389))))))
 :pattern ( ($generated@@86 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@140 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@327 (type $generated@@393))))
(let (($generated@@395 ($generated@@326 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@81 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@397) $generated@@140)) (= ($generated@@0 ($generated@@86 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@86 ($generated@@323 $generated@@396) ($generated@@166 ($generated@@143 $generated@@144 $generated@@397)))) (= ($generated@@86 ($generated@@391 $generated@@396) ($generated@@166 ($generated@@143 $generated@@144 $generated@@397))) ($generated@@167 ($generated@@143 $generated@@144 $generated@@397))))))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@308 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@307 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@86 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@86 ($generated@@305 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@86 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@86 ($generated@@305 $generated@@398) $generated@@402))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@86 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@326 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@325 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@86 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@86 ($generated@@323 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@86 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@86 ($generated@@323 $generated@@403) $generated@@407))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@86 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@305 $generated@@411) $generated@@415))) (and ($generated@@271 ($generated@@86 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@271 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@86 ($generated@@305 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@79 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@323 $generated@@419) $generated@@423))) (and ($generated@@271 ($generated@@86 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@271 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@86 ($generated@@323 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@79 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) ($generated@@139 $generated@@140)) (= ($generated@@156 $generated@@424 $generated@@172)  (and ($generated@@156 $generated@@424 ($generated@@173 $generated@@46)) (<= ($generated@@264 1) ($generated@@141 $generated@@424)))))
 :pattern ( ($generated@@156 $generated@@424 $generated@@172))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@145 (type $generated@@425))))
 (=> (and (and (= (type $generated@@425) ($generated@@139 $generated@@427)) (= (type $generated@@426) ($generated@@139 $generated@@427))) ($generated@@281 $generated@@425 $generated@@426)) (= $generated@@425 $generated@@426)))
 :pattern ( ($generated@@281 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@139 $generated@@140)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@270 $generated@@429)) (= ($generated@@79 ($generated@@138 $generated@@428) $generated@@239 $generated@@429) ($generated@@79 $generated@@428 $generated@@172 $generated@@429)))
 :pattern ( ($generated@@79 ($generated@@138 $generated@@428) $generated@@239 $generated@@429))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@81 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@327 (type $generated@@432))))
(let (($generated@@434 ($generated@@326 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@325 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@324 $generated@@434 $generated@@433)) (= ($generated@@323 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@323 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@362 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@362 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@390 $generated@@438) ($generated@@430 $generated@@140))))))
 :pattern ( ($generated@@390 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@309 (type $generated@@441))))
(let (($generated@@443 ($generated@@308 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@307 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@306 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@140) (= (type $generated@@445) $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@382 $generated@@441) ($generated@@294 ($generated@@241 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@382 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@327 (type $generated@@446))))
(let (($generated@@448 ($generated@@326 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@325 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@324 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@140) (= (type $generated@@450) $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@390 $generated@@446) ($generated@@294 ($generated@@241 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@390 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@140) ($generated@@242 $generated@@451 $generated@@46)) (and (= ($generated@@294 ($generated@@143 $generated@@2 $generated@@451)) $generated@@451) ($generated@@156 ($generated@@143 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@140) ($generated@@242 $generated@@452 $generated@@47)) (and (= ($generated@@294 ($generated@@143 $generated@@3 $generated@@452)) $generated@@452) ($generated@@156 ($generated@@143 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@140) ($generated@@242 $generated@@453 $generated@@44)) (and (= ($generated@@294 ($generated@@143 $generated@@4 $generated@@453)) $generated@@453) ($generated@@156 ($generated@@143 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@140) ($generated@@242 $generated@@455 $generated@@45)) (and (= ($generated@@294 ($generated@@143 $generated@@454 $generated@@455)) $generated@@455) ($generated@@156 ($generated@@143 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@69) (= ($generated@@242 ($generated@@294 $generated@@456) $generated@@457) ($generated@@156 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@242 ($generated@@294 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@84 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@81 $generated@@459 $generated@@2)) (<= 0 ($generated@@299 $generated@@458))))
 :pattern ( ($generated@@299 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@145 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@139 $generated@@461)) (<= 0 ($generated@@141 $generated@@460))))
 :pattern ( ($generated@@141 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@408 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@77 ($generated@@408 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@69)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@472 ($generated@@416 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@416 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@416 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@77 ($generated@@416 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) (= ($generated@@277 ($generated@@241 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@484 ($generated@@159 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@159 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@159 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@159 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@140) (= (type $generated@@493) $generated@@140)) (= ($generated@@166 ($generated@@241 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@241 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@140) (= (type $generated@@495) $generated@@140)) (= ($generated@@167 ($generated@@241 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@139 $generated@@140)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@496 ($generated@@173 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@141 $generated@@496))) ($generated@@271 ($generated@@137 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@137 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@79 $generated@@496 ($generated@@173 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@80 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@80 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@254 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@254 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@77 ($generated@@254 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@259 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@259 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@77 ($generated@@259 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@177 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@177 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@77 ($generated@@177 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@173 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@173 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@173 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@173 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) ($generated@@139 $generated@@140)) (= ($generated@@277 ($generated@@138 $generated@@518)) $generated@@64))
 :pattern ( ($generated@@138 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) ($generated@@139 $generated@@140))
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) ($generated@@139 $generated@@140)) (= ($generated@@519 ($generated@@138 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@138 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@143 $generated@@523 ($generated@@294 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@294 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@156 $generated@@524 ($generated@@408 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@305 $generated@@524) $generated@@527))) (and ($generated@@242 ($generated@@86 ($generated@@383 $generated@@524) $generated@@527) $generated@@526) ($generated@@242 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@524) $generated@@527))
 :pattern ( ($generated@@86 ($generated@@305 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@156 $generated@@524 ($generated@@408 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@529) $generated@@69)) (= (type $generated@@530) $generated@@69)) (= ($generated@@156 $generated@@528 ($generated@@416 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@323 $generated@@528) $generated@@531))) (and ($generated@@242 ($generated@@86 ($generated@@391 $generated@@528) $generated@@531) $generated@@530) ($generated@@242 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@528) $generated@@531))
 :pattern ( ($generated@@86 ($generated@@323 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@156 $generated@@528 ($generated@@416 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@140) (= (type $generated@@534) $generated@@140)) (< ($generated@@532 $generated@@533) ($generated@@142 ($generated@@241 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@241 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@140) (= (type $generated@@536) $generated@@140)) (< ($generated@@532 $generated@@536) ($generated@@142 ($generated@@241 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@241 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@144) (= (type $generated@@538) $generated@@144)) true) (= ($generated@@251 $generated@@537 $generated@@538) ($generated@@281 ($generated@@519 $generated@@537) ($generated@@519 $generated@@538))))
 :pattern ( ($generated@@251 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@140) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@242 $generated@@539 ($generated@@408 $generated@@540 $generated@@541))) (and (= ($generated@@294 ($generated@@143 ($generated@@307 $generated@@140 $generated@@140) $generated@@539)) $generated@@539) ($generated@@156 ($generated@@143 ($generated@@307 $generated@@140 $generated@@140) $generated@@539) ($generated@@408 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@242 $generated@@539 ($generated@@408 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@242 $generated@@542 ($generated@@416 $generated@@543 $generated@@544))) (and (= ($generated@@294 ($generated@@143 ($generated@@325 $generated@@140 $generated@@140) $generated@@542)) $generated@@542) ($generated@@156 ($generated@@143 ($generated@@325 $generated@@140 $generated@@140) $generated@@542) ($generated@@416 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@242 $generated@@542 ($generated@@416 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@69) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@140)) ($generated@@242 $generated@@547 ($generated@@159 $generated@@545 $generated@@546))) (and (= ($generated@@294 ($generated@@143 $generated@@144 $generated@@547)) $generated@@547) ($generated@@156 ($generated@@143 $generated@@144 $generated@@547) ($generated@@159 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@242 $generated@@547 ($generated@@159 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) ($generated@@139 $generated@@140)) (< ($generated@@548 $generated@@549) ($generated@@142 ($generated@@138 $generated@@549))))
 :pattern ( ($generated@@138 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@86 ($generated@@430 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@86 ($generated@@430 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@74)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@69) (= (type $generated@@555) $generated@@69)) (and (= ($generated@@77 ($generated@@159 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@159 $generated@@554 $generated@@555)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@144) (= ($generated@@532 ($generated@@294 $generated@@556)) ($generated@@142 $generated@@556)))
 :pattern ( ($generated@@532 ($generated@@294 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@140) ($generated@@242 $generated@@557 ($generated@@80 0))) (and (= ($generated@@294 ($generated@@143 $generated@@2 $generated@@557)) $generated@@557) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@557) ($generated@@80 0))))
 :pattern ( ($generated@@242 $generated@@557 ($generated@@80 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@140) (= (type $generated@@559) $generated@@69)) ($generated@@242 $generated@@558 ($generated@@254 $generated@@559))) (and (= ($generated@@294 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@558)) $generated@@558) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@558) ($generated@@254 $generated@@559))))
 :pattern ( ($generated@@242 $generated@@558 ($generated@@254 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@140) (= (type $generated@@561) $generated@@69)) ($generated@@242 $generated@@560 ($generated@@259 $generated@@561))) (and (= ($generated@@294 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@560)) $generated@@560) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@560) ($generated@@259 $generated@@561))))
 :pattern ( ($generated@@242 $generated@@560 ($generated@@259 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@140) (= (type $generated@@563) $generated@@69)) ($generated@@242 $generated@@562 ($generated@@177 $generated@@563))) (and (= ($generated@@294 ($generated@@143 ($generated@@81 $generated@@140 $generated@@2) $generated@@562)) $generated@@562) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@2) $generated@@562) ($generated@@177 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@177 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@140) (= (type $generated@@565) $generated@@69)) ($generated@@242 $generated@@564 ($generated@@173 $generated@@565))) (and (= ($generated@@294 ($generated@@143 ($generated@@139 $generated@@140) $generated@@564)) $generated@@564) ($generated@@156 ($generated@@143 ($generated@@139 $generated@@140) $generated@@564) ($generated@@173 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@173 $generated@@565)))
)))
(assert (= ($generated@@77 $generated@@172) $generated@@63))
(assert (= ($generated@@552 $generated@@172) $generated@@67))
(assert (= ($generated@@77 $generated@@239) $generated@@65))
(assert (= ($generated@@552 $generated@@239) $generated@@68))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@81 $generated@@140 $generated@@2)) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@566 ($generated@@177 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@140) (< 0 ($generated ($generated@@86 $generated@@566 $generated@@569)))) ($generated@@271 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@86 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@79 $generated@@566 ($generated@@177 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@144) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@572) (and ($generated@@158 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@69) ($generated@@79 $generated@@570 ($generated@@159 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@79 $generated@@570 ($generated@@159 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@271 ($generated@@166 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@271 ($generated@@166 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@144) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@576) (and ($generated@@158 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@69) ($generated@@79 $generated@@574 ($generated@@159 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@159 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@271 ($generated@@167 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@271 ($generated@@167 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@579) (and ($generated@@238 $generated@@578) ($generated@@79 $generated@@578 $generated@@239 $generated@@579)))) ($generated@@79 ($generated@@519 $generated@@578) $generated@@172 $generated@@579))
 :pattern ( ($generated@@79 ($generated@@519 $generated@@578) $generated@@172 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@140) (= (type $generated@@581) $generated@@140)) (= ($generated@@241 ($generated@@266 $generated@@580) ($generated@@266 $generated@@581)) ($generated@@266 ($generated@@241 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@241 ($generated@@266 $generated@@580) ($generated@@266 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@264 $generated@@582))) ($generated@@266 ($generated@@294 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@264 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) ($generated@@139 $generated@@140)) (= ($generated@@138 ($generated@@266 $generated@@583)) ($generated@@266 ($generated@@138 $generated@@583))))
 :pattern ( ($generated@@138 ($generated@@266 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@294 ($generated@@266 $generated@@584)) ($generated@@266 ($generated@@294 $generated@@584)))
 :pattern ( ($generated@@294 ($generated@@266 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@145 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@139 $generated@@586)) (= ($generated@@141 $generated@@585) 0)) (= $generated@@585 ($generated@@289 $generated@@586))))
 :pattern ( ($generated@@141 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@81 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@299 ($generated@@87 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@299 $generated@@587) ($generated ($generated@@86 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@299 ($generated@@87 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@592) $generated@@2)) ($generated@@79 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@79 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@594) $generated@@3)) ($generated@@79 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@79 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@596) $generated@@4)) ($generated@@79 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@79 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@598) $generated@@454)) ($generated@@79 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@79 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@600) $generated@@140)) ($generated@@79 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@79 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@139 $generated@@140)) (= (type $generated@@602) $generated@@69)) (= ($generated@@156 $generated@@601 ($generated@@173 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@141 $generated@@601))) ($generated@@242 ($generated@@137 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@137 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@156 $generated@@601 ($generated@@173 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@139 $generated@@140)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@141 $generated@@604))) (< ($generated@@142 ($generated@@143 $generated@@144 ($generated@@137 $generated@@604 $generated@@605))) ($generated@@548 $generated@@604))))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@144 ($generated@@137 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@607) $generated@@69)) (= (type $generated@@608) $generated@@69)) ($generated@@156 $generated@@606 ($generated@@408 $generated@@607 $generated@@608))) (and (and ($generated@@156 ($generated@@305 $generated@@606) ($generated@@254 $generated@@607)) ($generated@@156 ($generated@@351 $generated@@606) ($generated@@254 $generated@@608))) ($generated@@156 ($generated@@382 $generated@@606) ($generated@@254 ($generated@@159 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@156 $generated@@606 ($generated@@408 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@610) $generated@@69)) (= (type $generated@@611) $generated@@69)) ($generated@@156 $generated@@609 ($generated@@416 $generated@@610 $generated@@611))) (and (and ($generated@@156 ($generated@@323 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@156 ($generated@@362 $generated@@609) ($generated@@259 $generated@@611))) ($generated@@156 ($generated@@390 $generated@@609) ($generated@@259 ($generated@@159 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@156 $generated@@609 ($generated@@416 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@156 $generated@@612 $generated@@46))
 :pattern ( ($generated@@156 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@156 $generated@@613 $generated@@47))
 :pattern ( ($generated@@156 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@156 $generated@@614 $generated@@44))
 :pattern ( ($generated@@156 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@454) ($generated@@156 $generated@@615 $generated@@45))
 :pattern ( ($generated@@156 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@140) ($generated@@156 $generated@@616 $generated@@48))
 :pattern ( ($generated@@156 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(assert  (and (and (and (= (type $generated@@617) ($generated@@184 $generated@@82 $generated@@4)) (= (type $generated@@618) $generated@@82)) (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@621) $generated@@144)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@623  (=> (and (= $generated@@617 ($generated@@183 $generated@@618 $generated@@619 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@156 ($generated@@266 ($generated@@289 $generated@@140)) $generated@@172))))
(let (($generated@@624  (=> (and ($generated@@270 $generated@@619) ($generated@@620 $generated@@619)) (=> (and (and (and ($generated@@156 $generated@@621 $generated@@239) ($generated@@79 $generated@@621 $generated@@239 $generated@@619)) true) (and (= 2 $generated@@622) (= (ControlFlow 0 3) 2))) $generated@@623))))
$generated@@624)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@315 (T@T T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@T) T@U)
(declare-fun $generated@@421 () T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@139 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@66)) (= (type $generated@@143) $generated@@138)) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142))) ($generated@@136 $generated@@143))
 :pattern ( ($generated@@136 $generated@@143) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@138) (= (type $generated@@151) $generated@@138)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert  (and (and (and (forall (($generated@@156 T@T) ) (= ($generated@@1 ($generated@@153 $generated@@156)) 16)) (forall (($generated@@157 T@T) ) (! (= ($generated@@155 ($generated@@153 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@153 $generated@@157))
))) (= (type $generated@@152) $generated@@66)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@154 $generated@@158)) $generated@@66)
 :pattern ( ($generated@@154 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) ($generated@@153 $generated@@147)) (= (type $generated@@160) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@159 $generated@@152 $generated@@160) ($generated@@76 $generated@@159 ($generated@@154 $generated@@46) $generated@@160)))
 :pattern ( ($generated@@76 $generated@@159 $generated@@152 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@66)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@165) $generated@@66)) ($generated@@134 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@134 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 17)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@79 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@69 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@79) (= (type $generated@@216) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@217) ($generated@@68 $generated@@4))) (= (type $generated@@219) $generated@@79)) (= (type $generated@@220) ($generated@@68 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@138)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@66) (= (type $generated@@227) $generated@@66)) (= (type $generated@@228) $generated@@147)) (= (type $generated@@229) $generated@@147)) (= ($generated@@134 ($generated@@222 $generated@@228 $generated@@229) ($generated@@137 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@134 ($generated@@222 $generated@@228 $generated@@229) ($generated@@137 $generated@@226 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@138) (= (type $generated@@231) $generated@@138)) (= ($generated@@144 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@144 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@66)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@235) $generated@@66)) (= ($generated@@134 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) ($generated@@0 ($generated@@83 $generated@@234 $generated@@236))) ($generated@@223 $generated@@236 $generated@@235))
 :pattern ( ($generated@@83 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@134 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@66)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@240) $generated@@66)) (= ($generated@@134 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@147) ($generated@@0 ($generated@@83 $generated@@239 $generated@@241))) ($generated@@223 $generated@@241 $generated@@240))
 :pattern ( ($generated@@83 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@134 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@66) (= (type $generated@@251) $generated@@66)) (= (type $generated@@252) $generated@@147)) (= (type $generated@@253) $generated@@147)) (= (type $generated@@254) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@248 $generated@@254)) (= ($generated@@76 ($generated@@222 $generated@@252 $generated@@253) ($generated@@137 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@252 $generated@@253) ($generated@@137 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@138) (= ($generated@@136 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@136 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@138) ($generated@@136 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= $generated@@258 ($generated@@222 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@136 $generated@@258))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@261 $generated@@263)) ($generated@@153 $generated@@263))
 :pattern ( ($generated@@261 $generated@@263))
)))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) 0)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@147)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@249 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@76 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@249 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@78 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@81 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@78 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@83 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@78 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@83 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@83 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@78 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@81 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (= ($generated@@162 $generated@@312) (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@313) (and (<= 0 ($generated ($generated@@83 $generated@@312 $generated@@314))) (<= ($generated ($generated@@83 $generated@@312 $generated@@314)) ($generated@@270 $generated@@312))))
 :pattern ( ($generated@@83 $generated@@312 $generated@@314))
)))))
 :pattern ( ($generated@@162 $generated@@312))
)))
(assert (forall (($generated@@316 T@T) ($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@315 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@147) ($generated@@223 $generated@@318 $generated@@152)) (and (= ($generated@@265 ($generated@@315 ($generated@@153 $generated@@147) $generated@@318)) $generated@@318) ($generated@@134 ($generated@@315 ($generated@@153 $generated@@147) $generated@@318) $generated@@152)))
 :pattern ( ($generated@@223 $generated@@318 $generated@@152))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@280 (type $generated@@319))))
(let (($generated@@321 ($generated@@279 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@278 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@277 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@83 ($generated@@276 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@276 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@280 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@78 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@280 (type $generated@@326))))
(let (($generated@@328 ($generated@@279 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@278 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@277 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@298 (type $generated@@330))))
(let (($generated@@332 ($generated@@297 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@296 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@295 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@294 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@298 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@298 (type $generated@@337))))
(let (($generated@@339 ($generated@@297 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@296 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@295 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@342) $generated@@66)) (= ($generated@@134 $generated@@341 ($generated@@161 $generated@@342)) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@341 $generated@@343)))) ($generated@@223 $generated@@343 $generated@@342))
 :pattern ( ($generated@@83 $generated@@341 $generated@@343))
))))
 :pattern ( ($generated@@134 $generated@@341 ($generated@@161 $generated@@342)))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@345) $generated@@66)) (= (type $generated@@346) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@344 ($generated@@232 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@147) ($generated@@0 ($generated@@83 $generated@@344 $generated@@347))) ($generated@@249 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@83 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@76 $generated@@344 ($generated@@232 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@349) $generated@@66)) (= (type $generated@@350) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@348 ($generated@@237 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@147) ($generated@@0 ($generated@@83 $generated@@348 $generated@@351))) ($generated@@249 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@83 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@76 $generated@@348 ($generated@@237 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(= ($generated ($generated@@83 ($generated@@271 $generated@@353) $generated@@352)) 0))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@83 ($generated@@271 $generated@@353) $generated@@352)))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@280 (type $generated@@357))))
(let (($generated@@359 ($generated@@279 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@78 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@278 $generated@@147 $generated@@147)) (= (type $generated@@361) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@83 ($generated@@276 $generated@@360) ($generated@@145 ($generated@@315 $generated@@138 $generated@@361)))) (= ($generated@@83 ($generated@@355 $generated@@360) ($generated@@145 ($generated@@315 $generated@@138 $generated@@361))) ($generated@@146 ($generated@@315 $generated@@138 $generated@@361))))))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@298 (type $generated@@365))))
(let (($generated@@367 ($generated@@297 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@296 $generated@@147 $generated@@147)) (= (type $generated@@369) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@368) ($generated@@145 ($generated@@315 $generated@@138 $generated@@369)))) (= ($generated@@83 ($generated@@363 $generated@@368) ($generated@@145 ($generated@@315 $generated@@138 $generated@@369))) ($generated@@146 ($generated@@315 $generated@@138 $generated@@369))))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(let (($generated@@373 ($generated@@279 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@278 $generated@@373 $generated@@372)) (= ($generated@@0 ($generated@@83 ($generated@@323 $generated@@370) $generated@@371)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (and ($generated@@0 ($generated@@83 ($generated@@276 $generated@@370) $generated@@374)) (= $generated@@371 ($generated@@83 ($generated@@355 $generated@@370) $generated@@374))))
 :pattern ( ($generated@@83 ($generated@@276 $generated@@370) $generated@@374))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@370) $generated@@374))
))))))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@297 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@296 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@83 ($generated@@363 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@375) $generated@@379))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@66)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@278 $generated@@147 $generated@@147)) (= (type $generated@@384) $generated@@66)) (= (type $generated@@385) $generated@@66)) (= (type $generated@@386) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@276 $generated@@383) $generated@@387))) (and ($generated@@249 ($generated@@83 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@249 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@276 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@76 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@66)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@296 $generated@@147 $generated@@147)) (= (type $generated@@392) $generated@@66)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@391) $generated@@395))) (and ($generated@@249 ($generated@@83 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@249 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@76 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) ($generated@@153 $generated@@147)) (= ($generated@@134 $generated@@396 $generated@@152)  (and ($generated@@134 $generated@@396 ($generated@@154 $generated@@46)) (<= ($generated@@242 1) ($generated@@262 $generated@@396)))))
 :pattern ( ($generated@@134 $generated@@396 $generated@@152))
)))
(assert (forall (($generated@@398 T@T) ) (! (= (type ($generated@@397 $generated@@398)) ($generated@@78 $generated@@398 $generated@@4))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@298 (type $generated@@399))))
(let (($generated@@401 ($generated@@297 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@296 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@295 $generated@@401 $generated@@400)) (= ($generated@@294 $generated@@399) ($generated@@397 $generated@@401))))))
 :pattern ( ($generated@@294 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@298 (type $generated@@402))))
(let (($generated@@404 ($generated@@297 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@296 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@295 $generated@@404 $generated@@403)) (= ($generated@@334 $generated@@402) ($generated@@397 $generated@@403))))))
 :pattern ( ($generated@@334 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@298 (type $generated@@405))))
(let (($generated@@407 ($generated@@297 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@296 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@295 $generated@@407 $generated@@406)) (= ($generated@@362 $generated@@405) ($generated@@397 $generated@@147))))))
 :pattern ( ($generated@@362 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@280 (type $generated@@408))))
(let (($generated@@410 ($generated@@279 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@278 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@277 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@147) (= (type $generated@@412) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@408) ($generated@@265 ($generated@@222 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@354 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@298 (type $generated@@413))))
(let (($generated@@415 ($generated@@297 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@296 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@295 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@147) (= (type $generated@@417) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@413) ($generated@@265 ($generated@@222 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@362 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@147) ($generated@@223 $generated@@418 $generated@@46)) (and (= ($generated@@265 ($generated@@315 $generated@@2 $generated@@418)) $generated@@418) ($generated@@134 ($generated@@315 $generated@@2 $generated@@418) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@418 $generated@@46))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@147) ($generated@@223 $generated@@419 $generated@@47)) (and (= ($generated@@265 ($generated@@315 $generated@@3 $generated@@419)) $generated@@419) ($generated@@134 ($generated@@315 $generated@@3 $generated@@419) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@419 $generated@@47))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@147) ($generated@@223 $generated@@420 $generated@@44)) (and (= ($generated@@265 ($generated@@315 $generated@@4 $generated@@420)) $generated@@420) ($generated@@134 ($generated@@315 $generated@@4 $generated@@420) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@420 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@421) 20))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@147) ($generated@@223 $generated@@422 $generated@@45)) (and (= ($generated@@265 ($generated@@315 $generated@@421 $generated@@422)) $generated@@422) ($generated@@134 ($generated@@315 $generated@@421 $generated@@422) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@422 $generated@@45))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@66) (= ($generated@@223 ($generated@@265 $generated@@423) $generated@@424) ($generated@@134 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@223 ($generated@@265 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@81 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@78 $generated@@426 $generated@@2)) (<= 0 ($generated@@270 $generated@@425))))
 :pattern ( ($generated@@270 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@155 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@153 $generated@@428)) (<= 0 ($generated@@262 $generated@@427))))
 :pattern ( ($generated@@262 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@66)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@66) (= (type $generated@@432) $generated@@66)) (= ($generated@@429 ($generated@@380 $generated@@431 $generated@@432)) $generated@@431))
 :pattern ( ($generated@@380 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@66) (= (type $generated@@436) $generated@@66)) (= ($generated@@433 ($generated@@380 $generated@@435 $generated@@436)) $generated@@436))
 :pattern ( ($generated@@380 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@66) (= (type $generated@@438) $generated@@66)) (= ($generated@@74 ($generated@@380 $generated@@437 $generated@@438)) $generated@@58))
 :pattern ( ($generated@@380 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@66) (= (type $generated@@442) $generated@@66)) (= ($generated@@439 ($generated@@388 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@388 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@443 ($generated@@388 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@388 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@74 ($generated@@388 $generated@@447 $generated@@448)) $generated@@59))
 :pattern ( ($generated@@388 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@147) (= (type $generated@@450) $generated@@147)) (= ($generated@@255 ($generated@@222 $generated@@449 $generated@@450)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@137 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@137 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@137 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@137 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@147) (= (type $generated@@460) $generated@@147)) (= ($generated@@145 ($generated@@222 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@222 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@147) (= (type $generated@@462) $generated@@147)) (= ($generated@@146 ($generated@@222 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@222 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 Int) ) (! (let (($generated@@466 ($generated@@155 (type $generated@@464))))
(= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@466))
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@153 $generated@@147)) (= (type $generated@@468) $generated@@66)) (= (type $generated@@469) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@467 ($generated@@154 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@262 $generated@@467))) ($generated@@249 ($generated@@463 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@463 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@76 $generated@@467 ($generated@@154 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@77 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@77 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@66) (= ($generated@@473 ($generated@@232 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@232 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@66) (= ($generated@@74 ($generated@@232 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@477 ($generated@@237 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@237 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@66) (= ($generated@@74 ($generated@@237 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@481 ($generated@@161 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@161 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@66) (= ($generated@@74 ($generated@@161 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@485 ($generated@@154 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@154 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@74 ($generated@@154 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@154 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@315 $generated@@490 ($generated@@265 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@265 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@278 $generated@@147 $generated@@147)) (= (type $generated@@492) $generated@@66)) (= (type $generated@@493) $generated@@66)) (= ($generated@@134 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@276 $generated@@491) $generated@@494))) (and ($generated@@223 ($generated@@83 ($generated@@355 $generated@@491) $generated@@494) $generated@@493) ($generated@@223 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@491) $generated@@494))
 :pattern ( ($generated@@83 ($generated@@276 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@134 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@296 $generated@@147 $generated@@147)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) $generated@@66)) (= ($generated@@134 $generated@@495 ($generated@@388 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@495) $generated@@498))) (and ($generated@@223 ($generated@@83 ($generated@@363 $generated@@495) $generated@@498) $generated@@497) ($generated@@223 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@495) $generated@@498))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@134 $generated@@495 ($generated@@388 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@147) (= (type $generated@@502) $generated@@147)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@222 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@222 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@147) (= (type $generated@@504) $generated@@147)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@222 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@222 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@147) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) ($generated@@223 $generated@@505 ($generated@@380 $generated@@506 $generated@@507))) (and (= ($generated@@265 ($generated@@315 ($generated@@278 $generated@@147 $generated@@147) $generated@@505)) $generated@@505) ($generated@@134 ($generated@@315 ($generated@@278 $generated@@147 $generated@@147) $generated@@505) ($generated@@380 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@223 $generated@@505 ($generated@@380 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@147) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) ($generated@@223 $generated@@508 ($generated@@388 $generated@@509 $generated@@510))) (and (= ($generated@@265 ($generated@@315 ($generated@@296 $generated@@147 $generated@@147) $generated@@508)) $generated@@508) ($generated@@134 ($generated@@315 ($generated@@296 $generated@@147 $generated@@147) $generated@@508) ($generated@@388 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@223 $generated@@508 ($generated@@388 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@147)) ($generated@@223 $generated@@513 ($generated@@137 $generated@@511 $generated@@512))) (and (= ($generated@@265 ($generated@@315 $generated@@138 $generated@@513)) $generated@@513) ($generated@@134 ($generated@@315 $generated@@138 $generated@@513) ($generated@@137 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@223 $generated@@513 ($generated@@137 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@83 ($generated@@397 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@83 ($generated@@397 $generated@@515) $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@71)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (and (= ($generated@@74 ($generated@@137 $generated@@518 $generated@@519)) $generated@@62) (= ($generated@@516 ($generated@@137 $generated@@518 $generated@@519)) $generated@@64)))
 :pattern ( ($generated@@137 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@138) (= ($generated@@499 ($generated@@265 $generated@@520)) ($generated@@500 $generated@@520)))
 :pattern ( ($generated@@499 ($generated@@265 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@147) ($generated@@223 $generated@@521 ($generated@@77 0))) (and (= ($generated@@265 ($generated@@315 $generated@@2 $generated@@521)) $generated@@521) ($generated@@134 ($generated@@315 ($generated@@78 $generated@@147 $generated@@4) $generated@@521) ($generated@@77 0))))
 :pattern ( ($generated@@223 $generated@@521 ($generated@@77 0)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@66)) ($generated@@223 $generated@@522 ($generated@@232 $generated@@523))) (and (= ($generated@@265 ($generated@@315 ($generated@@78 $generated@@147 $generated@@4) $generated@@522)) $generated@@522) ($generated@@134 ($generated@@315 ($generated@@78 $generated@@147 $generated@@4) $generated@@522) ($generated@@232 $generated@@523))))
 :pattern ( ($generated@@223 $generated@@522 ($generated@@232 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@66)) ($generated@@223 $generated@@524 ($generated@@237 $generated@@525))) (and (= ($generated@@265 ($generated@@315 ($generated@@78 $generated@@147 $generated@@4) $generated@@524)) $generated@@524) ($generated@@134 ($generated@@315 ($generated@@78 $generated@@147 $generated@@4) $generated@@524) ($generated@@237 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 ($generated@@237 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@147) (= (type $generated@@527) $generated@@66)) ($generated@@223 $generated@@526 ($generated@@161 $generated@@527))) (and (= ($generated@@265 ($generated@@315 ($generated@@78 $generated@@147 $generated@@2) $generated@@526)) $generated@@526) ($generated@@134 ($generated@@315 ($generated@@78 $generated@@147 $generated@@2) $generated@@526) ($generated@@161 $generated@@527))))
 :pattern ( ($generated@@223 $generated@@526 ($generated@@161 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@66)) ($generated@@223 $generated@@528 ($generated@@154 $generated@@529))) (and (= ($generated@@265 ($generated@@315 ($generated@@153 $generated@@147) $generated@@528)) $generated@@528) ($generated@@134 ($generated@@315 ($generated@@153 $generated@@147) $generated@@528) ($generated@@154 $generated@@529))))
 :pattern ( ($generated@@223 $generated@@528 ($generated@@154 $generated@@529)))
)))
(assert (= ($generated@@74 $generated@@152) $generated@@63))
(assert (= ($generated@@516 $generated@@152) $generated@@65))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@530 ($generated@@161 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@530 $generated@@533)))) ($generated@@249 $generated@@533 $generated@@531 $generated@@532))
 :pattern ( ($generated@@83 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@76 $generated@@530 ($generated@@161 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@138) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@248 $generated@@536) (and ($generated@@136 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@66) ($generated@@76 $generated@@534 ($generated@@137 $generated@@535 $generated@@537) $generated@@536))
 :pattern ( ($generated@@76 $generated@@534 ($generated@@137 $generated@@535 $generated@@537) $generated@@536))
))))) ($generated@@249 ($generated@@145 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@249 ($generated@@145 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@138) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@248 $generated@@540) (and ($generated@@136 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@66) ($generated@@76 $generated@@538 ($generated@@137 $generated@@541 $generated@@539) $generated@@540))
 :pattern ( ($generated@@76 $generated@@538 ($generated@@137 $generated@@541 $generated@@539) $generated@@540))
))))) ($generated@@249 ($generated@@146 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@249 ($generated@@146 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@147) (= (type $generated@@543) $generated@@147)) (= ($generated@@222 ($generated@@244 $generated@@542) ($generated@@244 $generated@@543)) ($generated@@244 ($generated@@222 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@222 ($generated@@244 $generated@@542) ($generated@@244 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@242 $generated@@544))) ($generated@@244 ($generated@@265 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@242 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@265 ($generated@@244 $generated@@545)) ($generated@@244 ($generated@@265 $generated@@545)))
 :pattern ( ($generated@@265 ($generated@@244 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@155 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@153 $generated@@547)) (= ($generated@@262 $generated@@546) 0)) (= $generated@@546 ($generated@@261 $generated@@547))))
 :pattern ( ($generated@@262 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@270 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@270 $generated@@548) ($generated ($generated@@83 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@270 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@553) $generated@@2)) ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@555) $generated@@3)) ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@557) $generated@@4)) ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@559) $generated@@421)) ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@561) $generated@@147)) ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@153 $generated@@147)) (= (type $generated@@563) $generated@@66)) (= ($generated@@134 $generated@@562 ($generated@@154 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@262 $generated@@562))) ($generated@@223 ($generated@@463 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@463 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@134 $generated@@562 ($generated@@154 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@153 $generated@@147)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@262 $generated@@566))) (< ($generated@@500 ($generated@@315 $generated@@138 ($generated@@463 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@500 ($generated@@315 $generated@@138 ($generated@@463 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@278 $generated@@147 $generated@@147)) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@134 $generated@@568 ($generated@@380 $generated@@569 $generated@@570))) (and (and ($generated@@134 ($generated@@276 $generated@@568) ($generated@@232 $generated@@569)) ($generated@@134 ($generated@@323 $generated@@568) ($generated@@232 $generated@@570))) ($generated@@134 ($generated@@354 $generated@@568) ($generated@@232 ($generated@@137 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@134 $generated@@568 ($generated@@380 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@296 $generated@@147 $generated@@147)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) ($generated@@134 $generated@@571 ($generated@@388 $generated@@572 $generated@@573))) (and (and ($generated@@134 ($generated@@294 $generated@@571) ($generated@@237 $generated@@572)) ($generated@@134 ($generated@@334 $generated@@571) ($generated@@237 $generated@@573))) ($generated@@134 ($generated@@362 $generated@@571) ($generated@@237 ($generated@@137 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@134 $generated@@571 ($generated@@388 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@134 $generated@@574 $generated@@46))
 :pattern ( ($generated@@134 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@134 $generated@@575 $generated@@47))
 :pattern ( ($generated@@134 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@134 $generated@@576 $generated@@44))
 :pattern ( ($generated@@134 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@421) ($generated@@134 $generated@@577 $generated@@45))
 :pattern ( ($generated@@134 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@147) ($generated@@134 $generated@@578 $generated@@48))
 :pattern ( ($generated@@134 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 (T@U) Bool)
(declare-fun $generated@@583 () Int)
(assert  (and (and (= (type $generated@@579) ($generated@@168 $generated@@79 $generated@@4)) (= (type $generated@@580) $generated@@79)) (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@584  (=> (and (= $generated@@579 ($generated@@167 $generated@@580 $generated@@581 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@134 ($generated@@244 ($generated@@261 $generated@@147)) $generated@@152))))
(let (($generated@@585  (=> (and (and ($generated@@248 $generated@@581) ($generated@@582 $generated@@581)) (and (= 2 $generated@@583) (= (ControlFlow 0 3) 2))) $generated@@584)))
$generated@@585)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U Int) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 (T@T T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@146 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@146)) 14)) (forall (($generated@@147 T@T) ) (! (= ($generated@@145 ($generated@@139 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@139 $generated@@147))
))) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@148 T@U) ($generated@@149 Int) ) (! (let (($generated@@150 ($generated@@145 (type $generated@@148))))
(= (type ($generated@@137 $generated@@148 $generated@@149)) $generated@@150))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149))
))) (= ($generated@@1 $generated@@144) 16)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@138 $generated@@151)) $generated@@144)
 :pattern ( ($generated@@138 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@U) ) (! (= (type ($generated@@143 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@143 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (= (type $generated@@154) ($generated@@139 $generated@@140)) (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@141 $generated@@154))) (< ($generated@@142 ($generated@@143 $generated@@144 ($generated@@137 $generated@@154 $generated@@155))) ($generated@@142 ($generated@@138 $generated@@154)))))
 :pattern ( ($generated@@137 $generated@@154 $generated@@155) ($generated@@138 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@80 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@80 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@69) (= (type $generated@@163) $generated@@69)) (= (type $generated@@164) $generated@@144)) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@156 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@140)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@140)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@144) (= (type $generated@@171) $generated@@144)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (= (type $generated@@172) $generated@@69) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@173 $generated@@174)) $generated@@69)
 :pattern ( ($generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) ($generated@@139 $generated@@140)) (= (type $generated@@176) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@175 $generated@@172 $generated@@176) ($generated@@79 $generated@@175 ($generated@@173 $generated@@46) $generated@@176)))
 :pattern ( ($generated@@79 $generated@@175 $generated@@172 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@69)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@81 $generated@@140 $generated@@2)) (= (type $generated@@181) $generated@@69)) ($generated@@156 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@156 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@82 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@72 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@233) ($generated@@71 $generated@@4))) (= (type $generated@@235) $generated@@82)) (= (type $generated@@236) ($generated@@71 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (= (type $generated@@239) $generated@@69))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@144) ($generated@@156 $generated@@240 $generated@@239)) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@238 $generated@@240) ($generated@@156 $generated@@240 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@144)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@69) (= (type $generated@@246) $generated@@69)) (= (type $generated@@247) $generated@@140)) (= (type $generated@@248) $generated@@140)) (= ($generated@@156 ($generated@@241 $generated@@247 $generated@@248) ($generated@@159 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@156 ($generated@@241 $generated@@247 $generated@@248) ($generated@@159 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@144) (= (type $generated@@250) $generated@@144)) (= ($generated@@165 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@165 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@144) (= (type $generated@@253) $generated@@144)) (= ($generated@@251 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@156 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@140) ($generated@@0 ($generated@@86 $generated@@256 $generated@@258))) ($generated@@242 $generated@@258 $generated@@257))
 :pattern ( ($generated@@86 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@156 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@156 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@140) ($generated@@0 ($generated@@86 $generated@@261 $generated@@263))) ($generated@@242 $generated@@263 $generated@@262))
 :pattern ( ($generated@@86 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@156 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@140)) (= (type $generated@@275) $generated@@140)) (= (type $generated@@276) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@270 $generated@@276)) (= ($generated@@79 ($generated@@241 $generated@@274 $generated@@275) ($generated@@159 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@241 $generated@@274 $generated@@275) ($generated@@159 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@73)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@144) (= ($generated@@158 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@144) (= ($generated@@238 $generated@@280) (= ($generated@@277 $generated@@280) $generated@@64)))
 :pattern ( ($generated@@238 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@145 (type $generated@@282))))
 (=> (and (= (type $generated@@282) ($generated@@139 $generated@@284)) (= (type $generated@@283) ($generated@@139 $generated@@284))) (= ($generated@@281 $generated@@282 $generated@@283)  (and (= ($generated@@141 $generated@@282) ($generated@@141 $generated@@283)) (forall (($generated@@285 Int) ) (!  (=> (and (<= 0 $generated@@285) (< $generated@@285 ($generated@@141 $generated@@282))) (= ($generated@@137 $generated@@282 $generated@@285) ($generated@@137 $generated@@283 $generated@@285)))
 :pattern ( ($generated@@137 $generated@@282 $generated@@285))
 :pattern ( ($generated@@137 $generated@@283 $generated@@285))
))))))
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@144) ($generated@@158 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@140) (= (type $generated@@288) $generated@@140)) (= $generated@@286 ($generated@@241 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@158 $generated@@286))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@139 $generated@@290))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@141 ($generated@@289 $generated@@291)) 0)
 :pattern ( ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@144) ($generated@@238 $generated@@292)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) ($generated@@139 $generated@@140)) (= $generated@@292 ($generated@@138 $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@238 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@140)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@69) (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@271 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@79 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@271 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@81 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@84 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@81 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@86 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@81 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@86 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@86 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@81 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@86 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@86 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@84 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@81 $generated@@342 $generated@@2)) (= ($generated@@178 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@86 $generated@@341 $generated@@343))) (<= ($generated ($generated@@86 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@86 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@178 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@140) ($generated@@242 $generated@@344 $generated@@172)) (and (= ($generated@@294 ($generated@@143 ($generated@@139 $generated@@140) $generated@@344)) $generated@@344) ($generated@@156 ($generated@@143 ($generated@@139 $generated@@140) $generated@@344) $generated@@172)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@172))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@140) ($generated@@242 $generated@@345 $generated@@239)) (and (= ($generated@@294 ($generated@@143 $generated@@144 $generated@@345)) $generated@@345) ($generated@@156 ($generated@@143 $generated@@144 $generated@@345) $generated@@239)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@239))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) ($generated@@139 $generated@@140)) (= ($generated@@156 ($generated@@138 $generated@@346) $generated@@239) ($generated@@156 $generated@@346 $generated@@172)))
 :pattern ( ($generated@@156 ($generated@@138 $generated@@346) $generated@@239))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@309 (type $generated@@347))))
(let (($generated@@349 ($generated@@308 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@307 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@306 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@86 ($generated@@305 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@305 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@309 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@81 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@309 (type $generated@@354))))
(let (($generated@@356 ($generated@@308 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@307 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@306 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@86 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@327 (type $generated@@358))))
(let (($generated@@360 ($generated@@326 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@325 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@324 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@86 ($generated@@323 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@323 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@327 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@81 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@327 (type $generated@@365))))
(let (($generated@@367 ($generated@@326 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@325 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@324 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@86 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@81 $generated@@140 $generated@@2)) (= (type $generated@@370) $generated@@69)) (= ($generated@@156 $generated@@369 ($generated@@177 $generated@@370)) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@140) (< 0 ($generated ($generated@@86 $generated@@369 $generated@@371)))) ($generated@@242 $generated@@371 $generated@@370))
 :pattern ( ($generated@@86 $generated@@369 $generated@@371))
))))
 :pattern ( ($generated@@156 $generated@@369 ($generated@@177 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@372 ($generated@@254 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@140) ($generated@@0 ($generated@@86 $generated@@372 $generated@@375))) ($generated@@271 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@86 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@79 $generated@@372 ($generated@@254 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@81 $generated@@140 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@376 ($generated@@259 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@140) ($generated@@0 ($generated@@86 $generated@@376 $generated@@379))) ($generated@@271 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@86 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@79 $generated@@376 ($generated@@259 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@86 ($generated@@300 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@86 ($generated@@300 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@81 $generated@@140 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@309 (type $generated@@385))))
(let (($generated@@387 ($generated@@308 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@81 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@389) $generated@@140)) (= ($generated@@0 ($generated@@86 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@86 ($generated@@305 $generated@@388) ($generated@@166 ($generated@@143 $generated@@144 $generated@@389)))) (= ($generated@@86 ($generated@@383 $generated@@388) ($generated@@166 ($generated@@143 $generated@@144 $generated@@389))) ($generated@@167 ($generated@@143 $generated@@144 $generated@@389))))))
 :pattern ( ($generated@@86 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@140 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@327 (type $generated@@393))))
(let (($generated@@395 ($generated@@326 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@81 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@397) $generated@@140)) (= ($generated@@0 ($generated@@86 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@86 ($generated@@323 $generated@@396) ($generated@@166 ($generated@@143 $generated@@144 $generated@@397)))) (= ($generated@@86 ($generated@@391 $generated@@396) ($generated@@166 ($generated@@143 $generated@@144 $generated@@397))) ($generated@@167 ($generated@@143 $generated@@144 $generated@@397))))))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@308 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@307 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@86 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@86 ($generated@@305 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@86 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@86 ($generated@@305 $generated@@398) $generated@@402))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@86 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@326 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@325 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@86 ($generated@@362 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@86 ($generated@@323 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@86 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@86 ($generated@@323 $generated@@403) $generated@@407))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@86 ($generated@@362 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@305 $generated@@411) $generated@@415))) (and ($generated@@271 ($generated@@86 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@271 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@86 ($generated@@305 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@79 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@323 $generated@@419) $generated@@423))) (and ($generated@@271 ($generated@@86 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@271 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@86 ($generated@@323 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@79 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) ($generated@@139 $generated@@140)) (= ($generated@@156 $generated@@424 $generated@@172)  (and ($generated@@156 $generated@@424 ($generated@@173 $generated@@46)) (<= ($generated@@264 1) ($generated@@141 $generated@@424)))))
 :pattern ( ($generated@@156 $generated@@424 $generated@@172))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@145 (type $generated@@425))))
 (=> (and (and (= (type $generated@@425) ($generated@@139 $generated@@427)) (= (type $generated@@426) ($generated@@139 $generated@@427))) ($generated@@281 $generated@@425 $generated@@426)) (= $generated@@425 $generated@@426)))
 :pattern ( ($generated@@281 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@139 $generated@@140)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@270 $generated@@429)) (= ($generated@@79 ($generated@@138 $generated@@428) $generated@@239 $generated@@429) ($generated@@79 $generated@@428 $generated@@172 $generated@@429)))
 :pattern ( ($generated@@79 ($generated@@138 $generated@@428) $generated@@239 $generated@@429))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@81 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@327 (type $generated@@432))))
(let (($generated@@434 ($generated@@326 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@325 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@324 $generated@@434 $generated@@433)) (= ($generated@@323 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@323 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@362 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@362 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@390 $generated@@438) ($generated@@430 $generated@@140))))))
 :pattern ( ($generated@@390 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@309 (type $generated@@441))))
(let (($generated@@443 ($generated@@308 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@307 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@306 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@140) (= (type $generated@@445) $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@382 $generated@@441) ($generated@@294 ($generated@@241 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@382 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@327 (type $generated@@446))))
(let (($generated@@448 ($generated@@326 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@325 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@324 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@140) (= (type $generated@@450) $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@390 $generated@@446) ($generated@@294 ($generated@@241 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@390 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@140) ($generated@@242 $generated@@451 $generated@@46)) (and (= ($generated@@294 ($generated@@143 $generated@@2 $generated@@451)) $generated@@451) ($generated@@156 ($generated@@143 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@140) ($generated@@242 $generated@@452 $generated@@47)) (and (= ($generated@@294 ($generated@@143 $generated@@3 $generated@@452)) $generated@@452) ($generated@@156 ($generated@@143 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@140) ($generated@@242 $generated@@453 $generated@@44)) (and (= ($generated@@294 ($generated@@143 $generated@@4 $generated@@453)) $generated@@453) ($generated@@156 ($generated@@143 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@140) ($generated@@242 $generated@@455 $generated@@45)) (and (= ($generated@@294 ($generated@@143 $generated@@454 $generated@@455)) $generated@@455) ($generated@@156 ($generated@@143 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@69) (= ($generated@@242 ($generated@@294 $generated@@456) $generated@@457) ($generated@@156 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@242 ($generated@@294 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@84 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@81 $generated@@459 $generated@@2)) (<= 0 ($generated@@299 $generated@@458))))
 :pattern ( ($generated@@299 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@145 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@139 $generated@@461)) (<= 0 ($generated@@141 $generated@@460))))
 :pattern ( ($generated@@141 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@408 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@77 ($generated@@408 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@69)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@472 ($generated@@416 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@416 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@416 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@77 ($generated@@416 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) (= ($generated@@277 ($generated@@241 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@484 ($generated@@159 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@159 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@159 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@159 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@140) (= (type $generated@@493) $generated@@140)) (= ($generated@@166 ($generated@@241 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@241 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@140) (= (type $generated@@495) $generated@@140)) (= ($generated@@167 ($generated@@241 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@139 $generated@@140)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@496 ($generated@@173 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@141 $generated@@496))) ($generated@@271 ($generated@@137 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@137 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@79 $generated@@496 ($generated@@173 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@80 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@80 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@254 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@254 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@77 ($generated@@254 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@259 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@259 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@77 ($generated@@259 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@177 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@177 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@77 ($generated@@177 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@173 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@173 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@173 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@173 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) ($generated@@139 $generated@@140)) (= ($generated@@277 ($generated@@138 $generated@@518)) $generated@@64))
 :pattern ( ($generated@@138 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) ($generated@@139 $generated@@140))
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) ($generated@@139 $generated@@140)) (= ($generated@@519 ($generated@@138 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@138 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@143 $generated@@523 ($generated@@294 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@294 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@156 $generated@@524 ($generated@@408 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@305 $generated@@524) $generated@@527))) (and ($generated@@242 ($generated@@86 ($generated@@383 $generated@@524) $generated@@527) $generated@@526) ($generated@@242 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@524) $generated@@527))
 :pattern ( ($generated@@86 ($generated@@305 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@156 $generated@@524 ($generated@@408 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@529) $generated@@69)) (= (type $generated@@530) $generated@@69)) (= ($generated@@156 $generated@@528 ($generated@@416 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@140) ($generated@@0 ($generated@@86 ($generated@@323 $generated@@528) $generated@@531))) (and ($generated@@242 ($generated@@86 ($generated@@391 $generated@@528) $generated@@531) $generated@@530) ($generated@@242 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@528) $generated@@531))
 :pattern ( ($generated@@86 ($generated@@323 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@156 $generated@@528 ($generated@@416 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@140) (= (type $generated@@534) $generated@@140)) (< ($generated@@532 $generated@@533) ($generated@@142 ($generated@@241 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@241 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@140) (= (type $generated@@536) $generated@@140)) (< ($generated@@532 $generated@@536) ($generated@@142 ($generated@@241 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@241 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@144) (= (type $generated@@538) $generated@@144)) true) (= ($generated@@251 $generated@@537 $generated@@538) ($generated@@281 ($generated@@519 $generated@@537) ($generated@@519 $generated@@538))))
 :pattern ( ($generated@@251 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@140) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@242 $generated@@539 ($generated@@408 $generated@@540 $generated@@541))) (and (= ($generated@@294 ($generated@@143 ($generated@@307 $generated@@140 $generated@@140) $generated@@539)) $generated@@539) ($generated@@156 ($generated@@143 ($generated@@307 $generated@@140 $generated@@140) $generated@@539) ($generated@@408 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@242 $generated@@539 ($generated@@408 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@242 $generated@@542 ($generated@@416 $generated@@543 $generated@@544))) (and (= ($generated@@294 ($generated@@143 ($generated@@325 $generated@@140 $generated@@140) $generated@@542)) $generated@@542) ($generated@@156 ($generated@@143 ($generated@@325 $generated@@140 $generated@@140) $generated@@542) ($generated@@416 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@242 $generated@@542 ($generated@@416 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@69) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@140)) ($generated@@242 $generated@@547 ($generated@@159 $generated@@545 $generated@@546))) (and (= ($generated@@294 ($generated@@143 $generated@@144 $generated@@547)) $generated@@547) ($generated@@156 ($generated@@143 $generated@@144 $generated@@547) ($generated@@159 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@242 $generated@@547 ($generated@@159 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) ($generated@@139 $generated@@140)) (< ($generated@@548 $generated@@549) ($generated@@142 ($generated@@138 $generated@@549))))
 :pattern ( ($generated@@138 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@86 ($generated@@430 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@86 ($generated@@430 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@74)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@69) (= (type $generated@@555) $generated@@69)) (and (= ($generated@@77 ($generated@@159 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@159 $generated@@554 $generated@@555)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@144) (= ($generated@@532 ($generated@@294 $generated@@556)) ($generated@@142 $generated@@556)))
 :pattern ( ($generated@@532 ($generated@@294 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@140) ($generated@@242 $generated@@557 ($generated@@80 0))) (and (= ($generated@@294 ($generated@@143 $generated@@2 $generated@@557)) $generated@@557) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@557) ($generated@@80 0))))
 :pattern ( ($generated@@242 $generated@@557 ($generated@@80 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@140) (= (type $generated@@559) $generated@@69)) ($generated@@242 $generated@@558 ($generated@@254 $generated@@559))) (and (= ($generated@@294 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@558)) $generated@@558) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@558) ($generated@@254 $generated@@559))))
 :pattern ( ($generated@@242 $generated@@558 ($generated@@254 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@140) (= (type $generated@@561) $generated@@69)) ($generated@@242 $generated@@560 ($generated@@259 $generated@@561))) (and (= ($generated@@294 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@560)) $generated@@560) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@4) $generated@@560) ($generated@@259 $generated@@561))))
 :pattern ( ($generated@@242 $generated@@560 ($generated@@259 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@140) (= (type $generated@@563) $generated@@69)) ($generated@@242 $generated@@562 ($generated@@177 $generated@@563))) (and (= ($generated@@294 ($generated@@143 ($generated@@81 $generated@@140 $generated@@2) $generated@@562)) $generated@@562) ($generated@@156 ($generated@@143 ($generated@@81 $generated@@140 $generated@@2) $generated@@562) ($generated@@177 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@177 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@140) (= (type $generated@@565) $generated@@69)) ($generated@@242 $generated@@564 ($generated@@173 $generated@@565))) (and (= ($generated@@294 ($generated@@143 ($generated@@139 $generated@@140) $generated@@564)) $generated@@564) ($generated@@156 ($generated@@143 ($generated@@139 $generated@@140) $generated@@564) ($generated@@173 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@173 $generated@@565)))
)))
(assert (= ($generated@@77 $generated@@172) $generated@@63))
(assert (= ($generated@@552 $generated@@172) $generated@@67))
(assert (= ($generated@@77 $generated@@239) $generated@@65))
(assert (= ($generated@@552 $generated@@239) $generated@@68))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@81 $generated@@140 $generated@@2)) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@566 ($generated@@177 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@140) (< 0 ($generated ($generated@@86 $generated@@566 $generated@@569)))) ($generated@@271 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@86 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@79 $generated@@566 ($generated@@177 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@144) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@572) (and ($generated@@158 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@69) ($generated@@79 $generated@@570 ($generated@@159 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@79 $generated@@570 ($generated@@159 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@271 ($generated@@166 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@271 ($generated@@166 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@144) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@576) (and ($generated@@158 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@69) ($generated@@79 $generated@@574 ($generated@@159 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@159 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@271 ($generated@@167 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@271 ($generated@@167 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@579) (and ($generated@@238 $generated@@578) ($generated@@79 $generated@@578 $generated@@239 $generated@@579)))) ($generated@@79 ($generated@@519 $generated@@578) $generated@@172 $generated@@579))
 :pattern ( ($generated@@79 ($generated@@519 $generated@@578) $generated@@172 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@140) (= (type $generated@@581) $generated@@140)) (= ($generated@@241 ($generated@@266 $generated@@580) ($generated@@266 $generated@@581)) ($generated@@266 ($generated@@241 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@241 ($generated@@266 $generated@@580) ($generated@@266 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@264 $generated@@582))) ($generated@@266 ($generated@@294 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@264 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) ($generated@@139 $generated@@140)) (= ($generated@@138 ($generated@@266 $generated@@583)) ($generated@@266 ($generated@@138 $generated@@583))))
 :pattern ( ($generated@@138 ($generated@@266 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@294 ($generated@@266 $generated@@584)) ($generated@@266 ($generated@@294 $generated@@584)))
 :pattern ( ($generated@@294 ($generated@@266 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@145 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@139 $generated@@586)) (= ($generated@@141 $generated@@585) 0)) (= $generated@@585 ($generated@@289 $generated@@586))))
 :pattern ( ($generated@@141 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@81 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@299 ($generated@@87 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@299 $generated@@587) ($generated ($generated@@86 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@299 ($generated@@87 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@592) $generated@@2)) ($generated@@79 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@79 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@594) $generated@@3)) ($generated@@79 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@79 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@596) $generated@@4)) ($generated@@79 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@79 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@598) $generated@@454)) ($generated@@79 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@79 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@600) $generated@@140)) ($generated@@79 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@79 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@139 $generated@@140)) (= (type $generated@@602) $generated@@69)) (= ($generated@@156 $generated@@601 ($generated@@173 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@141 $generated@@601))) ($generated@@242 ($generated@@137 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@137 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@156 $generated@@601 ($generated@@173 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@139 $generated@@140)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@141 $generated@@604))) (< ($generated@@142 ($generated@@143 $generated@@144 ($generated@@137 $generated@@604 $generated@@605))) ($generated@@548 $generated@@604))))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@144 ($generated@@137 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@307 $generated@@140 $generated@@140)) (= (type $generated@@607) $generated@@69)) (= (type $generated@@608) $generated@@69)) ($generated@@156 $generated@@606 ($generated@@408 $generated@@607 $generated@@608))) (and (and ($generated@@156 ($generated@@305 $generated@@606) ($generated@@254 $generated@@607)) ($generated@@156 ($generated@@351 $generated@@606) ($generated@@254 $generated@@608))) ($generated@@156 ($generated@@382 $generated@@606) ($generated@@254 ($generated@@159 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@156 $generated@@606 ($generated@@408 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@325 $generated@@140 $generated@@140)) (= (type $generated@@610) $generated@@69)) (= (type $generated@@611) $generated@@69)) ($generated@@156 $generated@@609 ($generated@@416 $generated@@610 $generated@@611))) (and (and ($generated@@156 ($generated@@323 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@156 ($generated@@362 $generated@@609) ($generated@@259 $generated@@611))) ($generated@@156 ($generated@@390 $generated@@609) ($generated@@259 ($generated@@159 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@156 $generated@@609 ($generated@@416 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@156 $generated@@612 $generated@@46))
 :pattern ( ($generated@@156 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@156 $generated@@613 $generated@@47))
 :pattern ( ($generated@@156 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@156 $generated@@614 $generated@@44))
 :pattern ( ($generated@@156 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@454) ($generated@@156 $generated@@615 $generated@@45))
 :pattern ( ($generated@@156 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@140) ($generated@@156 $generated@@616 $generated@@48))
 :pattern ( ($generated@@156 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(assert  (and (and (and (= (type $generated@@617) ($generated@@184 $generated@@82 $generated@@4)) (= (type $generated@@618) $generated@@82)) (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@621) $generated@@144)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@623  (=> (and (= $generated@@617 ($generated@@183 $generated@@618 $generated@@619 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@156 ($generated@@266 ($generated@@289 $generated@@140)) $generated@@172))))
(let (($generated@@624  (=> (and ($generated@@270 $generated@@619) ($generated@@620 $generated@@619)) (=> (and (and (and ($generated@@156 $generated@@621 $generated@@239) ($generated@@79 $generated@@621 $generated@@239 $generated@@619)) true) (and (= 2 $generated@@622) (= (ControlFlow 0 3) 2))) $generated@@623))))
$generated@@624)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
