(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 () Int)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@375 (T@U T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@T) T@U)
(declare-fun $generated@@415 () T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U Int) T@U)
(declare-fun $generated@@467 (T@U) Int)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert  (=> (< 0 $generated@@258) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78)) ($generated@@237 $generated@@260)) ($generated@@74 ($generated@@8 $generated@@259) $generated@@46 $generated@@260))
 :pattern ( ($generated@@74 ($generated@@8 $generated@@259) $generated@@46 $generated@@260))
))))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@145)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@261 $generated@@263) $generated@@264 $generated@@265) ($generated@@74 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@238 ($generated@@261 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@76 $generated@@268 $generated@@2))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@79 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@76 $generated@@270 $generated@@2)) (and (= (= ($generated@@266 $generated@@269) 0) (= $generated@@269 ($generated@@267 $generated@@270))) (=> (not (= ($generated@@266 $generated@@269) 0)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) (< 0 ($generated ($generated@@81 $generated@@269 $generated@@271))))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@76 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@151 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@266 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@151 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(let (($generated@@313 ($generated@@275 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@274 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@273 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@272 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@276 (type $generated@@318))))
(let (($generated@@320 ($generated@@275 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@274 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@273 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@294 (type $generated@@322))))
(let (($generated@@324 ($generated@@293 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@292 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@291 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@290 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@294 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@150 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@212 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@150 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@337) $generated@@64)) (= (type $generated@@338) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@336 ($generated@@221 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@145) ($generated@@0 ($generated@@81 $generated@@336 $generated@@339))) ($generated@@238 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@81 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@74 $generated@@336 ($generated@@221 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@226 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@145) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@238 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@226 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= ($generated ($generated@@81 ($generated@@267 $generated@@345) $generated@@344)) 0))
 :pattern ( (let (($generated@@345 (type $generated@@344)))
($generated@@81 ($generated@@267 $generated@@345) $generated@@344)))
)))
(assert  (and (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@346 $generated@@349)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@346 $generated@@349))
)) (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@347 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@347 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@276 (type $generated@@352))))
(let (($generated@@354 ($generated@@275 (type $generated@@352))))
(= (type ($generated@@348 $generated@@352)) ($generated@@76 $generated@@354 $generated@@353))))
 :pattern ( ($generated@@348 $generated@@352))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@356) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@355) $generated@@356))  (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@355) ($generated@@143 ($generated@@347 $generated@@136 $generated@@356)))) (= ($generated@@81 ($generated@@348 $generated@@355) ($generated@@143 ($generated@@347 $generated@@136 $generated@@356))) ($generated@@144 ($generated@@347 $generated@@136 $generated@@356))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@355) $generated@@356))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@294 (type $generated@@360))))
(let (($generated@@362 ($generated@@293 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@363) ($generated@@143 ($generated@@347 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@358 $generated@@363) ($generated@@143 ($generated@@347 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@347 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@275 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@274 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@348 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(let (($generated@@373 ($generated@@293 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@292 $generated@@373 $generated@@372)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@370) $generated@@371)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@370) $generated@@374)) (= $generated@@371 ($generated@@81 ($generated@@358 $generated@@370) $generated@@374))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@370) $generated@@374))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@370) $generated@@374))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@376 $generated@@377)) $generated@@64)
 :pattern ( ($generated@@375 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (= (type $generated@@378) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@375 $generated@@379 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@378) $generated@@382))) (and ($generated@@238 ($generated@@81 ($generated@@348 $generated@@378) $generated@@382) $generated@@380 $generated@@381) ($generated@@238 $generated@@382 $generated@@379 $generated@@381)))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@378) $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@375 $generated@@379 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@386) $generated@@390))) (and ($generated@@238 ($generated@@81 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@238 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@T) ) (! (= (type ($generated@@391 $generated@@392)) ($generated@@76 $generated@@392 $generated@@4))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@294 (type $generated@@393))))
(let (($generated@@395 ($generated@@293 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@292 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@291 $generated@@395 $generated@@394)) (= ($generated@@290 $generated@@393) ($generated@@391 $generated@@395))))))
 :pattern ( ($generated@@290 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@294 (type $generated@@396))))
(let (($generated@@398 ($generated@@293 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@292 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@291 $generated@@398 $generated@@397)) (= ($generated@@326 $generated@@396) ($generated@@391 $generated@@397))))))
 :pattern ( ($generated@@326 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@294 (type $generated@@399))))
(let (($generated@@401 ($generated@@293 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@292 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@291 $generated@@401 $generated@@400)) (= ($generated@@357 $generated@@399) ($generated@@391 $generated@@145))))))
 :pattern ( ($generated@@357 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@276 (type $generated@@402))))
(let (($generated@@404 ($generated@@275 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@274 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@273 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@402) ($generated@@261 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@346 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@294 (type $generated@@407))))
(let (($generated@@409 ($generated@@293 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@292 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@291 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@407) ($generated@@261 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@357 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@212 $generated@@412 $generated@@46)) (and (= ($generated@@261 ($generated@@347 $generated@@2 $generated@@412)) $generated@@412) ($generated@@132 ($generated@@347 $generated@@2 $generated@@412) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@412 $generated@@46))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@47)) (and (= ($generated@@261 ($generated@@347 $generated@@3 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@347 $generated@@3 $generated@@413) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@47))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@212 $generated@@414 $generated@@44)) (and (= ($generated@@261 ($generated@@347 $generated@@4 $generated@@414)) $generated@@414) ($generated@@132 ($generated@@347 $generated@@4 $generated@@414) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@414 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@415) 20))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@45)) (and (= ($generated@@261 ($generated@@347 $generated@@415 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@347 $generated@@415 $generated@@416) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@45))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@64) (= ($generated@@212 ($generated@@261 $generated@@417) $generated@@418) ($generated@@132 $generated@@417 $generated@@418)))
 :pattern ( ($generated@@212 ($generated@@261 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@79 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@76 $generated@@420 $generated@@2)) (<= 0 ($generated@@266 $generated@@419))))
 :pattern ( ($generated@@266 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@253 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@252 $generated@@422)) (<= 0 ($generated@@251 $generated@@421))))
 :pattern ( ($generated@@251 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (= (type ($generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@64) (= (type $generated@@426) $generated@@64)) (= ($generated@@423 ($generated@@375 $generated@@425 $generated@@426)) $generated@@425))
 :pattern ( ($generated@@375 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@64) (= (type $generated@@430) $generated@@64)) (= ($generated@@427 ($generated@@375 $generated@@429 $generated@@430)) $generated@@430))
 :pattern ( ($generated@@375 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@72 ($generated@@375 $generated@@431 $generated@@432)) $generated@@58))
 :pattern ( ($generated@@375 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@383 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@383 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@383 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@441 $generated@@442)) $generated@@59))
 :pattern ( ($generated@@383 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) (= (type $generated@@444) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@443 $generated@@444)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@135 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@135 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@211 $generated@@455 $generated@@456))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ($generated@@461 Int) ) (! (let (($generated@@462 ($generated@@253 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460 $generated@@461)) $generated@@462))
 :pattern ( ($generated@@458 $generated@@460 $generated@@461))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@463) ($generated@@252 $generated@@145)) (= (type $generated@@464) $generated@@64)) (= (type $generated@@465) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@463 ($generated@@457 $generated@@464) $generated@@465) (forall (($generated@@466 Int) ) (!  (=> (and (<= 0 $generated@@466) (< $generated@@466 ($generated@@251 $generated@@463))) ($generated@@238 ($generated@@458 $generated@@463 $generated@@466) $generated@@464 $generated@@465))
 :pattern ( ($generated@@458 $generated@@463 $generated@@466))
))))
 :pattern ( ($generated@@74 $generated@@463 ($generated@@457 $generated@@464) $generated@@465))
)))
(assert  (=> (< 0 $generated@@258) ($generated@@132 ($generated@@8 $generated@@259) $generated@@46)))
(assert (forall (($generated@@468 Int) ) (! (= ($generated@@467 ($generated@@75 $generated@@468)) $generated@@468)
 :pattern ( ($generated@@75 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@469 ($generated@@221 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@221 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@472)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@226 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@226 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@476)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@150 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@150 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@480)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@457 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@457 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@457 $generated@@484)) $generated@@57))
 :pattern ( ($generated@@457 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= ($generated@@347 $generated@@486 ($generated@@261 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@261 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) $generated@@64)) (= ($generated@@132 $generated@@487 ($generated@@375 $generated@@488 $generated@@489)) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@487) $generated@@490))) (and ($generated@@212 ($generated@@81 ($generated@@348 $generated@@487) $generated@@490) $generated@@489) ($generated@@212 $generated@@490 $generated@@488)))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@487) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@487) $generated@@490))
))))
 :pattern ( ($generated@@132 $generated@@487 ($generated@@375 $generated@@488 $generated@@489)))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@491) $generated@@494))) (and ($generated@@212 ($generated@@81 ($generated@@358 $generated@@491) $generated@@494) $generated@@493) ($generated@@212 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)))
)))
(assert (= $generated@@259 ($generated@@231 4)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) (= (type $generated@@498) $generated@@145)) (< ($generated@@495 $generated@@497) ($generated@@496 ($generated@@211 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@211 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (< ($generated@@495 $generated@@500) ($generated@@496 ($generated@@211 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@211 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@375 $generated@@502 $generated@@503))) (and (= ($generated@@261 ($generated@@347 ($generated@@274 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@347 ($generated@@274 $generated@@145 $generated@@145) $generated@@501) ($generated@@375 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@375 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) ($generated@@212 $generated@@504 ($generated@@383 $generated@@505 $generated@@506))) (and (= ($generated@@261 ($generated@@347 ($generated@@292 $generated@@145 $generated@@145) $generated@@504)) $generated@@504) ($generated@@132 ($generated@@347 ($generated@@292 $generated@@145 $generated@@145) $generated@@504) ($generated@@383 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@383 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@145)) ($generated@@212 $generated@@509 ($generated@@135 $generated@@507 $generated@@508))) (and (= ($generated@@261 ($generated@@347 $generated@@136 $generated@@509)) $generated@@509) ($generated@@132 ($generated@@347 $generated@@136 $generated@@509) ($generated@@135 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@135 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (not ($generated@@0 ($generated@@81 ($generated@@391 $generated@@511) $generated@@510))))
 :pattern ( (let (($generated@@511 (type $generated@@510)))
($generated@@81 ($generated@@391 $generated@@511) $generated@@510)))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@514 $generated@@515)) $generated@@62) (= ($generated@@512 ($generated@@135 $generated@@514 $generated@@515)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@136) (= ($generated@@495 ($generated@@261 $generated@@516)) ($generated@@496 $generated@@516)))
 :pattern ( ($generated@@495 ($generated@@261 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@212 $generated@@517 ($generated@@75 0))) (and (= ($generated@@261 ($generated@@347 $generated@@2 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@75 0)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@221 $generated@@519))) (and (= ($generated@@261 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@221 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@221 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@226 $generated@@521))) (and (= ($generated@@261 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@226 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@226 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@150 $generated@@523))) (and (= ($generated@@261 ($generated@@347 ($generated@@76 $generated@@145 $generated@@2) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@2) $generated@@522) ($generated@@150 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@150 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@457 $generated@@525))) (and (= ($generated@@261 ($generated@@347 ($generated@@252 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@347 ($generated@@252 $generated@@145) $generated@@524) ($generated@@457 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@457 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@526 $generated@@529)))) ($generated@@238 $generated@@529 $generated@@527 $generated@@528))
 :pattern ( ($generated@@81 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@532) (and ($generated@@134 $generated@@530) (exists (($generated@@533 T@U) ) (!  (and (= (type $generated@@533) $generated@@64) ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
))))) ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
))))) ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@211 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@261 ($generated@@8 ($generated@@231 $generated@@540))) ($generated@@233 ($generated@@261 ($generated@@8 $generated@@540))))
 :pattern ( ($generated@@261 ($generated@@8 ($generated@@231 $generated@@540))))
)))
(assert (forall (($generated@@541 T@U) ) (! (= ($generated@@261 ($generated@@233 $generated@@541)) ($generated@@233 ($generated@@261 $generated@@541)))
 :pattern ( ($generated@@261 ($generated@@233 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@253 (type $generated@@542))))
 (=> (and (= (type $generated@@542) ($generated@@252 $generated@@543)) (= ($generated@@251 $generated@@542) 0)) (= $generated@@542 ($generated@@250 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@545)))
 (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@547 $generated@@2)) (= (type $generated@@546) $generated@@2)) (<= 0 ($generated $generated@@546))) (= ($generated@@266 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)) (+ (- ($generated@@266 $generated@@544) ($generated ($generated@@81 $generated@@544 $generated@@545))) ($generated $generated@@546)))))
 :pattern ( ($generated@@266 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@2)) ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@3)) ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@4)) ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@415)) ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@145)) ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@252 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@558 ($generated@@457 $generated@@559)) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@558))) ($generated@@212 ($generated@@458 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@458 $generated@@558 $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@457 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (= (type $generated@@562) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@251 $generated@@562))) (< ($generated@@496 ($generated@@347 $generated@@136 ($generated@@458 $generated@@562 $generated@@563))) ($generated@@561 $generated@@562))))
 :pattern ( ($generated@@496 ($generated@@347 $generated@@136 ($generated@@458 $generated@@562 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@375 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@272 $generated@@564) ($generated@@221 $generated@@565)) ($generated@@132 ($generated@@315 $generated@@564) ($generated@@221 $generated@@566))) ($generated@@132 ($generated@@346 $generated@@564) ($generated@@221 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@375 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) ($generated@@132 $generated@@567 ($generated@@383 $generated@@568 $generated@@569))) (and (and ($generated@@132 ($generated@@290 $generated@@567) ($generated@@226 $generated@@568)) ($generated@@132 ($generated@@326 $generated@@567) ($generated@@226 $generated@@569))) ($generated@@132 ($generated@@357 $generated@@567) ($generated@@226 ($generated@@135 $generated@@568 $generated@@569)))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@383 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@2) ($generated@@132 $generated@@570 $generated@@46))
 :pattern ( ($generated@@132 $generated@@570 $generated@@46))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@3) ($generated@@132 $generated@@571 $generated@@47))
 :pattern ( ($generated@@132 $generated@@571 $generated@@47))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@4) ($generated@@132 $generated@@572 $generated@@44))
 :pattern ( ($generated@@132 $generated@@572 $generated@@44))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@415) ($generated@@132 $generated@@573 $generated@@45))
 :pattern ( ($generated@@132 $generated@@573 $generated@@45))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@145) ($generated@@132 $generated@@574 $generated@@48))
 :pattern ( ($generated@@132 $generated@@574 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 (T@U) Bool)
(declare-fun $generated@@579 () T@U)
(assert  (and (and (and (= (type $generated@@575) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@576) $generated@@77)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@579) ($generated@@252 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@580  (=> (= (ControlFlow 0 3) (- 0 2)) (< ($generated@@251 ($generated@@233 ($generated@@250 $generated@@145))) $generated@@259))))
(let (($generated@@581 true))
(let (($generated@@582  (=> (= $generated@@575 ($generated@@156 $generated@@576 $generated@@577 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@581) (=> (= (ControlFlow 0 4) 3) $generated@@580)))))
(let (($generated@@583  (=> (and (and (and ($generated@@237 $generated@@577) ($generated@@578 $generated@@577)) ($generated@@132 $generated@@579 ($generated@@457 $generated@@45))) (and (= 1 $generated@@258) (= (ControlFlow 0 5) 4))) $generated@@582)))
$generated@@583)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@T) T@U)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) Int)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@363 (T@U Int) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@66)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@66) (= (type $generated@@146) $generated@@66)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (and (forall (($generated@@160 T@T) ) (= ($generated@@1 ($generated@@158 $generated@@160)) 16)) (forall (($generated@@161 T@T) ) (! (= ($generated@@159 ($generated@@158 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@T) ) (! (= (type ($generated@@157 $generated@@162)) ($generated@@158 $generated@@162))
 :pattern ( ($generated@@157 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
 (not ($generated@@156 ($generated@@157 $generated@@164) $generated@@163)))
 :pattern ( (let (($generated@@164 (type $generated@@163)))
($generated@@156 ($generated@@157 $generated@@164) $generated@@163)))
)))
(assert  (and (= (type $generated@@165) $generated@@66) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@66)
 :pattern ( ($generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) ($generated@@158 $generated@@151)) (= (type $generated@@169) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@168 $generated@@165 $generated@@169) ($generated@@76 $generated@@168 ($generated@@166 $generated@@45) $generated@@169)))
 :pattern ( ($generated@@76 $generated@@168 $generated@@165 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@66)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@174) $generated@@66)) ($generated@@138 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@138 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@79 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@69 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@79) (= (type $generated@@225) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@226) ($generated@@68 $generated@@4))) (= (type $generated@@228) $generated@@79)) (= (type $generated@@229) ($generated@@68 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (= (type $generated@@233) ($generated@@158 $generated@@151)) (= ($generated@@138 $generated@@233 $generated@@165)  (and ($generated@@138 $generated@@233 ($generated@@166 $generated@@45)) (< ($generated@@231 $generated@@233) $generated@@232))))
 :pattern ( ($generated@@138 $generated@@233 $generated@@165))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@142)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@66) (= (type $generated@@239) $generated@@66)) (= (type $generated@@240) $generated@@151)) (= (type $generated@@241) $generated@@151)) (= ($generated@@138 ($generated@@234 $generated@@240 $generated@@241) ($generated@@141 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@138 ($generated@@234 $generated@@240 $generated@@241) ($generated@@141 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@142) (= (type $generated@@243) $generated@@142)) (= ($generated@@148 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@148 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@138 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@151) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@235 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@138 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@252) $generated@@66)) (= ($generated@@138 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@151) ($generated@@0 ($generated@@83 $generated@@251 $generated@@253))) ($generated@@235 $generated@@253 $generated@@252))
 :pattern ( ($generated@@83 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@138 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@66) (= (type $generated@@263) $generated@@66)) (= (type $generated@@264) $generated@@151)) (= (type $generated@@265) $generated@@151)) (= (type $generated@@266) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@260 $generated@@266)) (= ($generated@@76 ($generated@@234 $generated@@264 $generated@@265) ($generated@@141 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@76 ($generated@@234 $generated@@264 $generated@@265) ($generated@@141 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@142) (= ($generated@@140 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@142) ($generated@@140 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@151) (= (type $generated@@272) $generated@@151)) (= $generated@@270 ($generated@@234 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@140 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@231 ($generated@@157 $generated@@273)) 0)
 :pattern ( ($generated@@157 $generated@@273))
)))
(assert  (=> (< 0 $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@260 $generated@@275)) ($generated@@76 ($generated@@8 $generated@@232) $generated@@46 $generated@@275))
 :pattern ( ($generated@@76 ($generated@@8 $generated@@232) $generated@@46 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@151)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@66) (= (type $generated@@280) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@261 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@76 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@261 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@283) $generated@@151)) (= (type $generated@@284) $generated@@66)) ($generated@@134 $generated@@281 $generated@@282)) ($generated@@261 $generated@@283 $generated@@284 $generated@@281)) ($generated@@261 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@134 $generated@@281 $generated@@282) ($generated@@261 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@288) $generated@@66)) ($generated@@134 $generated@@285 $generated@@286)) ($generated@@76 $generated@@287 $generated@@288 $generated@@285)) ($generated@@76 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@134 $generated@@285 $generated@@286) ($generated@@76 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@78 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@81 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@78 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@83 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@78 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@78 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@81 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@78 $generated@@332 $generated@@2)) (= ($generated@@171 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@83 $generated@@331 $generated@@333))) (<= ($generated ($generated@@83 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@83 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@171 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@151) ($generated@@235 $generated@@337 $generated@@165)) (and (= ($generated@@276 ($generated@@334 ($generated@@158 $generated@@151) $generated@@337)) $generated@@337) ($generated@@138 ($generated@@334 ($generated@@158 $generated@@151) $generated@@337) $generated@@165)))
 :pattern ( ($generated@@235 $generated@@337 $generated@@165))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(let (($generated@@340 ($generated@@298 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@297 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@296 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@295 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@299 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@78 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@299 (type $generated@@345))))
(let (($generated@@347 ($generated@@298 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@297 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@296 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@317 (type $generated@@349))))
(let (($generated@@351 ($generated@@316 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@315 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@314 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@313 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@78 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@361) $generated@@66)) (= ($generated@@138 $generated@@360 ($generated@@170 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@360 $generated@@362)))) ($generated@@235 $generated@@362 $generated@@361))
 :pattern ( ($generated@@83 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@138 $generated@@360 ($generated@@170 $generated@@361)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 Int) ) (! (let (($generated@@366 ($generated@@159 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@366))
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (=> (= (type $generated@@367) ($generated@@158 $generated@@369)) (= ($generated@@156 $generated@@367 $generated@@368) (exists (($generated@@370 Int) ) (!  (and (and (<= 0 $generated@@370) (< $generated@@370 ($generated@@231 $generated@@367))) (= ($generated@@363 $generated@@367 $generated@@370) $generated@@368))
 :pattern ( ($generated@@363 $generated@@367 $generated@@370))
)))))
 :pattern ( ($generated@@156 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@372) $generated@@66)) (= (type $generated@@373) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@371 ($generated@@244 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@151) ($generated@@0 ($generated@@83 $generated@@371 $generated@@374))) ($generated@@261 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@83 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@76 $generated@@371 ($generated@@244 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@376) $generated@@66)) (= (type $generated@@377) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@375 ($generated@@249 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@151) ($generated@@0 ($generated@@83 $generated@@375 $generated@@378))) ($generated@@261 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@83 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@76 $generated@@375 ($generated@@249 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@83 ($generated@@290 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@83 ($generated@@290 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@299 (type $generated@@384))))
(let (($generated@@386 ($generated@@298 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@78 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@297 $generated@@151 $generated@@151)) (= (type $generated@@388) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@387) ($generated@@149 ($generated@@334 $generated@@142 $generated@@388)))) (= ($generated@@83 ($generated@@382 $generated@@387) ($generated@@149 ($generated@@334 $generated@@142 $generated@@388))) ($generated@@150 ($generated@@334 $generated@@142 $generated@@388))))))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@317 (type $generated@@392))))
(let (($generated@@394 ($generated@@316 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@396) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@395) ($generated@@149 ($generated@@334 $generated@@142 $generated@@396)))) (= ($generated@@83 ($generated@@390 $generated@@395) ($generated@@149 ($generated@@334 $generated@@142 $generated@@396))) ($generated@@150 ($generated@@334 $generated@@142 $generated@@396))))))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@298 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@297 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@83 ($generated@@342 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@83 ($generated@@342 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@316 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@315 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@83 ($generated@@353 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@66)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@297 $generated@@151 $generated@@151)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@410) $generated@@414))) (and ($generated@@261 ($generated@@83 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@261 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@66)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@418) $generated@@422))) (and ($generated@@261 ($generated@@83 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@261 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@424) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@425) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@423 $generated@@425))) (and ($generated@@134 $generated@@423 $generated@@424) ($generated@@134 $generated@@424 $generated@@425))) ($generated@@134 $generated@@423 $generated@@425))
 :pattern ( ($generated@@134 $generated@@423 $generated@@424) ($generated@@134 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@78 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@317 (type $generated@@428))))
(let (($generated@@430 ($generated@@316 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@315 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@314 $generated@@430 $generated@@429)) (= ($generated@@313 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@313 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@317 (type $generated@@431))))
(let (($generated@@433 ($generated@@316 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@315 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@314 $generated@@433 $generated@@432)) (= ($generated@@353 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@353 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@317 (type $generated@@434))))
(let (($generated@@436 ($generated@@316 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@315 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@314 $generated@@436 $generated@@435)) (= ($generated@@389 $generated@@434) ($generated@@426 $generated@@151))))))
 :pattern ( ($generated@@389 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@299 (type $generated@@437))))
(let (($generated@@439 ($generated@@298 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@297 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@296 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@151) (= (type $generated@@441) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@381 $generated@@437) ($generated@@276 ($generated@@234 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@381 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@317 (type $generated@@442))))
(let (($generated@@444 ($generated@@316 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@315 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@314 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@151) (= (type $generated@@446) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@389 $generated@@442) ($generated@@276 ($generated@@234 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@151) ($generated@@235 $generated@@447 $generated@@46)) (and (= ($generated@@276 ($generated@@334 $generated@@2 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@334 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@151) ($generated@@235 $generated@@448 $generated@@47)) (and (= ($generated@@276 ($generated@@334 $generated@@3 $generated@@448)) $generated@@448) ($generated@@138 ($generated@@334 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@151) ($generated@@235 $generated@@449 $generated@@44)) (and (= ($generated@@276 ($generated@@334 $generated@@4 $generated@@449)) $generated@@449) ($generated@@138 ($generated@@334 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@151) ($generated@@235 $generated@@451 $generated@@45)) (and (= ($generated@@276 ($generated@@334 $generated@@450 $generated@@451)) $generated@@451) ($generated@@138 ($generated@@334 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@66) (= ($generated@@235 ($generated@@276 $generated@@452) $generated@@453) ($generated@@138 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@235 ($generated@@276 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@81 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@78 $generated@@455 $generated@@2)) (<= 0 ($generated@@289 $generated@@454))))
 :pattern ( ($generated@@289 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@159 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@158 $generated@@457)) (<= 0 ($generated@@231 $generated@@456))))
 :pattern ( ($generated@@231 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@458 ($generated@@407 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@407 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@407 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@74 ($generated@@407 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@415 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@415 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@74 ($generated@@415 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@151) (= (type $generated@@479) $generated@@151)) (= ($generated@@267 ($generated@@234 $generated@@478 $generated@@479)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@141 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@141 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@141 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@141 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@151) (= (type $generated@@489) $generated@@151)) (= ($generated@@149 ($generated@@234 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@234 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@151) (= (type $generated@@491) $generated@@151)) (= ($generated@@150 ($generated@@234 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@234 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@158 $generated@@151)) (= (type $generated@@493) $generated@@66)) (= (type $generated@@494) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@492 ($generated@@166 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@231 $generated@@492))) ($generated@@261 ($generated@@363 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@363 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@76 $generated@@492 ($generated@@166 $generated@@493) $generated@@494))
)))
(assert  (=> (< 0 $generated@@274) ($generated@@138 ($generated@@8 $generated@@232) $generated@@46)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@77 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@77 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@244 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@244 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@249 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@249 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@249 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@170 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@170 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@170 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@166 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@166 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@166 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@334 $generated@@515 ($generated@@276 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@276 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@297 $generated@@151 $generated@@151)) (= (type $generated@@517) $generated@@66)) (= (type $generated@@518) $generated@@66)) (= ($generated@@138 $generated@@516 ($generated@@407 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@516) $generated@@519))) (and ($generated@@235 ($generated@@83 ($generated@@382 $generated@@516) $generated@@519) $generated@@518) ($generated@@235 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@516) $generated@@519))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@138 $generated@@516 ($generated@@407 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@138 $generated@@520 ($generated@@415 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@520) $generated@@523))) (and ($generated@@235 ($generated@@83 ($generated@@390 $generated@@520) $generated@@523) $generated@@522) ($generated@@235 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@520) $generated@@523))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@138 $generated@@520 ($generated@@415 $generated@@521 $generated@@522)))
)))
(assert (= $generated@@232 ($generated@@254 4)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@151) (= (type $generated@@527) $generated@@151)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@234 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@234 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@151) (= (type $generated@@529) $generated@@151)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@234 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@234 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@151) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) ($generated@@235 $generated@@530 ($generated@@407 $generated@@531 $generated@@532))) (and (= ($generated@@276 ($generated@@334 ($generated@@297 $generated@@151 $generated@@151) $generated@@530)) $generated@@530) ($generated@@138 ($generated@@334 ($generated@@297 $generated@@151 $generated@@151) $generated@@530) ($generated@@407 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@235 $generated@@530 ($generated@@407 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@235 $generated@@533 ($generated@@415 $generated@@534 $generated@@535))) (and (= ($generated@@276 ($generated@@334 ($generated@@315 $generated@@151 $generated@@151) $generated@@533)) $generated@@533) ($generated@@138 ($generated@@334 ($generated@@315 $generated@@151 $generated@@151) $generated@@533) ($generated@@415 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@235 $generated@@533 ($generated@@415 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@151)) ($generated@@235 $generated@@538 ($generated@@141 $generated@@536 $generated@@537))) (and (= ($generated@@276 ($generated@@334 $generated@@142 $generated@@538)) $generated@@538) ($generated@@138 ($generated@@334 $generated@@142 $generated@@538) ($generated@@141 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@235 $generated@@538 ($generated@@141 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@83 ($generated@@426 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@83 ($generated@@426 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (and (= ($generated@@74 ($generated@@141 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@141 $generated@@543 $generated@@544)) $generated@@64)))
 :pattern ( ($generated@@141 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@142) (= ($generated@@524 ($generated@@276 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@276 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@151) ($generated@@235 $generated@@546 ($generated@@77 0))) (and (= ($generated@@276 ($generated@@334 $generated@@2 $generated@@546)) $generated@@546) ($generated@@138 ($generated@@334 ($generated@@78 $generated@@151 $generated@@4) $generated@@546) ($generated@@77 0))))
 :pattern ( ($generated@@235 $generated@@546 ($generated@@77 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@151) (= (type $generated@@548) $generated@@66)) ($generated@@235 $generated@@547 ($generated@@244 $generated@@548))) (and (= ($generated@@276 ($generated@@334 ($generated@@78 $generated@@151 $generated@@4) $generated@@547)) $generated@@547) ($generated@@138 ($generated@@334 ($generated@@78 $generated@@151 $generated@@4) $generated@@547) ($generated@@244 $generated@@548))))
 :pattern ( ($generated@@235 $generated@@547 ($generated@@244 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@151) (= (type $generated@@550) $generated@@66)) ($generated@@235 $generated@@549 ($generated@@249 $generated@@550))) (and (= ($generated@@276 ($generated@@334 ($generated@@78 $generated@@151 $generated@@4) $generated@@549)) $generated@@549) ($generated@@138 ($generated@@334 ($generated@@78 $generated@@151 $generated@@4) $generated@@549) ($generated@@249 $generated@@550))))
 :pattern ( ($generated@@235 $generated@@549 ($generated@@249 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@151) (= (type $generated@@552) $generated@@66)) ($generated@@235 $generated@@551 ($generated@@170 $generated@@552))) (and (= ($generated@@276 ($generated@@334 ($generated@@78 $generated@@151 $generated@@2) $generated@@551)) $generated@@551) ($generated@@138 ($generated@@334 ($generated@@78 $generated@@151 $generated@@2) $generated@@551) ($generated@@170 $generated@@552))))
 :pattern ( ($generated@@235 $generated@@551 ($generated@@170 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@151) (= (type $generated@@554) $generated@@66)) ($generated@@235 $generated@@553 ($generated@@166 $generated@@554))) (and (= ($generated@@276 ($generated@@334 ($generated@@158 $generated@@151) $generated@@553)) $generated@@553) ($generated@@138 ($generated@@334 ($generated@@158 $generated@@151) $generated@@553) ($generated@@166 $generated@@554))))
 :pattern ( ($generated@@235 $generated@@553 ($generated@@166 $generated@@554)))
)))
(assert (= ($generated@@74 $generated@@165) $generated@@63))
(assert (= ($generated@@541 $generated@@165) $generated@@65))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@555 ($generated@@170 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@555 $generated@@558)))) ($generated@@261 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@83 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@170 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@142) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@260 $generated@@561) (and ($generated@@140 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@66) ($generated@@76 $generated@@559 ($generated@@141 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@76 $generated@@559 ($generated@@141 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@261 ($generated@@149 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@261 ($generated@@149 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@142) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@260 $generated@@565) (and ($generated@@140 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@66) ($generated@@76 $generated@@563 ($generated@@141 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@141 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@261 ($generated@@150 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@261 ($generated@@150 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@151) (= (type $generated@@568) $generated@@151)) (= ($generated@@234 ($generated@@256 $generated@@567) ($generated@@256 $generated@@568)) ($generated@@256 ($generated@@234 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@234 ($generated@@256 $generated@@567) ($generated@@256 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@254 $generated@@569))) ($generated@@256 ($generated@@276 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@254 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@276 ($generated@@256 $generated@@570)) ($generated@@256 ($generated@@276 $generated@@570)))
 :pattern ( ($generated@@276 ($generated@@256 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@159 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@158 $generated@@572)) (= ($generated@@231 $generated@@571) 0)) (= $generated@@571 ($generated@@157 $generated@@572))))
 :pattern ( ($generated@@231 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@78 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@289 ($generated@@84 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@289 $generated@@573) ($generated ($generated@@83 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@289 ($generated@@84 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@2)) ($generated@@76 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@3)) ($generated@@76 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@4)) ($generated@@76 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@450)) ($generated@@76 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@151)) ($generated@@76 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@158 $generated@@151)) (= (type $generated@@588) $generated@@66)) (= ($generated@@138 $generated@@587 ($generated@@166 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@231 $generated@@587))) ($generated@@235 ($generated@@363 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@363 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@138 $generated@@587 ($generated@@166 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@158 $generated@@151)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@231 $generated@@591))) (< ($generated@@525 ($generated@@334 $generated@@142 ($generated@@363 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@525 ($generated@@334 $generated@@142 ($generated@@363 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@297 $generated@@151 $generated@@151)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@138 $generated@@593 ($generated@@407 $generated@@594 $generated@@595))) (and (and ($generated@@138 ($generated@@295 $generated@@593) ($generated@@244 $generated@@594)) ($generated@@138 ($generated@@342 $generated@@593) ($generated@@244 $generated@@595))) ($generated@@138 ($generated@@381 $generated@@593) ($generated@@244 ($generated@@141 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@138 $generated@@593 ($generated@@407 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) $generated@@66)) ($generated@@138 $generated@@596 ($generated@@415 $generated@@597 $generated@@598))) (and (and ($generated@@138 ($generated@@313 $generated@@596) ($generated@@249 $generated@@597)) ($generated@@138 ($generated@@353 $generated@@596) ($generated@@249 $generated@@598))) ($generated@@138 ($generated@@389 $generated@@596) ($generated@@249 ($generated@@141 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@138 $generated@@596 ($generated@@415 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@138 $generated@@599 $generated@@46))
 :pattern ( ($generated@@138 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@138 $generated@@600 $generated@@47))
 :pattern ( ($generated@@138 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@138 $generated@@601 $generated@@44))
 :pattern ( ($generated@@138 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@450) ($generated@@138 $generated@@602 $generated@@45))
 :pattern ( ($generated@@138 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@151) ($generated@@138 $generated@@603 $generated@@48))
 :pattern ( ($generated@@138 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Bool)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@604) ($generated@@158 $generated@@151)) (= (type $generated@@612) ($generated@@158 $generated@@151))) (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@610) ($generated@@158 $generated@@151))) (= (type $generated@@611) ($generated@@158 $generated@@151))) (= (type $generated@@608) ($generated@@158 $generated@@151))) (= (type $generated@@613) $generated@@79)) (= (type $generated@@614) ($generated@@177 $generated@@79 $generated@@4))) (= (type $generated@@615) ($generated@@158 $generated@@151))) (= (type $generated@@605) ($generated@@158 $generated@@151))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 54) (let (($generated@@621 true))
(let (($generated@@622  (=> (and (not ($generated@@156 $generated@@604 ($generated@@276 $generated@@605))) (= (ControlFlow 0 46) 43)) $generated@@621)))
(let (($generated@@623  (=> (and ($generated@@156 $generated@@604 ($generated@@276 $generated@@605)) (= (ControlFlow 0 45) 43)) $generated@@621)))
(let (($generated@@624  (=> (and ($generated@@138 $generated@@605 $generated@@165) ($generated@@76 $generated@@605 $generated@@165 $generated@@606)) (and (=> (= (ControlFlow 0 47) 45) $generated@@623) (=> (= (ControlFlow 0 47) 46) $generated@@622)))))
(let (($generated@@625  (=> (and (not (and ($generated@@138 $generated@@605 $generated@@165) ($generated@@76 $generated@@605 $generated@@165 $generated@@606))) (= (ControlFlow 0 44) 43)) $generated@@621)))
(let (($generated@@626  (=> (not $generated@@607) (and (=> (= (ControlFlow 0 48) 47) $generated@@624) (=> (= (ControlFlow 0 48) 44) $generated@@625)))))
(let (($generated@@627 true))
(let (($generated@@628  (=> (and (not ($generated@@156 $generated@@604 ($generated@@276 $generated@@608))) (= (ControlFlow 0 30) 27)) $generated@@627)))
(let (($generated@@629  (=> (and ($generated@@156 $generated@@604 ($generated@@276 $generated@@608)) (= (ControlFlow 0 29) 27)) $generated@@627)))
(let (($generated@@630  (=> (and ($generated@@138 $generated@@608 $generated@@165) ($generated@@76 $generated@@608 $generated@@165 $generated@@606)) (and (=> (= (ControlFlow 0 31) 29) $generated@@629) (=> (= (ControlFlow 0 31) 30) $generated@@628)))))
(let (($generated@@631  (=> (and (not (and ($generated@@138 $generated@@608 $generated@@165) ($generated@@76 $generated@@608 $generated@@165 $generated@@606))) (= (ControlFlow 0 28) 27)) $generated@@627)))
(let (($generated@@632  (=> (not $generated@@609) (and (=> (= (ControlFlow 0 32) 31) $generated@@630) (=> (= (ControlFlow 0 32) 28) $generated@@631)))))
(let (($generated@@633  (=> (= (ControlFlow 0 22) (- 0 21)) (forall (($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@634) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@634 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@634))) (< ($generated@@231 $generated@@634) $generated@@232))
 :pattern ( ($generated@@231 $generated@@634))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@634)))
)))))
(let (($generated@@635  (=> (and (= (forall (($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@636 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@636))) (< ($generated@@231 $generated@@636) $generated@@232))
 :pattern ( ($generated@@231 $generated@@636))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@636)))
)) (forall (($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@637 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@637))) (< ($generated@@231 $generated@@637) $generated@@232))
 :pattern ( ($generated@@231 $generated@@637))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@637)))
))) (= (ControlFlow 0 23) 22)) $generated@@633)))
(let (($generated@@638  (=> (= (ControlFlow 0 11) (- 0 10)) (= (forall (($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@639 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@639))) (< ($generated@@231 $generated@@639) $generated@@232))
 :pattern ( ($generated@@231 $generated@@639))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@639)))
)) (forall (($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@640 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@640))) (< ($generated@@231 $generated@@640) $generated@@232))
 :pattern ( ($generated@@231 $generated@@640))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@640)))
))))))
(let (($generated@@641  (=> (and (not ($generated@@156 $generated@@604 ($generated@@276 $generated@@610))) (= (ControlFlow 0 14) 11)) $generated@@638)))
(let (($generated@@642  (=> (and ($generated@@156 $generated@@604 ($generated@@276 $generated@@610)) (= (ControlFlow 0 13) 11)) $generated@@638)))
(let (($generated@@643  (=> (and ($generated@@138 $generated@@610 $generated@@165) ($generated@@76 $generated@@610 $generated@@165 $generated@@606)) (and (=> (= (ControlFlow 0 15) 13) $generated@@642) (=> (= (ControlFlow 0 15) 14) $generated@@641)))))
(let (($generated@@644  (=> (and (not (and ($generated@@138 $generated@@610 $generated@@165) ($generated@@76 $generated@@610 $generated@@165 $generated@@606))) (= (ControlFlow 0 12) 11)) $generated@@638)))
(let (($generated@@645  (and (=> (= (ControlFlow 0 16) 15) $generated@@643) (=> (= (ControlFlow 0 16) 12) $generated@@644))))
(let (($generated@@646  (=> (and (not ($generated@@156 $generated@@604 ($generated@@276 $generated@@611))) (= (ControlFlow 0 19) 16)) $generated@@645)))
(let (($generated@@647  (=> (and ($generated@@156 $generated@@604 ($generated@@276 $generated@@611)) (= (ControlFlow 0 18) 16)) $generated@@645)))
(let (($generated@@648  (=> (and ($generated@@138 $generated@@611 $generated@@165) ($generated@@76 $generated@@611 $generated@@165 $generated@@606)) (and (=> (= (ControlFlow 0 20) 18) $generated@@647) (=> (= (ControlFlow 0 20) 19) $generated@@646)))))
(let (($generated@@649  (=> (and (not (and ($generated@@138 $generated@@611 $generated@@165) ($generated@@76 $generated@@611 $generated@@165 $generated@@606))) (= (ControlFlow 0 17) 16)) $generated@@645)))
(let (($generated@@650 true))
(let (($generated@@651  (=> (and (not ($generated@@156 $generated@@604 ($generated@@276 $generated@@612))) (= (ControlFlow 0 8) 5)) $generated@@650)))
(let (($generated@@652  (=> (and ($generated@@156 $generated@@604 ($generated@@276 $generated@@612)) (= (ControlFlow 0 7) 5)) $generated@@650)))
(let (($generated@@653  (=> (and ($generated@@138 $generated@@612 $generated@@165) ($generated@@76 $generated@@612 $generated@@165 $generated@@606)) (and (=> (= (ControlFlow 0 9) 7) $generated@@652) (=> (= (ControlFlow 0 9) 8) $generated@@651)))))
(let (($generated@@654  (=> (and (not (and ($generated@@138 $generated@@612 $generated@@165) ($generated@@76 $generated@@612 $generated@@165 $generated@@606))) (= (ControlFlow 0 6) 5)) $generated@@650)))
(let (($generated@@655  (=> ($generated@@0 ($generated@@256 ($generated@@11 true))) (and (and (and (and (=> (= (ControlFlow 0 25) 23) $generated@@635) (=> (= (ControlFlow 0 25) 20) $generated@@648)) (=> (= (ControlFlow 0 25) 17) $generated@@649)) (=> (= (ControlFlow 0 25) 9) $generated@@653)) (=> (= (ControlFlow 0 25) 6) $generated@@654)))))
(let (($generated@@656  (=> (not ($generated@@0 ($generated@@256 ($generated@@11 true)))) (and (and (and (and (=> (= (ControlFlow 0 24) 23) $generated@@635) (=> (= (ControlFlow 0 24) 20) $generated@@648)) (=> (= (ControlFlow 0 24) 17) $generated@@649)) (=> (= (ControlFlow 0 24) 9) $generated@@653)) (=> (= (ControlFlow 0 24) 6) $generated@@654)))))
(let (($generated@@657  (=> $generated@@609 (and (=> (= (ControlFlow 0 26) 24) $generated@@656) (=> (= (ControlFlow 0 26) 25) $generated@@655)))))
(let (($generated@@658  (and (=> (= (ControlFlow 0 33) 32) $generated@@632) (=> (= (ControlFlow 0 33) 26) $generated@@657))))
(let (($generated@@659 true))
(let (($generated@@660  (and (=> (= (ControlFlow 0 34) (- 0 36)) (forall (($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@661 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@661))) (< ($generated@@231 $generated@@661) $generated@@232))
 :pattern ( ($generated@@231 $generated@@661))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@661)))
))) (=> (forall (($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@662) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@662 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@662))) (< ($generated@@231 $generated@@662) $generated@@232))
 :pattern ( ($generated@@231 $generated@@662))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@662)))
)) (=> (=> $generated@@609 true) (and (=> (= (ControlFlow 0 34) (- 0 35)) (=> $generated@@609 (forall (($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@663 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@663))) (< ($generated@@231 $generated@@663) $generated@@232))
 :pattern ( ($generated@@231 $generated@@663))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@663)))
)))) (=> (=> $generated@@609 (forall (($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@664) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@664 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@664))) (< ($generated@@231 $generated@@664) $generated@@232))
 :pattern ( ($generated@@231 $generated@@664))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@664)))
))) (=> (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@79) (=> (and (not (= $generated@@665 $generated@@613)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@665) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@665) ($generated@@83 $generated@@606 $generated@@665))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@665))
)) (=> (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (! (let (($generated@@668 ($generated@@69 (type $generated@@667))))
 (=> (and (and (= (type $generated@@666) $generated@@79) (= (type $generated@@667) ($generated@@68 $generated@@668))) (and (not (= $generated@@666 $generated@@613)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@666) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@666) $generated@@667) ($generated@@85 ($generated@@83 $generated@@606 $generated@@666) $generated@@667)) ($generated@@0 ($generated@@175 $generated@@614 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@666) $generated@@667))
))) (and (=> (= (ControlFlow 0 34) 4) $generated@@659) (=> (= (ControlFlow 0 34) 33) $generated@@658)))))))))))
(let (($generated@@669  (=> (and (not ($generated@@156 $generated@@604 ($generated@@276 $generated@@615))) (= (ControlFlow 0 39) 34)) $generated@@660)))
(let (($generated@@670  (=> (and ($generated@@156 $generated@@604 ($generated@@276 $generated@@615)) (= (ControlFlow 0 38) 34)) $generated@@660)))
(let (($generated@@671  (=> (and ($generated@@138 $generated@@615 $generated@@165) ($generated@@76 $generated@@615 $generated@@165 $generated@@606)) (and (=> (= (ControlFlow 0 40) 38) $generated@@670) (=> (= (ControlFlow 0 40) 39) $generated@@669)))))
(let (($generated@@672  (=> (and (not (and ($generated@@138 $generated@@615 $generated@@165) ($generated@@76 $generated@@615 $generated@@165 $generated@@606))) (= (ControlFlow 0 37) 34)) $generated@@660)))
(let (($generated@@673  (=> (= $generated@@616 $generated@@617) (and (=> (= (ControlFlow 0 41) 40) $generated@@671) (=> (= (ControlFlow 0 41) 37) $generated@@672)))))
(let (($generated@@674  (=> (not (= $generated@@616 $generated@@617)) (=> (and (and (= $generated@@618 (+ $generated@@616 1)) (= (ControlFlow 0 3) (- 0 2))) $generated@@607) (forall (($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@675 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@675))) (< ($generated@@231 $generated@@675) (- (+ $generated@@232 5) $generated@@618)))
 :pattern ( ($generated@@231 $generated@@675))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@675)))
))))))
(let (($generated@@676  (=> $generated@@607 (and (=> (= (ControlFlow 0 42) 41) $generated@@673) (=> (= (ControlFlow 0 42) 3) $generated@@674)))))
(let (($generated@@677  (and (=> (= (ControlFlow 0 49) 48) $generated@@626) (=> (= (ControlFlow 0 49) 42) $generated@@676))))
(let (($generated@@678 true))
(let (($generated@@679  (=> (and (and (and (and (not false) (<= 0 $generated@@616)) (= $generated@@619 0)) (= $generated@@617 5)) (and (and (and (<= $generated@@619 $generated@@616) (<= $generated@@616 $generated@@617)) (=> $generated@@607 true)) (and (and (=> $generated@@607 (forall (($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@680) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@680 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@680))) (< ($generated@@231 $generated@@680) (- (+ $generated@@232 5) $generated@@616)))
 :pattern ( ($generated@@231 $generated@@680))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@680)))
))) (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@79) (=> (and (not (= $generated@@681 $generated@@613)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@681) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@681) ($generated@@83 $generated@@606 $generated@@681))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@681))
))) (and ($generated@@134 $generated@@606 $generated@@606) (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@69 (type $generated@@683))))
 (=> (and (and (= (type $generated@@682) $generated@@79) (= (type $generated@@683) ($generated@@68 $generated@@684))) (and (not (= $generated@@682 $generated@@613)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@682) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@606 $generated@@682) $generated@@683) ($generated@@85 ($generated@@83 $generated@@606 $generated@@682) $generated@@683)) ($generated@@0 ($generated@@175 $generated@@614 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@606 $generated@@682) $generated@@683))
)))))) (and (=> (= (ControlFlow 0 50) 1) $generated@@678) (=> (= (ControlFlow 0 50) 49) $generated@@677)))))
(let (($generated@@685  (=> (= $generated@@614 ($generated@@176 $generated@@613 $generated@@606 $generated@@60 false)) (=> (and (= $generated@@619 ($generated@@254 0)) (= $generated@@617 ($generated@@254 5))) (and (=> (= (ControlFlow 0 51) (- 0 53)) (<= $generated@@619 $generated@@617)) (=> (<= $generated@@619 $generated@@617) (and (=> (= (ControlFlow 0 51) (- 0 52)) (=> $generated@@607 (forall (($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@686) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@686 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@686))) (< ($generated@@231 $generated@@686) (- (+ $generated@@232 5) $generated@@619)))
 :pattern ( ($generated@@231 $generated@@686))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@686)))
)))) (=> (=> $generated@@607 (forall (($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@687) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@687 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@687))) (< ($generated@@231 $generated@@687) (- (+ $generated@@232 5) $generated@@619)))
 :pattern ( ($generated@@231 $generated@@687))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@687)))
))) (=> (= (ControlFlow 0 51) 50) $generated@@679)))))))))
(let (($generated@@688  (=> (and ($generated@@260 $generated@@606) ($generated@@620 $generated@@606)) (=> (and (and (and ($generated@@138 $generated@@604 ($generated@@166 $generated@@165)) ($generated@@76 $generated@@604 ($generated@@166 $generated@@165) $generated@@606)) (= 2 $generated@@274)) (and (forall (($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@689) ($generated@@158 $generated@@151)) ($generated@@138 $generated@@689 $generated@@165)) ($generated@@156 $generated@@604 ($generated@@276 $generated@@689))) (< ($generated@@231 $generated@@689) $generated@@232))
 :pattern ( ($generated@@231 $generated@@689))
 :pattern ( ($generated@@156 $generated@@604 ($generated@@276 $generated@@689)))
)) (= (ControlFlow 0 54) 51))) $generated@@685))))
$generated@@688))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 (T@U) Int)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@372 (T@U Int) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@139 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@66)) (= (type $generated@@143) $generated@@138)) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142))) ($generated@@136 $generated@@143))
 :pattern ( ($generated@@136 $generated@@143) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@138) (= (type $generated@@151) $generated@@138)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert  (and (and (forall (($generated@@156 T@T) ) (= ($generated@@1 ($generated@@154 $generated@@156)) 16)) (forall (($generated@@157 T@T) ) (! (= ($generated@@155 ($generated@@154 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@T) ) (! (= (type ($generated@@153 $generated@@158)) ($generated@@154 $generated@@158))
 :pattern ( ($generated@@153 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ) (! (let (($generated@@160 (type $generated@@159)))
 (not ($generated@@152 ($generated@@153 $generated@@160) $generated@@159)))
 :pattern ( (let (($generated@@160 (type $generated@@159)))
($generated@@152 ($generated@@153 $generated@@160) $generated@@159)))
)))
(assert  (and (= (type $generated@@161) $generated@@66) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) ($generated@@154 $generated@@147)) (= (type $generated@@165) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@164 $generated@@161 $generated@@165) ($generated@@76 $generated@@164 ($generated@@162 $generated@@45) $generated@@165)))
 :pattern ( ($generated@@76 $generated@@164 $generated@@161 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@66)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@170) $generated@@66)) ($generated@@134 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@134 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@79 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@69 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@79) (= (type $generated@@221) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@222) ($generated@@68 $generated@@4))) (= (type $generated@@224) $generated@@79)) (= (type $generated@@225) ($generated@@68 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@79 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@69 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@79) (= (type $generated@@233) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@234) ($generated@@68 $generated@@4))) (= (type $generated@@236) $generated@@79)) (= (type $generated@@237) ($generated@@68 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@246)) $generated@@147)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert  (=> (<= 2 $generated@@239) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@154 $generated@@147)) (or ($generated@@241 $generated@@247) (and (not (= 2 $generated@@239)) (and ($generated@@134 $generated@@247 ($generated@@162 $generated@@161)) (forall (($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@248) ($generated@@154 $generated@@147)) ($generated@@134 $generated@@248 $generated@@161)) ($generated@@152 $generated@@247 ($generated@@243 $generated@@248))) (< ($generated@@242 $generated@@248) $generated@@244))
 :pattern ( ($generated@@242 $generated@@248))
 :pattern ( ($generated@@152 $generated@@247 ($generated@@243 $generated@@248)))
)))))) (= ($generated@@240 $generated@@247) ($generated@@245 0)))
 :pattern ( ($generated@@240 $generated@@247))
))))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) ($generated@@154 $generated@@147)) (= ($generated@@134 $generated@@249 $generated@@161)  (and ($generated@@134 $generated@@249 ($generated@@162 $generated@@45)) (< ($generated@@242 $generated@@249) $generated@@244))))
 :pattern ( ($generated@@134 $generated@@249 $generated@@161))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@138)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@66) (= (type $generated@@255) $generated@@66)) (= (type $generated@@256) $generated@@147)) (= (type $generated@@257) $generated@@147)) (= ($generated@@134 ($generated@@250 $generated@@256 $generated@@257) ($generated@@137 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@134 ($generated@@250 $generated@@256 $generated@@257) ($generated@@137 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@138) (= (type $generated@@259) $generated@@138)) (= ($generated@@144 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@144 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert  (=> (<= 2 $generated@@239) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@154 $generated@@147)) (or ($generated@@241 ($generated@@260 $generated@@263)) (and (not (= 2 $generated@@239)) (and ($generated@@134 $generated@@263 ($generated@@162 $generated@@161)) (forall (($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@264) ($generated@@154 $generated@@147)) ($generated@@134 $generated@@264 $generated@@161)) ($generated@@152 $generated@@263 ($generated@@243 $generated@@264))) (< ($generated@@242 $generated@@264) $generated@@244))
 :pattern ( ($generated@@242 $generated@@264))
 :pattern ( ($generated@@152 $generated@@263 ($generated@@243 $generated@@264)))
)))))) (= ($generated@@240 ($generated@@260 $generated@@263)) ($generated@@245 0)))
 :weight 3
 :pattern ( ($generated@@240 ($generated@@260 $generated@@263)))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@66)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@268) $generated@@66)) (= ($generated@@134 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@147) ($generated@@0 ($generated@@83 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@83 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@134 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@66)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@273) $generated@@66)) (= ($generated@@134 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@147) ($generated@@0 ($generated@@83 $generated@@272 $generated@@274))) ($generated@@251 $generated@@274 $generated@@273))
 :pattern ( ($generated@@83 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@134 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@245 $generated@@275) $generated@@275)
 :pattern ( ($generated@@245 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@260 $generated@@276) $generated@@276)
 :pattern ( ($generated@@260 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@66) (= (type $generated@@280) $generated@@66)) (= (type $generated@@281) $generated@@147)) (= (type $generated@@282) $generated@@147)) (= (type $generated@@283) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@277 $generated@@283)) (= ($generated@@76 ($generated@@250 $generated@@281 $generated@@282) ($generated@@137 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@76 ($generated@@250 $generated@@281 $generated@@282) ($generated@@137 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@70)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@138) (= ($generated@@136 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@136 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@138) ($generated@@136 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@147) (= (type $generated@@289) $generated@@147)) (= $generated@@287 ($generated@@250 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@136 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@242 ($generated@@153 $generated@@290)) 0)
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert  (=> (< 0 $generated@@239) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80)) ($generated@@277 $generated@@291)) ($generated@@76 ($generated@@8 $generated@@244) $generated@@46 $generated@@291))
 :pattern ( ($generated@@76 ($generated@@8 $generated@@244) $generated@@46 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@66) (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@278 ($generated@@243 $generated@@292) $generated@@293 $generated@@294) ($generated@@76 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@278 ($generated@@243 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@81 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@78 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@83 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@81 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@78 $generated@@338 $generated@@2)) (= ($generated@@167 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@83 $generated@@337 $generated@@339))) (<= ($generated ($generated@@83 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@83 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@167 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@147) ($generated@@251 $generated@@343 $generated@@161)) (and (= ($generated@@243 ($generated@@340 ($generated@@154 $generated@@147) $generated@@343)) $generated@@343) ($generated@@134 ($generated@@340 ($generated@@154 $generated@@147) $generated@@343) $generated@@161)))
 :pattern ( ($generated@@251 $generated@@343 $generated@@161))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@134 $generated@@366 ($generated@@166 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@251 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@134 $generated@@366 ($generated@@166 $generated@@367)))
)))
(assert  (=> (<= 2 $generated@@239) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@154 $generated@@147)) (or ($generated@@241 $generated@@369) (and (not (= 2 $generated@@239)) (and ($generated@@134 $generated@@369 ($generated@@162 $generated@@161)) (forall (($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@154 $generated@@147)) ($generated@@134 $generated@@370 $generated@@161)) ($generated@@152 $generated@@369 ($generated@@243 $generated@@370))) (< ($generated@@242 $generated@@370) $generated@@244))
 :pattern ( ($generated@@242 $generated@@370))
 :pattern ( ($generated@@152 $generated@@369 ($generated@@243 $generated@@370)))
)))))) (forall (($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@154 $generated@@147)) ($generated@@134 $generated@@371 $generated@@161)) ($generated@@152 $generated@@369 ($generated@@243 $generated@@371))) (< ($generated@@242 $generated@@371) $generated@@244))
 :pattern ( ($generated@@242 $generated@@371))
 :pattern ( ($generated@@152 $generated@@369 ($generated@@243 $generated@@371)))
)))
 :pattern ( ($generated@@240 $generated@@369))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ) (! (let (($generated@@375 ($generated@@155 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@375))
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (=> (= (type $generated@@376) ($generated@@154 $generated@@378)) (= ($generated@@152 $generated@@376 $generated@@377) (exists (($generated@@379 Int) ) (!  (and (and (<= 0 $generated@@379) (< $generated@@379 ($generated@@242 $generated@@376))) (= ($generated@@372 $generated@@376 $generated@@379) $generated@@377))
 :pattern ( ($generated@@372 $generated@@376 $generated@@379))
)))))
 :pattern ( ($generated@@152 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@381) $generated@@66)) (= (type $generated@@382) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@380 ($generated@@265 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@147) ($generated@@0 ($generated@@83 $generated@@380 $generated@@383))) ($generated@@278 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@83 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@76 $generated@@380 ($generated@@265 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@385) $generated@@66)) (= (type $generated@@386) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@384 ($generated@@270 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@147) ($generated@@0 ($generated@@83 $generated@@384 $generated@@387))) ($generated@@278 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@83 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@76 $generated@@384 ($generated@@270 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@83 ($generated@@296 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@83 ($generated@@296 $generated@@389) $generated@@388)))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@305 (type $generated@@393))))
(let (($generated@@395 ($generated@@304 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@78 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@396) ($generated@@145 ($generated@@340 $generated@@138 $generated@@397)))) (= ($generated@@83 ($generated@@391 $generated@@396) ($generated@@145 ($generated@@340 $generated@@138 $generated@@397))) ($generated@@146 ($generated@@340 $generated@@138 $generated@@397))))))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@323 (type $generated@@401))))
(let (($generated@@403 ($generated@@322 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@321 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@404) ($generated@@145 ($generated@@340 $generated@@138 $generated@@405)))) (= ($generated@@83 ($generated@@399 $generated@@404) ($generated@@145 ($generated@@340 $generated@@138 $generated@@405))) ($generated@@146 ($generated@@340 $generated@@138 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@304 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@303 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@83 ($generated@@391 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@406) $generated@@410))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@322 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@321 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@83 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@411) $generated@@415))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@66)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@419) $generated@@423))) (and ($generated@@278 ($generated@@83 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@278 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@76 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@66)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@321 $generated@@147 $generated@@147)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@427) $generated@@431))) (and ($generated@@278 ($generated@@83 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@278 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@78 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@323 (type $generated@@434))))
(let (($generated@@436 ($generated@@322 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@321 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@320 $generated@@436 $generated@@435)) (= ($generated@@319 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@319 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (= ($generated@@359 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@359 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@323 (type $generated@@440))))
(let (($generated@@442 ($generated@@322 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@321 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@320 $generated@@442 $generated@@441)) (= ($generated@@398 $generated@@440) ($generated@@432 $generated@@147))))))
 :pattern ( ($generated@@398 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@305 (type $generated@@443))))
(let (($generated@@445 ($generated@@304 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@303 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@302 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@147) (= (type $generated@@447) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@390 $generated@@443) ($generated@@243 ($generated@@250 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@390 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@323 (type $generated@@448))))
(let (($generated@@450 ($generated@@322 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@321 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@320 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@147) (= (type $generated@@452) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@398 $generated@@448) ($generated@@243 ($generated@@250 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@398 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@147) ($generated@@251 $generated@@453 $generated@@46)) (and (= ($generated@@243 ($generated@@340 $generated@@2 $generated@@453)) $generated@@453) ($generated@@134 ($generated@@340 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@147) ($generated@@251 $generated@@454 $generated@@47)) (and (= ($generated@@243 ($generated@@340 $generated@@3 $generated@@454)) $generated@@454) ($generated@@134 ($generated@@340 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@147) ($generated@@251 $generated@@455 $generated@@44)) (and (= ($generated@@243 ($generated@@340 $generated@@4 $generated@@455)) $generated@@455) ($generated@@134 ($generated@@340 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@147) ($generated@@251 $generated@@457 $generated@@45)) (and (= ($generated@@243 ($generated@@340 $generated@@456 $generated@@457)) $generated@@457) ($generated@@134 ($generated@@340 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@66) (= ($generated@@251 ($generated@@243 $generated@@458) $generated@@459) ($generated@@134 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@251 ($generated@@243 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@81 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@78 $generated@@461 $generated@@2)) (<= 0 ($generated@@295 $generated@@460))))
 :pattern ( ($generated@@295 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@155 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@154 $generated@@463)) (<= 0 ($generated@@242 $generated@@462))))
 :pattern ( ($generated@@242 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@416 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@416 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@416 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@416 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@74 ($generated@@416 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@424 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@424 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@424 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@424 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@74 ($generated@@424 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@147) (= (type $generated@@485) $generated@@147)) (= ($generated@@284 ($generated@@250 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@137 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@137 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@490 ($generated@@137 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@137 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@147) (= (type $generated@@495) $generated@@147)) (= ($generated@@145 ($generated@@250 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@250 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@147) (= (type $generated@@497) $generated@@147)) (= ($generated@@146 ($generated@@250 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@250 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@154 $generated@@147)) (= (type $generated@@499) $generated@@66)) (= (type $generated@@500) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@498 ($generated@@162 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@242 $generated@@498))) ($generated@@278 ($generated@@372 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@372 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@76 $generated@@498 ($generated@@162 $generated@@499) $generated@@500))
)))
(assert  (=> (< 0 $generated@@239) ($generated@@134 ($generated@@8 $generated@@244) $generated@@46)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@77 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@77 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@265 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@265 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@265 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@270 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@270 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@270 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@166 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@166 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@166 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@162 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@162 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@162 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@340 $generated@@521 ($generated@@243 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@243 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@134 $generated@@522 ($generated@@416 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@522) $generated@@525))) (and ($generated@@251 ($generated@@83 ($generated@@391 $generated@@522) $generated@@525) $generated@@524) ($generated@@251 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@134 $generated@@522 ($generated@@416 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@321 $generated@@147 $generated@@147)) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) (= ($generated@@134 $generated@@526 ($generated@@424 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@526) $generated@@529))) (and ($generated@@251 ($generated@@83 ($generated@@399 $generated@@526) $generated@@529) $generated@@528) ($generated@@251 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@526) $generated@@529))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@134 $generated@@526 ($generated@@424 $generated@@527 $generated@@528)))
)))
(assert (= $generated@@244 ($generated@@245 4)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@147) (= (type $generated@@533) $generated@@147)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@250 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@250 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@147) (= (type $generated@@535) $generated@@147)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@250 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@250 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@147) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@251 $generated@@536 ($generated@@416 $generated@@537 $generated@@538))) (and (= ($generated@@243 ($generated@@340 ($generated@@303 $generated@@147 $generated@@147) $generated@@536)) $generated@@536) ($generated@@134 ($generated@@340 ($generated@@303 $generated@@147 $generated@@147) $generated@@536) ($generated@@416 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@251 $generated@@536 ($generated@@416 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@147) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) ($generated@@251 $generated@@539 ($generated@@424 $generated@@540 $generated@@541))) (and (= ($generated@@243 ($generated@@340 ($generated@@321 $generated@@147 $generated@@147) $generated@@539)) $generated@@539) ($generated@@134 ($generated@@340 ($generated@@321 $generated@@147 $generated@@147) $generated@@539) ($generated@@424 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@251 $generated@@539 ($generated@@424 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@147)) ($generated@@251 $generated@@544 ($generated@@137 $generated@@542 $generated@@543))) (and (= ($generated@@243 ($generated@@340 $generated@@138 $generated@@544)) $generated@@544) ($generated@@134 ($generated@@340 $generated@@138 $generated@@544) ($generated@@137 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@544 ($generated@@137 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@83 ($generated@@432 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@83 ($generated@@432 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@71)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (and (= ($generated@@74 ($generated@@137 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@137 $generated@@549 $generated@@550)) $generated@@64)))
 :pattern ( ($generated@@137 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@138) (= ($generated@@530 ($generated@@243 $generated@@551)) ($generated@@531 $generated@@551)))
 :pattern ( ($generated@@530 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@147) ($generated@@251 $generated@@552 ($generated@@77 0))) (and (= ($generated@@243 ($generated@@340 $generated@@2 $generated@@552)) $generated@@552) ($generated@@134 ($generated@@340 ($generated@@78 $generated@@147 $generated@@4) $generated@@552) ($generated@@77 0))))
 :pattern ( ($generated@@251 $generated@@552 ($generated@@77 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@147) (= (type $generated@@554) $generated@@66)) ($generated@@251 $generated@@553 ($generated@@265 $generated@@554))) (and (= ($generated@@243 ($generated@@340 ($generated@@78 $generated@@147 $generated@@4) $generated@@553)) $generated@@553) ($generated@@134 ($generated@@340 ($generated@@78 $generated@@147 $generated@@4) $generated@@553) ($generated@@265 $generated@@554))))
 :pattern ( ($generated@@251 $generated@@553 ($generated@@265 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@147) (= (type $generated@@556) $generated@@66)) ($generated@@251 $generated@@555 ($generated@@270 $generated@@556))) (and (= ($generated@@243 ($generated@@340 ($generated@@78 $generated@@147 $generated@@4) $generated@@555)) $generated@@555) ($generated@@134 ($generated@@340 ($generated@@78 $generated@@147 $generated@@4) $generated@@555) ($generated@@270 $generated@@556))))
 :pattern ( ($generated@@251 $generated@@555 ($generated@@270 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@147) (= (type $generated@@558) $generated@@66)) ($generated@@251 $generated@@557 ($generated@@166 $generated@@558))) (and (= ($generated@@243 ($generated@@340 ($generated@@78 $generated@@147 $generated@@2) $generated@@557)) $generated@@557) ($generated@@134 ($generated@@340 ($generated@@78 $generated@@147 $generated@@2) $generated@@557) ($generated@@166 $generated@@558))))
 :pattern ( ($generated@@251 $generated@@557 ($generated@@166 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@147) (= (type $generated@@560) $generated@@66)) ($generated@@251 $generated@@559 ($generated@@162 $generated@@560))) (and (= ($generated@@243 ($generated@@340 ($generated@@154 $generated@@147) $generated@@559)) $generated@@559) ($generated@@134 ($generated@@340 ($generated@@154 $generated@@147) $generated@@559) ($generated@@162 $generated@@560))))
 :pattern ( ($generated@@251 $generated@@559 ($generated@@162 $generated@@560)))
)))
(assert (= ($generated@@74 $generated@@161) $generated@@63))
(assert (= ($generated@@547 $generated@@161) $generated@@65))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@561 ($generated@@166 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@561 $generated@@564)))) ($generated@@278 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@83 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@76 $generated@@561 ($generated@@166 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@138) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@277 $generated@@567) (and ($generated@@136 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@137 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@137 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@278 ($generated@@145 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@278 ($generated@@145 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@138) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@277 $generated@@571) (and ($generated@@136 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@66) ($generated@@76 $generated@@569 ($generated@@137 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@137 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@278 ($generated@@146 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@278 ($generated@@146 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@147) (= (type $generated@@574) $generated@@147)) (= ($generated@@250 ($generated@@260 $generated@@573) ($generated@@260 $generated@@574)) ($generated@@260 ($generated@@250 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@250 ($generated@@260 $generated@@573) ($generated@@260 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@243 ($generated@@8 ($generated@@245 $generated@@575))) ($generated@@260 ($generated@@243 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@243 ($generated@@8 ($generated@@245 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@243 ($generated@@260 $generated@@576)) ($generated@@260 ($generated@@243 $generated@@576)))
 :pattern ( ($generated@@243 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@155 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@154 $generated@@578)) (= ($generated@@242 $generated@@577) 0)) (= $generated@@577 ($generated@@153 $generated@@578))))
 :pattern ( ($generated@@242 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@78 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@295 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@295 $generated@@579) ($generated ($generated@@83 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@295 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@2)) ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@3)) ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@4)) ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@456)) ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@147)) ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@154 $generated@@147)) (= (type $generated@@594) $generated@@66)) (= ($generated@@134 $generated@@593 ($generated@@162 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@242 $generated@@593))) ($generated@@251 ($generated@@372 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@372 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@134 $generated@@593 ($generated@@162 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@154 $generated@@147)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@242 $generated@@597))) (< ($generated@@531 ($generated@@340 $generated@@138 ($generated@@372 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@531 ($generated@@340 $generated@@138 ($generated@@372 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@134 $generated@@599 ($generated@@416 $generated@@600 $generated@@601))) (and (and ($generated@@134 ($generated@@301 $generated@@599) ($generated@@265 $generated@@600)) ($generated@@134 ($generated@@348 $generated@@599) ($generated@@265 $generated@@601))) ($generated@@134 ($generated@@390 $generated@@599) ($generated@@265 ($generated@@137 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@134 $generated@@599 ($generated@@416 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@321 $generated@@147 $generated@@147)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@134 $generated@@602 ($generated@@424 $generated@@603 $generated@@604))) (and (and ($generated@@134 ($generated@@319 $generated@@602) ($generated@@270 $generated@@603)) ($generated@@134 ($generated@@359 $generated@@602) ($generated@@270 $generated@@604))) ($generated@@134 ($generated@@398 $generated@@602) ($generated@@270 ($generated@@137 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@134 $generated@@602 ($generated@@424 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@134 $generated@@605 $generated@@46))
 :pattern ( ($generated@@134 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@134 $generated@@606 $generated@@47))
 :pattern ( ($generated@@134 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@134 $generated@@607 $generated@@44))
 :pattern ( ($generated@@134 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@456) ($generated@@134 $generated@@608 $generated@@45))
 :pattern ( ($generated@@134 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@147) ($generated@@134 $generated@@609 $generated@@48))
 :pattern ( ($generated@@134 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@610) ($generated@@154 $generated@@147)) (= (type $generated@@613) ($generated@@173 $generated@@79 $generated@@4))) (= (type $generated@@614) $generated@@79)) (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@611) ($generated@@154 $generated@@147))) (= (type $generated@@616) ($generated@@154 $generated@@147))) (= (type $generated@@617) ($generated@@173 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@619 true))
(let (($generated@@620  (=> (and (=> ($generated@@152 $generated@@610 ($generated@@243 $generated@@611)) (< ($generated@@242 $generated@@611) $generated@@244)) (= (ControlFlow 0 6) 4)) $generated@@619)))
(let (($generated@@621  (=> ($generated@@152 $generated@@610 ($generated@@243 $generated@@611)) (=> (and (< ($generated@@242 $generated@@611) $generated@@244) (= (ControlFlow 0 5) 4)) $generated@@619))))
(let (($generated@@622  (=> (and ($generated@@134 $generated@@611 $generated@@161) ($generated@@76 $generated@@611 $generated@@161 $generated@@612)) (and (=> (= (ControlFlow 0 7) 5) $generated@@621) (=> (= (ControlFlow 0 7) 6) $generated@@620)))))
(let (($generated@@623  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@624) ($generated@@154 $generated@@147)) ($generated@@134 $generated@@624 $generated@@161)) ($generated@@152 $generated@@610 ($generated@@243 $generated@@624))) (< ($generated@@242 $generated@@624) $generated@@244))
 :pattern ( ($generated@@242 $generated@@624))
 :pattern ( ($generated@@152 $generated@@610 ($generated@@243 $generated@@624)))
)))))
(let (($generated@@625  (=> (= $generated@@613 ($generated@@227 $generated@@614 $generated@@612 $generated@@60 false)) (=> (and (and (= ($generated@@240 $generated@@610) ($generated@@245 0)) ($generated@@134 ($generated@@8 ($generated@@240 $generated@@610)) $generated@@46)) (and (= ($generated@@240 $generated@@610) $generated@@615) (= (ControlFlow 0 3) 2))) $generated@@623))))
(let (($generated@@626  (=> (forall (($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@154 $generated@@147)) ($generated@@134 $generated@@627 $generated@@161)) ($generated@@152 $generated@@610 ($generated@@243 $generated@@627))) (< ($generated@@242 $generated@@627) $generated@@244))
 :pattern ( ($generated@@242 $generated@@627))
 :pattern ( ($generated@@152 $generated@@610 ($generated@@243 $generated@@627)))
)) (and (=> (= (ControlFlow 0 8) 7) $generated@@622) (=> (= (ControlFlow 0 8) 3) $generated@@625)))))
(let (($generated@@628  (=> (and (=> ($generated@@152 $generated@@610 ($generated@@243 $generated@@616)) (< ($generated@@242 $generated@@616) $generated@@244)) (= (ControlFlow 0 10) 8)) $generated@@626)))
(let (($generated@@629  (=> ($generated@@152 $generated@@610 ($generated@@243 $generated@@616)) (=> (and (< ($generated@@242 $generated@@616) $generated@@244) (= (ControlFlow 0 9) 8)) $generated@@626))))
(let (($generated@@630  (=> (= $generated@@617 ($generated@@172 $generated@@614 $generated@@612 $generated@@60 false)) (=> (and ($generated@@134 $generated@@616 $generated@@161) ($generated@@76 $generated@@616 $generated@@161 $generated@@612)) (and (=> (= (ControlFlow 0 11) 9) $generated@@629) (=> (= (ControlFlow 0 11) 10) $generated@@628))))))
(let (($generated@@631  (=> (and (and (and ($generated@@277 $generated@@612) ($generated@@618 $generated@@612)) ($generated@@134 $generated@@610 ($generated@@162 $generated@@161))) (and (= 2 $generated@@239) (= (ControlFlow 0 12) 11))) $generated@@630)))
$generated@@631))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
