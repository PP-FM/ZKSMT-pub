(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U Int) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= ($generated@@1 $generated@@138) 14))
(assert (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@138) ($generated@@137 $generated@@140)) ($generated@@139 $generated@@140))
 :pattern ( ($generated@@137 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert (= (type $generated@@146) $generated@@69))
(assert  (=> (<= 1 $generated@@143) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@138) (or ($generated@@145 $generated@@147) (and (not (= 1 $generated@@143)) ($generated@@141 $generated@@147 $generated@@146)))) true)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@138)) ($generated@@141 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@141 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@138) (= (type $generated@@162) $generated@@138)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@81 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@69)) ($generated@@141 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@141 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@82 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@72 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@82) (= (type $generated@@218) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@219) ($generated@@71 $generated@@4))) (= (type $generated@@221) $generated@@82)) (= (type $generated@@222) ($generated@@71 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (= (type $generated@@224) $generated@@69))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@138) (= (type $generated@@226) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@225 $generated@@224 $generated@@226) ($generated@@79 $generated@@225 $generated@@146 $generated@@226)))
 :pattern ( ($generated@@79 $generated@@225 $generated@@224 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@138) ($generated@@141 $generated@@227 $generated@@146)) ($generated@@139 $generated@@227))
 :pattern ( ($generated@@139 $generated@@227) ($generated@@141 $generated@@227 $generated@@146))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@138)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@69) (= (type $generated@@233) $generated@@69)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@138) (= (type $generated@@237) $generated@@138)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@138) (= (type $generated@@240) $generated@@138)) (= ($generated@@238 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@69)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@244) $generated@@69)) (= ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@158) ($generated@@0 ($generated@@86 $generated@@243 $generated@@245))) ($generated@@229 $generated@@245 $generated@@244))
 :pattern ( ($generated@@86 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@69)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@69)) (= ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@86 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@86 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (and (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@257 $generated@@263 $generated@@264)) ($generated@@259 $generated@@265)))
 :pattern ( ($generated@@257 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@U) ) (! (= (type ($generated@@258 $generated@@266)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@259 $generated@@158)) (= (type $generated@@268) $generated@@158)) (= (type $generated@@269) $generated@@69)) (and ($generated@@141 $generated@@267 ($generated@@258 $generated@@269)) ($generated@@229 $generated@@268 $generated@@269))) ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
 :pattern ( ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@158)) (= (type $generated@@275) $generated@@158)) (= (type $generated@@276) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@270 $generated@@276)) (= ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@73)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@138) (= ($generated@@148 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@138) (= ($generated@@139 $generated@@280) (= ($generated@@277 $generated@@280) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@138) ($generated@@148 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@158) (= (type $generated@@283) $generated@@158)) (= $generated@@281 ($generated@@228 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@148 $generated@@281))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@284 $generated@@286)) ($generated@@259 $generated@@286))
 :pattern ( ($generated@@284 $generated@@286))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) 0)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@158)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@138) (= (type $generated@@291) $generated@@138)) true) (= ($generated@@238 $generated@@290 $generated@@291) (= ($generated@@288 $generated@@290) ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@238 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@138)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@138) ($generated@@139 $generated@@294)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@158) (= $generated@@294 ($generated@@292 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@139 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 (type $generated@@297)))
 (=> (= (type $generated@@296) ($generated@@259 $generated@@298)) (= ($generated@@285 ($generated@@257 $generated@@296 $generated@@297)) (+ 1 ($generated@@285 $generated@@296)))))
 :pattern ( ($generated@@257 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@158)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@69) (= (type $generated@@303) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@271 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@79 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@271 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@81 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@84 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@81 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@86 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@81 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@86 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@86 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@81 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@86 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@86 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@84 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@81 $generated@@347 $generated@@2)) (= ($generated@@164 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@86 $generated@@346 $generated@@348))) (<= ($generated ($generated@@86 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@86 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@164 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@158) ($generated@@229 $generated@@352 $generated@@146)) (and (= ($generated@@299 ($generated@@349 $generated@@138 $generated@@352)) $generated@@352) ($generated@@141 ($generated@@349 $generated@@138 $generated@@352) $generated@@146)))
 :pattern ( ($generated@@229 $generated@@352 $generated@@146))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@158) ($generated@@229 $generated@@353 $generated@@224)) (and (= ($generated@@299 ($generated@@349 $generated@@138 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@349 $generated@@138 $generated@@353) $generated@@224)))
 :pattern ( ($generated@@229 $generated@@353 $generated@@224))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 Int) ) (! (let (($generated@@357 ($generated@@260 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@357))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@358) ($generated@@259 $generated@@361)) (and (=> (= $generated@@359 ($generated@@285 $generated@@358)) (= ($generated@@354 ($generated@@257 $generated@@358 $generated@@360) $generated@@359) $generated@@360)) (=> (not (= $generated@@359 ($generated@@285 $generated@@358))) (= ($generated@@354 ($generated@@257 $generated@@358 $generated@@360) $generated@@359) ($generated@@354 $generated@@358 $generated@@359))))))
 :pattern ( ($generated@@354 ($generated@@257 $generated@@358 $generated@@360) $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@314 (type $generated@@362))))
(let (($generated@@364 ($generated@@313 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@312 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@311 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@86 ($generated@@310 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@310 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@314 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@314 (type $generated@@369))))
(let (($generated@@371 ($generated@@313 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@312 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@311 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@86 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@332 (type $generated@@373))))
(let (($generated@@375 ($generated@@331 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@330 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@329 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@86 ($generated@@328 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@328 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@332 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@81 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@332 (type $generated@@380))))
(let (($generated@@382 ($generated@@331 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@330 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@329 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@86 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@81 $generated@@158 $generated@@2)) (= (type $generated@@385) $generated@@69)) (= ($generated@@141 $generated@@384 ($generated@@163 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@158) (< 0 ($generated ($generated@@86 $generated@@384 $generated@@386)))) ($generated@@229 $generated@@386 $generated@@385))
 :pattern ( ($generated@@86 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@141 $generated@@384 ($generated@@163 $generated@@385)))
)))
(assert (= (type $generated@@387) $generated@@69))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@388) $generated@@158) (= (type $generated@@389) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@270 $generated@@389)) (= ($generated@@79 ($generated@@292 $generated@@388) $generated@@146 $generated@@389) ($generated@@271 $generated@@388 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@79 ($generated@@292 $generated@@388) $generated@@146 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@391) $generated@@69)) (= (type $generated@@392) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@390 ($generated@@241 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@158) ($generated@@0 ($generated@@86 $generated@@390 $generated@@393))) ($generated@@271 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@86 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@79 $generated@@390 ($generated@@241 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@395) $generated@@69)) (= (type $generated@@396) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@394 ($generated@@246 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@158) ($generated@@0 ($generated@@86 $generated@@394 $generated@@397))) ($generated@@271 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@86 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@79 $generated@@394 ($generated@@246 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@86 ($generated@@305 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@86 ($generated@@305 $generated@@399) $generated@@398)))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@81 $generated@@158 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@314 (type $generated@@403))))
(let (($generated@@405 ($generated@@313 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@81 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@158)) (= ($generated@@0 ($generated@@86 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@86 ($generated@@310 $generated@@406) ($generated@@156 ($generated@@349 $generated@@138 $generated@@407)))) (= ($generated@@86 ($generated@@401 $generated@@406) ($generated@@156 ($generated@@349 $generated@@138 $generated@@407))) ($generated@@157 ($generated@@349 $generated@@138 $generated@@407))))))
 :pattern ( ($generated@@86 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@81 $generated@@158 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@332 (type $generated@@411))))
(let (($generated@@413 ($generated@@331 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@81 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@330 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@158)) (= ($generated@@0 ($generated@@86 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@86 ($generated@@328 $generated@@414) ($generated@@156 ($generated@@349 $generated@@138 $generated@@415)))) (= ($generated@@86 ($generated@@409 $generated@@414) ($generated@@156 ($generated@@349 $generated@@138 $generated@@415))) ($generated@@157 ($generated@@349 $generated@@138 $generated@@415))))))
 :pattern ( ($generated@@86 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@313 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@312 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@86 ($generated@@366 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@86 ($generated@@310 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@86 ($generated@@401 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@416) $generated@@420))
 :pattern ( ($generated@@86 ($generated@@401 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@86 ($generated@@366 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@331 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@330 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@86 ($generated@@377 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@86 ($generated@@328 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@86 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@86 ($generated@@328 $generated@@421) $generated@@425))
 :pattern ( ($generated@@86 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@86 ($generated@@377 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@69)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@430) $generated@@69)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@310 $generated@@429) $generated@@433))) (and ($generated@@271 ($generated@@86 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@271 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@86 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@79 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@69)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@330 $generated@@158 $generated@@158)) (= (type $generated@@438) $generated@@69)) (= (type $generated@@439) $generated@@69)) (= (type $generated@@440) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@328 $generated@@437) $generated@@441))) (and ($generated@@271 ($generated@@86 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@271 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@86 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@86 ($generated@@328 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@79 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@81 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@332 (type $generated@@444))))
(let (($generated@@446 ($generated@@331 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@330 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@329 $generated@@446 $generated@@445)) (= ($generated@@328 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@328 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@332 (type $generated@@447))))
(let (($generated@@449 ($generated@@331 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@330 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@329 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@332 (type $generated@@450))))
(let (($generated@@452 ($generated@@331 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@330 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@329 $generated@@452 $generated@@451)) (= ($generated@@408 $generated@@450) ($generated@@442 $generated@@158))))))
 :pattern ( ($generated@@408 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@314 (type $generated@@453))))
(let (($generated@@455 ($generated@@313 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@312 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@311 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@158) (= (type $generated@@457) $generated@@158)) ($generated@@0 ($generated@@86 ($generated@@400 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@400 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@332 (type $generated@@458))))
(let (($generated@@460 ($generated@@331 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@330 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@329 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@158) (= (type $generated@@462) $generated@@158)) ($generated@@0 ($generated@@86 ($generated@@408 $generated@@458) ($generated@@299 ($generated@@228 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@408 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@158) ($generated@@229 $generated@@463 $generated@@46)) (and (= ($generated@@299 ($generated@@349 $generated@@2 $generated@@463)) $generated@@463) ($generated@@141 ($generated@@349 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@158) ($generated@@229 $generated@@464 $generated@@47)) (and (= ($generated@@299 ($generated@@349 $generated@@3 $generated@@464)) $generated@@464) ($generated@@141 ($generated@@349 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@158) ($generated@@229 $generated@@465 $generated@@44)) (and (= ($generated@@299 ($generated@@349 $generated@@4 $generated@@465)) $generated@@465) ($generated@@141 ($generated@@349 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@158) ($generated@@229 $generated@@467 $generated@@45)) (and (= ($generated@@299 ($generated@@349 $generated@@466 $generated@@467)) $generated@@467) ($generated@@141 ($generated@@349 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@69) (= ($generated@@229 ($generated@@299 $generated@@468) $generated@@469) ($generated@@141 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@84 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@81 $generated@@471 $generated@@2)) (<= 0 ($generated@@304 $generated@@470))))
 :pattern ( ($generated@@304 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@260 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@259 $generated@@473)) (<= 0 ($generated@@285 $generated@@472))))
 :pattern ( ($generated@@285 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@426 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@426 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@426 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@426 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@77 ($generated@@426 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@484 ($generated@@434 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@434 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@434 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@434 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@69) (= (type $generated@@493) $generated@@69)) (= ($generated@@77 ($generated@@434 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@158) (= (type $generated@@495) $generated@@158)) (= ($generated@@277 ($generated@@228 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@69)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@69) (= (type $generated@@499) $generated@@69)) (= ($generated@@496 ($generated@@149 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@149 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@69) (= (type $generated@@503) $generated@@69)) (= ($generated@@500 ($generated@@149 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@149 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@158) (= (type $generated@@505) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@228 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@158) (= (type $generated@@507) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@228 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@259 $generated@@158)) (= (type $generated@@509) $generated@@69)) (= (type $generated@@510) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@508 ($generated@@258 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@285 $generated@@508))) ($generated@@271 ($generated@@354 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@354 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@79 $generated@@508 ($generated@@258 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@80 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@80 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@241 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@241 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@241 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@518 ($generated@@246 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@246 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@77 ($generated@@246 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@163 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@163 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@77 ($generated@@163 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@526 ($generated@@258 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@258 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@258 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@158) (= ($generated@@277 ($generated@@292 $generated@@530)) $generated@@63))
 :pattern ( ($generated@@292 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@158) (= ($generated@@288 ($generated@@292 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@349 $generated@@533 ($generated@@299 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@299 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@141 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@310 $generated@@534) $generated@@537))) (and ($generated@@229 ($generated@@86 ($generated@@401 $generated@@534) $generated@@537) $generated@@536) ($generated@@229 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@86 ($generated@@401 $generated@@534) $generated@@537))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@141 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@330 $generated@@158 $generated@@158)) (= (type $generated@@539) $generated@@69)) (= (type $generated@@540) $generated@@69)) (= ($generated@@141 $generated@@538 ($generated@@434 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@328 $generated@@538) $generated@@541))) (and ($generated@@229 ($generated@@86 ($generated@@409 $generated@@538) $generated@@541) $generated@@540) ($generated@@229 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@86 ($generated@@409 $generated@@538) $generated@@541))
 :pattern ( ($generated@@86 ($generated@@328 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@141 $generated@@538 ($generated@@434 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@158) (= (type $generated@@545) $generated@@158)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@228 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@228 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@158) (= (type $generated@@547) $generated@@158)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@228 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@228 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@158) (= ($generated@@141 ($generated@@292 $generated@@548) $generated@@146) ($generated@@229 $generated@@548 $generated@@387)))
 :pattern ( ($generated@@141 ($generated@@292 $generated@@548) $generated@@146))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@229 $generated@@549 ($generated@@426 $generated@@550 $generated@@551))) (and (= ($generated@@299 ($generated@@349 ($generated@@312 $generated@@158 $generated@@158) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@349 ($generated@@312 $generated@@158 $generated@@158) $generated@@549) ($generated@@426 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@426 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@158) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@69)) ($generated@@229 $generated@@552 ($generated@@434 $generated@@553 $generated@@554))) (and (= ($generated@@299 ($generated@@349 ($generated@@330 $generated@@158 $generated@@158) $generated@@552)) $generated@@552) ($generated@@141 ($generated@@349 ($generated@@330 $generated@@158 $generated@@158) $generated@@552) ($generated@@434 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@434 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@69) (= (type $generated@@556) $generated@@69)) (= (type $generated@@557) $generated@@158)) ($generated@@229 $generated@@557 ($generated@@149 $generated@@555 $generated@@556))) (and (= ($generated@@299 ($generated@@349 $generated@@138 $generated@@557)) $generated@@557) ($generated@@141 ($generated@@349 $generated@@138 $generated@@557) ($generated@@149 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@149 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@86 ($generated@@442 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@86 ($generated@@442 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@74)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@69) (= (type $generated@@563) $generated@@69)) (and (= ($generated@@77 ($generated@@149 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@149 $generated@@562 $generated@@563)) $generated@@66)))
 :pattern ( ($generated@@149 $generated@@562 $generated@@563))
)))
(assert  (and (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@260 (type $generated@@566))))
(= (type ($generated@@564 $generated@@566)) ($generated@@259 $generated@@567)))
 :pattern ( ($generated@@564 $generated@@566))
)) (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@260 (type $generated@@568))))
(= (type ($generated@@565 $generated@@568)) $generated@@569))
 :pattern ( ($generated@@565 $generated@@568))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (=> (= (type $generated@@570) ($generated@@259 $generated@@572)) (and (= ($generated@@564 ($generated@@257 $generated@@570 $generated@@571)) $generated@@570) (= ($generated@@565 ($generated@@257 $generated@@570 $generated@@571)) $generated@@571))))
 :pattern ( ($generated@@257 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@138) (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@574) (and ($generated@@139 $generated@@573) ($generated@@79 $generated@@573 $generated@@146 $generated@@574)))) ($generated@@271 ($generated@@288 $generated@@573) $generated@@387 $generated@@574))
 :pattern ( ($generated@@271 ($generated@@288 $generated@@573) $generated@@387 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@138) (= ($generated@@542 ($generated@@299 $generated@@575)) ($generated@@543 $generated@@575)))
 :pattern ( ($generated@@542 ($generated@@299 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@158) ($generated@@229 $generated@@576 ($generated@@80 0))) (and (= ($generated@@299 ($generated@@349 $generated@@2 $generated@@576)) $generated@@576) ($generated@@141 ($generated@@349 ($generated@@81 $generated@@158 $generated@@4) $generated@@576) ($generated@@80 0))))
 :pattern ( ($generated@@229 $generated@@576 ($generated@@80 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@158) (= (type $generated@@578) $generated@@69)) ($generated@@229 $generated@@577 ($generated@@241 $generated@@578))) (and (= ($generated@@299 ($generated@@349 ($generated@@81 $generated@@158 $generated@@4) $generated@@577)) $generated@@577) ($generated@@141 ($generated@@349 ($generated@@81 $generated@@158 $generated@@4) $generated@@577) ($generated@@241 $generated@@578))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@241 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@158) (= (type $generated@@580) $generated@@69)) ($generated@@229 $generated@@579 ($generated@@246 $generated@@580))) (and (= ($generated@@299 ($generated@@349 ($generated@@81 $generated@@158 $generated@@4) $generated@@579)) $generated@@579) ($generated@@141 ($generated@@349 ($generated@@81 $generated@@158 $generated@@4) $generated@@579) ($generated@@246 $generated@@580))))
 :pattern ( ($generated@@229 $generated@@579 ($generated@@246 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@158) (= (type $generated@@582) $generated@@69)) ($generated@@229 $generated@@581 ($generated@@163 $generated@@582))) (and (= ($generated@@299 ($generated@@349 ($generated@@81 $generated@@158 $generated@@2) $generated@@581)) $generated@@581) ($generated@@141 ($generated@@349 ($generated@@81 $generated@@158 $generated@@2) $generated@@581) ($generated@@163 $generated@@582))))
 :pattern ( ($generated@@229 $generated@@581 ($generated@@163 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@158) (= (type $generated@@584) $generated@@69)) ($generated@@229 $generated@@583 ($generated@@258 $generated@@584))) (and (= ($generated@@299 ($generated@@349 ($generated@@259 $generated@@158) $generated@@583)) $generated@@583) ($generated@@141 ($generated@@349 ($generated@@259 $generated@@158) $generated@@583) ($generated@@258 $generated@@584))))
 :pattern ( ($generated@@229 $generated@@583 ($generated@@258 $generated@@584)))
)))
(assert (= ($generated@@77 $generated@@146) $generated@@64))
(assert (= ($generated@@560 $generated@@146) $generated@@67))
(assert (= ($generated@@77 $generated@@224) $generated@@65))
(assert (= ($generated@@560 $generated@@224) $generated@@68))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@81 $generated@@158 $generated@@2)) (= (type $generated@@586) $generated@@69)) (= (type $generated@@587) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@585 ($generated@@163 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@158) (< 0 ($generated ($generated@@86 $generated@@585 $generated@@588)))) ($generated@@271 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@86 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@79 $generated@@585 ($generated@@163 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@138) (= (type $generated@@590) $generated@@69)) (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@591) (and ($generated@@148 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@69) ($generated@@79 $generated@@589 ($generated@@149 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@79 $generated@@589 ($generated@@149 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@271 ($generated@@156 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@271 ($generated@@156 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@138) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@270 $generated@@595) (and ($generated@@148 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@69) ($generated@@79 $generated@@593 ($generated@@149 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@79 $generated@@593 ($generated@@149 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@271 ($generated@@157 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@271 ($generated@@157 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@158) (= (type $generated@@598) $generated@@158)) (= ($generated@@228 ($generated@@253 $generated@@597) ($generated@@253 $generated@@598)) ($generated@@253 ($generated@@228 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@228 ($generated@@253 $generated@@597) ($generated@@253 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@138) (= ($generated@@141 $generated@@599 $generated@@224)  (and ($generated@@141 $generated@@599 $generated@@146) ($generated@@144 $generated@@599))))
 :pattern ( ($generated@@141 $generated@@599 $generated@@224))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@251 $generated@@600))) ($generated@@253 ($generated@@299 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@251 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@158) (= ($generated@@292 ($generated@@253 $generated@@601)) ($generated@@253 ($generated@@292 $generated@@601))))
 :pattern ( ($generated@@292 ($generated@@253 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@299 ($generated@@253 $generated@@602)) ($generated@@253 ($generated@@299 $generated@@602)))
 :pattern ( ($generated@@299 ($generated@@253 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@260 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@259 $generated@@604)) (= ($generated@@285 $generated@@603) 0)) (= $generated@@603 ($generated@@284 $generated@@604))))
 :pattern ( ($generated@@285 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@81 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@304 ($generated@@87 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@304 $generated@@605) ($generated ($generated@@86 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@304 ($generated@@87 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@610) $generated@@2)) ($generated@@79 $generated@@610 $generated@@46 $generated@@609))
 :pattern ( ($generated@@79 $generated@@610 $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@3)) ($generated@@79 $generated@@612 $generated@@47 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@47 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@614) $generated@@4)) ($generated@@79 $generated@@614 $generated@@44 $generated@@613))
 :pattern ( ($generated@@79 $generated@@614 $generated@@44 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@616) $generated@@466)) ($generated@@79 $generated@@616 $generated@@45 $generated@@615))
 :pattern ( ($generated@@79 $generated@@616 $generated@@45 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@618) $generated@@158)) ($generated@@79 $generated@@618 $generated@@48 $generated@@617))
 :pattern ( ($generated@@79 $generated@@618 $generated@@48 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@259 $generated@@158)) (= (type $generated@@620) $generated@@69)) (= ($generated@@141 $generated@@619 ($generated@@258 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@285 $generated@@619))) ($generated@@229 ($generated@@354 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@354 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@141 $generated@@619 ($generated@@258 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@259 $generated@@158)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@285 $generated@@623))) (< ($generated@@543 ($generated@@349 $generated@@138 ($generated@@354 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@543 ($generated@@349 $generated@@138 ($generated@@354 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@626) $generated@@69)) (= (type $generated@@627) $generated@@69)) ($generated@@141 $generated@@625 ($generated@@426 $generated@@626 $generated@@627))) (and (and ($generated@@141 ($generated@@310 $generated@@625) ($generated@@241 $generated@@626)) ($generated@@141 ($generated@@366 $generated@@625) ($generated@@241 $generated@@627))) ($generated@@141 ($generated@@400 $generated@@625) ($generated@@241 ($generated@@149 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@141 $generated@@625 ($generated@@426 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@330 $generated@@158 $generated@@158)) (= (type $generated@@629) $generated@@69)) (= (type $generated@@630) $generated@@69)) ($generated@@141 $generated@@628 ($generated@@434 $generated@@629 $generated@@630))) (and (and ($generated@@141 ($generated@@328 $generated@@628) ($generated@@246 $generated@@629)) ($generated@@141 ($generated@@377 $generated@@628) ($generated@@246 $generated@@630))) ($generated@@141 ($generated@@408 $generated@@628) ($generated@@246 ($generated@@149 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@141 $generated@@628 ($generated@@434 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@141 $generated@@631 $generated@@46))
 :pattern ( ($generated@@141 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@141 $generated@@632 $generated@@47))
 :pattern ( ($generated@@141 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@141 $generated@@633 $generated@@44))
 :pattern ( ($generated@@141 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@466) ($generated@@141 $generated@@634 $generated@@45))
 :pattern ( ($generated@@141 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@158) ($generated@@141 $generated@@635 $generated@@48))
 :pattern ( ($generated@@141 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () Bool)
(declare-fun $generated@@647 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@636) ($generated@@170 $generated@@82 $generated@@4)) (= (type $generated@@637) $generated@@82)) (= (type $generated@@638) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@639) $generated@@138)) (= (type $generated@@640) $generated@@138)) (= (type $generated@@641) $generated@@138)) (= (type $generated@@642) $generated@@158)) (= (type $generated@@643) $generated@@158)) (= (type $generated@@644) $generated@@158)) (= (type $generated@@647) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@648  (=> (= $generated@@636 ($generated@@169 $generated@@637 $generated@@638 $generated@@60 false)) (=> (and ($generated@@141 $generated@@639 $generated@@224) ($generated@@79 $generated@@639 $generated@@224 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@251 0)) (< ($generated@@251 0) ($generated@@285 ($generated@@257 ($generated@@284 $generated@@158) ($generated@@299 $generated@@640)))))) (=> (and (<= 0 ($generated@@251 0)) (< ($generated@@251 0) ($generated@@285 ($generated@@257 ($generated@@284 $generated@@158) ($generated@@299 $generated@@640))))) (=> (= $generated@@641 ($generated@@349 $generated@@138 ($generated@@354 ($generated@@257 ($generated@@284 $generated@@158) ($generated@@299 $generated@@640)) ($generated@@251 0)))) (=> (and (and (and ($generated@@141 $generated@@641 $generated@@224) (= $generated@@639 $generated@@641)) (and ($generated@@229 $generated@@642 $generated@@387) ($generated@@271 $generated@@642 $generated@@387 $generated@@638))) (and (and (= $generated@@643 $generated@@644) ($generated@@229 $generated@@643 $generated@@387)) (and (= $generated@@642 $generated@@643) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@141 (let (($generated@@649 $generated@@644))
($generated@@292 $generated@@649)) $generated@@224)))))))))
(let (($generated@@650  (=> (and ($generated@@270 $generated@@638) ($generated@@645 $generated@@638)) (=> (and (and (and (and ($generated@@141 $generated@@640 $generated@@224) ($generated@@79 $generated@@640 $generated@@224 $generated@@638)) ($generated@@137 $generated@@640)) (and ($generated@@229 $generated@@644 $generated@@387) ($generated@@271 $generated@@644 $generated@@387 $generated@@638))) (and (and (=> $generated@@646 (and ($generated@@141 $generated@@647 $generated@@224) ($generated@@79 $generated@@647 $generated@@224 $generated@@638))) true) (and (= 3 $generated@@143) (= (ControlFlow 0 4) 2)))) $generated@@648))))
$generated@@650)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@161 (Int) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (Int) Int)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U) Bool)
(declare-fun $generated@@304 (T@U T@U T@U) Bool)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@329 (Int) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U Int Int) T@U)
(declare-fun $generated@@352 (T@U Int Int) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@368 (T@U) Int)
(declare-fun $generated@@369 (T@T) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) Bool)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@555 (T@U Int) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@686 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@76 $generated@@81))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@75)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@79)) (= (type $generated@@73) $generated@@79)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@87) 11) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@104 $generated@@105)) 12))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@94 ($generated@@88 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@88 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@95 ($generated@@88 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@88 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@95 (type $generated@@110))))
(= (type ($generated@@96 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@96 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@97 $generated@@113 $generated@@114 $generated@@115)) ($generated@@88 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@97 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@95 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@96 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@77 (type $generated@@131))))
(= (type ($generated@@98 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@98 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@99 $generated@@133 $generated@@134 $generated@@135)) $generated@@90)
 :pattern ( ($generated@@99 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@77 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@98 $generated@@145 $generated@@147)))
 :weight 0
)))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@1 ($generated@@100 $generated@@148 $generated@@149)) 15))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@101 ($generated@@100 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@100 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@102 ($generated@@100 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@100 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@103) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@83 $generated@@154)) ($generated@@100 $generated@@103 $generated@@103))
 :pattern ( ($generated@@83 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@84 $generated@@155 $generated@@156)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@155 $generated@@156))
))) (= (type $generated@@85) $generated@@74)) (= (type $generated@@86) $generated@@74)) (= (type $generated@@93) $generated@@74)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@87) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@158) (and ($generated@@92 $generated@@157) ($generated@@82 $generated@@157 $generated@@93 $generated@@158)))) ($generated@@82 ($generated@@83 $generated@@157) ($generated@@84 $generated@@85 $generated@@86) $generated@@158))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@157) ($generated@@84 $generated@@85 $generated@@86) $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@75)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (= ($generated@@159 $generated@@44) $generated@@49))
(assert (= ($generated@@159 $generated@@45) $generated@@50))
(assert (= ($generated@@159 $generated@@46) $generated@@51))
(assert (= ($generated@@159 $generated@@47) $generated@@52))
(assert (= ($generated@@159 $generated@@48) $generated@@53))
(assert (forall (($generated@@162 Int) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@2) (= (type $generated@@164) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@82 $generated@@163 ($generated@@161 0) $generated@@164))
 :pattern ( ($generated@@82 $generated@@163 ($generated@@161 0) $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@2) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@82 $generated@@165 $generated@@85 $generated@@166))
 :pattern ( ($generated@@82 $generated@@165 $generated@@85 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@161 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@161 0)))
)))
(assert (= (type $generated@@172) $generated@@74))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@87) (or ($generated@@171 $generated@@173) (and (not (= 0 $generated@@169)) ($generated@@167 $generated@@173 $generated@@172)))) true)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@74)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@74) (= (type $generated@@179) $generated@@74)) (= (type $generated@@180) $generated@@87)) ($generated@@167 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@167 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@103)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@103)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@87) (= (type $generated@@187) $generated@@87)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@74)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@88 $generated@@103 $generated@@2)) (= (type $generated@@192) $generated@@74)) ($generated@@167 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@167 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@89 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@77 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@89) (= (type $generated@@243) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@244) ($generated@@76 $generated@@4))) (= (type $generated@@246) $generated@@89)) (= (type $generated@@247) ($generated@@76 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@195 $generated@@89 $generated@@4))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@77 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@89) (= (type $generated@@255) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@256) ($generated@@76 $generated@@4))) (= (type $generated@@258) $generated@@89)) (= (type $generated@@259) ($generated@@76 $generated@@260))) (= ($generated@@0 ($generated@@193 ($generated@@249 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@193 ($generated@@249 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@87) (= (type $generated@@262) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@261 $generated@@86 $generated@@262) ($generated@@82 $generated@@261 $generated@@172 $generated@@262)))
 :pattern ( ($generated@@82 $generated@@261 $generated@@86 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@87) ($generated@@167 $generated@@264 $generated@@172)) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@263 $generated@@264) ($generated@@167 $generated@@264 $generated@@172))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@87) ($generated@@167 $generated@@265 $generated@@93)) ($generated@@92 $generated@@265))
 :pattern ( ($generated@@92 $generated@@265) ($generated@@167 $generated@@265 $generated@@93))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@87)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@74) (= (type $generated@@271) $generated@@74)) (= (type $generated@@272) $generated@@103)) (= (type $generated@@273) $generated@@103)) (= ($generated@@167 ($generated@@266 $generated@@272 $generated@@273) ($generated@@175 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@167 ($generated@@266 $generated@@272 $generated@@273) ($generated@@175 $generated@@270 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@87) (= (type $generated@@275) $generated@@87)) (= ($generated@@181 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@181 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@87) (= (type $generated@@278) $generated@@87)) (= ($generated@@276 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@87) (= (type $generated@@281) $generated@@87)) (= ($generated@@279 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@74)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@285) $generated@@74)) (= ($generated@@167 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@103) ($generated@@0 ($generated@@96 $generated@@284 $generated@@286))) ($generated@@267 $generated@@286 $generated@@285))
 :pattern ( ($generated@@96 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@167 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@74)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@290) $generated@@74)) (= ($generated@@167 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@103) ($generated@@0 ($generated@@96 $generated@@289 $generated@@291))) ($generated@@267 $generated@@291 $generated@@290))
 :pattern ( ($generated@@96 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@167 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@293 Int) ) (! (= ($generated@@292 $generated@@293) $generated@@293)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
(= (type ($generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= ($generated@@294 $generated@@297) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301)) $generated@@87)
 :pattern ( ($generated@@298 $generated@@300 $generated@@301))
)))
(assert  (=> (<= 3 $generated@@169) (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@87) (= (type $generated@@303) $generated@@87)) (or ($generated@@299 $generated@@302 $generated@@303) (and (not (= 3 $generated@@169)) (and ($generated@@167 $generated@@302 $generated@@93) ($generated@@167 $generated@@303 $generated@@86))))) (= ($generated@@298 $generated@@302 $generated@@303) $generated@@303))
 :pattern ( ($generated@@298 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) $generated@@74) (= (type $generated@@306) $generated@@74)) (= (type $generated@@307) $generated@@103)) (= (type $generated@@308) $generated@@103)) (= (type $generated@@309) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@91 $generated@@309)) (= ($generated@@82 ($generated@@266 $generated@@307 $generated@@308) ($generated@@175 $generated@@305 $generated@@306) $generated@@309)  (and ($generated@@304 $generated@@307 $generated@@305 $generated@@309) ($generated@@304 $generated@@308 $generated@@306 $generated@@309))))
 :pattern ( ($generated@@82 ($generated@@266 $generated@@307 $generated@@308) ($generated@@175 $generated@@305 $generated@@306) $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@78)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@87) (= ($generated@@174 $generated@@312) (= ($generated@@310 $generated@@312) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@87) (= ($generated@@263 $generated@@313) (= ($generated@@310 $generated@@313) $generated@@66)))
 :pattern ( ($generated@@263 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@87) (= ($generated@@92 $generated@@314) (= ($generated@@310 $generated@@314) $generated@@67)))
 :pattern ( ($generated@@92 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@87) ($generated@@174 $generated@@315)) (exists (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@103) (= (type $generated@@317) $generated@@103)) (= $generated@@315 ($generated@@266 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@174 $generated@@315))
)))
(assert  (and (and (forall (($generated@@322 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@322)) 18)) (forall (($generated@@323 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@320 $generated@@323))
))) (forall (($generated@@324 T@T) ) (! (= (type ($generated@@318 $generated@@324)) ($generated@@320 $generated@@324))
 :pattern ( ($generated@@318 $generated@@324))
))))
(assert (forall (($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@325)) 0)
 :pattern ( ($generated@@318 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) $generated@@87) (= (type $generated@@328) $generated@@87)) true) (= ($generated@@276 $generated@@327 $generated@@328) (= ($generated@@326 $generated@@327) ($generated@@326 $generated@@328))))
 :pattern ( ($generated@@276 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 Int) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@87)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@87) ($generated@@263 $generated@@331)) (exists (($generated@@332 Int) ) (= $generated@@331 ($generated@@329 $generated@@332))))
 :pattern ( ($generated@@263 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@87)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@87) ($generated@@92 $generated@@335)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) ($generated@@100 $generated@@103 $generated@@103)) (= $generated@@335 ($generated@@333 $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))
 :pattern ( ($generated@@92 $generated@@335))
)))
(assert  (and (and (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@101 (type $generated@@341))))
(= (type ($generated@@337 $generated@@341)) ($generated@@88 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@341))
)) (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@339 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@339 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@102 (type $generated@@345))))
(let (($generated@@347 ($generated@@101 (type $generated@@345))))
(= (type ($generated@@340 $generated@@345)) ($generated@@88 $generated@@347 $generated@@346))))
 :pattern ( ($generated@@340 $generated@@345))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@349) $generated@@103)) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@348) $generated@@349))) (< ($generated@@338 ($generated@@339 $generated@@87 ($generated@@96 ($generated@@340 $generated@@348) $generated@@349))) ($generated@@338 ($generated@@333 $generated@@348))))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@348) $generated@@349) ($generated@@333 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@2) (= ($generated@@167 $generated@@350 $generated@@85) (<= ($generated@@292 0) ($generated $generated@@350))))
 :pattern ( ($generated@@167 $generated@@350 $generated@@85))
)))
(assert  (and (forall (($generated@@354 T@U) ($generated@@355 Int) ($generated@@356 Int) ) (! (= (type ($generated@@351 $generated@@354 $generated@@355 $generated@@356)) $generated@@87)
 :pattern ( ($generated@@351 $generated@@354 $generated@@355 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (= (type ($generated@@353 $generated@@357)) $generated@@103)
 :pattern ( ($generated@@353 $generated@@357))
))))
(assert  (=> (<= 4 $generated@@169) (forall (($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 Int) ) (!  (=> (and (= (type $generated@@358) $generated@@87) (or ($generated@@352 ($generated@@294 $generated@@358) ($generated@@292 $generated@@359) ($generated@@292 $generated@@360)) (and (not (= 4 $generated@@169)) (and (and (and ($generated@@167 $generated@@358 $generated@@93) (<= ($generated@@292 0) $generated@@359)) (<= ($generated@@292 0) $generated@@360)) ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@83 ($generated@@294 $generated@@358))) ($generated@@353 ($generated@@8 $generated@@359)))))))) (and (and ($generated@@92 ($generated@@294 $generated@@358)) ($generated@@299 ($generated@@294 $generated@@358) (let (($generated@@361 ($generated@@292 $generated@@360)))
($generated@@294 ($generated@@329 $generated@@361))))) (= ($generated@@351 ($generated@@294 $generated@@358) ($generated@@292 $generated@@359) ($generated@@292 $generated@@360)) ($generated@@298 ($generated@@294 $generated@@358) (let (($generated@@362 ($generated@@292 $generated@@360)))
($generated@@294 ($generated@@329 $generated@@362)))))))
 :weight 3
 :pattern ( ($generated@@351 ($generated@@294 $generated@@358) ($generated@@292 $generated@@359) ($generated@@292 $generated@@360)))
))))
(assert  (=> (<= 3 $generated@@169) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@87) (= (type $generated@@364) $generated@@87)) (or ($generated@@299 $generated@@363 $generated@@364) (and (not (= 3 $generated@@169)) (and ($generated@@167 $generated@@363 $generated@@93) ($generated@@167 $generated@@364 $generated@@86))))) ($generated@@167 ($generated@@298 $generated@@363 $generated@@364) $generated@@86))
 :pattern ( ($generated@@298 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@74) (= (type $generated@@367) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@304 ($generated@@353 $generated@@365) $generated@@366 $generated@@367) ($generated@@82 $generated@@365 $generated@@366 $generated@@367)))
 :pattern ( ($generated@@304 ($generated@@353 $generated@@365) $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@370 T@T) ) (! (= (type ($generated@@369 $generated@@370)) ($generated@@88 $generated@@370 $generated@@2))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@94 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@88 $generated@@372 $generated@@2)) (and (= (= ($generated@@368 $generated@@371) 0) (= $generated@@371 ($generated@@369 $generated@@372))) (=> (not (= ($generated@@368 $generated@@371) 0)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (< 0 ($generated ($generated@@96 $generated@@371 $generated@@373))))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) ($generated@@100 $generated@@375 $generated@@376))
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@374 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@96 ($generated@@337 ($generated@@374 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 19)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@88 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@96 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@96 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@94 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@88 $generated@@399 $generated@@2)) (= ($generated@@189 $generated@@398) (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@399) (and (<= 0 ($generated ($generated@@96 $generated@@398 $generated@@400))) (<= ($generated ($generated@@96 $generated@@398 $generated@@400)) ($generated@@368 $generated@@398))))
 :pattern ( ($generated@@96 $generated@@398 $generated@@400))
)))))
 :pattern ( ($generated@@189 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@103) ($generated@@267 $generated@@401 $generated@@85)) (and (= ($generated@@353 ($generated@@339 $generated@@2 $generated@@401)) $generated@@401) ($generated@@167 ($generated@@339 $generated@@2 $generated@@401) $generated@@85)))
 :pattern ( ($generated@@267 $generated@@401 $generated@@85))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@103) ($generated@@267 $generated@@402 $generated@@172)) (and (= ($generated@@353 ($generated@@339 $generated@@87 $generated@@402)) $generated@@402) ($generated@@167 ($generated@@339 $generated@@87 $generated@@402) $generated@@172)))
 :pattern ( ($generated@@267 $generated@@402 $generated@@172))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@103) ($generated@@267 $generated@@403 $generated@@86)) (and (= ($generated@@353 ($generated@@339 $generated@@87 $generated@@403)) $generated@@403) ($generated@@167 ($generated@@339 $generated@@87 $generated@@403) $generated@@86)))
 :pattern ( ($generated@@267 $generated@@403 $generated@@86))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@103) ($generated@@267 $generated@@404 $generated@@93)) (and (= ($generated@@353 ($generated@@339 $generated@@87 $generated@@404)) $generated@@404) ($generated@@167 ($generated@@339 $generated@@87 $generated@@404) $generated@@93)))
 :pattern ( ($generated@@267 $generated@@404 $generated@@93))
)))
(assert (forall (($generated@@405 Int) ) (! (= ($generated@@167 ($generated@@329 $generated@@405) $generated@@172) ($generated@@167 ($generated@@8 $generated@@405) $generated@@85))
 :pattern ( ($generated@@167 ($generated@@329 $generated@@405) $generated@@172))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@102 (type $generated@@406))))
(let (($generated@@408 ($generated@@101 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@100 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@374 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@337 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@102 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@88 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@102 (type $generated@@413))))
(let (($generated@@415 ($generated@@101 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@100 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@374 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@96 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@384 (type $generated@@417))))
(let (($generated@@419 ($generated@@383 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@382 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@381 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@96 ($generated@@380 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@380 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@384 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@88 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@384 (type $generated@@424))))
(let (($generated@@426 ($generated@@383 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@382 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@381 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@96 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@88 $generated@@103 $generated@@2)) (= (type $generated@@429) $generated@@74)) (= ($generated@@167 $generated@@428 ($generated@@188 $generated@@429)) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@103) (< 0 ($generated ($generated@@96 $generated@@428 $generated@@430)))) ($generated@@267 $generated@@430 $generated@@429))
 :pattern ( ($generated@@96 $generated@@428 $generated@@430))
))))
 :pattern ( ($generated@@167 $generated@@428 ($generated@@188 $generated@@429)))
)))
(assert  (=> (<= 4 $generated@@169) (forall (($generated@@431 T@U) ($generated@@432 Int) ($generated@@433 Int) ) (!  (=> (and (= (type $generated@@431) $generated@@87) (or ($generated@@352 $generated@@431 $generated@@432 $generated@@433) (and (not (= 4 $generated@@169)) (and (and (and ($generated@@167 $generated@@431 $generated@@93) (<= ($generated@@292 0) $generated@@432)) (<= ($generated@@292 0) $generated@@433)) ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@83 $generated@@431)) ($generated@@353 ($generated@@8 $generated@@432)))))))) ($generated@@167 ($generated@@351 $generated@@431 $generated@@432 $generated@@433) $generated@@86))
 :pattern ( ($generated@@351 $generated@@431 $generated@@432 $generated@@433))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@435) $generated@@74)) (= (type $generated@@436) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@434 ($generated@@282 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@103) ($generated@@0 ($generated@@96 $generated@@434 $generated@@437))) ($generated@@304 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@96 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@434 ($generated@@282 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@439) $generated@@74)) (= (type $generated@@440) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@438 ($generated@@287 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@103) ($generated@@0 ($generated@@96 $generated@@438 $generated@@441))) ($generated@@304 $generated@@441 $generated@@439 $generated@@440))
 :pattern ( ($generated@@96 $generated@@438 $generated@@441))
))))
 :pattern ( ($generated@@82 $generated@@438 ($generated@@287 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(= ($generated ($generated@@96 ($generated@@369 $generated@@443) $generated@@442)) 0))
 :pattern ( (let (($generated@@443 (type $generated@@442)))
($generated@@96 ($generated@@369 $generated@@443) $generated@@442)))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@88 $generated@@103 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@447) $generated@@103)) (= ($generated@@0 ($generated@@96 ($generated@@444 $generated@@446) $generated@@447))  (and ($generated@@0 ($generated@@96 ($generated@@337 $generated@@446) ($generated@@182 ($generated@@339 $generated@@87 $generated@@447)))) (= ($generated@@96 ($generated@@340 $generated@@446) ($generated@@182 ($generated@@339 $generated@@87 $generated@@447))) ($generated@@183 ($generated@@339 $generated@@87 $generated@@447))))))
 :pattern ( ($generated@@96 ($generated@@444 $generated@@446) $generated@@447))
)))
(assert  (and (forall (($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@450)) ($generated@@88 $generated@@103 $generated@@4))
 :pattern ( ($generated@@448 $generated@@450))
)) (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@384 (type $generated@@451))))
(let (($generated@@453 ($generated@@383 (type $generated@@451))))
(= (type ($generated@@449 $generated@@451)) ($generated@@88 $generated@@453 $generated@@452))))
 :pattern ( ($generated@@449 $generated@@451))
))))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@382 $generated@@103 $generated@@103)) (= (type $generated@@455) $generated@@103)) (= ($generated@@0 ($generated@@96 ($generated@@448 $generated@@454) $generated@@455))  (and ($generated@@0 ($generated@@96 ($generated@@380 $generated@@454) ($generated@@182 ($generated@@339 $generated@@87 $generated@@455)))) (= ($generated@@96 ($generated@@449 $generated@@454) ($generated@@182 ($generated@@339 $generated@@87 $generated@@455))) ($generated@@183 ($generated@@339 $generated@@87 $generated@@455))))))
 :pattern ( ($generated@@96 ($generated@@448 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@101 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@100 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@96 ($generated@@410 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@96 ($generated@@337 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@96 ($generated@@340 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@456) $generated@@460))
 :pattern ( ($generated@@96 ($generated@@340 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@96 ($generated@@410 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@383 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@382 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@96 ($generated@@421 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@96 ($generated@@380 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@96 ($generated@@449 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@96 ($generated@@380 $generated@@461) $generated@@465))
 :pattern ( ($generated@@96 ($generated@@449 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@96 ($generated@@421 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@467) $generated@@74)) (= (type $generated@@468) $generated@@74)) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@466 ($generated@@84 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@466) $generated@@470))) (and ($generated@@304 ($generated@@96 ($generated@@340 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@304 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@96 ($generated@@340 $generated@@466) $generated@@470))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@82 $generated@@466 ($generated@@84 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@74)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@382 $generated@@103 $generated@@103)) (= (type $generated@@475) $generated@@74)) (= (type $generated@@476) $generated@@74)) (= (type $generated@@477) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@380 $generated@@474) $generated@@478))) (and ($generated@@304 ($generated@@96 ($generated@@449 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@304 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@96 ($generated@@449 $generated@@474) $generated@@478))
 :pattern ( ($generated@@96 ($generated@@380 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@82 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@102 (type $generated@@480))))
(let (($generated@@483 ($generated@@101 (type $generated@@480))))
 (=> (and (and (= (type $generated@@480) ($generated@@100 $generated@@483 $generated@@482)) (= (type $generated@@481) ($generated@@100 $generated@@483 $generated@@482))) ($generated@@479 $generated@@480 $generated@@481)) (= $generated@@480 $generated@@481))))
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@484 Int) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@91 $generated@@485)) (= ($generated@@82 ($generated@@329 $generated@@484) $generated@@172 $generated@@485) ($generated@@82 ($generated@@8 $generated@@484) $generated@@85 $generated@@485)))
 :pattern ( ($generated@@82 ($generated@@329 $generated@@484) $generated@@172 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@167 ($generated@@333 $generated@@486) $generated@@93) ($generated@@167 $generated@@486 ($generated@@84 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@167 ($generated@@333 $generated@@486) $generated@@93))
)))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@88 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@384 (type $generated@@489))))
(let (($generated@@491 ($generated@@383 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@382 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@381 $generated@@491 $generated@@490)) (= ($generated@@380 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@380 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@384 (type $generated@@492))))
(let (($generated@@494 ($generated@@383 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@382 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@381 $generated@@494 $generated@@493)) (= ($generated@@421 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@421 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@384 (type $generated@@495))))
(let (($generated@@497 ($generated@@383 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@382 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@381 $generated@@497 $generated@@496)) (= ($generated@@448 $generated@@495) ($generated@@487 $generated@@103))))))
 :pattern ( ($generated@@448 $generated@@495))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@87) (or ($generated@@171 $generated@@498) (and (not (= 0 $generated@@169)) ($generated@@167 $generated@@498 $generated@@172)))) (and ($generated@@263 $generated@@498) (= ($generated@@170 $generated@@498) (= ($generated@@326 $generated@@498) ($generated@@292 0)))))
 :pattern ( ($generated@@170 $generated@@498))
))))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@102 (type $generated@@499))))
(let (($generated@@501 ($generated@@101 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@100 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@374 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@103) (= (type $generated@@503) $generated@@103)) ($generated@@0 ($generated@@96 ($generated@@444 $generated@@499) ($generated@@353 ($generated@@266 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@444 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@384 (type $generated@@504))))
(let (($generated@@506 ($generated@@383 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@382 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@381 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@103) (= (type $generated@@508) $generated@@103)) ($generated@@0 ($generated@@96 ($generated@@448 $generated@@504) ($generated@@353 ($generated@@266 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@448 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@103) ($generated@@267 $generated@@509 $generated@@46)) (and (= ($generated@@353 ($generated@@339 $generated@@2 $generated@@509)) $generated@@509) ($generated@@167 ($generated@@339 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@103) ($generated@@267 $generated@@510 $generated@@47)) (and (= ($generated@@353 ($generated@@339 $generated@@3 $generated@@510)) $generated@@510) ($generated@@167 ($generated@@339 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@103) ($generated@@267 $generated@@511 $generated@@44)) (and (= ($generated@@353 ($generated@@339 $generated@@4 $generated@@511)) $generated@@511) ($generated@@167 ($generated@@339 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 20))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@103) ($generated@@267 $generated@@513 $generated@@45)) (and (= ($generated@@353 ($generated@@339 $generated@@512 $generated@@513)) $generated@@513) ($generated@@167 ($generated@@339 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@74) (= ($generated@@267 ($generated@@353 $generated@@514) $generated@@515) ($generated@@167 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@267 ($generated@@353 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@94 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@88 $generated@@517 $generated@@2)) (<= 0 ($generated@@368 $generated@@516))))
 :pattern ( ($generated@@368 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@321 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@320 $generated@@519)) (<= 0 ($generated@@319 $generated@@518))))
 :pattern ( ($generated@@319 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@74)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@74) (= (type $generated@@523) $generated@@74)) (= ($generated@@520 ($generated@@84 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@84 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@74)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@74) (= (type $generated@@527) $generated@@74)) (= ($generated@@524 ($generated@@84 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@84 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@74) (= (type $generated@@529) $generated@@74)) (= ($generated@@159 ($generated@@84 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@84 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@74)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@74) (= (type $generated@@533) $generated@@74)) (= ($generated@@530 ($generated@@471 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@471 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@74) (= (type $generated@@537) $generated@@74)) (= ($generated@@534 ($generated@@471 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@471 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@74) (= (type $generated@@539) $generated@@74)) (= ($generated@@159 ($generated@@471 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@471 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@103) (= (type $generated@@541) $generated@@103)) (= ($generated@@310 ($generated@@266 $generated@@540 $generated@@541)) $generated@@62))
 :pattern ( ($generated@@266 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@74)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@74) (= (type $generated@@545) $generated@@74)) (= ($generated@@542 ($generated@@175 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@175 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@74)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@74) (= (type $generated@@549) $generated@@74)) (= ($generated@@546 ($generated@@175 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@175 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@103) (= (type $generated@@551) $generated@@103)) (= ($generated@@182 ($generated@@266 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@266 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@103) (= (type $generated@@553) $generated@@103)) (= ($generated@@183 ($generated@@266 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@266 $generated@@552 $generated@@553))
)))
(assert  (and (forall (($generated@@556 T@U) ) (! (= (type ($generated@@554 $generated@@556)) $generated@@74)
 :pattern ( ($generated@@554 $generated@@556))
)) (forall (($generated@@557 T@U) ($generated@@558 Int) ) (! (let (($generated@@559 ($generated@@321 (type $generated@@557))))
(= (type ($generated@@555 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@555 $generated@@557 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@320 $generated@@103)) (= (type $generated@@561) $generated@@74)) (= (type $generated@@562) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@560 ($generated@@554 $generated@@561) $generated@@562) (forall (($generated@@563 Int) ) (!  (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@319 $generated@@560))) ($generated@@304 ($generated@@555 $generated@@560 $generated@@563) $generated@@561 $generated@@562))
 :pattern ( ($generated@@555 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@82 $generated@@560 ($generated@@554 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@564 ($generated@@161 $generated@@565)) $generated@@565)
 :pattern ( ($generated@@161 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@74)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@74) (= ($generated@@566 ($generated@@282 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@282 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@74) (= ($generated@@159 ($generated@@282 $generated@@569)) $generated@@54))
 :pattern ( ($generated@@282 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@74)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@74) (= ($generated@@570 ($generated@@287 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@287 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@74) (= ($generated@@159 ($generated@@287 $generated@@573)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@74)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@74) (= ($generated@@574 ($generated@@188 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@188 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@74) (= ($generated@@159 ($generated@@188 $generated@@577)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@74)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@74) (= ($generated@@578 ($generated@@554 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@554 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@74) (= ($generated@@159 ($generated@@554 $generated@@581)) $generated@@57))
 :pattern ( ($generated@@554 $generated@@581))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@310 ($generated@@329 $generated@@582)) $generated@@66)
 :pattern ( ($generated@@329 $generated@@582))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@326 ($generated@@329 $generated@@583)) $generated@@583)
 :pattern ( ($generated@@329 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@310 ($generated@@333 $generated@@584)) $generated@@67))
 :pattern ( ($generated@@333 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@83 ($generated@@333 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@333 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@339 $generated@@587 ($generated@@353 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@353 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@589) $generated@@74)) (= (type $generated@@590) $generated@@74)) (= ($generated@@167 $generated@@588 ($generated@@84 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@588) $generated@@591))) (and ($generated@@267 ($generated@@96 ($generated@@340 $generated@@588) $generated@@591) $generated@@590) ($generated@@267 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@96 ($generated@@340 $generated@@588) $generated@@591))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@167 $generated@@588 ($generated@@84 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@382 $generated@@103 $generated@@103)) (= (type $generated@@593) $generated@@74)) (= (type $generated@@594) $generated@@74)) (= ($generated@@167 $generated@@592 ($generated@@471 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@380 $generated@@592) $generated@@595))) (and ($generated@@267 ($generated@@96 ($generated@@449 $generated@@592) $generated@@595) $generated@@594) ($generated@@267 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@96 ($generated@@449 $generated@@592) $generated@@595))
 :pattern ( ($generated@@96 ($generated@@380 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@167 $generated@@592 ($generated@@471 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@103) (= (type $generated@@598) $generated@@103)) (< ($generated@@596 $generated@@597) ($generated@@338 ($generated@@266 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@266 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@103) (= (type $generated@@600) $generated@@103)) (< ($generated@@596 $generated@@600) ($generated@@338 ($generated@@266 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@266 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@602) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@91 $generated@@602)) (= ($generated@@82 ($generated@@333 $generated@@601) $generated@@93 $generated@@602) ($generated@@82 $generated@@601 ($generated@@84 $generated@@85 $generated@@86) $generated@@602)))
 :pattern ( ($generated@@82 ($generated@@333 $generated@@601) $generated@@93 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@87) (= (type $generated@@604) $generated@@87)) true) (= ($generated@@279 $generated@@603 $generated@@604) ($generated@@479 ($generated@@83 $generated@@603) ($generated@@83 $generated@@604))))
 :pattern ( ($generated@@279 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@103) (= (type $generated@@606) $generated@@74)) (= (type $generated@@607) $generated@@74)) ($generated@@267 $generated@@605 ($generated@@84 $generated@@606 $generated@@607))) (and (= ($generated@@353 ($generated@@339 ($generated@@100 $generated@@103 $generated@@103) $generated@@605)) $generated@@605) ($generated@@167 ($generated@@339 ($generated@@100 $generated@@103 $generated@@103) $generated@@605) ($generated@@84 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@267 $generated@@605 ($generated@@84 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@103) (= (type $generated@@609) $generated@@74)) (= (type $generated@@610) $generated@@74)) ($generated@@267 $generated@@608 ($generated@@471 $generated@@609 $generated@@610))) (and (= ($generated@@353 ($generated@@339 ($generated@@382 $generated@@103 $generated@@103) $generated@@608)) $generated@@608) ($generated@@167 ($generated@@339 ($generated@@382 $generated@@103 $generated@@103) $generated@@608) ($generated@@471 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@267 $generated@@608 ($generated@@471 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@74) (= (type $generated@@612) $generated@@74)) (= (type $generated@@613) $generated@@103)) ($generated@@267 $generated@@613 ($generated@@175 $generated@@611 $generated@@612))) (and (= ($generated@@353 ($generated@@339 $generated@@87 $generated@@613)) $generated@@613) ($generated@@167 ($generated@@339 $generated@@87 $generated@@613) ($generated@@175 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@267 $generated@@613 ($generated@@175 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@96 ($generated@@487 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@96 ($generated@@487 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@79)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@74) (= (type $generated@@619) $generated@@74)) (and (= ($generated@@159 ($generated@@175 $generated@@618 $generated@@619)) $generated@@63) (= ($generated@@616 ($generated@@175 $generated@@618 $generated@@619)) $generated@@70)))
 :pattern ( ($generated@@175 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@102 (type $generated@@620))))
(let (($generated@@623 ($generated@@101 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@100 $generated@@623 $generated@@622)) (= (type $generated@@621) ($generated@@100 $generated@@623 $generated@@622))) (= ($generated@@479 $generated@@620 $generated@@621)  (and (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@623) (= ($generated@@0 ($generated@@96 ($generated@@337 $generated@@620) $generated@@624)) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@621) $generated@@624))))
 :no-pattern (type $generated@@624)
 :no-pattern ($generated $generated@@624)
 :no-pattern ($generated@@0 $generated@@624)
)) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@623) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@620) $generated@@625))) (= ($generated@@96 ($generated@@340 $generated@@620) $generated@@625) ($generated@@96 ($generated@@340 $generated@@621) $generated@@625)))
 :no-pattern (type $generated@@625)
 :no-pattern ($generated $generated@@625)
 :no-pattern ($generated@@0 $generated@@625)
)))))))
 :pattern ( ($generated@@479 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@627) $generated@@87)) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@626) ($generated@@353 $generated@@627)))) (< ($generated@@338 $generated@@627) ($generated@@338 ($generated@@333 $generated@@626))))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@626) ($generated@@353 $generated@@627)) ($generated@@333 $generated@@626))
)))
(assert  (=> (<= 4 $generated@@169) (forall (($generated@@628 T@U) ($generated@@629 Int) ($generated@@630 Int) ) (!  (=> (and (= (type $generated@@628) $generated@@87) (or ($generated@@352 $generated@@628 $generated@@629 $generated@@630) (and (not (= 4 $generated@@169)) (and (and (and ($generated@@167 $generated@@628 $generated@@93) (<= ($generated@@292 0) $generated@@629)) (<= ($generated@@292 0) $generated@@630)) ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@83 $generated@@628)) ($generated@@353 ($generated@@8 $generated@@629)))))))) (and (and ($generated@@92 $generated@@628) ($generated@@299 $generated@@628 (let (($generated@@631 $generated@@630))
($generated@@329 $generated@@631)))) (= ($generated@@351 $generated@@628 $generated@@629 $generated@@630) ($generated@@298 $generated@@628 (let (($generated@@632 $generated@@630))
($generated@@329 $generated@@632))))))
 :pattern ( ($generated@@351 $generated@@628 $generated@@629 $generated@@630))
))))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@87) (= ($generated@@596 ($generated@@353 $generated@@633)) ($generated@@338 $generated@@633)))
 :pattern ( ($generated@@596 ($generated@@353 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@103) ($generated@@267 $generated@@634 ($generated@@161 0))) (and (= ($generated@@353 ($generated@@339 $generated@@2 $generated@@634)) $generated@@634) ($generated@@167 ($generated@@339 ($generated@@88 $generated@@103 $generated@@4) $generated@@634) ($generated@@161 0))))
 :pattern ( ($generated@@267 $generated@@634 ($generated@@161 0)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@103) (= (type $generated@@636) $generated@@74)) ($generated@@267 $generated@@635 ($generated@@282 $generated@@636))) (and (= ($generated@@353 ($generated@@339 ($generated@@88 $generated@@103 $generated@@4) $generated@@635)) $generated@@635) ($generated@@167 ($generated@@339 ($generated@@88 $generated@@103 $generated@@4) $generated@@635) ($generated@@282 $generated@@636))))
 :pattern ( ($generated@@267 $generated@@635 ($generated@@282 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@103) (= (type $generated@@638) $generated@@74)) ($generated@@267 $generated@@637 ($generated@@287 $generated@@638))) (and (= ($generated@@353 ($generated@@339 ($generated@@88 $generated@@103 $generated@@4) $generated@@637)) $generated@@637) ($generated@@167 ($generated@@339 ($generated@@88 $generated@@103 $generated@@4) $generated@@637) ($generated@@287 $generated@@638))))
 :pattern ( ($generated@@267 $generated@@637 ($generated@@287 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@103) (= (type $generated@@640) $generated@@74)) ($generated@@267 $generated@@639 ($generated@@188 $generated@@640))) (and (= ($generated@@353 ($generated@@339 ($generated@@88 $generated@@103 $generated@@2) $generated@@639)) $generated@@639) ($generated@@167 ($generated@@339 ($generated@@88 $generated@@103 $generated@@2) $generated@@639) ($generated@@188 $generated@@640))))
 :pattern ( ($generated@@267 $generated@@639 ($generated@@188 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@103) (= (type $generated@@642) $generated@@74)) ($generated@@267 $generated@@641 ($generated@@554 $generated@@642))) (and (= ($generated@@353 ($generated@@339 ($generated@@320 $generated@@103) $generated@@641)) $generated@@641) ($generated@@167 ($generated@@339 ($generated@@320 $generated@@103) $generated@@641) ($generated@@554 $generated@@642))))
 :pattern ( ($generated@@267 $generated@@641 ($generated@@554 $generated@@642)))
)))
(assert (= ($generated@@159 $generated@@85) $generated@@61))
(assert (= ($generated@@616 $generated@@85) $generated@@69))
(assert (= ($generated@@159 $generated@@172) $generated@@64))
(assert (= ($generated@@616 $generated@@172) $generated@@71))
(assert (= ($generated@@159 $generated@@86) $generated@@65))
(assert (= ($generated@@616 $generated@@86) $generated@@72))
(assert (= ($generated@@159 $generated@@93) $generated@@68))
(assert (= ($generated@@616 $generated@@93) $generated@@73))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@88 $generated@@103 $generated@@2)) (= (type $generated@@644) $generated@@74)) (= (type $generated@@645) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@643 ($generated@@188 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@103) (< 0 ($generated ($generated@@96 $generated@@643 $generated@@646)))) ($generated@@304 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@96 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@82 $generated@@643 ($generated@@188 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@87) (= (type $generated@@648) $generated@@74)) (= (type $generated@@649) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@649) (and ($generated@@174 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@74) ($generated@@82 $generated@@647 ($generated@@175 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@82 $generated@@647 ($generated@@175 $generated@@648 $generated@@650) $generated@@649))
))))) ($generated@@304 ($generated@@182 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@304 ($generated@@182 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@87) (= (type $generated@@652) $generated@@74)) (= (type $generated@@653) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@653) (and ($generated@@174 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@74) ($generated@@82 $generated@@651 ($generated@@175 $generated@@654 $generated@@652) $generated@@653))
 :pattern ( ($generated@@82 $generated@@651 ($generated@@175 $generated@@654 $generated@@652) $generated@@653))
))))) ($generated@@304 ($generated@@183 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@304 ($generated@@183 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@87) (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@656) (and ($generated@@263 $generated@@655) ($generated@@82 $generated@@655 $generated@@172 $generated@@656)))) ($generated@@82 ($generated@@8 ($generated@@326 $generated@@655)) $generated@@85 $generated@@656))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@326 $generated@@655)) $generated@@85 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@103) (= (type $generated@@658) $generated@@103)) (= ($generated@@266 ($generated@@294 $generated@@657) ($generated@@294 $generated@@658)) ($generated@@294 ($generated@@266 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@266 ($generated@@294 $generated@@657) ($generated@@294 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@87) (= ($generated@@167 $generated@@659 $generated@@86)  (and ($generated@@167 $generated@@659 $generated@@172) ($generated@@170 $generated@@659))))
 :pattern ( ($generated@@167 $generated@@659 $generated@@86))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@353 ($generated@@8 ($generated@@292 $generated@@660))) ($generated@@294 ($generated@@353 ($generated@@8 $generated@@660))))
 :pattern ( ($generated@@353 ($generated@@8 ($generated@@292 $generated@@660))))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@329 ($generated@@292 $generated@@661)) ($generated@@294 ($generated@@329 $generated@@661)))
 :pattern ( ($generated@@329 ($generated@@292 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@333 ($generated@@294 $generated@@662)) ($generated@@294 ($generated@@333 $generated@@662))))
 :pattern ( ($generated@@333 ($generated@@294 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@353 ($generated@@294 $generated@@663)) ($generated@@294 ($generated@@353 $generated@@663)))
 :pattern ( ($generated@@353 ($generated@@294 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@321 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@320 $generated@@665)) (= ($generated@@319 $generated@@664) 0)) (= $generated@@664 ($generated@@318 $generated@@665))))
 :pattern ( ($generated@@319 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@88 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@368 ($generated@@97 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@368 $generated@@666) ($generated ($generated@@96 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@368 ($generated@@97 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@87) (or ($generated@@171 ($generated@@294 $generated@@670)) (and (not (= 0 $generated@@169)) ($generated@@167 $generated@@670 $generated@@172)))) (and ($generated@@263 ($generated@@294 $generated@@670)) (= ($generated@@170 ($generated@@294 $generated@@670)) (= ($generated@@292 ($generated@@326 ($generated@@294 $generated@@670))) ($generated@@292 0)))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@294 $generated@@670)))
))))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@672) $generated@@2)) ($generated@@82 $generated@@672 $generated@@46 $generated@@671))
 :pattern ( ($generated@@82 $generated@@672 $generated@@46 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@674) $generated@@3)) ($generated@@82 $generated@@674 $generated@@47 $generated@@673))
 :pattern ( ($generated@@82 $generated@@674 $generated@@47 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@676) $generated@@4)) ($generated@@82 $generated@@676 $generated@@44 $generated@@675))
 :pattern ( ($generated@@82 $generated@@676 $generated@@44 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@678) $generated@@512)) ($generated@@82 $generated@@678 $generated@@45 $generated@@677))
 :pattern ( ($generated@@82 $generated@@678 $generated@@45 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@680) $generated@@103)) ($generated@@82 $generated@@680 $generated@@48 $generated@@679))
 :pattern ( ($generated@@82 $generated@@680 $generated@@48 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@320 $generated@@103)) (= (type $generated@@682) $generated@@74)) (= ($generated@@167 $generated@@681 ($generated@@554 $generated@@682)) (forall (($generated@@683 Int) ) (!  (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@319 $generated@@681))) ($generated@@267 ($generated@@555 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@555 $generated@@681 $generated@@683))
))))
 :pattern ( ($generated@@167 $generated@@681 ($generated@@554 $generated@@682)))
)))
(assert  (=> (<= 3 $generated@@169) (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@87) (= (type $generated@@685) $generated@@87)) (or ($generated@@299 ($generated@@294 $generated@@684) ($generated@@294 $generated@@685)) (and (not (= 3 $generated@@169)) (and ($generated@@167 $generated@@684 $generated@@93) ($generated@@167 $generated@@685 $generated@@86))))) (= ($generated@@298 ($generated@@294 $generated@@684) ($generated@@294 $generated@@685)) ($generated@@294 $generated@@685)))
 :weight 3
 :pattern ( ($generated@@298 ($generated@@294 $generated@@684) ($generated@@294 $generated@@685)))
))))
(assert (forall (($generated@@687 T@U) ($generated@@688 Int) ) (!  (=> (= (type $generated@@687) ($generated@@320 $generated@@103)) (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@319 $generated@@687))) (< ($generated@@338 ($generated@@339 $generated@@87 ($generated@@555 $generated@@687 $generated@@688))) ($generated@@686 $generated@@687))))
 :pattern ( ($generated@@338 ($generated@@339 $generated@@87 ($generated@@555 $generated@@687 $generated@@688))))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@690) $generated@@74)) (= (type $generated@@691) $generated@@74)) ($generated@@167 $generated@@689 ($generated@@84 $generated@@690 $generated@@691))) (and (and ($generated@@167 ($generated@@337 $generated@@689) ($generated@@282 $generated@@690)) ($generated@@167 ($generated@@410 $generated@@689) ($generated@@282 $generated@@691))) ($generated@@167 ($generated@@444 $generated@@689) ($generated@@282 ($generated@@175 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@167 $generated@@689 ($generated@@84 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) ($generated@@382 $generated@@103 $generated@@103)) (= (type $generated@@693) $generated@@74)) (= (type $generated@@694) $generated@@74)) ($generated@@167 $generated@@692 ($generated@@471 $generated@@693 $generated@@694))) (and (and ($generated@@167 ($generated@@380 $generated@@692) ($generated@@287 $generated@@693)) ($generated@@167 ($generated@@421 $generated@@692) ($generated@@287 $generated@@694))) ($generated@@167 ($generated@@448 $generated@@692) ($generated@@287 ($generated@@175 $generated@@693 $generated@@694)))))
 :pattern ( ($generated@@167 $generated@@692 ($generated@@471 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@2) ($generated@@167 $generated@@695 $generated@@46))
 :pattern ( ($generated@@167 $generated@@695 $generated@@46))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@3) ($generated@@167 $generated@@696 $generated@@47))
 :pattern ( ($generated@@167 $generated@@696 $generated@@47))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@4) ($generated@@167 $generated@@697 $generated@@44))
 :pattern ( ($generated@@167 $generated@@697 $generated@@44))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@512) ($generated@@167 $generated@@698 $generated@@45))
 :pattern ( ($generated@@167 $generated@@698 $generated@@45))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@103) ($generated@@167 $generated@@699 $generated@@48))
 :pattern ( ($generated@@167 $generated@@699 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () Int)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@700) ($generated@@195 $generated@@89 $generated@@4)) (= (type $generated@@701) $generated@@89)) (= (type $generated@@702) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@703) $generated@@87)) (= (type $generated@@704) $generated@@87)) (= (type $generated@@706) $generated@@87)) (= (type $generated@@710) ($generated@@195 $generated@@89 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@712  (=> (and (= $generated@@700 ($generated@@249 $generated@@701 $generated@@702 $generated@@60 false)) ($generated@@82 $generated@@703 $generated@@93 $generated@@702)) (=> (and (and ($generated@@167 $generated@@704 $generated@@86) ($generated@@82 $generated@@704 $generated@@86 $generated@@702)) ($generated@@92 $generated@@703)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@83 $generated@@703)) ($generated@@353 ($generated@@8 $generated@@705))))) (=> ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@83 $generated@@703)) ($generated@@353 ($generated@@8 $generated@@705)))) (=> (= $generated@@706 ($generated@@339 $generated@@87 ($generated@@96 ($generated@@340 ($generated@@83 $generated@@703)) ($generated@@353 ($generated@@8 $generated@@705))))) (=> (and (and (and ($generated@@92 $generated@@703) ($generated@@167 $generated@@706 $generated@@86)) (and (= $generated@@704 $generated@@706) (<= ($generated@@292 0) $generated@@707))) (and (and (= $generated@@708 $generated@@709) ($generated@@167 ($generated@@8 $generated@@708) $generated@@85)) (and (= $generated@@707 $generated@@708) (= (ControlFlow 0 3) (- 0 2))))) ($generated@@167 (let (($generated@@713 $generated@@709))
($generated@@329 $generated@@713)) $generated@@86)))))))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (= $generated@@710 ($generated@@194 $generated@@701 $generated@@702 $generated@@60 false)) (=> (and ($generated@@92 $generated@@703) ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@83 $generated@@703)) ($generated@@353 ($generated@@8 $generated@@705))))) (and (=> (= (ControlFlow 0 5) 1) $generated@@714) (=> (= (ControlFlow 0 5) 3) $generated@@712))))))
(let (($generated@@716  (=> (and (and (and ($generated@@91 $generated@@702) ($generated@@711 $generated@@702)) (and ($generated@@167 $generated@@703 $generated@@93) ($generated@@82 $generated@@703 $generated@@93 $generated@@702))) (and (and (<= ($generated@@292 0) $generated@@705) (<= ($generated@@292 0) $generated@@709)) (and (= 4 $generated@@169) (= (ControlFlow 0 6) 5)))) $generated@@715)))
$generated@@716)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@161 (Int) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@317 (Int) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U Int Int) T@U)
(declare-fun $generated@@340 (T@U Int Int) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@356 (T@U) Int)
(declare-fun $generated@@357 (T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) Bool)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@591 (T@U T@U T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@686 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@76 $generated@@81))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@75)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@79)) (= (type $generated@@73) $generated@@79)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@87) 11) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@104 $generated@@105)) 12))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@94 ($generated@@88 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@88 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@95 ($generated@@88 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@88 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@95 (type $generated@@110))))
(= (type ($generated@@96 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@96 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@97 $generated@@113 $generated@@114 $generated@@115)) ($generated@@88 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@97 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@95 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@96 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@77 (type $generated@@131))))
(= (type ($generated@@98 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@98 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@99 $generated@@133 $generated@@134 $generated@@135)) $generated@@90)
 :pattern ( ($generated@@99 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@77 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@98 $generated@@145 $generated@@147)))
 :weight 0
)))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@1 ($generated@@100 $generated@@148 $generated@@149)) 15))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@101 ($generated@@100 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@100 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@102 ($generated@@100 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@100 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@103) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@83 $generated@@154)) ($generated@@100 $generated@@103 $generated@@103))
 :pattern ( ($generated@@83 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@84 $generated@@155 $generated@@156)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@155 $generated@@156))
))) (= (type $generated@@85) $generated@@74)) (= (type $generated@@86) $generated@@74)) (= (type $generated@@93) $generated@@74)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@87) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@158) (and ($generated@@92 $generated@@157) ($generated@@82 $generated@@157 $generated@@93 $generated@@158)))) ($generated@@82 ($generated@@83 $generated@@157) ($generated@@84 $generated@@85 $generated@@86) $generated@@158))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@157) ($generated@@84 $generated@@85 $generated@@86) $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@75)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (= ($generated@@159 $generated@@44) $generated@@49))
(assert (= ($generated@@159 $generated@@45) $generated@@50))
(assert (= ($generated@@159 $generated@@46) $generated@@51))
(assert (= ($generated@@159 $generated@@47) $generated@@52))
(assert (= ($generated@@159 $generated@@48) $generated@@53))
(assert (forall (($generated@@162 Int) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@2) (= (type $generated@@164) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@82 $generated@@163 ($generated@@161 0) $generated@@164))
 :pattern ( ($generated@@82 $generated@@163 ($generated@@161 0) $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@2) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@82 $generated@@165 $generated@@85 $generated@@166))
 :pattern ( ($generated@@82 $generated@@165 $generated@@85 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@161 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@161 0)))
)))
(assert (= (type $generated@@172) $generated@@74))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@87) (or ($generated@@171 $generated@@173) (and (not (= 0 $generated@@169)) ($generated@@167 $generated@@173 $generated@@172)))) true)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@74)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@74) (= (type $generated@@179) $generated@@74)) (= (type $generated@@180) $generated@@87)) ($generated@@167 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@167 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@103)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@103)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@87) (= (type $generated@@187) $generated@@87)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@74)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@88 $generated@@103 $generated@@2)) (= (type $generated@@192) $generated@@74)) ($generated@@167 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@167 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@89 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@77 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@89) (= (type $generated@@243) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@244) ($generated@@76 $generated@@4))) (= (type $generated@@246) $generated@@89)) (= (type $generated@@247) ($generated@@76 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@87) (= (type $generated@@250) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@249 $generated@@86 $generated@@250) ($generated@@82 $generated@@249 $generated@@172 $generated@@250)))
 :pattern ( ($generated@@82 $generated@@249 $generated@@86 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@87) ($generated@@167 $generated@@252 $generated@@172)) ($generated@@251 $generated@@252))
 :pattern ( ($generated@@251 $generated@@252) ($generated@@167 $generated@@252 $generated@@172))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@87) ($generated@@167 $generated@@253 $generated@@93)) ($generated@@92 $generated@@253))
 :pattern ( ($generated@@92 $generated@@253) ($generated@@167 $generated@@253 $generated@@93))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@87)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@74) (= (type $generated@@259) $generated@@74)) (= (type $generated@@260) $generated@@103)) (= (type $generated@@261) $generated@@103)) (= ($generated@@167 ($generated@@254 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@254 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@87) (= (type $generated@@263) $generated@@87)) (= ($generated@@181 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@181 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@87) (= (type $generated@@266) $generated@@87)) (= ($generated@@264 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@264 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@87) (= (type $generated@@269) $generated@@87)) (= ($generated@@267 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@273) $generated@@74)) (= ($generated@@167 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@103) ($generated@@0 ($generated@@96 $generated@@272 $generated@@274))) ($generated@@255 $generated@@274 $generated@@273))
 :pattern ( ($generated@@96 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@167 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@278) $generated@@74)) (= ($generated@@167 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@103) ($generated@@0 ($generated@@96 $generated@@277 $generated@@279))) ($generated@@255 $generated@@279 $generated@@278))
 :pattern ( ($generated@@96 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@167 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289)) $generated@@87)
 :pattern ( ($generated@@286 $generated@@288 $generated@@289))
)))
(assert  (=> (<= 3 $generated@@169) (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@87) (= (type $generated@@291) $generated@@87)) (or ($generated@@287 $generated@@290 $generated@@291) (and (not (= 3 $generated@@169)) (and ($generated@@167 $generated@@290 $generated@@93) ($generated@@167 $generated@@291 $generated@@86))))) (= ($generated@@286 $generated@@290 $generated@@291) $generated@@291))
 :pattern ( ($generated@@286 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@74) (= (type $generated@@294) $generated@@74)) (= (type $generated@@295) $generated@@103)) (= (type $generated@@296) $generated@@103)) (= (type $generated@@297) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@91 $generated@@297)) (= ($generated@@82 ($generated@@254 $generated@@295 $generated@@296) ($generated@@175 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@82 ($generated@@254 $generated@@295 $generated@@296) ($generated@@175 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@78)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@87) (= ($generated@@174 $generated@@300) (= ($generated@@298 $generated@@300) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@87) (= ($generated@@251 $generated@@301) (= ($generated@@298 $generated@@301) $generated@@66)))
 :pattern ( ($generated@@251 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@87) (= ($generated@@92 $generated@@302) (= ($generated@@298 $generated@@302) $generated@@67)))
 :pattern ( ($generated@@92 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@87) ($generated@@174 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@103) (= (type $generated@@305) $generated@@103)) (= $generated@@303 ($generated@@254 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@174 $generated@@303))
)))
(assert  (and (and (forall (($generated@@310 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@310)) 18)) (forall (($generated@@311 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@308 $generated@@311))
))) (forall (($generated@@312 T@T) ) (! (= (type ($generated@@306 $generated@@312)) ($generated@@308 $generated@@312))
 :pattern ( ($generated@@306 $generated@@312))
))))
(assert (forall (($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@313)) 0)
 :pattern ( ($generated@@306 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) $generated@@87) (= (type $generated@@316) $generated@@87)) true) (= ($generated@@264 $generated@@315 $generated@@316) (= ($generated@@314 $generated@@315) ($generated@@314 $generated@@316))))
 :pattern ( ($generated@@264 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 Int) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@87)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@87) ($generated@@251 $generated@@319)) (exists (($generated@@320 Int) ) (= $generated@@319 ($generated@@317 $generated@@320))))
 :pattern ( ($generated@@251 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@87)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@87) ($generated@@92 $generated@@323)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) ($generated@@100 $generated@@103 $generated@@103)) (= $generated@@323 ($generated@@321 $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@92 $generated@@323))
)))
(assert  (and (and (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@101 (type $generated@@329))))
(= (type ($generated@@325 $generated@@329)) ($generated@@88 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@329))
)) (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@327 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@327 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@102 (type $generated@@333))))
(let (($generated@@335 ($generated@@101 (type $generated@@333))))
(= (type ($generated@@328 $generated@@333)) ($generated@@88 $generated@@335 $generated@@334))))
 :pattern ( ($generated@@328 $generated@@333))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@337) $generated@@103)) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@336) $generated@@337))) (< ($generated@@326 ($generated@@327 $generated@@87 ($generated@@96 ($generated@@328 $generated@@336) $generated@@337))) ($generated@@326 ($generated@@321 $generated@@336))))
 :pattern ( ($generated@@96 ($generated@@325 $generated@@336) $generated@@337) ($generated@@321 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@2) (= ($generated@@167 $generated@@338 $generated@@85) (<= ($generated@@280 0) ($generated $generated@@338))))
 :pattern ( ($generated@@167 $generated@@338 $generated@@85))
)))
(assert  (and (forall (($generated@@342 T@U) ($generated@@343 Int) ($generated@@344 Int) ) (! (= (type ($generated@@339 $generated@@342 $generated@@343 $generated@@344)) $generated@@87)
 :pattern ( ($generated@@339 $generated@@342 $generated@@343 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (= (type ($generated@@341 $generated@@345)) $generated@@103)
 :pattern ( ($generated@@341 $generated@@345))
))))
(assert  (=> (<= 4 $generated@@169) (forall (($generated@@346 T@U) ($generated@@347 Int) ($generated@@348 Int) ) (!  (=> (and (= (type $generated@@346) $generated@@87) (or ($generated@@340 ($generated@@282 $generated@@346) ($generated@@280 $generated@@347) ($generated@@280 $generated@@348)) (and (not (= 4 $generated@@169)) (and (and (and ($generated@@167 $generated@@346 $generated@@93) (<= ($generated@@280 0) $generated@@347)) (<= ($generated@@280 0) $generated@@348)) ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@83 ($generated@@282 $generated@@346))) ($generated@@341 ($generated@@8 $generated@@347)))))))) (and (and ($generated@@92 ($generated@@282 $generated@@346)) ($generated@@287 ($generated@@282 $generated@@346) (let (($generated@@349 ($generated@@280 $generated@@348)))
($generated@@282 ($generated@@317 $generated@@349))))) (= ($generated@@339 ($generated@@282 $generated@@346) ($generated@@280 $generated@@347) ($generated@@280 $generated@@348)) ($generated@@286 ($generated@@282 $generated@@346) (let (($generated@@350 ($generated@@280 $generated@@348)))
($generated@@282 ($generated@@317 $generated@@350)))))))
 :weight 3
 :pattern ( ($generated@@339 ($generated@@282 $generated@@346) ($generated@@280 $generated@@347) ($generated@@280 $generated@@348)))
))))
(assert  (=> (<= 3 $generated@@169) (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@87) (= (type $generated@@352) $generated@@87)) (or ($generated@@287 $generated@@351 $generated@@352) (and (not (= 3 $generated@@169)) (and ($generated@@167 $generated@@351 $generated@@93) ($generated@@167 $generated@@352 $generated@@86))))) ($generated@@167 ($generated@@286 $generated@@351 $generated@@352) $generated@@86))
 :pattern ( ($generated@@286 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@74) (= (type $generated@@355) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@292 ($generated@@341 $generated@@353) $generated@@354 $generated@@355) ($generated@@82 $generated@@353 $generated@@354 $generated@@355)))
 :pattern ( ($generated@@292 ($generated@@341 $generated@@353) $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@T) ) (! (= (type ($generated@@357 $generated@@358)) ($generated@@88 $generated@@358 $generated@@2))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@94 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@88 $generated@@360 $generated@@2)) (and (= (= ($generated@@356 $generated@@359) 0) (= $generated@@359 ($generated@@357 $generated@@360))) (=> (not (= ($generated@@356 $generated@@359) 0)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) (< 0 ($generated ($generated@@96 $generated@@359 $generated@@361))))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) ($generated@@100 $generated@@363 $generated@@364))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@T) ) (! (let (($generated@@367 (type $generated@@365)))
 (not ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@362 $generated@@367 $generated@@366)) $generated@@365))))
 :pattern ( (let (($generated@@367 (type $generated@@365)))
($generated@@96 ($generated@@325 ($generated@@362 $generated@@367 $generated@@366)) $generated@@365)))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 19)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@88 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@96 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@96 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@94 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@88 $generated@@387 $generated@@2)) (= ($generated@@189 $generated@@386) (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@387) (and (<= 0 ($generated ($generated@@96 $generated@@386 $generated@@388))) (<= ($generated ($generated@@96 $generated@@386 $generated@@388)) ($generated@@356 $generated@@386))))
 :pattern ( ($generated@@96 $generated@@386 $generated@@388))
)))))
 :pattern ( ($generated@@189 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@103) ($generated@@255 $generated@@389 $generated@@85)) (and (= ($generated@@341 ($generated@@327 $generated@@2 $generated@@389)) $generated@@389) ($generated@@167 ($generated@@327 $generated@@2 $generated@@389) $generated@@85)))
 :pattern ( ($generated@@255 $generated@@389 $generated@@85))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@103) ($generated@@255 $generated@@390 $generated@@172)) (and (= ($generated@@341 ($generated@@327 $generated@@87 $generated@@390)) $generated@@390) ($generated@@167 ($generated@@327 $generated@@87 $generated@@390) $generated@@172)))
 :pattern ( ($generated@@255 $generated@@390 $generated@@172))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@103) ($generated@@255 $generated@@391 $generated@@86)) (and (= ($generated@@341 ($generated@@327 $generated@@87 $generated@@391)) $generated@@391) ($generated@@167 ($generated@@327 $generated@@87 $generated@@391) $generated@@86)))
 :pattern ( ($generated@@255 $generated@@391 $generated@@86))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@103) ($generated@@255 $generated@@392 $generated@@93)) (and (= ($generated@@341 ($generated@@327 $generated@@87 $generated@@392)) $generated@@392) ($generated@@167 ($generated@@327 $generated@@87 $generated@@392) $generated@@93)))
 :pattern ( ($generated@@255 $generated@@392 $generated@@93))
)))
(assert (forall (($generated@@393 Int) ) (! (= ($generated@@167 ($generated@@317 $generated@@393) $generated@@172) ($generated@@167 ($generated@@8 $generated@@393) $generated@@85))
 :pattern ( ($generated@@167 ($generated@@317 $generated@@393) $generated@@172))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@102 (type $generated@@394))))
(let (($generated@@396 ($generated@@101 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@100 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@362 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@325 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@102 (type $generated@@399))))
(= (type ($generated@@398 $generated@@399)) ($generated@@88 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@102 (type $generated@@401))))
(let (($generated@@403 ($generated@@101 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@100 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@362 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@402) ($generated@@0 ($generated@@96 ($generated@@398 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@398 $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@372 (type $generated@@405))))
(let (($generated@@407 ($generated@@371 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@370 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@369 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@96 ($generated@@368 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@368 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@372 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@88 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@372 (type $generated@@412))))
(let (($generated@@414 ($generated@@371 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@370 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@369 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@96 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@88 $generated@@103 $generated@@2)) (= (type $generated@@417) $generated@@74)) (= ($generated@@167 $generated@@416 ($generated@@188 $generated@@417)) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@103) (< 0 ($generated ($generated@@96 $generated@@416 $generated@@418)))) ($generated@@255 $generated@@418 $generated@@417))
 :pattern ( ($generated@@96 $generated@@416 $generated@@418))
))))
 :pattern ( ($generated@@167 $generated@@416 ($generated@@188 $generated@@417)))
)))
(assert  (=> (<= 4 $generated@@169) (forall (($generated@@419 T@U) ($generated@@420 Int) ($generated@@421 Int) ) (!  (=> (and (= (type $generated@@419) $generated@@87) (or ($generated@@340 $generated@@419 $generated@@420 $generated@@421) (and (not (= 4 $generated@@169)) (and (and (and ($generated@@167 $generated@@419 $generated@@93) (<= ($generated@@280 0) $generated@@420)) (<= ($generated@@280 0) $generated@@421)) ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@83 $generated@@419)) ($generated@@341 ($generated@@8 $generated@@420)))))))) ($generated@@167 ($generated@@339 $generated@@419 $generated@@420 $generated@@421) $generated@@86))
 :pattern ( ($generated@@339 $generated@@419 $generated@@420 $generated@@421))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@423) $generated@@74)) (= (type $generated@@424) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@422 ($generated@@270 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@103) ($generated@@0 ($generated@@96 $generated@@422 $generated@@425))) ($generated@@292 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@96 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@82 $generated@@422 ($generated@@270 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@88 $generated@@103 $generated@@4)) (= (type $generated@@427) $generated@@74)) (= (type $generated@@428) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@426 ($generated@@275 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@103) ($generated@@0 ($generated@@96 $generated@@426 $generated@@429))) ($generated@@292 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@96 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@82 $generated@@426 ($generated@@275 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(= ($generated ($generated@@96 ($generated@@357 $generated@@431) $generated@@430)) 0))
 :pattern ( (let (($generated@@431 (type $generated@@430)))
($generated@@96 ($generated@@357 $generated@@431) $generated@@430)))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@88 $generated@@103 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@435) $generated@@103)) (= ($generated@@0 ($generated@@96 ($generated@@432 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@96 ($generated@@325 $generated@@434) ($generated@@182 ($generated@@327 $generated@@87 $generated@@435)))) (= ($generated@@96 ($generated@@328 $generated@@434) ($generated@@182 ($generated@@327 $generated@@87 $generated@@435))) ($generated@@183 ($generated@@327 $generated@@87 $generated@@435))))))
 :pattern ( ($generated@@96 ($generated@@432 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@88 $generated@@103 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@372 (type $generated@@439))))
(let (($generated@@441 ($generated@@371 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@88 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@370 $generated@@103 $generated@@103)) (= (type $generated@@443) $generated@@103)) (= ($generated@@0 ($generated@@96 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@96 ($generated@@368 $generated@@442) ($generated@@182 ($generated@@327 $generated@@87 $generated@@443)))) (= ($generated@@96 ($generated@@437 $generated@@442) ($generated@@182 ($generated@@327 $generated@@87 $generated@@443))) ($generated@@183 ($generated@@327 $generated@@87 $generated@@443))))))
 :pattern ( ($generated@@96 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@101 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@100 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@96 ($generated@@398 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@96 ($generated@@325 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@96 ($generated@@328 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@96 ($generated@@325 $generated@@444) $generated@@448))
 :pattern ( ($generated@@96 ($generated@@328 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@96 ($generated@@398 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@371 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@370 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@96 ($generated@@409 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@96 ($generated@@368 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@96 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@96 ($generated@@368 $generated@@449) $generated@@453))
 :pattern ( ($generated@@96 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@96 ($generated@@409 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@455) $generated@@74)) (= (type $generated@@456) $generated@@74)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@454 ($generated@@84 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@454) $generated@@458))) (and ($generated@@292 ($generated@@96 ($generated@@328 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@292 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@96 ($generated@@328 $generated@@454) $generated@@458))
 :pattern ( ($generated@@96 ($generated@@325 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@82 $generated@@454 ($generated@@84 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@74)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@370 $generated@@103 $generated@@103)) (= (type $generated@@463) $generated@@74)) (= (type $generated@@464) $generated@@74)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@368 $generated@@462) $generated@@466))) (and ($generated@@292 ($generated@@96 ($generated@@437 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@292 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@96 ($generated@@437 $generated@@462) $generated@@466))
 :pattern ( ($generated@@96 ($generated@@368 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@82 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@102 (type $generated@@468))))
(let (($generated@@471 ($generated@@101 (type $generated@@468))))
 (=> (and (and (= (type $generated@@468) ($generated@@100 $generated@@471 $generated@@470)) (= (type $generated@@469) ($generated@@100 $generated@@471 $generated@@470))) ($generated@@467 $generated@@468 $generated@@469)) (= $generated@@468 $generated@@469))))
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@472 Int) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@91 $generated@@473)) (= ($generated@@82 ($generated@@317 $generated@@472) $generated@@172 $generated@@473) ($generated@@82 ($generated@@8 $generated@@472) $generated@@85 $generated@@473)))
 :pattern ( ($generated@@82 ($generated@@317 $generated@@472) $generated@@172 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@167 ($generated@@321 $generated@@474) $generated@@93) ($generated@@167 $generated@@474 ($generated@@84 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@167 ($generated@@321 $generated@@474) $generated@@93))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@88 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@372 (type $generated@@477))))
(let (($generated@@479 ($generated@@371 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@370 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@369 $generated@@479 $generated@@478)) (= ($generated@@368 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@368 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@372 (type $generated@@480))))
(let (($generated@@482 ($generated@@371 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@370 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@369 $generated@@482 $generated@@481)) (= ($generated@@409 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@409 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@372 (type $generated@@483))))
(let (($generated@@485 ($generated@@371 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@370 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@369 $generated@@485 $generated@@484)) (= ($generated@@436 $generated@@483) ($generated@@475 $generated@@103))))))
 :pattern ( ($generated@@436 $generated@@483))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@87) (or ($generated@@171 $generated@@486) (and (not (= 0 $generated@@169)) ($generated@@167 $generated@@486 $generated@@172)))) (and ($generated@@251 $generated@@486) (= ($generated@@170 $generated@@486) (= ($generated@@314 $generated@@486) ($generated@@280 0)))))
 :pattern ( ($generated@@170 $generated@@486))
))))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@102 (type $generated@@487))))
(let (($generated@@489 ($generated@@101 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@100 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@362 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@103) (= (type $generated@@491) $generated@@103)) ($generated@@0 ($generated@@96 ($generated@@432 $generated@@487) ($generated@@341 ($generated@@254 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@432 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@372 (type $generated@@492))))
(let (($generated@@494 ($generated@@371 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@370 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@369 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@103) (= (type $generated@@496) $generated@@103)) ($generated@@0 ($generated@@96 ($generated@@436 $generated@@492) ($generated@@341 ($generated@@254 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@436 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@103) ($generated@@255 $generated@@497 $generated@@46)) (and (= ($generated@@341 ($generated@@327 $generated@@2 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@327 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@103) ($generated@@255 $generated@@498 $generated@@47)) (and (= ($generated@@341 ($generated@@327 $generated@@3 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@327 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@103) ($generated@@255 $generated@@499 $generated@@44)) (and (= ($generated@@341 ($generated@@327 $generated@@4 $generated@@499)) $generated@@499) ($generated@@167 ($generated@@327 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 20))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@103) ($generated@@255 $generated@@501 $generated@@45)) (and (= ($generated@@341 ($generated@@327 $generated@@500 $generated@@501)) $generated@@501) ($generated@@167 ($generated@@327 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@74) (= ($generated@@255 ($generated@@341 $generated@@502) $generated@@503) ($generated@@167 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@255 ($generated@@341 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@94 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@88 $generated@@505 $generated@@2)) (<= 0 ($generated@@356 $generated@@504))))
 :pattern ( ($generated@@356 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@309 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@308 $generated@@507)) (<= 0 ($generated@@307 $generated@@506))))
 :pattern ( ($generated@@307 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@74)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@74) (= (type $generated@@511) $generated@@74)) (= ($generated@@508 ($generated@@84 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@84 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@74)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@74) (= (type $generated@@515) $generated@@74)) (= ($generated@@512 ($generated@@84 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@84 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@74) (= (type $generated@@517) $generated@@74)) (= ($generated@@159 ($generated@@84 $generated@@516 $generated@@517)) $generated@@58))
 :pattern ( ($generated@@84 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@74)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@74) (= (type $generated@@521) $generated@@74)) (= ($generated@@518 ($generated@@459 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@459 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@74)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@74) (= (type $generated@@525) $generated@@74)) (= ($generated@@522 ($generated@@459 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@459 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@74) (= (type $generated@@527) $generated@@74)) (= ($generated@@159 ($generated@@459 $generated@@526 $generated@@527)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@103) (= (type $generated@@529) $generated@@103)) (= ($generated@@298 ($generated@@254 $generated@@528 $generated@@529)) $generated@@62))
 :pattern ( ($generated@@254 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@74)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@74) (= (type $generated@@533) $generated@@74)) (= ($generated@@530 ($generated@@175 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@175 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@74) (= (type $generated@@537) $generated@@74)) (= ($generated@@534 ($generated@@175 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@175 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@103) (= (type $generated@@539) $generated@@103)) (= ($generated@@182 ($generated@@254 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@254 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@103) (= (type $generated@@541) $generated@@103)) (= ($generated@@183 ($generated@@254 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@254 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@74)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@309 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@308 $generated@@103)) (= (type $generated@@549) $generated@@74)) (= (type $generated@@550) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@307 $generated@@548))) ($generated@@292 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@82 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@161 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@161 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@74)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@74) (= ($generated@@554 ($generated@@270 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@270 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@74) (= ($generated@@159 ($generated@@270 $generated@@557)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@74)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@74) (= ($generated@@558 ($generated@@275 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@275 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@74) (= ($generated@@159 ($generated@@275 $generated@@561)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@74)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@74) (= ($generated@@562 ($generated@@188 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@188 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@74) (= ($generated@@159 ($generated@@188 $generated@@565)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@74)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@74) (= ($generated@@566 ($generated@@542 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@542 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@74) (= ($generated@@159 ($generated@@542 $generated@@569)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@569))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@298 ($generated@@317 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@317 $generated@@570))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@314 ($generated@@317 $generated@@571)) $generated@@571)
 :pattern ( ($generated@@317 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@298 ($generated@@321 $generated@@572)) $generated@@67))
 :pattern ( ($generated@@321 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@83 ($generated@@321 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@321 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@327 $generated@@575 ($generated@@341 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@341 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@577) $generated@@74)) (= (type $generated@@578) $generated@@74)) (= ($generated@@167 $generated@@576 ($generated@@84 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@576) $generated@@579))) (and ($generated@@255 ($generated@@96 ($generated@@328 $generated@@576) $generated@@579) $generated@@578) ($generated@@255 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@96 ($generated@@328 $generated@@576) $generated@@579))
 :pattern ( ($generated@@96 ($generated@@325 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@167 $generated@@576 ($generated@@84 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@370 $generated@@103 $generated@@103)) (= (type $generated@@581) $generated@@74)) (= (type $generated@@582) $generated@@74)) (= ($generated@@167 $generated@@580 ($generated@@459 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@103) ($generated@@0 ($generated@@96 ($generated@@368 $generated@@580) $generated@@583))) (and ($generated@@255 ($generated@@96 ($generated@@437 $generated@@580) $generated@@583) $generated@@582) ($generated@@255 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@96 ($generated@@437 $generated@@580) $generated@@583))
 :pattern ( ($generated@@96 ($generated@@368 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@167 $generated@@580 ($generated@@459 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@103) (= (type $generated@@586) $generated@@103)) (< ($generated@@584 $generated@@585) ($generated@@326 ($generated@@254 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@254 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@103) (= (type $generated@@588) $generated@@103)) (< ($generated@@584 $generated@@588) ($generated@@326 ($generated@@254 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@254 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@590) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@91 $generated@@590)) (= ($generated@@82 ($generated@@321 $generated@@589) $generated@@93 $generated@@590) ($generated@@82 $generated@@589 ($generated@@84 $generated@@85 $generated@@86) $generated@@590)))
 :pattern ( ($generated@@82 ($generated@@321 $generated@@589) $generated@@93 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
(let (($generated@@596 (type $generated@@593)))
(= (type ($generated@@591 $generated@@592 $generated@@593 $generated@@594)) ($generated@@100 $generated@@596 $generated@@595))))
 :pattern ( ($generated@@591 $generated@@592 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
(let (($generated@@602 (type $generated@@598)))
 (=> (and (= (type $generated@@597) ($generated@@100 $generated@@602 $generated@@601)) (= (type $generated@@599) $generated@@602)) (and (=> (= $generated@@599 $generated@@598) (and ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@591 $generated@@597 $generated@@598 $generated@@600)) $generated@@599)) (= ($generated@@96 ($generated@@328 ($generated@@591 $generated@@597 $generated@@598 $generated@@600)) $generated@@599) $generated@@600))) (=> (not (= $generated@@599 $generated@@598)) (and (= ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@591 $generated@@597 $generated@@598 $generated@@600)) $generated@@599)) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@597) $generated@@599))) (= ($generated@@96 ($generated@@328 ($generated@@591 $generated@@597 $generated@@598 $generated@@600)) $generated@@599) ($generated@@96 ($generated@@328 $generated@@597) $generated@@599))))))))
 :pattern ( ($generated@@96 ($generated@@325 ($generated@@591 $generated@@597 $generated@@598 $generated@@600)) $generated@@599))
 :pattern ( ($generated@@96 ($generated@@328 ($generated@@591 $generated@@597 $generated@@598 $generated@@600)) $generated@@599))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@87) (= (type $generated@@604) $generated@@87)) true) (= ($generated@@267 $generated@@603 $generated@@604) ($generated@@467 ($generated@@83 $generated@@603) ($generated@@83 $generated@@604))))
 :pattern ( ($generated@@267 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@103) (= (type $generated@@606) $generated@@74)) (= (type $generated@@607) $generated@@74)) ($generated@@255 $generated@@605 ($generated@@84 $generated@@606 $generated@@607))) (and (= ($generated@@341 ($generated@@327 ($generated@@100 $generated@@103 $generated@@103) $generated@@605)) $generated@@605) ($generated@@167 ($generated@@327 ($generated@@100 $generated@@103 $generated@@103) $generated@@605) ($generated@@84 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@255 $generated@@605 ($generated@@84 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@103) (= (type $generated@@609) $generated@@74)) (= (type $generated@@610) $generated@@74)) ($generated@@255 $generated@@608 ($generated@@459 $generated@@609 $generated@@610))) (and (= ($generated@@341 ($generated@@327 ($generated@@370 $generated@@103 $generated@@103) $generated@@608)) $generated@@608) ($generated@@167 ($generated@@327 ($generated@@370 $generated@@103 $generated@@103) $generated@@608) ($generated@@459 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@255 $generated@@608 ($generated@@459 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@74) (= (type $generated@@612) $generated@@74)) (= (type $generated@@613) $generated@@103)) ($generated@@255 $generated@@613 ($generated@@175 $generated@@611 $generated@@612))) (and (= ($generated@@341 ($generated@@327 $generated@@87 $generated@@613)) $generated@@613) ($generated@@167 ($generated@@327 $generated@@87 $generated@@613) ($generated@@175 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@255 $generated@@613 ($generated@@175 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@96 ($generated@@475 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@96 ($generated@@475 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@79)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@74) (= (type $generated@@619) $generated@@74)) (and (= ($generated@@159 ($generated@@175 $generated@@618 $generated@@619)) $generated@@63) (= ($generated@@616 ($generated@@175 $generated@@618 $generated@@619)) $generated@@70)))
 :pattern ( ($generated@@175 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@102 (type $generated@@620))))
(let (($generated@@623 ($generated@@101 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@100 $generated@@623 $generated@@622)) (= (type $generated@@621) ($generated@@100 $generated@@623 $generated@@622))) (= ($generated@@467 $generated@@620 $generated@@621)  (and (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@623) (= ($generated@@0 ($generated@@96 ($generated@@325 $generated@@620) $generated@@624)) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@621) $generated@@624))))
 :no-pattern (type $generated@@624)
 :no-pattern ($generated $generated@@624)
 :no-pattern ($generated@@0 $generated@@624)
)) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@623) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@620) $generated@@625))) (= ($generated@@96 ($generated@@328 $generated@@620) $generated@@625) ($generated@@96 ($generated@@328 $generated@@621) $generated@@625)))
 :no-pattern (type $generated@@625)
 :no-pattern ($generated $generated@@625)
 :no-pattern ($generated@@0 $generated@@625)
)))))))
 :pattern ( ($generated@@467 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@627) $generated@@87)) ($generated@@0 ($generated@@96 ($generated@@325 $generated@@626) ($generated@@341 $generated@@627)))) (< ($generated@@326 $generated@@627) ($generated@@326 ($generated@@321 $generated@@626))))
 :pattern ( ($generated@@96 ($generated@@325 $generated@@626) ($generated@@341 $generated@@627)) ($generated@@321 $generated@@626))
)))
(assert  (=> (<= 4 $generated@@169) (forall (($generated@@628 T@U) ($generated@@629 Int) ($generated@@630 Int) ) (!  (=> (and (= (type $generated@@628) $generated@@87) (or ($generated@@340 $generated@@628 $generated@@629 $generated@@630) (and (not (= 4 $generated@@169)) (and (and (and ($generated@@167 $generated@@628 $generated@@93) (<= ($generated@@280 0) $generated@@629)) (<= ($generated@@280 0) $generated@@630)) ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@83 $generated@@628)) ($generated@@341 ($generated@@8 $generated@@629)))))))) (and (and ($generated@@92 $generated@@628) ($generated@@287 $generated@@628 (let (($generated@@631 $generated@@630))
($generated@@317 $generated@@631)))) (= ($generated@@339 $generated@@628 $generated@@629 $generated@@630) ($generated@@286 $generated@@628 (let (($generated@@632 $generated@@630))
($generated@@317 $generated@@632))))))
 :pattern ( ($generated@@339 $generated@@628 $generated@@629 $generated@@630))
))))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@87) (= ($generated@@584 ($generated@@341 $generated@@633)) ($generated@@326 $generated@@633)))
 :pattern ( ($generated@@584 ($generated@@341 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@103) ($generated@@255 $generated@@634 ($generated@@161 0))) (and (= ($generated@@341 ($generated@@327 $generated@@2 $generated@@634)) $generated@@634) ($generated@@167 ($generated@@327 ($generated@@88 $generated@@103 $generated@@4) $generated@@634) ($generated@@161 0))))
 :pattern ( ($generated@@255 $generated@@634 ($generated@@161 0)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@103) (= (type $generated@@636) $generated@@74)) ($generated@@255 $generated@@635 ($generated@@270 $generated@@636))) (and (= ($generated@@341 ($generated@@327 ($generated@@88 $generated@@103 $generated@@4) $generated@@635)) $generated@@635) ($generated@@167 ($generated@@327 ($generated@@88 $generated@@103 $generated@@4) $generated@@635) ($generated@@270 $generated@@636))))
 :pattern ( ($generated@@255 $generated@@635 ($generated@@270 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@103) (= (type $generated@@638) $generated@@74)) ($generated@@255 $generated@@637 ($generated@@275 $generated@@638))) (and (= ($generated@@341 ($generated@@327 ($generated@@88 $generated@@103 $generated@@4) $generated@@637)) $generated@@637) ($generated@@167 ($generated@@327 ($generated@@88 $generated@@103 $generated@@4) $generated@@637) ($generated@@275 $generated@@638))))
 :pattern ( ($generated@@255 $generated@@637 ($generated@@275 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@103) (= (type $generated@@640) $generated@@74)) ($generated@@255 $generated@@639 ($generated@@188 $generated@@640))) (and (= ($generated@@341 ($generated@@327 ($generated@@88 $generated@@103 $generated@@2) $generated@@639)) $generated@@639) ($generated@@167 ($generated@@327 ($generated@@88 $generated@@103 $generated@@2) $generated@@639) ($generated@@188 $generated@@640))))
 :pattern ( ($generated@@255 $generated@@639 ($generated@@188 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@103) (= (type $generated@@642) $generated@@74)) ($generated@@255 $generated@@641 ($generated@@542 $generated@@642))) (and (= ($generated@@341 ($generated@@327 ($generated@@308 $generated@@103) $generated@@641)) $generated@@641) ($generated@@167 ($generated@@327 ($generated@@308 $generated@@103) $generated@@641) ($generated@@542 $generated@@642))))
 :pattern ( ($generated@@255 $generated@@641 ($generated@@542 $generated@@642)))
)))
(assert (= ($generated@@159 $generated@@85) $generated@@61))
(assert (= ($generated@@616 $generated@@85) $generated@@69))
(assert (= ($generated@@159 $generated@@172) $generated@@64))
(assert (= ($generated@@616 $generated@@172) $generated@@71))
(assert (= ($generated@@159 $generated@@86) $generated@@65))
(assert (= ($generated@@616 $generated@@86) $generated@@72))
(assert (= ($generated@@159 $generated@@93) $generated@@68))
(assert (= ($generated@@616 $generated@@93) $generated@@73))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@88 $generated@@103 $generated@@2)) (= (type $generated@@644) $generated@@74)) (= (type $generated@@645) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@82 $generated@@643 ($generated@@188 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@103) (< 0 ($generated ($generated@@96 $generated@@643 $generated@@646)))) ($generated@@292 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@96 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@82 $generated@@643 ($generated@@188 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@87) (= (type $generated@@648) $generated@@74)) (= (type $generated@@649) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@649) (and ($generated@@174 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@74) ($generated@@82 $generated@@647 ($generated@@175 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@82 $generated@@647 ($generated@@175 $generated@@648 $generated@@650) $generated@@649))
))))) ($generated@@292 ($generated@@182 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@292 ($generated@@182 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@87) (= (type $generated@@652) $generated@@74)) (= (type $generated@@653) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@653) (and ($generated@@174 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@74) ($generated@@82 $generated@@651 ($generated@@175 $generated@@654 $generated@@652) $generated@@653))
 :pattern ( ($generated@@82 $generated@@651 ($generated@@175 $generated@@654 $generated@@652) $generated@@653))
))))) ($generated@@292 ($generated@@183 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@292 ($generated@@183 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@87) (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@91 $generated@@656) (and ($generated@@251 $generated@@655) ($generated@@82 $generated@@655 $generated@@172 $generated@@656)))) ($generated@@82 ($generated@@8 ($generated@@314 $generated@@655)) $generated@@85 $generated@@656))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@314 $generated@@655)) $generated@@85 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@103) (= (type $generated@@658) $generated@@103)) (= ($generated@@254 ($generated@@282 $generated@@657) ($generated@@282 $generated@@658)) ($generated@@282 ($generated@@254 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@254 ($generated@@282 $generated@@657) ($generated@@282 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@87) (= ($generated@@167 $generated@@659 $generated@@86)  (and ($generated@@167 $generated@@659 $generated@@172) ($generated@@170 $generated@@659))))
 :pattern ( ($generated@@167 $generated@@659 $generated@@86))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@341 ($generated@@8 ($generated@@280 $generated@@660))) ($generated@@282 ($generated@@341 ($generated@@8 $generated@@660))))
 :pattern ( ($generated@@341 ($generated@@8 ($generated@@280 $generated@@660))))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@317 ($generated@@280 $generated@@661)) ($generated@@282 ($generated@@317 $generated@@661)))
 :pattern ( ($generated@@317 ($generated@@280 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) ($generated@@100 $generated@@103 $generated@@103)) (= ($generated@@321 ($generated@@282 $generated@@662)) ($generated@@282 ($generated@@321 $generated@@662))))
 :pattern ( ($generated@@321 ($generated@@282 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@341 ($generated@@282 $generated@@663)) ($generated@@282 ($generated@@341 $generated@@663)))
 :pattern ( ($generated@@341 ($generated@@282 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@309 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@308 $generated@@665)) (= ($generated@@307 $generated@@664) 0)) (= $generated@@664 ($generated@@306 $generated@@665))))
 :pattern ( ($generated@@307 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@88 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@356 ($generated@@97 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@356 $generated@@666) ($generated ($generated@@96 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@356 ($generated@@97 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert  (=> (<= 0 $generated@@169) (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@87) (or ($generated@@171 ($generated@@282 $generated@@670)) (and (not (= 0 $generated@@169)) ($generated@@167 $generated@@670 $generated@@172)))) (and ($generated@@251 ($generated@@282 $generated@@670)) (= ($generated@@170 ($generated@@282 $generated@@670)) (= ($generated@@280 ($generated@@314 ($generated@@282 $generated@@670))) ($generated@@280 0)))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@282 $generated@@670)))
))))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@672) $generated@@2)) ($generated@@82 $generated@@672 $generated@@46 $generated@@671))
 :pattern ( ($generated@@82 $generated@@672 $generated@@46 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@674) $generated@@3)) ($generated@@82 $generated@@674 $generated@@47 $generated@@673))
 :pattern ( ($generated@@82 $generated@@674 $generated@@47 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@676) $generated@@4)) ($generated@@82 $generated@@676 $generated@@44 $generated@@675))
 :pattern ( ($generated@@82 $generated@@676 $generated@@44 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@678) $generated@@500)) ($generated@@82 $generated@@678 $generated@@45 $generated@@677))
 :pattern ( ($generated@@82 $generated@@678 $generated@@45 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@680) $generated@@103)) ($generated@@82 $generated@@680 $generated@@48 $generated@@679))
 :pattern ( ($generated@@82 $generated@@680 $generated@@48 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@308 $generated@@103)) (= (type $generated@@682) $generated@@74)) (= ($generated@@167 $generated@@681 ($generated@@542 $generated@@682)) (forall (($generated@@683 Int) ) (!  (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@307 $generated@@681))) ($generated@@255 ($generated@@543 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@543 $generated@@681 $generated@@683))
))))
 :pattern ( ($generated@@167 $generated@@681 ($generated@@542 $generated@@682)))
)))
(assert  (=> (<= 3 $generated@@169) (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@87) (= (type $generated@@685) $generated@@87)) (or ($generated@@287 ($generated@@282 $generated@@684) ($generated@@282 $generated@@685)) (and (not (= 3 $generated@@169)) (and ($generated@@167 $generated@@684 $generated@@93) ($generated@@167 $generated@@685 $generated@@86))))) (= ($generated@@286 ($generated@@282 $generated@@684) ($generated@@282 $generated@@685)) ($generated@@282 $generated@@685)))
 :weight 3
 :pattern ( ($generated@@286 ($generated@@282 $generated@@684) ($generated@@282 $generated@@685)))
))))
(assert (forall (($generated@@687 T@U) ($generated@@688 Int) ) (!  (=> (= (type $generated@@687) ($generated@@308 $generated@@103)) (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@307 $generated@@687))) (< ($generated@@326 ($generated@@327 $generated@@87 ($generated@@543 $generated@@687 $generated@@688))) ($generated@@686 $generated@@687))))
 :pattern ( ($generated@@326 ($generated@@327 $generated@@87 ($generated@@543 $generated@@687 $generated@@688))))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@100 $generated@@103 $generated@@103)) (= (type $generated@@690) $generated@@74)) (= (type $generated@@691) $generated@@74)) ($generated@@167 $generated@@689 ($generated@@84 $generated@@690 $generated@@691))) (and (and ($generated@@167 ($generated@@325 $generated@@689) ($generated@@270 $generated@@690)) ($generated@@167 ($generated@@398 $generated@@689) ($generated@@270 $generated@@691))) ($generated@@167 ($generated@@432 $generated@@689) ($generated@@270 ($generated@@175 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@167 $generated@@689 ($generated@@84 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) ($generated@@370 $generated@@103 $generated@@103)) (= (type $generated@@693) $generated@@74)) (= (type $generated@@694) $generated@@74)) ($generated@@167 $generated@@692 ($generated@@459 $generated@@693 $generated@@694))) (and (and ($generated@@167 ($generated@@368 $generated@@692) ($generated@@275 $generated@@693)) ($generated@@167 ($generated@@409 $generated@@692) ($generated@@275 $generated@@694))) ($generated@@167 ($generated@@436 $generated@@692) ($generated@@275 ($generated@@175 $generated@@693 $generated@@694)))))
 :pattern ( ($generated@@167 $generated@@692 ($generated@@459 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@2) ($generated@@167 $generated@@695 $generated@@46))
 :pattern ( ($generated@@167 $generated@@695 $generated@@46))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@3) ($generated@@167 $generated@@696 $generated@@47))
 :pattern ( ($generated@@167 $generated@@696 $generated@@47))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@4) ($generated@@167 $generated@@697 $generated@@44))
 :pattern ( ($generated@@167 $generated@@697 $generated@@44))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@500) ($generated@@167 $generated@@698 $generated@@45))
 :pattern ( ($generated@@167 $generated@@698 $generated@@45))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@103) ($generated@@167 $generated@@699 $generated@@48))
 :pattern ( ($generated@@167 $generated@@699 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 (T@U) Bool)
(declare-fun $generated@@707 () Bool)
(declare-fun $generated@@708 () T@U)
(assert  (and (and (and (and (= (type $generated@@700) ($generated@@195 $generated@@89 $generated@@4)) (= (type $generated@@701) $generated@@89)) (= (type $generated@@702) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@705) $generated@@87)) (= (type $generated@@708) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@709  (=> (= $generated@@700 ($generated@@194 $generated@@701 $generated@@702 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@167 ($generated@@8 ($generated@@280 0)) $generated@@85)) (=> ($generated@@167 ($generated@@8 ($generated@@280 0)) $generated@@85) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@167 ($generated@@8 ($generated@@280 0)) $generated@@85)) (=> ($generated@@167 ($generated@@8 ($generated@@280 0)) $generated@@85) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@167 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))) ($generated@@84 $generated@@85 $generated@@86))) (=> ($generated@@167 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))) ($generated@@84 $generated@@85 $generated@@86)) (=> ($generated@@82 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))) $generated@@93 $generated@@702) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@167 ($generated@@8 ($generated@@280 0)) $generated@@85)) (=> ($generated@@167 ($generated@@8 ($generated@@280 0)) $generated@@85) (=> (and (= $generated@@703 ($generated@@280 0)) ($generated@@82 ($generated@@8 $generated@@703) $generated@@85 $generated@@702)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@167 ($generated@@8 ($generated@@280 1)) $generated@@85)) (=> ($generated@@167 ($generated@@8 ($generated@@280 1)) $generated@@85) (=> (and (= $generated@@704 ($generated@@280 1)) ($generated@@82 ($generated@@8 $generated@@704) $generated@@85 $generated@@702)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@83 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))))) ($generated@@341 ($generated@@8 $generated@@703))))) (=> ($generated@@0 ($generated@@96 ($generated@@325 ($generated@@83 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))))) ($generated@@341 ($generated@@8 $generated@@703)))) (=> (and (and ($generated@@340 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))) ($generated@@280 0) ($generated@@280 1)) ($generated@@251 ($generated@@282 ($generated@@339 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))) ($generated@@280 0) ($generated@@280 1))))) (and ($generated@@340 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))) ($generated@@280 0) ($generated@@280 1)) (= $generated@@705 ($generated@@282 ($generated@@339 ($generated@@282 ($generated@@321 ($generated@@282 ($generated@@591 ($generated@@362 $generated@@103 $generated@@103) ($generated@@341 ($generated@@8 ($generated@@280 0))) ($generated@@341 ($generated@@282 ($generated@@317 ($generated@@280 0)))))))) ($generated@@280 0) ($generated@@280 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (and ($generated@@251 $generated@@705) ($generated@@251 $generated@@705)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@314 $generated@@705) ($generated@@280 1))) (=> (= ($generated@@314 $generated@@705) ($generated@@280 1)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@282 ($generated@@11 false)))))))))))))))))))))))))))
(let (($generated@@710  (=> (and ($generated@@91 $generated@@702) ($generated@@706 $generated@@702)) (=> (and (and (=> $generated@@707 (and ($generated@@167 $generated@@708 $generated@@86) ($generated@@82 $generated@@708 $generated@@86 $generated@@702))) true) (and (= 5 $generated@@169) (= (ControlFlow 0 11) 2))) $generated@@709))))
$generated@@710)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
