(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@219) $generated@@67))
(assert (forall (($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@220) $generated@@143) ($generated@@139 $generated@@220 $generated@@219)) ($generated@@218 $generated@@220))
 :pattern ( ($generated@@218 $generated@@220) ($generated@@139 $generated@@220 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@231 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@222 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@222 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@152)) (= (type $generated@@255) $generated@@152)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@221 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@254 $generated@@255) ($generated@@142 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@143) (= ($generated@@141 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@143) (= ($generated@@218 $generated@@260) (= ($generated@@257 $generated@@260) $generated@@63)))
 :pattern ( ($generated@@218 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@143) ($generated@@141 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@152) (= (type $generated@@263) $generated@@152)) (= $generated@@261 ($generated@@221 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@141 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@143) (= (type $generated@@274) $generated@@143)) true) (= ($generated@@231 $generated@@273 $generated@@274) (= ($generated@@272 $generated@@273) ($generated@@272 $generated@@274))))
 :pattern ( ($generated@@231 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 Int) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@143)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@143) ($generated@@218 $generated@@277)) (exists (($generated@@278 Int) ) (= $generated@@277 ($generated@@275 $generated@@278))))
 :pattern ( ($generated@@218 $generated@@277))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@152)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@77 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@251 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@286) $generated@@152)) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@251 $generated@@286 $generated@@287 $generated@@284)) ($generated@@251 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@251 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@288) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@291) $generated@@67)) ($generated@@135 $generated@@288 $generated@@289)) ($generated@@77 $generated@@290 $generated@@291 $generated@@288)) ($generated@@77 $generated@@290 $generated@@291 $generated@@289))
 :pattern ( ($generated@@135 $generated@@288 $generated@@289) ($generated@@77 $generated@@290 $generated@@291 $generated@@288))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@79 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@82 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@79 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@84 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@79 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@84 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@84 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@82 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@79 $generated@@335 $generated@@2)) (= ($generated@@158 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@84 $generated@@334 $generated@@336))) (<= ($generated ($generated@@84 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@84 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@158 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@152) ($generated@@222 $generated@@340 $generated@@219)) (and (= ($generated@@279 ($generated@@337 $generated@@143 $generated@@340)) $generated@@340) ($generated@@139 ($generated@@337 $generated@@143 $generated@@340) $generated@@219)))
 :pattern ( ($generated@@222 $generated@@340 $generated@@219))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(let (($generated@@343 ($generated@@301 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@300 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@299 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@298 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@302 (type $generated@@348))))
(let (($generated@@350 ($generated@@301 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@300 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@299 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@320 (type $generated@@352))))
(let (($generated@@354 ($generated@@319 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@318 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@317 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@316 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@79 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@320 (type $generated@@359))))
(let (($generated@@361 ($generated@@319 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@318 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@317 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@84 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@364) $generated@@67)) (= ($generated@@139 $generated@@363 ($generated@@157 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@363 $generated@@365)))) ($generated@@222 $generated@@365 $generated@@364))
 :pattern ( ($generated@@84 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@139 $generated@@363 ($generated@@157 $generated@@364)))
)))
(assert (forall (($generated@@366 Int) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@250 $generated@@367)) (= ($generated@@77 ($generated@@275 $generated@@366) $generated@@219 $generated@@367) ($generated@@77 ($generated@@8 $generated@@366) $generated@@46 $generated@@367)))
 :pattern ( ($generated@@77 ($generated@@275 $generated@@366) $generated@@219 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@368 ($generated@@234 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@152) ($generated@@0 ($generated@@84 $generated@@368 $generated@@371))) ($generated@@251 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@84 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@368 ($generated@@234 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@373) $generated@@67)) (= (type $generated@@374) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@372 ($generated@@239 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@152) ($generated@@0 ($generated@@84 $generated@@372 $generated@@375))) ($generated@@251 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@84 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@77 $generated@@372 ($generated@@239 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@84 ($generated@@293 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@84 ($generated@@293 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@302 (type $generated@@381))))
(let (($generated@@383 ($generated@@301 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@385) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@384) ($generated@@150 ($generated@@337 $generated@@143 $generated@@385)))) (= ($generated@@84 ($generated@@379 $generated@@384) ($generated@@150 ($generated@@337 $generated@@143 $generated@@385))) ($generated@@151 ($generated@@337 $generated@@143 $generated@@385))))))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@320 (type $generated@@389))))
(let (($generated@@391 ($generated@@319 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@79 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@318 $generated@@152 $generated@@152)) (= (type $generated@@393) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@84 ($generated@@316 $generated@@392) ($generated@@150 ($generated@@337 $generated@@143 $generated@@393)))) (= ($generated@@84 ($generated@@387 $generated@@392) ($generated@@150 ($generated@@337 $generated@@143 $generated@@393))) ($generated@@151 ($generated@@337 $generated@@143 $generated@@393))))))
 :pattern ( ($generated@@84 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@301 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@300 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@84 ($generated@@345 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@84 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@394) $generated@@398))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@319 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@318 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@84 ($generated@@356 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@84 ($generated@@316 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@84 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@84 ($generated@@356 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@67)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@408) $generated@@67)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@407) $generated@@411))) (and ($generated@@251 ($generated@@84 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@251 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@318 $generated@@152 $generated@@152)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@415) $generated@@419))) (and ($generated@@251 ($generated@@84 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@251 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@422) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@420 $generated@@422))) (and ($generated@@135 $generated@@420 $generated@@421) ($generated@@135 $generated@@421 $generated@@422))) ($generated@@135 $generated@@420 $generated@@422))
 :pattern ( ($generated@@135 $generated@@420 $generated@@421) ($generated@@135 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@79 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@320 (type $generated@@425))))
(let (($generated@@427 ($generated@@319 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@318 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@316 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@316 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@320 (type $generated@@428))))
(let (($generated@@430 ($generated@@319 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@318 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@317 $generated@@430 $generated@@429)) (= ($generated@@356 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@356 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@320 (type $generated@@431))))
(let (($generated@@433 ($generated@@319 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@318 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@317 $generated@@433 $generated@@432)) (= ($generated@@386 $generated@@431) ($generated@@423 $generated@@152))))))
 :pattern ( ($generated@@386 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@302 (type $generated@@434))))
(let (($generated@@436 ($generated@@301 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@300 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@299 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@152) (= (type $generated@@438) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@378 $generated@@434) ($generated@@279 ($generated@@221 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@378 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@320 (type $generated@@439))))
(let (($generated@@441 ($generated@@319 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@318 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@317 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@152) (= (type $generated@@443) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@386 $generated@@439) ($generated@@279 ($generated@@221 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@152) ($generated@@222 $generated@@444 $generated@@46)) (and (= ($generated@@279 ($generated@@337 $generated@@2 $generated@@444)) $generated@@444) ($generated@@139 ($generated@@337 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@222 $generated@@445 $generated@@47)) (and (= ($generated@@279 ($generated@@337 $generated@@3 $generated@@445)) $generated@@445) ($generated@@139 ($generated@@337 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@152) ($generated@@222 $generated@@446 $generated@@44)) (and (= ($generated@@279 ($generated@@337 $generated@@4 $generated@@446)) $generated@@446) ($generated@@139 ($generated@@337 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@152) ($generated@@222 $generated@@448 $generated@@45)) (and (= ($generated@@279 ($generated@@337 $generated@@447 $generated@@448)) $generated@@448) ($generated@@139 ($generated@@337 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@67) (= ($generated@@222 ($generated@@279 $generated@@449) $generated@@450) ($generated@@139 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@222 ($generated@@279 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@82 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@79 $generated@@452 $generated@@2)) (<= 0 ($generated@@292 $generated@@451))))
 :pattern ( ($generated@@292 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@267 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@266 $generated@@454)) (<= 0 ($generated@@265 $generated@@453))))
 :pattern ( ($generated@@265 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@404 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@404 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@75 ($generated@@404 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@412 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@75 ($generated@@412 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) (= (type $generated@@476) $generated@@152)) (= ($generated@@257 ($generated@@221 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@142 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@142 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@142 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@142 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@152) (= (type $generated@@486) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@221 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@152) (= (type $generated@@488) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@221 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@267 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@266 $generated@@152)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@265 $generated@@495))) ($generated@@251 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@77 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@78 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@78 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@234 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@234 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@239 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@239 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@157 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@157 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@75 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@257 ($generated@@275 $generated@@517)) $generated@@63)
 :pattern ( ($generated@@275 $generated@@517))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@272 ($generated@@275 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@275 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@337 $generated@@520 ($generated@@279 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@279 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) (= ($generated@@139 $generated@@521 ($generated@@404 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@521) $generated@@524))) (and ($generated@@222 ($generated@@84 ($generated@@379 $generated@@521) $generated@@524) $generated@@523) ($generated@@222 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@521) $generated@@524))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@139 $generated@@521 ($generated@@404 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@318 $generated@@152 $generated@@152)) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@67)) (= ($generated@@139 $generated@@525 ($generated@@412 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@525) $generated@@528))) (and ($generated@@222 ($generated@@84 ($generated@@387 $generated@@525) $generated@@528) $generated@@527) ($generated@@222 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@525) $generated@@528))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@139 $generated@@525 ($generated@@412 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@152)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@221 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@221 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@152)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@221 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@221 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@139 ($generated@@275 $generated@@535) $generated@@219) ($generated@@139 ($generated@@8 $generated@@535) $generated@@46))
 :pattern ( ($generated@@139 ($generated@@275 $generated@@535) $generated@@219))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@536 ($generated@@404 $generated@@537 $generated@@538))) (and (= ($generated@@279 ($generated@@337 ($generated@@300 $generated@@152 $generated@@152) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@337 ($generated@@300 $generated@@152 $generated@@152) $generated@@536) ($generated@@404 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@536 ($generated@@404 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@67)) ($generated@@222 $generated@@539 ($generated@@412 $generated@@540 $generated@@541))) (and (= ($generated@@279 ($generated@@337 ($generated@@318 $generated@@152 $generated@@152) $generated@@539)) $generated@@539) ($generated@@139 ($generated@@337 ($generated@@318 $generated@@152 $generated@@152) $generated@@539) ($generated@@412 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@412 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@152)) ($generated@@222 $generated@@544 ($generated@@142 $generated@@542 $generated@@543))) (and (= ($generated@@279 ($generated@@337 $generated@@143 $generated@@544)) $generated@@544) ($generated@@139 ($generated@@337 $generated@@143 $generated@@544) ($generated@@142 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@222 $generated@@544 ($generated@@142 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@84 ($generated@@423 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@84 ($generated@@423 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@72)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@142 $generated@@549 $generated@@550)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@552) (and ($generated@@218 $generated@@551) ($generated@@77 $generated@@551 $generated@@219 $generated@@552)))) ($generated@@77 ($generated@@8 ($generated@@272 $generated@@551)) $generated@@46 $generated@@552))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@272 $generated@@551)) $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@143) (= ($generated@@529 ($generated@@279 $generated@@553)) ($generated@@530 $generated@@553)))
 :pattern ( ($generated@@529 ($generated@@279 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@152) ($generated@@222 $generated@@554 ($generated@@78 0))) (and (= ($generated@@279 ($generated@@337 $generated@@2 $generated@@554)) $generated@@554) ($generated@@139 ($generated@@337 ($generated@@79 $generated@@152 $generated@@4) $generated@@554) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@554 ($generated@@78 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@67)) ($generated@@222 $generated@@555 ($generated@@234 $generated@@556))) (and (= ($generated@@279 ($generated@@337 ($generated@@79 $generated@@152 $generated@@4) $generated@@555)) $generated@@555) ($generated@@139 ($generated@@337 ($generated@@79 $generated@@152 $generated@@4) $generated@@555) ($generated@@234 $generated@@556))))
 :pattern ( ($generated@@222 $generated@@555 ($generated@@234 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@152) (= (type $generated@@558) $generated@@67)) ($generated@@222 $generated@@557 ($generated@@239 $generated@@558))) (and (= ($generated@@279 ($generated@@337 ($generated@@79 $generated@@152 $generated@@4) $generated@@557)) $generated@@557) ($generated@@139 ($generated@@337 ($generated@@79 $generated@@152 $generated@@4) $generated@@557) ($generated@@239 $generated@@558))))
 :pattern ( ($generated@@222 $generated@@557 ($generated@@239 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@152) (= (type $generated@@560) $generated@@67)) ($generated@@222 $generated@@559 ($generated@@157 $generated@@560))) (and (= ($generated@@279 ($generated@@337 ($generated@@79 $generated@@152 $generated@@2) $generated@@559)) $generated@@559) ($generated@@139 ($generated@@337 ($generated@@79 $generated@@152 $generated@@2) $generated@@559) ($generated@@157 $generated@@560))))
 :pattern ( ($generated@@222 $generated@@559 ($generated@@157 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@152) (= (type $generated@@562) $generated@@67)) ($generated@@222 $generated@@561 ($generated@@489 $generated@@562))) (and (= ($generated@@279 ($generated@@337 ($generated@@266 $generated@@152) $generated@@561)) $generated@@561) ($generated@@139 ($generated@@337 ($generated@@266 $generated@@152) $generated@@561) ($generated@@489 $generated@@562))))
 :pattern ( ($generated@@222 $generated@@561 ($generated@@489 $generated@@562)))
)))
(assert (= ($generated@@75 $generated@@219) $generated@@64))
(assert (= ($generated@@547 $generated@@219) $generated@@66))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@563 ($generated@@157 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@563 $generated@@566)))) ($generated@@251 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@84 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@157 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@143) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@569) (and ($generated@@141 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@67) ($generated@@77 $generated@@567 ($generated@@142 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@77 $generated@@567 ($generated@@142 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@251 ($generated@@150 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@251 ($generated@@150 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@143) (= (type $generated@@572) $generated@@67)) (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@573) (and ($generated@@141 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@67) ($generated@@77 $generated@@571 ($generated@@142 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@77 $generated@@571 ($generated@@142 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@251 ($generated@@151 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@251 ($generated@@151 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@152) (= (type $generated@@576) $generated@@152)) (= ($generated@@221 ($generated@@246 $generated@@575) ($generated@@246 $generated@@576)) ($generated@@246 ($generated@@221 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@221 ($generated@@246 $generated@@575) ($generated@@246 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@279 ($generated@@8 ($generated@@244 $generated@@577))) ($generated@@246 ($generated@@279 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@279 ($generated@@8 ($generated@@244 $generated@@577))))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@275 ($generated@@244 $generated@@578)) ($generated@@246 ($generated@@275 $generated@@578)))
 :pattern ( ($generated@@275 ($generated@@244 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@279 ($generated@@246 $generated@@579)) ($generated@@246 ($generated@@279 $generated@@579)))
 :pattern ( ($generated@@279 ($generated@@246 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@267 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@266 $generated@@581)) (= ($generated@@265 $generated@@580) 0)) (= $generated@@580 ($generated@@264 $generated@@581))))
 :pattern ( ($generated@@265 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@79 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@292 ($generated@@85 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@292 $generated@@582) ($generated ($generated@@84 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@292 ($generated@@85 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@2)) ($generated@@77 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@3)) ($generated@@77 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@591) $generated@@4)) ($generated@@77 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@77 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@593) $generated@@447)) ($generated@@77 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@77 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@595) $generated@@152)) ($generated@@77 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@77 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@266 $generated@@152)) (= (type $generated@@597) $generated@@67)) (= ($generated@@139 $generated@@596 ($generated@@489 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@265 $generated@@596))) ($generated@@222 ($generated@@490 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@490 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@139 $generated@@596 ($generated@@489 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@266 $generated@@152)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@265 $generated@@600))) (< ($generated@@530 ($generated@@337 $generated@@143 ($generated@@490 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@530 ($generated@@337 $generated@@143 ($generated@@490 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@67)) ($generated@@139 $generated@@602 ($generated@@404 $generated@@603 $generated@@604))) (and (and ($generated@@139 ($generated@@298 $generated@@602) ($generated@@234 $generated@@603)) ($generated@@139 ($generated@@345 $generated@@602) ($generated@@234 $generated@@604))) ($generated@@139 ($generated@@378 $generated@@602) ($generated@@234 ($generated@@142 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@139 $generated@@602 ($generated@@404 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@318 $generated@@152 $generated@@152)) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) $generated@@67)) ($generated@@139 $generated@@605 ($generated@@412 $generated@@606 $generated@@607))) (and (and ($generated@@139 ($generated@@316 $generated@@605) ($generated@@239 $generated@@606)) ($generated@@139 ($generated@@356 $generated@@605) ($generated@@239 $generated@@607))) ($generated@@139 ($generated@@386 $generated@@605) ($generated@@239 ($generated@@142 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@139 $generated@@605 ($generated@@412 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@139 $generated@@608 $generated@@46))
 :pattern ( ($generated@@139 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@139 $generated@@609 $generated@@47))
 :pattern ( ($generated@@139 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@139 $generated@@610 $generated@@44))
 :pattern ( ($generated@@139 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@447) ($generated@@139 $generated@@611 $generated@@45))
 :pattern ( ($generated@@139 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@152) ($generated@@139 $generated@@612 $generated@@48))
 :pattern ( ($generated@@139 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
