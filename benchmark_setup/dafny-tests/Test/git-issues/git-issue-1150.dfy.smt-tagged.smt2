(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 (T@U) Int)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 () Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@280 (Int) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= (type $generated@@137) $generated@@69))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
 :pattern ( ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@80 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@69) (= (type $generated@@148) $generated@@69)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@69)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@69)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@72 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@82) (= (type $generated@@213) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@214) ($generated@@71 $generated@@4))) (= (type $generated@@216) $generated@@82)) (= (type $generated@@217) ($generated@@71 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (= (type $generated@@220) $generated@@69))
(assert (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@144) ($generated@@140 $generated@@221 $generated@@220)) ($generated@@219 $generated@@221))
 :pattern ( ($generated@@219 $generated@@221) ($generated@@140 $generated@@221 $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@144)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@69) (= (type $generated@@227) $generated@@69)) (= (type $generated@@228) $generated@@153)) (= (type $generated@@229) $generated@@153)) (= ($generated@@140 ($generated@@222 $generated@@228 $generated@@229) ($generated@@143 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@140 ($generated@@222 $generated@@228 $generated@@229) ($generated@@143 $generated@@226 $generated@@227)))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@144) (= ($generated@@230 $generated@@232)  (and (< 0 ($generated@@231 $generated@@232)) (< ($generated@@231 $generated@@232) 5))))
 :pattern ( ($generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) (= (type $generated@@234) $generated@@144)) (= ($generated@@150 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@150 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@144) (= (type $generated@@237) $generated@@144)) (= ($generated@@235 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@69)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@241) $generated@@69)) (= ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@153) ($generated@@0 ($generated@@86 $generated@@240 $generated@@242))) ($generated@@223 $generated@@242 $generated@@241))
 :pattern ( ($generated@@86 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@69)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@246) $generated@@69)) (= ($generated@@140 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@153) ($generated@@0 ($generated@@86 $generated@@245 $generated@@247))) ($generated@@223 $generated@@247 $generated@@246))
 :pattern ( ($generated@@86 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@140 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@69) (= (type $generated@@257) $generated@@69)) (= (type $generated@@258) $generated@@153)) (= (type $generated@@259) $generated@@153)) (= (type $generated@@260) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@254 $generated@@260)) (= ($generated@@79 ($generated@@222 $generated@@258 $generated@@259) ($generated@@143 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@79 ($generated@@222 $generated@@258 $generated@@259) ($generated@@143 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@73)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@144) (= ($generated@@142 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@142 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@144) (= ($generated@@219 $generated@@264) (= ($generated@@261 $generated@@264) $generated@@64)))
 :pattern ( ($generated@@219 $generated@@264))
)))
(assert  (=> (< 0 $generated@@265) (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@144) ($generated@@140 ($generated@@11 ($generated@@230 $generated@@266)) $generated@@44))
 :pattern ( ($generated@@230 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@144) ($generated@@142 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@153) (= (type $generated@@269) $generated@@153)) (= $generated@@267 ($generated@@222 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@142 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@144) (= (type $generated@@279) $generated@@144)) true) (= ($generated@@235 $generated@@278 $generated@@279) (= ($generated@@231 $generated@@278) ($generated@@231 $generated@@279))))
 :pattern ( ($generated@@235 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 Int) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@144)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@144) ($generated@@219 $generated@@282)) (exists (($generated@@283 Int) ) (= $generated@@282 ($generated@@280 $generated@@283))))
 :pattern ( ($generated@@219 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@140 $generated@@284 $generated@@137) (<= ($generated@@248 0) ($generated $generated@@284))))
 :pattern ( ($generated@@140 $generated@@284 $generated@@137))
)))
(assert  (=> (< 0 $generated@@265) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@286) $generated@@144)) (and ($generated@@254 $generated@@285) ($generated@@79 $generated@@286 $generated@@220 $generated@@285))) ($generated@@79 ($generated@@11 ($generated@@230 $generated@@286)) $generated@@44 $generated@@285))
 :pattern ( ($generated@@230 $generated@@286) ($generated@@79 $generated@@286 $generated@@220 $generated@@285))
))))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@153)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@69) (= (type $generated@@291) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@255 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@79 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@255 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@81 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@84 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@81 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@86 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@81 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@86 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@86 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@81 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@86 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@86 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@84 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@81 $generated@@335 $generated@@2)) (= ($generated@@159 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@86 $generated@@334 $generated@@336))) (<= ($generated ($generated@@86 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@86 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@159 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@153) ($generated@@223 $generated@@340 $generated@@137)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@340)) $generated@@340) ($generated@@140 ($generated@@337 $generated@@2 $generated@@340) $generated@@137)))
 :pattern ( ($generated@@223 $generated@@340 $generated@@137))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@153) ($generated@@223 $generated@@341 $generated@@220)) (and (= ($generated@@287 ($generated@@337 $generated@@144 $generated@@341)) $generated@@341) ($generated@@140 ($generated@@337 $generated@@144 $generated@@341) $generated@@220)))
 :pattern ( ($generated@@223 $generated@@341 $generated@@220))
)))
(assert (forall (($generated@@342 Int) ) (! (= ($generated@@140 ($generated@@280 $generated@@342) $generated@@220) ($generated@@140 ($generated@@8 $generated@@342) $generated@@137))
 :pattern ( ($generated@@140 ($generated@@280 $generated@@342) $generated@@220))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@86 ($generated@@298 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@298 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@302 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@81 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@302 (type $generated@@350))))
(let (($generated@@352 ($generated@@301 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@300 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@299 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@86 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@320 (type $generated@@354))))
(let (($generated@@356 ($generated@@319 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@318 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@317 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@316 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@316 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@320 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@81 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@320 (type $generated@@361))))
(let (($generated@@363 ($generated@@319 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@318 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@317 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@366) $generated@@69)) (= ($generated@@140 $generated@@365 ($generated@@158 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@365 $generated@@367)))) ($generated@@223 $generated@@367 $generated@@366))
 :pattern ( ($generated@@86 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@140 $generated@@365 ($generated@@158 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@369) $generated@@69)) (= (type $generated@@370) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@368 ($generated@@238 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@153) ($generated@@0 ($generated@@86 $generated@@368 $generated@@371))) ($generated@@255 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@86 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@79 $generated@@368 ($generated@@238 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@373) $generated@@69)) (= (type $generated@@374) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@372 ($generated@@243 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@153) ($generated@@0 ($generated@@86 $generated@@372 $generated@@375))) ($generated@@255 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@86 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@79 $generated@@372 ($generated@@243 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@86 ($generated@@293 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@86 ($generated@@293 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@302 (type $generated@@381))))
(let (($generated@@383 ($generated@@301 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@81 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@300 $generated@@153 $generated@@153)) (= (type $generated@@385) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@86 ($generated@@298 $generated@@384) ($generated@@151 ($generated@@337 $generated@@144 $generated@@385)))) (= ($generated@@86 ($generated@@379 $generated@@384) ($generated@@151 ($generated@@337 $generated@@144 $generated@@385))) ($generated@@152 ($generated@@337 $generated@@144 $generated@@385))))))
 :pattern ( ($generated@@86 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@320 (type $generated@@389))))
(let (($generated@@391 ($generated@@319 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@81 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@318 $generated@@153 $generated@@153)) (= (type $generated@@393) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@86 ($generated@@316 $generated@@392) ($generated@@151 ($generated@@337 $generated@@144 $generated@@393)))) (= ($generated@@86 ($generated@@387 $generated@@392) ($generated@@151 ($generated@@337 $generated@@144 $generated@@393))) ($generated@@152 ($generated@@337 $generated@@144 $generated@@393))))))
 :pattern ( ($generated@@86 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@301 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@300 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@86 ($generated@@347 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@86 ($generated@@298 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@86 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@86 ($generated@@298 $generated@@394) $generated@@398))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@86 ($generated@@347 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@319 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@318 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@86 ($generated@@358 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@86 ($generated@@316 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@86 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@86 ($generated@@316 $generated@@399) $generated@@403))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@86 ($generated@@358 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@69)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@300 $generated@@153 $generated@@153)) (= (type $generated@@408) $generated@@69)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@298 $generated@@407) $generated@@411))) (and ($generated@@255 ($generated@@86 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@255 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@86 ($generated@@298 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@79 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@69)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@318 $generated@@153 $generated@@153)) (= (type $generated@@416) $generated@@69)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@316 $generated@@415) $generated@@419))) (and ($generated@@255 ($generated@@86 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@255 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@86 ($generated@@316 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 Int) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@254 $generated@@421)) (= ($generated@@79 ($generated@@280 $generated@@420) $generated@@220 $generated@@421) ($generated@@79 ($generated@@8 $generated@@420) $generated@@137 $generated@@421)))
 :pattern ( ($generated@@79 ($generated@@280 $generated@@420) $generated@@220 $generated@@421))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@81 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@320 (type $generated@@424))))
(let (($generated@@426 ($generated@@319 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@318 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@317 $generated@@426 $generated@@425)) (= ($generated@@316 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@316 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@320 (type $generated@@427))))
(let (($generated@@429 ($generated@@319 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@318 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@317 $generated@@429 $generated@@428)) (= ($generated@@358 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@358 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@320 (type $generated@@430))))
(let (($generated@@432 ($generated@@319 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@318 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@317 $generated@@432 $generated@@431)) (= ($generated@@386 $generated@@430) ($generated@@422 $generated@@153))))))
 :pattern ( ($generated@@386 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@302 (type $generated@@433))))
(let (($generated@@435 ($generated@@301 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@300 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@299 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@153) (= (type $generated@@437) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@378 $generated@@433) ($generated@@287 ($generated@@222 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@378 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@320 (type $generated@@438))))
(let (($generated@@440 ($generated@@319 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@318 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@317 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@153) (= (type $generated@@442) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@386 $generated@@438) ($generated@@287 ($generated@@222 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@386 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@153) ($generated@@223 $generated@@443 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@443)) $generated@@443) ($generated@@140 ($generated@@337 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@153) ($generated@@223 $generated@@444 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@444)) $generated@@444) ($generated@@140 ($generated@@337 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@153) ($generated@@223 $generated@@445 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@445)) $generated@@445) ($generated@@140 ($generated@@337 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) ($generated@@223 $generated@@447 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@446 $generated@@447)) $generated@@447) ($generated@@140 ($generated@@337 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@69) (= ($generated@@223 ($generated@@287 $generated@@448) $generated@@449) ($generated@@140 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@223 ($generated@@287 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@84 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@81 $generated@@451 $generated@@2)) (<= 0 ($generated@@292 $generated@@450))))
 :pattern ( ($generated@@292 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@273 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@272 $generated@@453)) (<= 0 ($generated@@271 $generated@@452))))
 :pattern ( ($generated@@271 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@69)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@69) (= (type $generated@@457) $generated@@69)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@69)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@69) (= (type $generated@@461) $generated@@69)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@77 ($generated@@404 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@69)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@77 ($generated@@412 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@153) (= (type $generated@@475) $generated@@153)) (= ($generated@@261 ($generated@@222 $generated@@474 $generated@@475)) $generated@@62))
 :pattern ( ($generated@@222 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@143 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@143 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@143 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@143 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@153) (= (type $generated@@485) $generated@@153)) (= ($generated@@151 ($generated@@222 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@222 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@153) (= (type $generated@@487) $generated@@153)) (= ($generated@@152 ($generated@@222 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@222 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@273 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@272 $generated@@153)) (= (type $generated@@495) $generated@@69)) (= (type $generated@@496) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@271 $generated@@494))) ($generated@@255 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@79 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@80 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@80 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@69) (= ($generated@@500 ($generated@@238 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@77 ($generated@@238 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@69)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@504 ($generated@@243 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@77 ($generated@@243 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@508 ($generated@@158 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@158 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@69) (= ($generated@@77 ($generated@@158 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@261 ($generated@@280 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@280 $generated@@516))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@231 ($generated@@280 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@280 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@337 $generated@@519 ($generated@@287 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@287 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@300 $generated@@153 $generated@@153)) (= (type $generated@@521) $generated@@69)) (= (type $generated@@522) $generated@@69)) (= ($generated@@140 $generated@@520 ($generated@@404 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@298 $generated@@520) $generated@@523))) (and ($generated@@223 ($generated@@86 ($generated@@379 $generated@@520) $generated@@523) $generated@@522) ($generated@@223 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@520) $generated@@523))
 :pattern ( ($generated@@86 ($generated@@298 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@140 $generated@@520 ($generated@@404 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@318 $generated@@153 $generated@@153)) (= (type $generated@@525) $generated@@69)) (= (type $generated@@526) $generated@@69)) (= ($generated@@140 $generated@@524 ($generated@@412 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@316 $generated@@524) $generated@@527))) (and ($generated@@223 ($generated@@86 ($generated@@387 $generated@@524) $generated@@527) $generated@@526) ($generated@@223 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@524) $generated@@527))
 :pattern ( ($generated@@86 ($generated@@316 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@140 $generated@@524 ($generated@@412 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@153) (= (type $generated@@531) $generated@@153)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@222 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@222 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@153)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@222 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@222 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) ($generated@@223 $generated@@534 ($generated@@404 $generated@@535 $generated@@536))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@153 $generated@@153) $generated@@534)) $generated@@534) ($generated@@140 ($generated@@337 ($generated@@300 $generated@@153 $generated@@153) $generated@@534) ($generated@@404 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@223 $generated@@534 ($generated@@404 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@153) (= (type $generated@@538) $generated@@69)) (= (type $generated@@539) $generated@@69)) ($generated@@223 $generated@@537 ($generated@@412 $generated@@538 $generated@@539))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@153 $generated@@153) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@337 ($generated@@318 $generated@@153 $generated@@153) $generated@@537) ($generated@@412 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@223 $generated@@537 ($generated@@412 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@69) (= (type $generated@@541) $generated@@69)) (= (type $generated@@542) $generated@@153)) ($generated@@223 $generated@@542 ($generated@@143 $generated@@540 $generated@@541))) (and (= ($generated@@287 ($generated@@337 $generated@@144 $generated@@542)) $generated@@542) ($generated@@140 ($generated@@337 $generated@@144 $generated@@542) ($generated@@143 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@223 $generated@@542 ($generated@@143 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@86 ($generated@@422 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@86 ($generated@@422 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@74)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@69) (= (type $generated@@548) $generated@@69)) (and (= ($generated@@77 ($generated@@143 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@143 $generated@@547 $generated@@548)) $generated@@67)))
 :pattern ( ($generated@@143 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@144) (= ($generated@@528 ($generated@@287 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@287 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@153) ($generated@@223 $generated@@550 ($generated@@80 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@337 ($generated@@81 $generated@@153 $generated@@4) $generated@@550) ($generated@@80 0))))
 :pattern ( ($generated@@223 $generated@@550 ($generated@@80 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@153) (= (type $generated@@552) $generated@@69)) ($generated@@223 $generated@@551 ($generated@@238 $generated@@552))) (and (= ($generated@@287 ($generated@@337 ($generated@@81 $generated@@153 $generated@@4) $generated@@551)) $generated@@551) ($generated@@140 ($generated@@337 ($generated@@81 $generated@@153 $generated@@4) $generated@@551) ($generated@@238 $generated@@552))))
 :pattern ( ($generated@@223 $generated@@551 ($generated@@238 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@153) (= (type $generated@@554) $generated@@69)) ($generated@@223 $generated@@553 ($generated@@243 $generated@@554))) (and (= ($generated@@287 ($generated@@337 ($generated@@81 $generated@@153 $generated@@4) $generated@@553)) $generated@@553) ($generated@@140 ($generated@@337 ($generated@@81 $generated@@153 $generated@@4) $generated@@553) ($generated@@243 $generated@@554))))
 :pattern ( ($generated@@223 $generated@@553 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@153) (= (type $generated@@556) $generated@@69)) ($generated@@223 $generated@@555 ($generated@@158 $generated@@556))) (and (= ($generated@@287 ($generated@@337 ($generated@@81 $generated@@153 $generated@@2) $generated@@555)) $generated@@555) ($generated@@140 ($generated@@337 ($generated@@81 $generated@@153 $generated@@2) $generated@@555) ($generated@@158 $generated@@556))))
 :pattern ( ($generated@@223 $generated@@555 ($generated@@158 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@153) (= (type $generated@@558) $generated@@69)) ($generated@@223 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@287 ($generated@@337 ($generated@@272 $generated@@153) $generated@@557)) $generated@@557) ($generated@@140 ($generated@@337 ($generated@@272 $generated@@153) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@223 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@61))
(assert (= ($generated@@545 $generated@@137) $generated@@66))
(assert (= ($generated@@77 $generated@@220) $generated@@65))
(assert (= ($generated@@545 $generated@@220) $generated@@68))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@559 ($generated@@158 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@559 $generated@@562)))) ($generated@@255 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@86 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@79 $generated@@559 ($generated@@158 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@144) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@254 $generated@@565) (and ($generated@@142 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@69) ($generated@@79 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@79 $generated@@563 ($generated@@143 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@255 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@255 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@144) (= (type $generated@@568) $generated@@69)) (= (type $generated@@569) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@254 $generated@@569) (and ($generated@@142 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@69) ($generated@@79 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@79 $generated@@567 ($generated@@143 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@255 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@255 ($generated@@152 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@144) (= (type $generated@@572) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@254 $generated@@572) (and ($generated@@219 $generated@@571) ($generated@@79 $generated@@571 $generated@@220 $generated@@572)))) ($generated@@79 ($generated@@8 ($generated@@231 $generated@@571)) $generated@@137 $generated@@572))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@231 $generated@@571)) $generated@@137 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) (= (type $generated@@574) $generated@@153)) (= ($generated@@222 ($generated@@250 $generated@@573) ($generated@@250 $generated@@574)) ($generated@@250 ($generated@@222 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@222 ($generated@@250 $generated@@573) ($generated@@250 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@248 $generated@@575))) ($generated@@250 ($generated@@287 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@248 $generated@@575))))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@280 ($generated@@248 $generated@@576)) ($generated@@250 ($generated@@280 $generated@@576)))
 :pattern ( ($generated@@280 ($generated@@248 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (= ($generated@@287 ($generated@@250 $generated@@577)) ($generated@@250 ($generated@@287 $generated@@577)))
 :pattern ( ($generated@@287 ($generated@@250 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@273 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@272 $generated@@579)) (= ($generated@@271 $generated@@578) 0)) (= $generated@@578 ($generated@@270 $generated@@579))))
 :pattern ( ($generated@@271 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@581)))
 (=> (and (and (= (type $generated@@580) ($generated@@81 $generated@@583 $generated@@2)) (= (type $generated@@582) $generated@@2)) (<= 0 ($generated $generated@@582))) (= ($generated@@292 ($generated@@87 $generated@@580 $generated@@581 $generated@@582)) (+ (- ($generated@@292 $generated@@580) ($generated ($generated@@86 $generated@@580 $generated@@581))) ($generated $generated@@582)))))
 :pattern ( ($generated@@292 ($generated@@87 $generated@@580 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@585) $generated@@2)) ($generated@@79 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@79 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@587) $generated@@3)) ($generated@@79 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@79 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@589) $generated@@4)) ($generated@@79 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@79 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@591) $generated@@446)) ($generated@@79 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@79 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@593) $generated@@153)) ($generated@@79 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@79 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@272 $generated@@153)) (= (type $generated@@595) $generated@@69)) (= ($generated@@140 $generated@@594 ($generated@@488 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@271 $generated@@594))) ($generated@@223 ($generated@@489 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@489 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@140 $generated@@594 ($generated@@488 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@272 $generated@@153)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@271 $generated@@598))) (< ($generated@@529 ($generated@@337 $generated@@144 ($generated@@489 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@529 ($generated@@337 $generated@@144 ($generated@@489 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@300 $generated@@153 $generated@@153)) (= (type $generated@@601) $generated@@69)) (= (type $generated@@602) $generated@@69)) ($generated@@140 $generated@@600 ($generated@@404 $generated@@601 $generated@@602))) (and (and ($generated@@140 ($generated@@298 $generated@@600) ($generated@@238 $generated@@601)) ($generated@@140 ($generated@@347 $generated@@600) ($generated@@238 $generated@@602))) ($generated@@140 ($generated@@378 $generated@@600) ($generated@@238 ($generated@@143 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@140 $generated@@600 ($generated@@404 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@318 $generated@@153 $generated@@153)) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) $generated@@69)) ($generated@@140 $generated@@603 ($generated@@412 $generated@@604 $generated@@605))) (and (and ($generated@@140 ($generated@@316 $generated@@603) ($generated@@243 $generated@@604)) ($generated@@140 ($generated@@358 $generated@@603) ($generated@@243 $generated@@605))) ($generated@@140 ($generated@@386 $generated@@603) ($generated@@243 ($generated@@143 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@140 $generated@@603 ($generated@@412 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@140 $generated@@606 $generated@@46))
 :pattern ( ($generated@@140 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@140 $generated@@607 $generated@@47))
 :pattern ( ($generated@@140 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@140 $generated@@608 $generated@@44))
 :pattern ( ($generated@@140 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@446) ($generated@@140 $generated@@609 $generated@@45))
 :pattern ( ($generated@@140 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@153) ($generated@@140 $generated@@610 $generated@@48))
 :pattern ( ($generated@@140 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@611) ($generated@@165 $generated@@82 $generated@@4)) (= (type $generated@@612) $generated@@82)) (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@614) $generated@@144)) (= (type $generated@@615) $generated@@144)) (= (type $generated@@617) $generated@@144)) (= (type $generated@@618) $generated@@144)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@619  (=> (= $generated@@611 ($generated@@164 $generated@@612 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@140 ($generated@@8 ($generated@@248 2)) $generated@@137)) (=> ($generated@@140 ($generated@@8 ($generated@@248 2)) $generated@@137) (=> (= $generated@@614 ($generated@@250 ($generated@@280 ($generated@@248 2)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@230 $generated@@614)) (=> ($generated@@230 $generated@@614) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@140 ($generated@@8 ($generated@@248 5)) $generated@@137)) (=> ($generated@@140 ($generated@@8 ($generated@@248 5)) $generated@@137) (=> (and (= $generated@@615 ($generated@@250 ($generated@@280 ($generated@@248 5)))) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@230 $generated@@615)))))))))))))
(let (($generated@@620  (=> (and ($generated@@254 $generated@@613) ($generated@@616 $generated@@613)) (=> (and (and ($generated@@140 $generated@@617 $generated@@220) ($generated@@79 $generated@@617 $generated@@220 $generated@@613)) true) (=> (and (and (and ($generated@@140 $generated@@618 $generated@@220) ($generated@@79 $generated@@618 $generated@@220 $generated@@613)) true) (and (= 2 $generated@@265) (= (ControlFlow 0 6) 2))) $generated@@619)))))
$generated@@620)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
