(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@351 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@352 (T@U T@U T@U) T@U)
(declare-fun $generated@@353 (T@T T@T T@T) T@T)
(declare-fun $generated@@354 (T@U T@U T@U) T@U)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@420 (T@T T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@507 (T@U T@U) T@U)
(declare-fun $generated@@515 (T@U T@U) T@U)
(declare-fun $generated@@531 (T@T) T@U)
(declare-fun $generated@@555 () T@T)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@613 (T@U Int) T@U)
(declare-fun $generated@@622 (T@U) Int)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@651 (T@U) Int)
(declare-fun $generated@@672 (T@U) T@U)
(declare-fun $generated@@727 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (= (type $generated@@137) $generated@@69) (= (type $generated@@138) $generated@@82)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@82) (= (type $generated@@140) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@139 $generated@@137 $generated@@140)  (or (= $generated@@139 $generated@@138) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@139 $generated@@137 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@69)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@82) (= ($generated@@141 $generated@@166 $generated@@137)  (or (= $generated@@166 $generated@@138) (= ($generated@@164 $generated@@166) $generated@@137))))
 :pattern ( ($generated@@141 $generated@@166 $generated@@137))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@72 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@82) (= (type $generated@@217) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@218) ($generated@@71 $generated@@4))) (= (type $generated@@220) $generated@@82)) (= (type $generated@@221) ($generated@@71 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@224) 17) (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@223 $generated@@226 $generated@@227)) $generated@@69)
 :pattern ( ($generated@@223 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@228) $generated@@224) (= (type $generated@@229) $generated@@69)) (= (type $generated@@230) $generated@@69)) (= (type $generated@@231) $generated@@69)) (= (type $generated@@232) $generated@@69)) (and (and ($generated@@141 $generated@@228 ($generated@@223 $generated@@229 $generated@@230)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@154) ($generated@@225 $generated@@233 $generated@@231)) ($generated@@225 $generated@@233 $generated@@229))
 :pattern ( ($generated@@225 $generated@@233 $generated@@231))
 :pattern ( ($generated@@225 $generated@@233 $generated@@229))
))) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@225 $generated@@234 $generated@@230)) ($generated@@225 $generated@@234 $generated@@232))
 :pattern ( ($generated@@225 $generated@@234 $generated@@230))
 :pattern ( ($generated@@225 $generated@@234 $generated@@232))
)))) ($generated@@141 $generated@@228 ($generated@@223 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@141 $generated@@228 ($generated@@223 $generated@@229 $generated@@230)) ($generated@@141 $generated@@228 ($generated@@223 $generated@@231 $generated@@232)))
)))
(assert (= (type $generated@@235) $generated@@69))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@82) (= (type $generated@@237) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@236 $generated@@235 $generated@@237) ($generated@@79 $generated@@236 $generated@@137 $generated@@237)))
 :pattern ( ($generated@@79 $generated@@236 $generated@@235 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@239 $generated@@240)) $generated@@145)
 :pattern ( ($generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@69) (= (type $generated@@242) $generated@@69)) (= (type $generated@@243) $generated@@154)) (= (type $generated@@244) $generated@@154)) (= ($generated@@141 ($generated@@238 $generated@@243 $generated@@244) ($generated@@144 $generated@@241 $generated@@242))  (and ($generated@@225 $generated@@243 $generated@@241) ($generated@@225 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@141 ($generated@@238 $generated@@243 $generated@@244) ($generated@@144 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) (= (type $generated@@246) $generated@@145)) (= ($generated@@151 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@151 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@69)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@250) $generated@@69)) (= ($generated@@141 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@154) ($generated@@0 ($generated@@86 $generated@@249 $generated@@251))) ($generated@@225 $generated@@251 $generated@@250))
 :pattern ( ($generated@@86 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@141 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@69)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@255) $generated@@69)) (= ($generated@@141 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@154) ($generated@@0 ($generated@@86 $generated@@254 $generated@@256))) ($generated@@225 $generated@@256 $generated@@255))
 :pattern ( ($generated@@86 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@141 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert  (and (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
)) (= (type $generated@@262) ($generated@@81 $generated@@82 $generated@@83))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@81 $generated@@271 $generated@@4))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@275) $generated@@224)) (= (type $generated@@276) $generated@@154)) (and ($generated@@263 $generated@@274) (and ($generated@@225 $generated@@276 $generated@@272) ($generated@@141 $generated@@275 ($generated@@223 $generated@@272 $generated@@273))))) (= ($generated@@264 ($generated@@261 $generated@@272 $generated@@273 $generated@@262 $generated@@275 $generated@@276) ($generated@@265 $generated@@154)) ($generated@@264 ($generated@@261 $generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276) ($generated@@265 $generated@@154))))
 :pattern ( ($generated@@261 $generated@@272 $generated@@273 $generated@@262 $generated@@275 $generated@@276) ($generated@@263 $generated@@274))
 :pattern ( ($generated@@261 $generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@69) (= (type $generated@@279) $generated@@69)) (= (type $generated@@280) $generated@@154)) (= (type $generated@@281) $generated@@154)) (= (type $generated@@282) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@263 $generated@@282)) (= ($generated@@79 ($generated@@238 $generated@@280 $generated@@281) ($generated@@144 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@79 ($generated@@238 $generated@@280 $generated@@281) ($generated@@144 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@73)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@145) (= ($generated@@143 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@143 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@154)) (= $generated@@286 ($generated@@238 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 18)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert ($generated@@263 $generated@@262))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@154)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@69) (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@79 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@81 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@84 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@81 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@86 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 19)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@81 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@86 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@86 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 20)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@81 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@86 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@86 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@84 (type $generated@@344))))
 (=> (and (= (type $generated@@344) ($generated@@81 $generated@@346 $generated@@4)) (= (type $generated@@345) ($generated@@81 $generated@@346 $generated@@4))) (= ($generated@@264 $generated@@344 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (= ($generated@@0 ($generated@@86 $generated@@344 $generated@@347)) ($generated@@0 ($generated@@86 $generated@@345 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@344 $generated@@347))
 :pattern ( ($generated@@86 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@264 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@84 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@81 $generated@@349 $generated@@2)) (= ($generated@@160 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@86 $generated@@348 $generated@@350))) (<= ($generated ($generated@@86 $generated@@348 $generated@@350)) ($generated@@302 $generated@@348))))
 :pattern ( ($generated@@86 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@160 $generated@@348))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@359 $generated@@360 $generated@@361)) 21)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@362 $generated@@363 $generated@@364)) $generated@@362)
 :pattern ( ($generated@@353 $generated@@362 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@356 ($generated@@353 $generated@@365 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@353 $generated@@365 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@357 ($generated@@353 $generated@@368 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@353 $generated@@368 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@357 (type $generated@@371))))
(= (type ($generated@@354 $generated@@371 $generated@@372 $generated@@373)) $generated@@374))
 :pattern ( ($generated@@354 $generated@@371 $generated@@372 $generated@@373))
))) (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 (type $generated@@377)))
(let (($generated@@381 (type $generated@@376)))
(= (type ($generated@@358 $generated@@375 $generated@@376 $generated@@377 $generated@@378)) ($generated@@353 $generated@@381 $generated@@380 $generated@@379)))))
 :pattern ( ($generated@@358 $generated@@375 $generated@@376 $generated@@377 $generated@@378))
))) (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@357 (type $generated@@382))))
 (=> (= (type $generated@@385) $generated@@386) (= ($generated@@354 ($generated@@358 $generated@@382 $generated@@383 $generated@@384 $generated@@385) $generated@@383 $generated@@384) $generated@@385)))
 :weight 0
))) (and (and (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (or (= $generated@@389 $generated@@391) (= ($generated@@354 ($generated@@358 $generated@@388 $generated@@389 $generated@@390 $generated@@387) $generated@@391 $generated@@392) ($generated@@354 $generated@@388 $generated@@391 $generated@@392)))
 :weight 0
)) (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (or (= $generated@@396 $generated@@398) (= ($generated@@354 ($generated@@358 $generated@@394 $generated@@395 $generated@@396 $generated@@393) $generated@@397 $generated@@398) ($generated@@354 $generated@@394 $generated@@397 $generated@@398)))
 :weight 0
))) (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (or true (= ($generated@@354 ($generated@@358 $generated@@400 $generated@@401 $generated@@402 $generated@@399) $generated@@403 $generated@@404) ($generated@@354 $generated@@400 $generated@@403 $generated@@404)))
 :weight 0
)))) (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@351 $generated@@405 $generated@@406 $generated@@407 $generated@@408 $generated@@409)) $generated@@154)
 :pattern ( ($generated@@351 $generated@@405 $generated@@406 $generated@@407 $generated@@408 $generated@@409))
))) (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@352 $generated@@410 $generated@@411 $generated@@412)) $generated@@224)
 :pattern ( ($generated@@352 $generated@@410 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@413) $generated@@69) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@416) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 $generated@@154))) (= (type $generated@@417) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 $generated@@4))) (= (type $generated@@418) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 ($generated@@81 $generated@@154 $generated@@4)))) (= (type $generated@@419) $generated@@154)) (= ($generated@@351 $generated@@413 $generated@@414 $generated@@415 ($generated@@352 $generated@@416 $generated@@417 $generated@@418) $generated@@419) ($generated@@354 $generated@@416 $generated@@415 $generated@@419)))
 :pattern ( ($generated@@351 $generated@@413 $generated@@414 $generated@@415 ($generated@@352 $generated@@416 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@T) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@421)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@154) ($generated@@225 $generated@@423 $generated@@137)) (and (= ($generated@@297 ($generated@@420 $generated@@82 $generated@@423)) $generated@@423) ($generated@@141 ($generated@@420 $generated@@82 $generated@@423) $generated@@137)))
 :pattern ( ($generated@@225 $generated@@423 $generated@@137))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@154) ($generated@@225 $generated@@424 $generated@@235)) (and (= ($generated@@297 ($generated@@420 $generated@@82 $generated@@424)) $generated@@424) ($generated@@141 ($generated@@420 $generated@@82 $generated@@424) $generated@@235)))
 :pattern ( ($generated@@225 $generated@@424 $generated@@235))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@82) (= ($generated@@141 $generated@@425 $generated@@235)  (and ($generated@@141 $generated@@425 $generated@@137) (not (= $generated@@425 $generated@@138)))))
 :pattern ( ($generated@@141 $generated@@425 $generated@@235))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@312 (type $generated@@426))))
(let (($generated@@428 ($generated@@311 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@310 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@309 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) ($generated@@0 ($generated@@86 ($generated@@308 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@308 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@312 (type $generated@@431))))
(= (type ($generated@@430 $generated@@431)) ($generated@@81 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@312 (type $generated@@433))))
(let (($generated@@435 ($generated@@311 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@310 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@309 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@434) ($generated@@0 ($generated@@86 ($generated@@430 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@430 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@330 (type $generated@@437))))
(let (($generated@@439 ($generated@@329 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@328 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@327 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) ($generated@@0 ($generated@@86 ($generated@@326 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@326 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@330 (type $generated@@442))))
(= (type ($generated@@441 $generated@@442)) ($generated@@81 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@330 (type $generated@@444))))
(let (($generated@@446 ($generated@@329 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@328 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@327 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@445) ($generated@@0 ($generated@@86 ($generated@@441 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@441 $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@449) $generated@@69)) (= ($generated@@141 $generated@@448 ($generated@@159 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@448 $generated@@450)))) ($generated@@225 $generated@@450 $generated@@449))
 :pattern ( ($generated@@86 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@141 $generated@@448 ($generated@@159 $generated@@449)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@452) $generated@@224) (= (type $generated@@453) $generated@@69)) (= (type $generated@@454) $generated@@69)) (= (type $generated@@455) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@263 $generated@@455) ($generated@@79 $generated@@452 ($generated@@223 $generated@@453 $generated@@454) $generated@@455))) (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@154) (=> (and ($generated@@277 $generated@@456 $generated@@453 $generated@@455) ($generated@@451 $generated@@453 $generated@@454 $generated@@455 $generated@@452 $generated@@456)) ($generated@@277 ($generated@@351 $generated@@453 $generated@@454 $generated@@455 $generated@@452 $generated@@456) $generated@@454 $generated@@455)))
 :pattern ( ($generated@@351 $generated@@453 $generated@@454 $generated@@455 $generated@@452 $generated@@456))
)))
 :pattern ( ($generated@@79 $generated@@452 ($generated@@223 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@457) $generated@@224) (= (type $generated@@458) $generated@@69)) (= (type $generated@@459) $generated@@69)) (= (type $generated@@460) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@263 $generated@@460)) (= ($generated@@79 $generated@@457 ($generated@@223 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@154) (=> (and (and ($generated@@225 $generated@@461 $generated@@458) ($generated@@277 $generated@@461 $generated@@458 $generated@@460)) ($generated@@451 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461)) (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@82) (=> (and (not (= $generated@@462 $generated@@138)) ($generated@@0 ($generated@@86 ($generated@@261 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461) ($generated@@297 $generated@@462)))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@460 $generated@@462) $generated@@60))))
 :pattern ( ($generated@@86 ($generated@@261 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461) ($generated@@297 $generated@@462)))
))))
 :pattern ( ($generated@@351 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461))
 :pattern ( ($generated@@261 $generated@@458 $generated@@459 $generated@@460 $generated@@457 $generated@@461))
))))
 :pattern ( ($generated@@79 $generated@@457 ($generated@@223 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@463) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@464) $generated@@69)) (= (type $generated@@465) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@463 ($generated@@247 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@154) ($generated@@0 ($generated@@86 $generated@@463 $generated@@466))) ($generated@@277 $generated@@466 $generated@@464 $generated@@465))
 :pattern ( ($generated@@86 $generated@@463 $generated@@466))
))))
 :pattern ( ($generated@@79 $generated@@463 ($generated@@247 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@468) $generated@@69)) (= (type $generated@@469) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@467 ($generated@@252 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@154) ($generated@@0 ($generated@@86 $generated@@467 $generated@@470))) ($generated@@277 $generated@@470 $generated@@468 $generated@@469))
 :pattern ( ($generated@@86 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@79 $generated@@467 ($generated@@252 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@471)))
(= ($generated ($generated@@86 ($generated@@303 $generated@@472) $generated@@471)) 0))
 :pattern ( (let (($generated@@472 (type $generated@@471)))
($generated@@86 ($generated@@303 $generated@@472) $generated@@471)))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@312 (type $generated@@476))))
(let (($generated@@478 ($generated@@311 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476)) ($generated@@81 $generated@@478 $generated@@477))))
 :pattern ( ($generated@@474 $generated@@476))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@480) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@473 $generated@@479) $generated@@480))  (and ($generated@@0 ($generated@@86 ($generated@@308 $generated@@479) ($generated@@152 ($generated@@420 $generated@@145 $generated@@480)))) (= ($generated@@86 ($generated@@474 $generated@@479) ($generated@@152 ($generated@@420 $generated@@145 $generated@@480))) ($generated@@153 ($generated@@420 $generated@@145 $generated@@480))))))
 :pattern ( ($generated@@86 ($generated@@473 $generated@@479) $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@330 (type $generated@@484))))
(let (($generated@@486 ($generated@@329 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484)) ($generated@@81 $generated@@486 $generated@@485))))
 :pattern ( ($generated@@482 $generated@@484))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@488) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@481 $generated@@487) $generated@@488))  (and ($generated@@0 ($generated@@86 ($generated@@326 $generated@@487) ($generated@@152 ($generated@@420 $generated@@145 $generated@@488)))) (= ($generated@@86 ($generated@@482 $generated@@487) ($generated@@152 ($generated@@420 $generated@@145 $generated@@488))) ($generated@@153 ($generated@@420 $generated@@145 $generated@@488))))))
 :pattern ( ($generated@@86 ($generated@@481 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(let (($generated@@492 ($generated@@311 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@310 $generated@@492 $generated@@491)) (= ($generated@@0 ($generated@@86 ($generated@@430 $generated@@489) $generated@@490)) (exists (($generated@@493 T@U) ) (!  (and (= (type $generated@@493) $generated@@492) (and ($generated@@0 ($generated@@86 ($generated@@308 $generated@@489) $generated@@493)) (= $generated@@490 ($generated@@86 ($generated@@474 $generated@@489) $generated@@493))))
 :pattern ( ($generated@@86 ($generated@@308 $generated@@489) $generated@@493))
 :pattern ( ($generated@@86 ($generated@@474 $generated@@489) $generated@@493))
))))))
 :pattern ( ($generated@@86 ($generated@@430 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(let (($generated@@497 ($generated@@329 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@328 $generated@@497 $generated@@496)) (= ($generated@@0 ($generated@@86 ($generated@@441 $generated@@494) $generated@@495)) (exists (($generated@@498 T@U) ) (!  (and (= (type $generated@@498) $generated@@497) (and ($generated@@0 ($generated@@86 ($generated@@326 $generated@@494) $generated@@498)) (= $generated@@495 ($generated@@86 ($generated@@482 $generated@@494) $generated@@498))))
 :pattern ( ($generated@@86 ($generated@@326 $generated@@494) $generated@@498))
 :pattern ( ($generated@@86 ($generated@@482 $generated@@494) $generated@@498))
))))))
 :pattern ( ($generated@@86 ($generated@@441 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= (type $generated@@501) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@502) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 $generated@@154))) (= (type $generated@@503) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 $generated@@4))) (= (type $generated@@504) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 ($generated@@81 $generated@@154 $generated@@4)))) (= (type $generated@@505) $generated@@154)) (= (type $generated@@506) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@261 $generated@@499 $generated@@500 $generated@@501 ($generated@@352 $generated@@502 $generated@@503 $generated@@504) $generated@@505) $generated@@506)) ($generated@@0 ($generated@@86 ($generated@@354 $generated@@504 $generated@@501 $generated@@505) $generated@@506))))
 :pattern ( ($generated@@86 ($generated@@261 $generated@@499 $generated@@500 $generated@@501 ($generated@@352 $generated@@502 $generated@@503 $generated@@504) $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@508 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@69)) (= (type $generated@@512) $generated@@69)) (= (type $generated@@513) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@308 $generated@@510) $generated@@514))) (and ($generated@@277 ($generated@@86 ($generated@@474 $generated@@510) $generated@@514) $generated@@512 $generated@@513) ($generated@@277 $generated@@514 $generated@@511 $generated@@513)))
 :pattern ( ($generated@@86 ($generated@@474 $generated@@510) $generated@@514))
 :pattern ( ($generated@@86 ($generated@@308 $generated@@510) $generated@@514))
))))
 :pattern ( ($generated@@79 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@519) $generated@@69)) (= (type $generated@@520) $generated@@69)) (= (type $generated@@521) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@326 $generated@@518) $generated@@522))) (and ($generated@@277 ($generated@@86 ($generated@@482 $generated@@518) $generated@@522) $generated@@520 $generated@@521) ($generated@@277 $generated@@522 $generated@@519 $generated@@521)))
 :pattern ( ($generated@@86 ($generated@@482 $generated@@518) $generated@@522))
 :pattern ( ($generated@@86 ($generated@@326 $generated@@518) $generated@@522))
))))
 :pattern ( ($generated@@79 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@84 (type $generated@@523))))
 (=> (and (and (= (type $generated@@523) ($generated@@81 $generated@@525 $generated@@4)) (= (type $generated@@524) ($generated@@81 $generated@@525 $generated@@4))) ($generated@@264 $generated@@523 $generated@@524)) (= $generated@@523 $generated@@524)))
 :pattern ( ($generated@@264 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@224) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) (= ($generated@@141 $generated@@526 ($generated@@223 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@530) $generated@@154)) (=> (and (and ($generated@@263 $generated@@529) ($generated@@225 $generated@@530 $generated@@527)) ($generated@@451 $generated@@527 $generated@@528 $generated@@529 $generated@@526 $generated@@530)) ($generated@@225 ($generated@@351 $generated@@527 $generated@@528 $generated@@529 $generated@@526 $generated@@530) $generated@@528)))
 :pattern ( ($generated@@351 $generated@@527 $generated@@528 $generated@@529 $generated@@526 $generated@@530))
))))
 :pattern ( ($generated@@141 $generated@@526 ($generated@@223 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@T) ) (! (= (type ($generated@@531 $generated@@532)) ($generated@@81 $generated@@532 $generated@@4))
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@330 (type $generated@@533))))
(let (($generated@@535 ($generated@@329 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@328 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@327 $generated@@535 $generated@@534)) (= ($generated@@326 $generated@@533) ($generated@@531 $generated@@535))))))
 :pattern ( ($generated@@326 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@330 (type $generated@@536))))
(let (($generated@@538 ($generated@@329 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@328 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@327 $generated@@538 $generated@@537)) (= ($generated@@441 $generated@@536) ($generated@@531 $generated@@537))))))
 :pattern ( ($generated@@441 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@330 (type $generated@@539))))
(let (($generated@@541 ($generated@@329 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@328 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@327 $generated@@541 $generated@@540)) (= ($generated@@481 $generated@@539) ($generated@@531 $generated@@154))))))
 :pattern ( ($generated@@481 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@312 (type $generated@@542))))
(let (($generated@@544 ($generated@@311 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@310 $generated@@544 $generated@@543)) (or (= $generated@@542 ($generated@@309 $generated@@544 $generated@@543)) (exists (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (and (and (= (type $generated@@545) $generated@@154) (= (type $generated@@546) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@473 $generated@@542) ($generated@@297 ($generated@@238 $generated@@545 $generated@@546)))))
 :no-pattern (type $generated@@545)
 :no-pattern (type $generated@@546)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
))))))
 :pattern ( ($generated@@473 $generated@@542))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@330 (type $generated@@547))))
(let (($generated@@549 ($generated@@329 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@328 $generated@@549 $generated@@548)) (or (= $generated@@547 ($generated@@327 $generated@@549 $generated@@548)) (exists (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (and (and (= (type $generated@@550) $generated@@154) (= (type $generated@@551) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@481 $generated@@547) ($generated@@297 ($generated@@238 $generated@@550 $generated@@551)))))
 :no-pattern (type $generated@@550)
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@481 $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) ($generated@@225 $generated@@552 $generated@@46)) (and (= ($generated@@297 ($generated@@420 $generated@@2 $generated@@552)) $generated@@552) ($generated@@141 ($generated@@420 $generated@@2 $generated@@552) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@552 $generated@@46))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) ($generated@@225 $generated@@553 $generated@@47)) (and (= ($generated@@297 ($generated@@420 $generated@@3 $generated@@553)) $generated@@553) ($generated@@141 ($generated@@420 $generated@@3 $generated@@553) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@553 $generated@@47))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) ($generated@@225 $generated@@554 $generated@@44)) (and (= ($generated@@297 ($generated@@420 $generated@@4 $generated@@554)) $generated@@554) ($generated@@141 ($generated@@420 $generated@@4 $generated@@554) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@554 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@555) 22))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) ($generated@@225 $generated@@556 $generated@@45)) (and (= ($generated@@297 ($generated@@420 $generated@@555 $generated@@556)) $generated@@556) ($generated@@141 ($generated@@420 $generated@@555 $generated@@556) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@556 $generated@@45))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@69) (= ($generated@@225 ($generated@@297 $generated@@557) $generated@@558) ($generated@@141 $generated@@557 $generated@@558)))
 :pattern ( ($generated@@225 ($generated@@297 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@562) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 $generated@@154))) (= (type $generated@@563) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 $generated@@4))) (= (type $generated@@564) ($generated@@353 ($generated@@81 $generated@@82 $generated@@83) $generated@@154 ($generated@@81 $generated@@154 $generated@@4)))) (= (type $generated@@565) $generated@@154)) ($generated@@0 ($generated@@354 $generated@@563 $generated@@561 $generated@@565))) ($generated@@451 $generated@@559 $generated@@560 $generated@@561 ($generated@@352 $generated@@562 $generated@@563 $generated@@564) $generated@@565))
 :pattern ( ($generated@@451 $generated@@559 $generated@@560 $generated@@561 ($generated@@352 $generated@@562 $generated@@563 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@84 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@81 $generated@@567 $generated@@2)) (<= 0 ($generated@@302 $generated@@566))))
 :pattern ( ($generated@@302 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@292 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@291 $generated@@569)) (<= 0 ($generated@@290 $generated@@568))))
 :pattern ( ($generated@@290 $generated@@568))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@69)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@69) (= (type $generated@@573) $generated@@69)) (= ($generated@@570 ($generated@@507 $generated@@572 $generated@@573)) $generated@@572))
 :pattern ( ($generated@@507 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@69)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@69) (= (type $generated@@577) $generated@@69)) (= ($generated@@574 ($generated@@507 $generated@@576 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@507 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@69) (= (type $generated@@579) $generated@@69)) (= ($generated@@77 ($generated@@507 $generated@@578 $generated@@579)) $generated@@58))
 :pattern ( ($generated@@507 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@69)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@69) (= (type $generated@@583) $generated@@69)) (= ($generated@@580 ($generated@@515 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@515 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@69)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@69) (= (type $generated@@587) $generated@@69)) (= ($generated@@584 ($generated@@515 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@515 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@69) (= (type $generated@@589) $generated@@69)) (= ($generated@@77 ($generated@@515 $generated@@588 $generated@@589)) $generated@@59))
 :pattern ( ($generated@@515 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@69)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@69) (= (type $generated@@593) $generated@@69)) (= ($generated@@590 ($generated@@223 $generated@@592 $generated@@593)) $generated@@592))
 :pattern ( ($generated@@223 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@69)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@69) (= (type $generated@@597) $generated@@69)) (= ($generated@@594 ($generated@@223 $generated@@596 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@223 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@154) (= (type $generated@@599) $generated@@154)) (= ($generated@@283 ($generated@@238 $generated@@598 $generated@@599)) $generated@@62))
 :pattern ( ($generated@@238 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@69)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@69) (= (type $generated@@603) $generated@@69)) (= ($generated@@600 ($generated@@144 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@144 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@69)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@69) (= (type $generated@@607) $generated@@69)) (= ($generated@@604 ($generated@@144 $generated@@606 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@144 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@154) (= (type $generated@@609) $generated@@154)) (= ($generated@@152 ($generated@@238 $generated@@608 $generated@@609)) $generated@@608))
 :pattern ( ($generated@@238 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@154) (= (type $generated@@611) $generated@@154)) (= ($generated@@153 ($generated@@238 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@238 $generated@@610 $generated@@611))
)))
(assert  (and (forall (($generated@@614 T@U) ) (! (= (type ($generated@@612 $generated@@614)) $generated@@69)
 :pattern ( ($generated@@612 $generated@@614))
)) (forall (($generated@@615 T@U) ($generated@@616 Int) ) (! (let (($generated@@617 ($generated@@292 (type $generated@@615))))
(= (type ($generated@@613 $generated@@615 $generated@@616)) $generated@@617))
 :pattern ( ($generated@@613 $generated@@615 $generated@@616))
))))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@291 $generated@@154)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@618 ($generated@@612 $generated@@619) $generated@@620) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@290 $generated@@618))) ($generated@@277 ($generated@@613 $generated@@618 $generated@@621) $generated@@619 $generated@@620))
 :pattern ( ($generated@@613 $generated@@618 $generated@@621))
))))
 :pattern ( ($generated@@79 $generated@@618 ($generated@@612 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@622 ($generated@@80 $generated@@623)) $generated@@623)
 :pattern ( ($generated@@80 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@69)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@69) (= ($generated@@624 ($generated@@247 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@247 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@69) (= ($generated@@77 ($generated@@247 $generated@@627)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@69)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@69) (= ($generated@@628 ($generated@@252 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@252 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@69) (= ($generated@@77 ($generated@@252 $generated@@631)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@69)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@69) (= ($generated@@632 ($generated@@159 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@159 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@69) (= ($generated@@77 ($generated@@159 $generated@@635)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@69)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@69) (= ($generated@@636 ($generated@@612 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@612 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@69) (= ($generated@@77 ($generated@@612 $generated@@639)) $generated@@57))
 :pattern ( ($generated@@612 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
(= ($generated@@420 $generated@@641 ($generated@@297 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@297 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@643) $generated@@69)) (= (type $generated@@644) $generated@@69)) (= ($generated@@141 $generated@@642 ($generated@@507 $generated@@643 $generated@@644)) (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@308 $generated@@642) $generated@@645))) (and ($generated@@225 ($generated@@86 ($generated@@474 $generated@@642) $generated@@645) $generated@@644) ($generated@@225 $generated@@645 $generated@@643)))
 :pattern ( ($generated@@86 ($generated@@474 $generated@@642) $generated@@645))
 :pattern ( ($generated@@86 ($generated@@308 $generated@@642) $generated@@645))
))))
 :pattern ( ($generated@@141 $generated@@642 ($generated@@507 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@647) $generated@@69)) (= (type $generated@@648) $generated@@69)) (= ($generated@@141 $generated@@646 ($generated@@515 $generated@@647 $generated@@648)) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@326 $generated@@646) $generated@@649))) (and ($generated@@225 ($generated@@86 ($generated@@482 $generated@@646) $generated@@649) $generated@@648) ($generated@@225 $generated@@649 $generated@@647)))
 :pattern ( ($generated@@86 ($generated@@482 $generated@@646) $generated@@649))
 :pattern ( ($generated@@86 ($generated@@326 $generated@@646) $generated@@649))
))))
 :pattern ( ($generated@@141 $generated@@646 ($generated@@515 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@154) (= (type $generated@@653) $generated@@154)) (< ($generated@@650 $generated@@652) ($generated@@651 ($generated@@238 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@238 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@154) (= (type $generated@@655) $generated@@154)) (< ($generated@@650 $generated@@655) ($generated@@651 ($generated@@238 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@238 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@154) (= (type $generated@@657) $generated@@69)) (= (type $generated@@658) $generated@@69)) ($generated@@225 $generated@@656 ($generated@@507 $generated@@657 $generated@@658))) (and (= ($generated@@297 ($generated@@420 ($generated@@310 $generated@@154 $generated@@154) $generated@@656)) $generated@@656) ($generated@@141 ($generated@@420 ($generated@@310 $generated@@154 $generated@@154) $generated@@656) ($generated@@507 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@225 $generated@@656 ($generated@@507 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@154) (= (type $generated@@660) $generated@@69)) (= (type $generated@@661) $generated@@69)) ($generated@@225 $generated@@659 ($generated@@515 $generated@@660 $generated@@661))) (and (= ($generated@@297 ($generated@@420 ($generated@@328 $generated@@154 $generated@@154) $generated@@659)) $generated@@659) ($generated@@141 ($generated@@420 ($generated@@328 $generated@@154 $generated@@154) $generated@@659) ($generated@@515 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@225 $generated@@659 ($generated@@515 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@69) (= (type $generated@@663) $generated@@69)) (= (type $generated@@664) $generated@@154)) ($generated@@225 $generated@@664 ($generated@@223 $generated@@662 $generated@@663))) (and (= ($generated@@297 ($generated@@420 $generated@@224 $generated@@664)) $generated@@664) ($generated@@141 ($generated@@420 $generated@@224 $generated@@664) ($generated@@223 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@225 $generated@@664 ($generated@@223 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@69) (= (type $generated@@666) $generated@@69)) (= (type $generated@@667) $generated@@154)) ($generated@@225 $generated@@667 ($generated@@144 $generated@@665 $generated@@666))) (and (= ($generated@@297 ($generated@@420 $generated@@145 $generated@@667)) $generated@@667) ($generated@@141 ($generated@@420 $generated@@145 $generated@@667) ($generated@@144 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@225 $generated@@667 ($generated@@144 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (not ($generated@@0 ($generated@@86 ($generated@@265 $generated@@669) $generated@@668))))
 :pattern ( (let (($generated@@669 (type $generated@@668)))
($generated@@86 ($generated@@265 $generated@@669) $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ) (! (let (($generated@@671 (type $generated@@670)))
 (not ($generated@@0 ($generated@@86 ($generated@@531 $generated@@671) $generated@@670))))
 :pattern ( (let (($generated@@671 (type $generated@@670)))
($generated@@86 ($generated@@531 $generated@@671) $generated@@670)))
)))
(assert (forall (($generated@@673 T@U) ) (! (= (type ($generated@@672 $generated@@673)) $generated@@74)
 :pattern ( ($generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@69) (= (type $generated@@675) $generated@@69)) (and (= ($generated@@77 ($generated@@223 $generated@@674 $generated@@675)) $generated@@61) (= ($generated@@672 ($generated@@223 $generated@@674 $generated@@675)) $generated@@66)))
 :pattern ( ($generated@@223 $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@69) (= (type $generated@@677) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@676 $generated@@677)) $generated@@63) (= ($generated@@672 ($generated@@144 $generated@@676 $generated@@677)) $generated@@67)))
 :pattern ( ($generated@@144 $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@678) $generated@@69) (= (type $generated@@679) $generated@@69)) (= (type $generated@@680) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@681) $generated@@224)) (= (type $generated@@682) $generated@@154)) (and (and ($generated@@263 $generated@@680) (and ($generated@@225 $generated@@682 $generated@@678) ($generated@@141 $generated@@681 ($generated@@223 $generated@@678 $generated@@679)))) ($generated@@264 ($generated@@261 $generated@@678 $generated@@679 $generated@@262 $generated@@681 $generated@@682) ($generated@@265 $generated@@154)))) (= ($generated@@451 $generated@@678 $generated@@679 $generated@@262 $generated@@681 $generated@@682) ($generated@@451 $generated@@678 $generated@@679 $generated@@680 $generated@@681 $generated@@682)))
 :pattern ( ($generated@@451 $generated@@678 $generated@@679 $generated@@262 $generated@@681 $generated@@682) ($generated@@263 $generated@@680))
 :pattern ( ($generated@@451 $generated@@678 $generated@@679 $generated@@680 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@145) (= ($generated@@650 ($generated@@297 $generated@@683)) ($generated@@651 $generated@@683)))
 :pattern ( ($generated@@650 ($generated@@297 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@154) ($generated@@225 $generated@@684 ($generated@@80 0))) (and (= ($generated@@297 ($generated@@420 $generated@@2 $generated@@684)) $generated@@684) ($generated@@141 ($generated@@420 ($generated@@81 $generated@@154 $generated@@4) $generated@@684) ($generated@@80 0))))
 :pattern ( ($generated@@225 $generated@@684 ($generated@@80 0)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@154) (= (type $generated@@686) $generated@@69)) ($generated@@225 $generated@@685 ($generated@@247 $generated@@686))) (and (= ($generated@@297 ($generated@@420 ($generated@@81 $generated@@154 $generated@@4) $generated@@685)) $generated@@685) ($generated@@141 ($generated@@420 ($generated@@81 $generated@@154 $generated@@4) $generated@@685) ($generated@@247 $generated@@686))))
 :pattern ( ($generated@@225 $generated@@685 ($generated@@247 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@154) (= (type $generated@@688) $generated@@69)) ($generated@@225 $generated@@687 ($generated@@252 $generated@@688))) (and (= ($generated@@297 ($generated@@420 ($generated@@81 $generated@@154 $generated@@4) $generated@@687)) $generated@@687) ($generated@@141 ($generated@@420 ($generated@@81 $generated@@154 $generated@@4) $generated@@687) ($generated@@252 $generated@@688))))
 :pattern ( ($generated@@225 $generated@@687 ($generated@@252 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@154) (= (type $generated@@690) $generated@@69)) ($generated@@225 $generated@@689 ($generated@@159 $generated@@690))) (and (= ($generated@@297 ($generated@@420 ($generated@@81 $generated@@154 $generated@@2) $generated@@689)) $generated@@689) ($generated@@141 ($generated@@420 ($generated@@81 $generated@@154 $generated@@2) $generated@@689) ($generated@@159 $generated@@690))))
 :pattern ( ($generated@@225 $generated@@689 ($generated@@159 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@154) (= (type $generated@@692) $generated@@69)) ($generated@@225 $generated@@691 ($generated@@612 $generated@@692))) (and (= ($generated@@297 ($generated@@420 ($generated@@291 $generated@@154) $generated@@691)) $generated@@691) ($generated@@141 ($generated@@420 ($generated@@291 $generated@@154) $generated@@691) ($generated@@612 $generated@@692))))
 :pattern ( ($generated@@225 $generated@@691 ($generated@@612 $generated@@692)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@64))
(assert (= ($generated@@672 $generated@@137) $generated@@68))
(assert (= ($generated@@77 $generated@@235) $generated@@65))
(assert (= ($generated@@672 $generated@@235) $generated@@68))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@693) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@694) $generated@@69)) (= (type $generated@@695) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@693 ($generated@@159 $generated@@694) $generated@@695) (forall (($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@693 $generated@@696)))) ($generated@@277 $generated@@696 $generated@@694 $generated@@695))
 :pattern ( ($generated@@86 $generated@@693 $generated@@696))
))))
 :pattern ( ($generated@@79 $generated@@693 ($generated@@159 $generated@@694) $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (and (= (type $generated@@697) $generated@@145) (= (type $generated@@698) $generated@@69)) (= (type $generated@@699) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@263 $generated@@699) (and ($generated@@143 $generated@@697) (exists (($generated@@700 T@U) ) (!  (and (= (type $generated@@700) $generated@@69) ($generated@@79 $generated@@697 ($generated@@144 $generated@@698 $generated@@700) $generated@@699))
 :pattern ( ($generated@@79 $generated@@697 ($generated@@144 $generated@@698 $generated@@700) $generated@@699))
))))) ($generated@@277 ($generated@@152 $generated@@697) $generated@@698 $generated@@699))
 :pattern ( ($generated@@277 ($generated@@152 $generated@@697) $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@145) (= (type $generated@@702) $generated@@69)) (= (type $generated@@703) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@263 $generated@@703) (and ($generated@@143 $generated@@701) (exists (($generated@@704 T@U) ) (!  (and (= (type $generated@@704) $generated@@69) ($generated@@79 $generated@@701 ($generated@@144 $generated@@704 $generated@@702) $generated@@703))
 :pattern ( ($generated@@79 $generated@@701 ($generated@@144 $generated@@704 $generated@@702) $generated@@703))
))))) ($generated@@277 ($generated@@153 $generated@@701) $generated@@702 $generated@@703))
 :pattern ( ($generated@@277 ($generated@@153 $generated@@701) $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@154) (= (type $generated@@706) $generated@@154)) (= ($generated@@238 ($generated@@257 $generated@@705) ($generated@@257 $generated@@706)) ($generated@@257 ($generated@@238 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@238 ($generated@@257 $generated@@705) ($generated@@257 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (! (= ($generated@@297 ($generated@@257 $generated@@707)) ($generated@@257 ($generated@@297 $generated@@707)))
 :pattern ( ($generated@@297 ($generated@@257 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@292 (type $generated@@708))))
 (=> (and (= (type $generated@@708) ($generated@@291 $generated@@709)) (= ($generated@@290 $generated@@708) 0)) (= $generated@@708 ($generated@@289 $generated@@709))))
 :pattern ( ($generated@@290 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (! (let (($generated@@713 (type $generated@@711)))
 (=> (and (and (= (type $generated@@710) ($generated@@81 $generated@@713 $generated@@2)) (= (type $generated@@712) $generated@@2)) (<= 0 ($generated $generated@@712))) (= ($generated@@302 ($generated@@87 $generated@@710 $generated@@711 $generated@@712)) (+ (- ($generated@@302 $generated@@710) ($generated ($generated@@86 $generated@@710 $generated@@711))) ($generated $generated@@712)))))
 :pattern ( ($generated@@302 ($generated@@87 $generated@@710 $generated@@711 $generated@@712)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@715) $generated@@2)) ($generated@@79 $generated@@715 $generated@@46 $generated@@714))
 :pattern ( ($generated@@79 $generated@@715 $generated@@46 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@717) $generated@@3)) ($generated@@79 $generated@@717 $generated@@47 $generated@@716))
 :pattern ( ($generated@@79 $generated@@717 $generated@@47 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@719) $generated@@4)) ($generated@@79 $generated@@719 $generated@@44 $generated@@718))
 :pattern ( ($generated@@79 $generated@@719 $generated@@44 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@721) $generated@@555)) ($generated@@79 $generated@@721 $generated@@45 $generated@@720))
 :pattern ( ($generated@@79 $generated@@721 $generated@@45 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@723) $generated@@154)) ($generated@@79 $generated@@723 $generated@@48 $generated@@722))
 :pattern ( ($generated@@79 $generated@@723 $generated@@48 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@291 $generated@@154)) (= (type $generated@@725) $generated@@69)) (= ($generated@@141 $generated@@724 ($generated@@612 $generated@@725)) (forall (($generated@@726 Int) ) (!  (=> (and (<= 0 $generated@@726) (< $generated@@726 ($generated@@290 $generated@@724))) ($generated@@225 ($generated@@613 $generated@@724 $generated@@726) $generated@@725))
 :pattern ( ($generated@@613 $generated@@724 $generated@@726))
))))
 :pattern ( ($generated@@141 $generated@@724 ($generated@@612 $generated@@725)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 Int) ) (!  (=> (= (type $generated@@728) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@729) (< $generated@@729 ($generated@@290 $generated@@728))) (< ($generated@@651 ($generated@@420 $generated@@145 ($generated@@613 $generated@@728 $generated@@729))) ($generated@@727 $generated@@728))))
 :pattern ( ($generated@@651 ($generated@@420 $generated@@145 ($generated@@613 $generated@@728 $generated@@729))))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@731) $generated@@69)) (= (type $generated@@732) $generated@@69)) ($generated@@141 $generated@@730 ($generated@@507 $generated@@731 $generated@@732))) (and (and ($generated@@141 ($generated@@308 $generated@@730) ($generated@@247 $generated@@731)) ($generated@@141 ($generated@@430 $generated@@730) ($generated@@247 $generated@@732))) ($generated@@141 ($generated@@473 $generated@@730) ($generated@@247 ($generated@@144 $generated@@731 $generated@@732)))))
 :pattern ( ($generated@@141 $generated@@730 ($generated@@507 $generated@@731 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (and (= (type $generated@@733) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@734) $generated@@69)) (= (type $generated@@735) $generated@@69)) ($generated@@141 $generated@@733 ($generated@@515 $generated@@734 $generated@@735))) (and (and ($generated@@141 ($generated@@326 $generated@@733) ($generated@@252 $generated@@734)) ($generated@@141 ($generated@@441 $generated@@733) ($generated@@252 $generated@@735))) ($generated@@141 ($generated@@481 $generated@@733) ($generated@@252 ($generated@@144 $generated@@734 $generated@@735)))))
 :pattern ( ($generated@@141 $generated@@733 ($generated@@515 $generated@@734 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@2) ($generated@@141 $generated@@736 $generated@@46))
 :pattern ( ($generated@@141 $generated@@736 $generated@@46))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@3) ($generated@@141 $generated@@737 $generated@@47))
 :pattern ( ($generated@@141 $generated@@737 $generated@@47))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@4) ($generated@@141 $generated@@738 $generated@@44))
 :pattern ( ($generated@@141 $generated@@738 $generated@@44))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@555) ($generated@@141 $generated@@739 $generated@@45))
 :pattern ( ($generated@@141 $generated@@739 $generated@@45))
)))
(assert (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@154) ($generated@@141 $generated@@740 $generated@@48))
 :pattern ( ($generated@@141 $generated@@740 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 (T@U) Bool)
(declare-fun $generated@@746 () Int)
(assert  (and (and (and (= (type $generated@@742) $generated@@224) (= (type $generated@@741) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@743) $generated@@82)) (= (type $generated@@744) ($generated@@169 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@747 true))
(let (($generated@@748  (=> (and (=> ($generated@@451 $generated@@235 $generated@@44 $generated@@741 $generated@@742 ($generated@@297 $generated@@743)) ($generated@@0 ($generated@@420 $generated@@4 ($generated@@351 $generated@@235 $generated@@44 $generated@@741 $generated@@742 ($generated@@297 $generated@@743))))) (= (ControlFlow 0 4) 1)) $generated@@747)))
(let (($generated@@749  (=> ($generated@@79 $generated@@742 ($generated@@223 $generated@@235 $generated@@44) $generated@@741) (=> (and ($generated@@79 $generated@@743 $generated@@235 $generated@@741) ($generated@@451 $generated@@235 $generated@@44 $generated@@741 $generated@@742 ($generated@@297 $generated@@743))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@451 $generated@@235 $generated@@44 $generated@@741 $generated@@742 ($generated@@297 $generated@@743))) (=> ($generated@@451 $generated@@235 $generated@@44 $generated@@741 $generated@@742 ($generated@@297 $generated@@743)) (=> (and ($generated@@0 ($generated@@420 $generated@@4 ($generated@@351 $generated@@235 $generated@@44 $generated@@741 $generated@@742 ($generated@@297 $generated@@743)))) (= (ControlFlow 0 2) 1)) $generated@@747)))))))
(let (($generated@@750  (=> (= $generated@@744 ($generated@@168 $generated@@138 $generated@@741 $generated@@60 false)) (=> (and ($generated@@141 $generated@@743 $generated@@235) ($generated@@79 $generated@@743 $generated@@235 $generated@@741)) (and (=> (= (ControlFlow 0 5) 2) $generated@@749) (=> (= (ControlFlow 0 5) 4) $generated@@748))))))
(let (($generated@@751  (=> (and ($generated@@263 $generated@@741) ($generated@@745 $generated@@741)) (=> (and (and ($generated@@141 $generated@@742 ($generated@@223 $generated@@235 $generated@@44)) ($generated@@79 $generated@@742 ($generated@@223 $generated@@235 $generated@@44) $generated@@741)) (and (= 2 $generated@@746) (= (ControlFlow 0 6) 5))) $generated@@750))))
$generated@@751))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@228)) 17)) (forall (($generated@@229 T@T) ) (! (= ($generated@@227 ($generated@@223 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@223 $generated@@229))
))) (forall (($generated@@230 T@U) ) (! (= (type ($generated@@225 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@230))
))))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (= (type $generated@@231) ($generated@@223 $generated@@145)) (= (type $generated@@232) ($generated@@223 $generated@@145))) (or ($generated@@224 $generated@@231 $generated@@232) (and (not (= 1 $generated@@221)) (and ($generated@@132 $generated@@231 ($generated@@225 $generated@@47)) ($generated@@132 $generated@@232 ($generated@@225 $generated@@47)))))) (= ($generated@@222 $generated@@231 $generated@@232) ($generated@@226 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@222 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@212 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@212 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) $generated@@145)) (= (type $generated@@253) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@247 $generated@@253)) (= ($generated@@74 ($generated@@211 $generated@@251 $generated@@252) ($generated@@135 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@251 $generated@@252) ($generated@@135 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@136) (= ($generated@@134 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 Int) ) (! (let (($generated@@261 ($generated@@227 (type $generated@@259))))
(= (type ($generated@@258 $generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@227 (type $generated@@262))))
 (=> (and (= (type $generated@@262) ($generated@@223 $generated@@264)) (= (type $generated@@263) ($generated@@223 $generated@@264))) (= ($generated@@226 $generated@@262 $generated@@263)  (and (= ($generated@@257 $generated@@262) ($generated@@257 $generated@@263)) (forall (($generated@@265 Int) ) (!  (=> (and (<= 0 $generated@@265) (< $generated@@265 ($generated@@257 $generated@@262))) (= ($generated@@258 $generated@@262 $generated@@265) ($generated@@258 $generated@@263 $generated@@265)))
 :pattern ( ($generated@@258 $generated@@262 $generated@@265))
 :pattern ( ($generated@@258 $generated@@263 $generated@@265))
))))))
 :pattern ( ($generated@@226 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@136) ($generated@@134 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@145) (= (type $generated@@268) $generated@@145)) (= $generated@@266 ($generated@@211 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@134 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@223 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@257 ($generated@@269 $generated@@271)) 0)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@145)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@248 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@74 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@248 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@76 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@76 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@79 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@76 $generated@@320 $generated@@2)) (= ($generated@@151 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@81 $generated@@319 $generated@@321))) (<= ($generated ($generated@@81 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@81 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@151 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@287 (type $generated@@322))))
(let (($generated@@324 ($generated@@286 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@285 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@284 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@283 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@287 (type $generated@@329))))
(let (($generated@@331 ($generated@@286 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@285 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@284 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@305 (type $generated@@333))))
(let (($generated@@335 ($generated@@304 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@303 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@302 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@301 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@305 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@305 (type $generated@@340))))
(let (($generated@@342 ($generated@@304 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@303 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@302 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@345) $generated@@64)) (= ($generated@@132 $generated@@344 ($generated@@150 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@344 $generated@@346)))) ($generated@@212 $generated@@346 $generated@@345))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@132 $generated@@344 ($generated@@150 $generated@@345)))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@223 $generated@@145)) (= (type $generated@@348) ($generated@@223 $generated@@145))) (or ($generated@@224 $generated@@347 $generated@@348) (and (not (= 1 $generated@@221)) (and ($generated@@132 $generated@@347 ($generated@@225 $generated@@47)) ($generated@@132 $generated@@348 ($generated@@225 $generated@@47)))))) true)
 :pattern ( ($generated@@222 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@248 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@248 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@278 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@287 (type $generated@@365))))
(let (($generated@@367 ($generated@@286 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@305 (type $generated@@373))))
(let (($generated@@375 ($generated@@304 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@286 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@285 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@304 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@303 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@227 (type $generated@@404))))
 (=> (and (and (= (type $generated@@404) ($generated@@223 $generated@@406)) (= (type $generated@@405) ($generated@@223 $generated@@406))) ($generated@@226 $generated@@404 $generated@@405)) (= $generated@@404 $generated@@405)))
 :pattern ( ($generated@@226 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@76 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@305 (type $generated@@409))))
(let (($generated@@411 ($generated@@304 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@303 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@302 $generated@@411 $generated@@410)) (= ($generated@@301 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@301 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@305 (type $generated@@412))))
(let (($generated@@414 ($generated@@304 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@303 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@302 $generated@@414 $generated@@413)) (= ($generated@@337 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@337 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@305 (type $generated@@415))))
(let (($generated@@417 ($generated@@304 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@303 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@302 $generated@@417 $generated@@416)) (= ($generated@@370 $generated@@415) ($generated@@407 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@287 (type $generated@@418))))
(let (($generated@@420 ($generated@@286 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@285 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@284 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@418) ($generated@@272 ($generated@@211 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@359 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@305 (type $generated@@423))))
(let (($generated@@425 ($generated@@304 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@303 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@302 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@145) (= (type $generated@@427) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@423) ($generated@@272 ($generated@@211 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@212 $generated@@428 $generated@@46)) (and (= ($generated@@272 ($generated@@360 $generated@@2 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@360 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@47)) (and (= ($generated@@272 ($generated@@360 $generated@@3 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@212 $generated@@430 $generated@@44)) (and (= ($generated@@272 ($generated@@360 $generated@@4 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@360 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@212 $generated@@432 $generated@@45)) (and (= ($generated@@272 ($generated@@360 $generated@@431 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@360 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@212 ($generated@@272 $generated@@433) $generated@@434) ($generated@@132 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@212 ($generated@@272 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@277 $generated@@435))))
 :pattern ( ($generated@@277 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@227 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@223 $generated@@438)) (<= 0 ($generated@@257 $generated@@437))))
 :pattern ( ($generated@@257 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@388 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@388 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@388 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@388 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@396 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@396 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@396 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@254 ($generated@@211 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@211 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@211 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@223 $generated@@145)) (= (type $generated@@474) $generated@@64)) (= (type $generated@@475) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@473 ($generated@@225 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@257 $generated@@473))) ($generated@@248 ($generated@@258 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@258 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@74 $generated@@473 ($generated@@225 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@75 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@75 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@233 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@233 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@238 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@238 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@150 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@225 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@225 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@225 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@360 $generated@@496 ($generated@@272 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@272 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@64)) (= ($generated@@132 $generated@@497 ($generated@@388 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@497) $generated@@500))) (and ($generated@@212 ($generated@@81 ($generated@@361 $generated@@497) $generated@@500) $generated@@499) ($generated@@212 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@497) $generated@@500))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@132 $generated@@497 ($generated@@388 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@396 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@501) $generated@@504))) (and ($generated@@212 ($generated@@81 ($generated@@371 $generated@@501) $generated@@504) $generated@@503) ($generated@@212 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@396 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@145)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@211 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@211 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@211 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@211 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@511 ($generated@@388 $generated@@512 $generated@@513))) (and (= ($generated@@272 ($generated@@360 ($generated@@285 $generated@@145 $generated@@145) $generated@@511)) $generated@@511) ($generated@@132 ($generated@@360 ($generated@@285 $generated@@145 $generated@@145) $generated@@511) ($generated@@388 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@388 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@514 ($generated@@396 $generated@@515 $generated@@516))) (and (= ($generated@@272 ($generated@@360 ($generated@@303 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@303 $generated@@145 $generated@@145) $generated@@514) ($generated@@396 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@396 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@145)) ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518))) (and (= ($generated@@272 ($generated@@360 $generated@@136 $generated@@519)) $generated@@519) ($generated@@132 ($generated@@360 $generated@@136 $generated@@519) ($generated@@135 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@135 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@81 ($generated@@407 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@81 ($generated@@407 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@524 $generated@@525)) $generated@@62) (= ($generated@@522 ($generated@@135 $generated@@524 $generated@@525)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@524 $generated@@525))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@223 $generated@@145)) (= (type $generated@@527) ($generated@@223 $generated@@145))) (or ($generated@@224 ($generated@@243 $generated@@526) ($generated@@243 $generated@@527)) (and (not (= 1 $generated@@221)) (and ($generated@@132 $generated@@526 ($generated@@225 $generated@@47)) ($generated@@132 $generated@@527 ($generated@@225 $generated@@47)))))) (= ($generated@@222 ($generated@@243 $generated@@526) ($generated@@243 $generated@@527)) ($generated@@226 $generated@@526 $generated@@527)))
 :weight 3
 :pattern ( ($generated@@222 ($generated@@243 $generated@@526) ($generated@@243 $generated@@527)))
))))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@136) (= ($generated@@505 ($generated@@272 $generated@@528)) ($generated@@506 $generated@@528)))
 :pattern ( ($generated@@505 ($generated@@272 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) ($generated@@212 $generated@@529 ($generated@@75 0))) (and (= ($generated@@272 ($generated@@360 $generated@@2 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@233 $generated@@531))) (and (= ($generated@@272 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@233 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@233 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@238 $generated@@533))) (and (= ($generated@@272 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@238 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@238 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@212 $generated@@534 ($generated@@150 $generated@@535))) (and (= ($generated@@272 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@534) ($generated@@150 $generated@@535))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@150 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@212 $generated@@536 ($generated@@225 $generated@@537))) (and (= ($generated@@272 ($generated@@360 ($generated@@223 $generated@@145) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@360 ($generated@@223 $generated@@145) $generated@@536) ($generated@@225 $generated@@537))))
 :pattern ( ($generated@@212 $generated@@536 ($generated@@225 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@248 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@136) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@248 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@248 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@248 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@248 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (= ($generated@@211 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)) ($generated@@243 ($generated@@211 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@211 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@272 ($generated@@243 $generated@@552)) ($generated@@243 ($generated@@272 $generated@@552)))
 :pattern ( ($generated@@272 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@227 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@223 $generated@@554)) (= ($generated@@257 $generated@@553) 0)) (= $generated@@553 ($generated@@269 $generated@@554))))
 :pattern ( ($generated@@257 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@277 ($generated@@82 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@277 $generated@@555) ($generated ($generated@@81 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@2)) ($generated@@74 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@3)) ($generated@@74 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@4)) ($generated@@74 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@431)) ($generated@@74 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@145)) ($generated@@74 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@223 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= ($generated@@132 $generated@@569 ($generated@@225 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@257 $generated@@569))) ($generated@@212 ($generated@@258 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@258 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@225 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@223 $generated@@145)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@257 $generated@@573))) (< ($generated@@506 ($generated@@360 $generated@@136 ($generated@@258 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@506 ($generated@@360 $generated@@136 ($generated@@258 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@285 $generated@@145 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@132 $generated@@575 ($generated@@388 $generated@@576 $generated@@577))) (and (and ($generated@@132 ($generated@@283 $generated@@575) ($generated@@233 $generated@@576)) ($generated@@132 ($generated@@326 $generated@@575) ($generated@@233 $generated@@577))) ($generated@@132 ($generated@@359 $generated@@575) ($generated@@233 ($generated@@135 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@388 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@303 $generated@@145 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@132 $generated@@578 ($generated@@396 $generated@@579 $generated@@580))) (and (and ($generated@@132 ($generated@@301 $generated@@578) ($generated@@238 $generated@@579)) ($generated@@132 ($generated@@337 $generated@@578) ($generated@@238 $generated@@580))) ($generated@@132 ($generated@@370 $generated@@578) ($generated@@238 ($generated@@135 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@396 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@132 $generated@@581 $generated@@46))
 :pattern ( ($generated@@132 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@132 $generated@@582 $generated@@47))
 :pattern ( ($generated@@132 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@132 $generated@@583 $generated@@44))
 :pattern ( ($generated@@132 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@431) ($generated@@132 $generated@@584 $generated@@45))
 :pattern ( ($generated@@132 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@145) ($generated@@132 $generated@@585 $generated@@48))
 :pattern ( ($generated@@132 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(assert  (and (and (= (type $generated@@586) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@587) $generated@@77)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@590  (=> (and (= $generated@@586 ($generated@@156 $generated@@587 $generated@@588 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@223 $generated@@145)) (= (type $generated@@592) ($generated@@223 $generated@@145))) (and ($generated@@132 $generated@@591 ($generated@@225 $generated@@47)) ($generated@@132 $generated@@592 ($generated@@225 $generated@@47)))) ($generated@@222 $generated@@591 $generated@@592)) ($generated@@226 $generated@@591 $generated@@592))
 :pattern ( ($generated@@222 $generated@@591 $generated@@592))
)))))
(let (($generated@@593  (=> (and (and ($generated@@247 $generated@@588) ($generated@@589 $generated@@588)) (and (= 2 $generated@@221) (= (ControlFlow 0 3) 2))) $generated@@590)))
$generated@@593)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert (= (type $generated@@150) $generated@@70))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@149 $generated@@151) (and (not (= 2 $generated@@147)) ($generated@@145 $generated@@151 $generated@@150)))) true)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (= (type $generated@@154) $generated@@70))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@83) (or ($generated@@153 $generated@@155) (and (not (= 2 $generated@@147)) ($generated@@145 $generated@@155 $generated@@154)))) true)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert ($generated@@156 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@159) 14) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@70) (= (type $generated@@163) $generated@@70)) (= (type $generated@@164) $generated@@159)) ($generated@@145 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@145 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@159) (= (type $generated@@172) $generated@@159)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (=> (and (not (= $generated@@173 $generated@@139)) ($generated@@145 $generated@@173 $generated@@142)) ($generated@@145 $generated@@173 $generated@@150)))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@178) $generated@@70)) ($generated@@145 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@145 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@70)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@83) (= ($generated@@145 $generated@@181 $generated@@142)  (or (= $generated@@181 $generated@@139) (= ($generated@@179 $generated@@181) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@181 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@83 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@73 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@233) ($generated@@72 $generated@@4))) (= (type $generated@@235) $generated@@83)) (= (type $generated@@236) ($generated@@72 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@83) (= (type $generated@@239) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@238 $generated@@150 $generated@@239) ($generated@@80 $generated@@238 $generated@@138 $generated@@239)))
 :pattern ( ($generated@@80 $generated@@238 $generated@@150 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@240 $generated@@154 $generated@@241) ($generated@@80 $generated@@240 $generated@@142 $generated@@241)))
 :pattern ( ($generated@@80 $generated@@240 $generated@@154 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@159)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@168)) (= (type $generated@@249) $generated@@168)) (= ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@158 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@158 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@159) (= (type $generated@@251) $generated@@159)) (= ($generated@@165 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@165 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@145 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@168) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@243 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@145 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@243 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@168)) (= (type $generated@@271) $generated@@168)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@242 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@159) (= ($generated@@157 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@159) ($generated@@157 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@168) (= (type $generated@@278) $generated@@168)) (= $generated@@276 ($generated@@242 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@157 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@168)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@175 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@175 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@168) ($generated@@243 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@243 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@168) ($generated@@243 $generated@@341 $generated@@150)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@150)))
 :pattern ( ($generated@@243 $generated@@341 $generated@@150))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@168) ($generated@@243 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@168) ($generated@@243 $generated@@343 $generated@@154)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@154)))
 :pattern ( ($generated@@243 $generated@@343 $generated@@154))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@150)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@150))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@154)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@154))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@174 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@168) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@243 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@174 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@371 ($generated@@252 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@168) ($generated@@0 ($generated@@87 $generated@@371 $generated@@374))) ($generated@@267 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@87 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@80 $generated@@371 ($generated@@252 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@257 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@168) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@257 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@87 ($generated@@293 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@302 (type $generated@@384))))
(let (($generated@@386 ($generated@@301 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@82 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@388) $generated@@168)) (= ($generated@@0 ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@387) ($generated@@166 ($generated@@337 $generated@@159 $generated@@388)))) (= ($generated@@87 ($generated@@382 $generated@@387) ($generated@@166 ($generated@@337 $generated@@159 $generated@@388))) ($generated@@167 ($generated@@337 $generated@@159 $generated@@388))))))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@320 (type $generated@@392))))
(let (($generated@@394 ($generated@@319 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@396) $generated@@168)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@395) ($generated@@166 ($generated@@337 $generated@@159 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@166 ($generated@@337 $generated@@159 $generated@@396))) ($generated@@167 ($generated@@337 $generated@@159 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@301 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@300 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@319 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@318 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@70)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) $generated@@70)) (= (type $generated@@413) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))) (and ($generated@@267 ($generated@@87 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@267 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@320 (type $generated@@425))))
(let (($generated@@427 ($generated@@319 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@318 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@316 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@316 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@320 (type $generated@@428))))
(let (($generated@@430 ($generated@@319 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@318 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@317 $generated@@430 $generated@@429)) (= ($generated@@361 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@361 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@320 (type $generated@@431))))
(let (($generated@@433 ($generated@@319 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@318 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@317 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@168))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@302 (type $generated@@434))))
(let (($generated@@436 ($generated@@301 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@300 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@299 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@168) (= (type $generated@@438) $generated@@168)) ($generated@@0 ($generated@@87 ($generated@@381 $generated@@434) ($generated@@287 ($generated@@242 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@320 (type $generated@@439))))
(let (($generated@@441 ($generated@@319 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@318 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@317 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@168) (= (type $generated@@443) $generated@@168)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@439) ($generated@@287 ($generated@@242 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@168) ($generated@@243 $generated@@444 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@337 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@168) ($generated@@243 $generated@@445 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@337 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@168) ($generated@@243 $generated@@446 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@168) ($generated@@243 $generated@@448 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@70) (= ($generated@@243 ($generated@@287 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@243 ($generated@@287 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@85 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@2)) (<= 0 ($generated@@292 $generated@@451))))
 :pattern ( ($generated@@292 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@282 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@281 $generated@@454)) (<= 0 ($generated@@280 $generated@@453))))
 :pattern ( ($generated@@280 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@78 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) (= (type $generated@@476) $generated@@168)) (= ($generated@@273 ($generated@@242 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@158 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@158 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@158 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@158 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@168) (= (type $generated@@486) $generated@@168)) (= ($generated@@166 ($generated@@242 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@242 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@168) (= (type $generated@@488) $generated@@168)) (= ($generated@@167 ($generated@@242 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@242 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@282 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@281 $generated@@168)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@280 $generated@@495))) ($generated@@267 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@81 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@81 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@252 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@252 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@257 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@257 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@174 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@174 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@174 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@337 $generated@@518 ($generated@@287 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@287 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) $generated@@70)) (= ($generated@@145 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@519) $generated@@522))) (and ($generated@@243 ($generated@@87 ($generated@@382 $generated@@519) $generated@@522) $generated@@521) ($generated@@243 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@519) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@145 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@523) $generated@@526))) (and ($generated@@243 ($generated@@87 ($generated@@390 $generated@@523) $generated@@526) $generated@@525) ($generated@@243 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@168) (= (type $generated@@530) $generated@@168)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@242 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@242 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@168) (= (type $generated@@532) $generated@@168)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@242 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@242 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@168) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) ($generated@@243 $generated@@533 ($generated@@407 $generated@@534 $generated@@535))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@168 $generated@@168) $generated@@533)) $generated@@533) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@168 $generated@@168) $generated@@533) ($generated@@407 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@243 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@168) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) ($generated@@243 $generated@@536 ($generated@@415 $generated@@537 $generated@@538))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@168 $generated@@168) $generated@@536)) $generated@@536) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@168 $generated@@168) $generated@@536) ($generated@@415 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@243 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@70) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@168)) ($generated@@243 $generated@@541 ($generated@@158 $generated@@539 $generated@@540))) (and (= ($generated@@287 ($generated@@337 $generated@@159 $generated@@541)) $generated@@541) ($generated@@145 ($generated@@337 $generated@@159 $generated@@541) ($generated@@158 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@243 $generated@@541 ($generated@@158 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@87 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@75)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (and (= ($generated@@78 ($generated@@158 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@158 $generated@@546 $generated@@547)) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@159) (= ($generated@@527 ($generated@@287 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@287 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@168) ($generated@@243 $generated@@549 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@549)) $generated@@549) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@549) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@549 ($generated@@81 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@168) (= (type $generated@@551) $generated@@70)) ($generated@@243 $generated@@550 ($generated@@252 $generated@@551))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@550) ($generated@@252 $generated@@551))))
 :pattern ( ($generated@@243 $generated@@550 ($generated@@252 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@168) (= (type $generated@@553) $generated@@70)) ($generated@@243 $generated@@552 ($generated@@257 $generated@@553))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@552) ($generated@@257 $generated@@553))))
 :pattern ( ($generated@@243 $generated@@552 ($generated@@257 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@168) (= (type $generated@@555) $generated@@70)) ($generated@@243 $generated@@554 ($generated@@174 $generated@@555))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@168 $generated@@2) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@2) $generated@@554) ($generated@@174 $generated@@555))))
 :pattern ( ($generated@@243 $generated@@554 ($generated@@174 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@168) (= (type $generated@@557) $generated@@70)) ($generated@@243 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@168) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@337 ($generated@@281 $generated@@168) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@243 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@83) (= (type $generated@@559) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@558 $generated@@139)) ($generated@@80 $generated@@558 $generated@@142 $generated@@559))) ($generated@@80 $generated@@558 $generated@@150 $generated@@559))
 :pattern ( ($generated@@80 $generated@@558 $generated@@142 $generated@@559))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@544 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@150) $generated@@64))
(assert (= ($generated@@544 $generated@@150) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@544 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@154) $generated@@66))
(assert (= ($generated@@544 $generated@@154) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@174 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@168) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@267 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@174 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@83) (= ($generated@@145 $generated@@564 $generated@@138)  (or (= $generated@@564 $generated@@139) ($generated@@156 ($generated@@179 $generated@@564)))))
 :pattern ( ($generated@@145 $generated@@564 $generated@@138))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@159) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@567) (and ($generated@@157 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@70) ($generated@@80 $generated@@565 ($generated@@158 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@80 $generated@@565 ($generated@@158 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@267 ($generated@@166 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@267 ($generated@@166 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@159) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@571) (and ($generated@@157 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@70) ($generated@@80 $generated@@569 ($generated@@158 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@80 $generated@@569 ($generated@@158 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@267 ($generated@@167 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@267 ($generated@@167 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@168) (= (type $generated@@574) $generated@@168)) (= ($generated@@242 ($generated@@262 $generated@@573) ($generated@@262 $generated@@574)) ($generated@@262 ($generated@@242 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@573) ($generated@@262 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@287 ($generated@@262 $generated@@575)) ($generated@@262 ($generated@@287 $generated@@575)))
 :pattern ( ($generated@@287 ($generated@@262 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@282 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@281 $generated@@577)) (= ($generated@@280 $generated@@576) 0)) (= $generated@@576 ($generated@@279 $generated@@577))))
 :pattern ( ($generated@@280 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@82 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@292 ($generated@@88 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@292 $generated@@578) ($generated ($generated@@87 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@583) $generated@@2)) ($generated@@80 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@80 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@3)) ($generated@@80 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@4)) ($generated@@80 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@447)) ($generated@@80 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@168)) ($generated@@80 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@281 $generated@@168)) (= (type $generated@@593) $generated@@70)) (= ($generated@@145 $generated@@592 ($generated@@489 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@280 $generated@@592))) ($generated@@243 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@145 $generated@@592 ($generated@@489 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@281 $generated@@168)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@280 $generated@@596))) (< ($generated@@528 ($generated@@337 $generated@@159 ($generated@@490 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@528 ($generated@@337 $generated@@159 ($generated@@490 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@599) $generated@@70)) (= (type $generated@@600) $generated@@70)) ($generated@@145 $generated@@598 ($generated@@407 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@298 $generated@@598) ($generated@@252 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@252 $generated@@600))) ($generated@@145 ($generated@@381 $generated@@598) ($generated@@252 ($generated@@158 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@407 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@145 $generated@@601 ($generated@@415 $generated@@602 $generated@@603))) (and (and ($generated@@145 ($generated@@316 $generated@@601) ($generated@@257 $generated@@602)) ($generated@@145 ($generated@@361 $generated@@601) ($generated@@257 $generated@@603))) ($generated@@145 ($generated@@389 $generated@@601) ($generated@@257 ($generated@@158 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@145 $generated@@601 ($generated@@415 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@145 $generated@@604 $generated@@46))
 :pattern ( ($generated@@145 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@145 $generated@@605 $generated@@47))
 :pattern ( ($generated@@145 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@145 $generated@@606 $generated@@44))
 :pattern ( ($generated@@145 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@447) ($generated@@145 $generated@@607 $generated@@45))
 :pattern ( ($generated@@145 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@168) ($generated@@145 $generated@@608 $generated@@48))
 :pattern ( ($generated@@145 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (= (type $generated@@609) ($generated@@184 $generated@@83 $generated@@4)) (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@611) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@613  (=> (= $generated@@609 ($generated@@183 $generated@@139 $generated@@610 $generated@@60 false)) (=> (and ($generated@@145 $generated@@611 $generated@@150) ($generated@@80 $generated@@611 $generated@@150 $generated@@610)) (=> (and (and ($generated@@80 $generated@@611 $generated@@150 $generated@@610) ($generated@@149 $generated@@611)) (and ($generated@@148 $generated@@611) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@145 $generated@@611 $generated@@154))))))
(let (($generated@@614  (=> (and (and ($generated@@266 $generated@@610) ($generated@@612 $generated@@610)) (and (= 3 $generated@@147) (= (ControlFlow 0 3) 2))) $generated@@613)))
$generated@@614)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert (= (type $generated@@150) $generated@@70))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@149 $generated@@151) (and (not (= 2 $generated@@147)) ($generated@@145 $generated@@151 $generated@@150)))) true)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (= (type $generated@@154) $generated@@70))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@83) (or ($generated@@153 $generated@@155) (and (not (= 2 $generated@@147)) ($generated@@145 $generated@@155 $generated@@154)))) true)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert ($generated@@156 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@159) 14) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@70) (= (type $generated@@163) $generated@@70)) (= (type $generated@@164) $generated@@159)) ($generated@@145 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@145 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@159) (= (type $generated@@172) $generated@@159)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (=> (and (not (= $generated@@173 $generated@@139)) ($generated@@145 $generated@@173 $generated@@142)) ($generated@@145 $generated@@173 $generated@@150)))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@178) $generated@@70)) ($generated@@145 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@145 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@70)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@83) (= ($generated@@145 $generated@@181 $generated@@142)  (or (= $generated@@181 $generated@@139) (= ($generated@@179 $generated@@181) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@181 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@83 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@73 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@233) ($generated@@72 $generated@@4))) (= (type $generated@@235) $generated@@83)) (= (type $generated@@236) ($generated@@72 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@83) (= (type $generated@@239) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@238 $generated@@150 $generated@@239) ($generated@@80 $generated@@238 $generated@@138 $generated@@239)))
 :pattern ( ($generated@@80 $generated@@238 $generated@@150 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@240 $generated@@154 $generated@@241) ($generated@@80 $generated@@240 $generated@@142 $generated@@241)))
 :pattern ( ($generated@@80 $generated@@240 $generated@@154 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@159)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@168)) (= (type $generated@@249) $generated@@168)) (= ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@158 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@145 ($generated@@242 $generated@@248 $generated@@249) ($generated@@158 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@159) (= (type $generated@@251) $generated@@159)) (= ($generated@@165 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@165 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@145 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@168) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@243 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@145 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@243 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@168)) (= (type $generated@@271) $generated@@168)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@242 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@159) (= ($generated@@157 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@159) ($generated@@157 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@168) (= (type $generated@@278) $generated@@168)) (= $generated@@276 ($generated@@242 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@157 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@168)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@80 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@82 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@85 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@82 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@87 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@82 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@87 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@82 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@87 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@85 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (= ($generated@@175 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@87 $generated@@334 $generated@@336))) (<= ($generated ($generated@@87 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@87 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@175 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@168) ($generated@@243 $generated@@340 $generated@@138)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@83 $generated@@340) $generated@@138)))
 :pattern ( ($generated@@243 $generated@@340 $generated@@138))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@168) ($generated@@243 $generated@@341 $generated@@150)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@341)) $generated@@341) ($generated@@145 ($generated@@337 $generated@@83 $generated@@341) $generated@@150)))
 :pattern ( ($generated@@243 $generated@@341 $generated@@150))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@168) ($generated@@243 $generated@@342 $generated@@142)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@337 $generated@@83 $generated@@342) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@342 $generated@@142))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@168) ($generated@@243 $generated@@343 $generated@@154)) (and (= ($generated@@287 ($generated@@337 $generated@@83 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@337 $generated@@83 $generated@@343) $generated@@154)))
 :pattern ( ($generated@@243 $generated@@343 $generated@@154))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@83) (= ($generated@@145 $generated@@344 $generated@@150)  (and ($generated@@145 $generated@@344 $generated@@138) (not (= $generated@@344 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@150))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@83) (= ($generated@@145 $generated@@345 $generated@@154)  (and ($generated@@145 $generated@@345 $generated@@142) (not (= $generated@@345 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@345 $generated@@154))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@302 (type $generated@@346))))
(let (($generated@@348 ($generated@@301 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@300 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@299 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@298 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@302 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@82 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@87 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@320 (type $generated@@357))))
(let (($generated@@359 ($generated@@319 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@318 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@317 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@316 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@320 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@369) $generated@@70)) (= ($generated@@145 $generated@@368 ($generated@@174 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@168) (< 0 ($generated ($generated@@87 $generated@@368 $generated@@370)))) ($generated@@243 $generated@@370 $generated@@369))
 :pattern ( ($generated@@87 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@145 $generated@@368 ($generated@@174 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@372) $generated@@70)) (= (type $generated@@373) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@371 ($generated@@252 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@168) ($generated@@0 ($generated@@87 $generated@@371 $generated@@374))) ($generated@@267 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@87 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@80 $generated@@371 ($generated@@252 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@257 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@168) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@257 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@87 ($generated@@293 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@87 ($generated@@293 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@302 (type $generated@@384))))
(let (($generated@@386 ($generated@@301 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@82 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@388) $generated@@168)) (= ($generated@@0 ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@387) ($generated@@166 ($generated@@337 $generated@@159 $generated@@388)))) (= ($generated@@87 ($generated@@382 $generated@@387) ($generated@@166 ($generated@@337 $generated@@159 $generated@@388))) ($generated@@167 ($generated@@337 $generated@@159 $generated@@388))))))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@320 (type $generated@@392))))
(let (($generated@@394 ($generated@@319 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@396) $generated@@168)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@395) ($generated@@166 ($generated@@337 $generated@@159 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@166 ($generated@@337 $generated@@159 $generated@@396))) ($generated@@167 ($generated@@337 $generated@@159 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@301 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@300 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@87 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@87 ($generated@@298 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@397) $generated@@401))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@87 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@319 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@318 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@316 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@70)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) $generated@@70)) (= (type $generated@@413) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))) (and ($generated@@267 ($generated@@87 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@267 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@80 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@82 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@320 (type $generated@@425))))
(let (($generated@@427 ($generated@@319 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@318 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@316 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@316 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@320 (type $generated@@428))))
(let (($generated@@430 ($generated@@319 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@318 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@317 $generated@@430 $generated@@429)) (= ($generated@@361 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@361 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@320 (type $generated@@431))))
(let (($generated@@433 ($generated@@319 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@318 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@317 $generated@@433 $generated@@432)) (= ($generated@@389 $generated@@431) ($generated@@423 $generated@@168))))))
 :pattern ( ($generated@@389 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@302 (type $generated@@434))))
(let (($generated@@436 ($generated@@301 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@300 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@299 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@168) (= (type $generated@@438) $generated@@168)) ($generated@@0 ($generated@@87 ($generated@@381 $generated@@434) ($generated@@287 ($generated@@242 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@320 (type $generated@@439))))
(let (($generated@@441 ($generated@@319 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@318 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@317 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@168) (= (type $generated@@443) $generated@@168)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@439) ($generated@@287 ($generated@@242 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@168) ($generated@@243 $generated@@444 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@337 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@168) ($generated@@243 $generated@@445 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@445)) $generated@@445) ($generated@@145 ($generated@@337 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@168) ($generated@@243 $generated@@446 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@337 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@168) ($generated@@243 $generated@@448 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@447 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@337 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@70) (= ($generated@@243 ($generated@@287 $generated@@449) $generated@@450) ($generated@@145 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@243 ($generated@@287 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@85 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@2)) (<= 0 ($generated@@292 $generated@@451))))
 :pattern ( ($generated@@292 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@282 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@281 $generated@@454)) (<= 0 ($generated@@280 $generated@@453))))
 :pattern ( ($generated@@280 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@407 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@407 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@78 ($generated@@407 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@168) (= (type $generated@@476) $generated@@168)) (= ($generated@@273 ($generated@@242 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@158 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@158 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@158 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@158 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@168) (= (type $generated@@486) $generated@@168)) (= ($generated@@166 ($generated@@242 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@242 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@168) (= (type $generated@@488) $generated@@168)) (= ($generated@@167 ($generated@@242 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@242 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@282 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@281 $generated@@168)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@280 $generated@@495))) ($generated@@267 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@80 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@81 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@81 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@252 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@252 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@257 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@257 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@174 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@174 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@174 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@337 $generated@@518 ($generated@@287 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@287 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) $generated@@70)) (= ($generated@@145 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@298 $generated@@519) $generated@@522))) (and ($generated@@243 ($generated@@87 ($generated@@382 $generated@@519) $generated@@522) $generated@@521) ($generated@@243 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@519) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@298 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@145 $generated@@519 ($generated@@407 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@316 $generated@@523) $generated@@526))) (and ($generated@@243 ($generated@@87 ($generated@@390 $generated@@523) $generated@@526) $generated@@525) ($generated@@243 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@316 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@415 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@168) (= (type $generated@@530) $generated@@168)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@242 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@242 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@168) (= (type $generated@@532) $generated@@168)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@242 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@242 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@168) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) ($generated@@243 $generated@@533 ($generated@@407 $generated@@534 $generated@@535))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@168 $generated@@168) $generated@@533)) $generated@@533) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@168 $generated@@168) $generated@@533) ($generated@@407 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@243 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@168) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) ($generated@@243 $generated@@536 ($generated@@415 $generated@@537 $generated@@538))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@168 $generated@@168) $generated@@536)) $generated@@536) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@168 $generated@@168) $generated@@536) ($generated@@415 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@243 $generated@@536 ($generated@@415 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@70) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) $generated@@168)) ($generated@@243 $generated@@541 ($generated@@158 $generated@@539 $generated@@540))) (and (= ($generated@@287 ($generated@@337 $generated@@159 $generated@@541)) $generated@@541) ($generated@@145 ($generated@@337 $generated@@159 $generated@@541) ($generated@@158 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@243 $generated@@541 ($generated@@158 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@87 ($generated@@423 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@87 ($generated@@423 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@75)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (and (= ($generated@@78 ($generated@@158 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@158 $generated@@546 $generated@@547)) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@159) (= ($generated@@527 ($generated@@287 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@287 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@168) ($generated@@243 $generated@@549 ($generated@@81 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@549)) $generated@@549) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@549) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@549 ($generated@@81 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@168) (= (type $generated@@551) $generated@@70)) ($generated@@243 $generated@@550 ($generated@@252 $generated@@551))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@550)) $generated@@550) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@550) ($generated@@252 $generated@@551))))
 :pattern ( ($generated@@243 $generated@@550 ($generated@@252 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@168) (= (type $generated@@553) $generated@@70)) ($generated@@243 $generated@@552 ($generated@@257 $generated@@553))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@4) $generated@@552) ($generated@@257 $generated@@553))))
 :pattern ( ($generated@@243 $generated@@552 ($generated@@257 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@168) (= (type $generated@@555) $generated@@70)) ($generated@@243 $generated@@554 ($generated@@174 $generated@@555))) (and (= ($generated@@287 ($generated@@337 ($generated@@82 $generated@@168 $generated@@2) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@337 ($generated@@82 $generated@@168 $generated@@2) $generated@@554) ($generated@@174 $generated@@555))))
 :pattern ( ($generated@@243 $generated@@554 ($generated@@174 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@168) (= (type $generated@@557) $generated@@70)) ($generated@@243 $generated@@556 ($generated@@489 $generated@@557))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@168) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@337 ($generated@@281 $generated@@168) $generated@@556) ($generated@@489 $generated@@557))))
 :pattern ( ($generated@@243 $generated@@556 ($generated@@489 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@83) (= (type $generated@@559) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@558 $generated@@139)) ($generated@@80 $generated@@558 $generated@@142 $generated@@559))) ($generated@@80 $generated@@558 $generated@@150 $generated@@559))
 :pattern ( ($generated@@80 $generated@@558 $generated@@142 $generated@@559))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@544 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@150) $generated@@64))
(assert (= ($generated@@544 $generated@@150) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@544 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@154) $generated@@66))
(assert (= ($generated@@544 $generated@@154) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@174 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@168) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@267 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@174 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@83) (= ($generated@@145 $generated@@564 $generated@@138)  (or (= $generated@@564 $generated@@139) ($generated@@156 ($generated@@179 $generated@@564)))))
 :pattern ( ($generated@@145 $generated@@564 $generated@@138))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@159) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@567) (and ($generated@@157 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@70) ($generated@@80 $generated@@565 ($generated@@158 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@80 $generated@@565 ($generated@@158 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@267 ($generated@@166 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@267 ($generated@@166 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@159) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@571) (and ($generated@@157 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@70) ($generated@@80 $generated@@569 ($generated@@158 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@80 $generated@@569 ($generated@@158 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@267 ($generated@@167 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@267 ($generated@@167 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@168) (= (type $generated@@574) $generated@@168)) (= ($generated@@242 ($generated@@262 $generated@@573) ($generated@@262 $generated@@574)) ($generated@@262 ($generated@@242 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@573) ($generated@@262 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@287 ($generated@@262 $generated@@575)) ($generated@@262 ($generated@@287 $generated@@575)))
 :pattern ( ($generated@@287 ($generated@@262 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@282 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@281 $generated@@577)) (= ($generated@@280 $generated@@576) 0)) (= $generated@@576 ($generated@@279 $generated@@577))))
 :pattern ( ($generated@@280 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@82 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@292 ($generated@@88 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@292 $generated@@578) ($generated ($generated@@87 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@292 ($generated@@88 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@583) $generated@@2)) ($generated@@80 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@80 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@3)) ($generated@@80 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@4)) ($generated@@80 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@447)) ($generated@@80 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@168)) ($generated@@80 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@281 $generated@@168)) (= (type $generated@@593) $generated@@70)) (= ($generated@@145 $generated@@592 ($generated@@489 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@280 $generated@@592))) ($generated@@243 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@145 $generated@@592 ($generated@@489 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@281 $generated@@168)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@280 $generated@@596))) (< ($generated@@528 ($generated@@337 $generated@@159 ($generated@@490 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@528 ($generated@@337 $generated@@159 ($generated@@490 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@300 $generated@@168 $generated@@168)) (= (type $generated@@599) $generated@@70)) (= (type $generated@@600) $generated@@70)) ($generated@@145 $generated@@598 ($generated@@407 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@298 $generated@@598) ($generated@@252 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@252 $generated@@600))) ($generated@@145 ($generated@@381 $generated@@598) ($generated@@252 ($generated@@158 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@407 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@318 $generated@@168 $generated@@168)) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) $generated@@70)) ($generated@@145 $generated@@601 ($generated@@415 $generated@@602 $generated@@603))) (and (and ($generated@@145 ($generated@@316 $generated@@601) ($generated@@257 $generated@@602)) ($generated@@145 ($generated@@361 $generated@@601) ($generated@@257 $generated@@603))) ($generated@@145 ($generated@@389 $generated@@601) ($generated@@257 ($generated@@158 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@145 $generated@@601 ($generated@@415 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@145 $generated@@604 $generated@@46))
 :pattern ( ($generated@@145 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@145 $generated@@605 $generated@@47))
 :pattern ( ($generated@@145 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@145 $generated@@606 $generated@@44))
 :pattern ( ($generated@@145 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@447) ($generated@@145 $generated@@607 $generated@@45))
 :pattern ( ($generated@@145 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@168) ($generated@@145 $generated@@608 $generated@@48))
 :pattern ( ($generated@@145 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (= (type $generated@@609) ($generated@@184 $generated@@83 $generated@@4)) (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@611) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@613  (=> (= $generated@@609 ($generated@@183 $generated@@139 $generated@@610 $generated@@60 false)) (=> (and (and ($generated@@145 $generated@@611 $generated@@150) ($generated@@80 $generated@@611 $generated@@150 $generated@@610)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@145 $generated@@611 $generated@@154)))))
(let (($generated@@614  (=> (and (and ($generated@@266 $generated@@610) ($generated@@612 $generated@@610)) (and (= 3 $generated@@147) (= (ControlFlow 0 3) 2))) $generated@@613)))
$generated@@614)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ) (= ($generated@@1 ($generated@@47 $generated@@51)) 6)) (forall (($generated@@52 T@T) ) (! (= ($generated@@48 ($generated@@47 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@47 $generated@@52))
))) (= (type $generated@@44) ($generated@@47 $generated@@4))) (= ($generated@@1 $generated@@49) 7)) (= (type $generated@@45) $generated@@49)) (= ($generated@@1 $generated@@50) 8)) (= (type $generated@@46) $generated@@50)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@1 ($generated@@56 $generated@@68 $generated@@69)) 9)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@60 ($generated@@56 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@56 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@61 ($generated@@56 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (let (($generated@@76 ($generated@@61 (type $generated@@74))))
(= (type ($generated@@59 $generated@@74 $generated@@75)) $generated@@76))
 :pattern ( ($generated@@59 $generated@@74 $generated@@75))
))) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (let (($generated@@80 (type $generated@@79)))
(let (($generated@@81 (type $generated@@78)))
(= (type ($generated@@62 $generated@@77 $generated@@78 $generated@@79)) ($generated@@56 $generated@@81 $generated@@80))))
 :pattern ( ($generated@@62 $generated@@77 $generated@@78 $generated@@79))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (let (($generated@@85 ($generated@@61 (type $generated@@82))))
 (=> (= (type $generated@@84) $generated@@85) (= ($generated@@59 ($generated@@62 $generated@@82 $generated@@83 $generated@@84) $generated@@83) $generated@@84)))
 :weight 0
))) (and (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@59 ($generated@@62 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@59 $generated@@87 $generated@@89)))
 :weight 0
)) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or true (= ($generated@@59 ($generated@@62 $generated@@91 $generated@@92 $generated@@90) $generated@@93) ($generated@@59 $generated@@91 $generated@@93)))
 :weight 0
)))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@48 (type $generated@@95))))
(= (type ($generated@@58 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@58 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@57) 10)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@63 $generated@@97 $generated@@98 $generated@@99)) $generated@@57)
 :pattern ( ($generated@@63 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@48 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@58 ($generated@@63 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@58 ($generated@@63 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@58 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@58 ($generated@@63 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@58 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@55) 11)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@112 $generated@@113)) 12))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@65 ($generated@@64 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@64 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@64 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@66 (type $generated@@118))))
(= (type ($generated@@53 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@53 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@67 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@64 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@67 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@66 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@53 ($generated@@67 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@53 ($generated@@67 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@53 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@53 ($generated@@67 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@53 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@53 ($generated@@67 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@53 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@54 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@64 $generated@@55 $generated@@4))
 :pattern ( ($generated@@54 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@48 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@55) (= (type $generated@@156) ($generated@@56 $generated@@55 $generated@@57))) (= (type $generated@@157) ($generated@@47 $generated@@4))) (= (type $generated@@159) $generated@@55)) (= (type $generated@@160) ($generated@@47 $generated@@161))) (= ($generated@@0 ($generated@@53 ($generated@@54 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@58 ($generated@@59 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 13) (= ($generated@@1 $generated@@167) 14)) (= (type $generated@@166) $generated@@167)))
(assert  (=> true (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@163) (= (type $generated@@169) $generated@@163)) (or ($generated@@164 $generated@@168 $generated@@169) (and ($generated@@165 $generated@@168 $generated@@166) ($generated@@165 $generated@@169 $generated@@166)))) true)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@49)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (= ($generated@@170 $generated@@166) $generated@@45))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@50)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (= ($generated@@172 $generated@@166) $generated@@46))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U T@U T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (and (and (= (type $generated@@174) ($generated@@64 $generated@@55 $generated@@4)) (= (type $generated@@175) $generated@@55)) (= (type $generated@@176) ($generated@@56 $generated@@55 $generated@@57))) (= (type $generated@@178) ($generated@@56 $generated@@55 $generated@@57))) (= (type $generated@@180) $generated@@163)) (= (type $generated@@181) $generated@@163)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@184  (=> (= $generated@@174 ($generated@@54 $generated@@175 $generated@@176 $generated@@44 false)) (=> (and ($generated@@177 $generated@@178) ($generated@@179 $generated@@178)) (=> (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@163) (= (type $generated@@186) $generated@@163)) (and ($generated@@165 $generated@@185 $generated@@166) ($generated@@165 $generated@@186 $generated@@166))) ($generated@@164 $generated@@185 $generated@@186))
 :pattern ( ($generated@@162 $generated@@185 $generated@@186))
)) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@163) (= (type $generated@@188) $generated@@163)) (and ($generated@@165 $generated@@187 $generated@@166) ($generated@@165 $generated@@188 $generated@@166))) ($generated@@162 $generated@@187 $generated@@188)) (= $generated@@187 $generated@@188))
 :pattern ( ($generated@@162 $generated@@187 $generated@@188))
))) (and (= $generated@@176 $generated@@178) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@180 $generated@@181))))))
(let (($generated@@189  (=> (and (and ($generated@@177 $generated@@176) ($generated@@179 $generated@@176)) (and ($generated@@165 $generated@@180 $generated@@166) ($generated@@182 $generated@@180 $generated@@166 $generated@@176))) (=> (and (and (and ($generated@@165 $generated@@181 $generated@@166) ($generated@@182 $generated@@181 $generated@@166 $generated@@176)) (= 1 $generated@@183)) (and ($generated@@162 $generated@@180 $generated@@181) (= (ControlFlow 0 3) 2))) $generated@@184))))
$generated@@189)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
