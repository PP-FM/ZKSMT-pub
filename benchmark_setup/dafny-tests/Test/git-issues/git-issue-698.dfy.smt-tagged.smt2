(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 7) 5)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 6) 5)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@157 0) ($generated@@157 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (not (= 0 3))))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 8) 2) $generated@@184) (=> (= (ControlFlow 0 8) 6) $generated@@183)) (=> (= (ControlFlow 0 8) 7) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 9) 8))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (Int) Int)
(declare-fun $generated@@233 (Int) Int)
(declare-fun $generated@@234 (Int) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (Int Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@235 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@235 $generated@@237))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@239 Int) ) (!  (=> (or ($generated@@234 ($generated@@233 $generated@@239)) (and (not (= 0 $generated@@231)) ($generated@@0 ($generated@@235 ($generated@@11 (not (= $generated@@239 3))))))) (= ($generated@@232 ($generated@@233 $generated@@239)) (ite (= ($generated@@233 $generated@@239) ($generated@@233 3)) ($generated@@236 1 ($generated@@233 0)) 100)))
 :weight 3
 :pattern ( ($generated@@232 ($generated@@233 $generated@@239)))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@136) (= (type $generated@@241) $generated@@136)) (= ($generated@@142 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@142 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@245) $generated@@64)) (= ($generated@@132 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@145) ($generated@@0 ($generated@@81 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@81 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@132 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@64)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@250) $generated@@64)) (= ($generated@@132 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@145) ($generated@@0 ($generated@@81 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@81 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@132 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@233 $generated@@252) $generated@@252)
 :pattern ( ($generated@@233 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@235 $generated@@253) $generated@@253)
 :pattern ( ($generated@@235 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@254 $generated@@260)) (= ($generated@@74 ($generated@@223 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@136) (= ($generated@@134 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@136) ($generated@@134 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@145) (= (type $generated@@266) $generated@@145)) (= $generated@@264 ($generated@@223 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@145)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@74 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@76 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@79 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@76 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@81 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@76 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@290 (type $generated@@325))))
(let (($generated@@327 ($generated@@289 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@288 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@287 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@286 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@290 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@290 (type $generated@@332))))
(let (($generated@@334 ($generated@@289 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@288 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@287 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@308 (type $generated@@336))))
(let (($generated@@338 ($generated@@307 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@306 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@305 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@304 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@308 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@224 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@350 Int) ) (!  (=> (or ($generated@@234 $generated@@350) (and (not (= 0 $generated@@231)) (not (= $generated@@350 3)))) true)
 :pattern ( ($generated@@232 $generated@@350))
))))
(assert  (=> (<= 0 $generated@@231) (forall (($generated@@351 Int) ) (!  (=> (or ($generated@@234 $generated@@351) (and (not (= 0 $generated@@231)) (not (= $generated@@351 3)))) (= ($generated@@232 $generated@@351) (ite (= $generated@@351 ($generated@@233 3)) ($generated@@236 1 ($generated@@233 0)) 100)))
 :pattern ( ($generated@@232 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@242 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@255 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@242 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@247 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@255 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@247 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@281 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@281 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@290 (type $generated@@368))))
(let (($generated@@370 ($generated@@289 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@308 (type $generated@@376))))
(let (($generated@@378 ($generated@@307 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@289 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@288 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@307 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@306 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@394) $generated@@398))) (and ($generated@@255 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@255 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@402) $generated@@406))) (and ($generated@@255 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@255 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 Int) ($generated@@408 Int) ) (! (= ($generated@@236 $generated@@407 $generated@@408) (div $generated@@407 $generated@@408))
 :pattern ( ($generated@@236 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@308 (type $generated@@411))))
(let (($generated@@413 ($generated@@307 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@306 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@305 $generated@@413 $generated@@412)) (= ($generated@@304 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@304 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@308 (type $generated@@414))))
(let (($generated@@416 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@305 $generated@@416 $generated@@415)) (= ($generated@@340 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@340 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@308 (type $generated@@417))))
(let (($generated@@419 ($generated@@307 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@306 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@305 $generated@@419 $generated@@418)) (= ($generated@@373 $generated@@417) ($generated@@409 $generated@@145))))))
 :pattern ( ($generated@@373 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@290 (type $generated@@420))))
(let (($generated@@422 ($generated@@289 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@288 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@287 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@420) ($generated@@275 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@362 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@308 (type $generated@@425))))
(let (($generated@@427 ($generated@@307 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@306 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@305 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@145) (= (type $generated@@429) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@425) ($generated@@275 ($generated@@223 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@373 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@46)) (and (= ($generated@@275 ($generated@@363 $generated@@2 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@363 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@47)) (and (= ($generated@@275 ($generated@@363 $generated@@3 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@363 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@224 $generated@@432 $generated@@44)) (and (= ($generated@@275 ($generated@@363 $generated@@4 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@363 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@224 $generated@@434 $generated@@45)) (and (= ($generated@@275 ($generated@@363 $generated@@433 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@363 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@64) (= ($generated@@224 ($generated@@275 $generated@@435) $generated@@436) ($generated@@132 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@224 ($generated@@275 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@79 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@76 $generated@@438 $generated@@2)) (<= 0 ($generated@@280 $generated@@437))))
 :pattern ( ($generated@@280 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@270 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@269 $generated@@440)) (<= 0 ($generated@@268 $generated@@439))))
 :pattern ( ($generated@@268 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@399 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@261 ($generated@@223 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@135 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@135 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@135 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@270 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@269 $generated@@145)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@268 $generated@@481))) ($generated@@255 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@242 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@242 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@247 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@247 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@247 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@150 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@363 $generated@@504 ($generated@@275 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@275 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@132 $generated@@505 ($generated@@391 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@505) $generated@@508))) (and ($generated@@224 ($generated@@81 ($generated@@364 $generated@@505) $generated@@508) $generated@@507) ($generated@@224 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@132 $generated@@505 ($generated@@391 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@132 $generated@@509 ($generated@@399 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@509) $generated@@512))) (and ($generated@@224 ($generated@@81 ($generated@@374 $generated@@509) $generated@@512) $generated@@511) ($generated@@224 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@132 $generated@@509 ($generated@@399 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@145)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@223 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@223 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@223 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@223 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@224 $generated@@519 ($generated@@391 $generated@@520 $generated@@521))) (and (= ($generated@@275 ($generated@@363 ($generated@@288 $generated@@145 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@363 ($generated@@288 $generated@@145 $generated@@145) $generated@@519) ($generated@@391 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@519 ($generated@@391 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@224 $generated@@522 ($generated@@399 $generated@@523 $generated@@524))) (and (= ($generated@@275 ($generated@@363 ($generated@@306 $generated@@145 $generated@@145) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@363 ($generated@@306 $generated@@145 $generated@@145) $generated@@522) ($generated@@399 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@399 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@145)) ($generated@@224 $generated@@527 ($generated@@135 $generated@@525 $generated@@526))) (and (= ($generated@@275 ($generated@@363 $generated@@136 $generated@@527)) $generated@@527) ($generated@@132 ($generated@@363 $generated@@136 $generated@@527) ($generated@@135 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@527 ($generated@@135 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@81 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@81 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@135 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@136) (= ($generated@@513 ($generated@@275 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@275 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@224 $generated@@535 ($generated@@75 0))) (and (= ($generated@@275 ($generated@@363 $generated@@2 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@75 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@242 $generated@@537))) (and (= ($generated@@275 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@242 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@242 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@247 $generated@@539))) (and (= ($generated@@275 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@247 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@247 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@150 $generated@@541))) (and (= ($generated@@275 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@540) ($generated@@150 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@150 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@275 ($generated@@363 ($generated@@269 $generated@@145) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@363 ($generated@@269 $generated@@145) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@150 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@255 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@150 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@255 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@255 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@136) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@554) (and ($generated@@134 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@255 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@255 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@145)) (= ($generated@@223 ($generated@@235 $generated@@556) ($generated@@235 $generated@@557)) ($generated@@235 ($generated@@223 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@223 ($generated@@235 $generated@@556) ($generated@@235 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@233 $generated@@558))) ($generated@@235 ($generated@@275 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@233 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@275 ($generated@@235 $generated@@559)) ($generated@@235 ($generated@@275 $generated@@559)))
 :pattern ( ($generated@@275 ($generated@@235 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@270 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@269 $generated@@561)) (= ($generated@@268 $generated@@560) 0)) (= $generated@@560 ($generated@@267 $generated@@561))))
 :pattern ( ($generated@@268 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@280 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@280 $generated@@562) ($generated ($generated@@81 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@280 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@433)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@269 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@268 $generated@@576))) ($generated@@224 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@269 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@268 $generated@@580))) (< ($generated@@514 ($generated@@363 $generated@@136 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@363 $generated@@136 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@288 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@391 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@286 $generated@@582) ($generated@@242 $generated@@583)) ($generated@@132 ($generated@@329 $generated@@582) ($generated@@242 $generated@@584))) ($generated@@132 ($generated@@362 $generated@@582) ($generated@@242 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@391 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@399 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@304 $generated@@585) ($generated@@247 $generated@@586)) ($generated@@132 ($generated@@340 $generated@@585) ($generated@@247 $generated@@587))) ($generated@@132 ($generated@@373 $generated@@585) ($generated@@247 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@399 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@594) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@595) $generated@@77)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@597) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@599 true))
(let (($generated@@600  (=> (and (= $generated@@593 ($generated@@233 3)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@233 0) 0)))))
(let (($generated@@601  (=> (= $generated@@594 ($generated@@211 $generated@@595 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@600) (=> (= (ControlFlow 0 5) 4) $generated@@599)))))
(let (($generated@@602 true))
(let (($generated@@603  (=> (and (= $generated@@597 ($generated@@156 $generated@@595 $generated@@596 $generated@@60 false)) (not (= $generated@@593 3))) (and (=> (= (ControlFlow 0 6) 1) $generated@@602) (=> (= (ControlFlow 0 6) 5) $generated@@601)))))
(let (($generated@@604  (=> (and (and ($generated@@254 $generated@@596) ($generated@@598 $generated@@596)) (and (= 0 $generated@@231) (= (ControlFlow 0 7) 6))) $generated@@603)))
$generated@@604)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (Int) Int)
(declare-fun $generated@@185 (Int) Int)
(declare-fun $generated@@186 (Int) Bool)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (Int Int) Int)
(declare-fun $generated@@194 (T@T) T@U)
(declare-fun $generated@@195 (T@U) Int)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@202 (T@U T@U T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 () T@T)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@T T@T) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@T) T@U)
(declare-fun $generated@@229 (T@T T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@U Int) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(= (type ($generated@@187 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@191 Int) ) (!  (=> (or ($generated@@186 ($generated@@185 $generated@@191)) (and (not (= 0 $generated@@183)) ($generated@@0 ($generated@@187 ($generated@@11 (not (= $generated@@191 3))))))) (= ($generated@@184 ($generated@@185 $generated@@191)) (ite (= ($generated@@185 $generated@@191) ($generated@@185 3)) ($generated@@188 1 ($generated@@185 0)) 100)))
 :weight 3
 :pattern ( ($generated@@184 ($generated@@185 $generated@@191)))
))))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@185 $generated@@192) $generated@@192)
 :pattern ( ($generated@@185 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@187 $generated@@193) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193))
)))
(assert  (and (and (forall (($generated@@198 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@198)) 13)) (forall (($generated@@199 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@196 $generated@@199))
))) (forall (($generated@@200 T@T) ) (! (= (type ($generated@@194 $generated@@200)) ($generated@@196 $generated@@200))
 :pattern ( ($generated@@194 $generated@@200))
))))
(assert (forall (($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@201)) 0)
 :pattern ( ($generated@@194 $generated@@201))
)))
(assert  (and (= ($generated@@1 $generated@@204) 14) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@203 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@61) (= (type $generated@@208) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@202 ($generated@@203 $generated@@206) $generated@@207 $generated@@208) ($generated@@69 $generated@@206 $generated@@207 $generated@@208)))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@206) $generated@@207 $generated@@208))
)))
(assert  (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@214 $generated@@215)) 15)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@211 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@211 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@209 $generated@@220)) ($generated@@71 $generated@@221 $generated@@4)))
 :pattern ( ($generated@@209 $generated@@220))
))) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= (type ($generated@@210 $generated@@222 $generated@@223)) ($generated@@211 $generated@@222 $generated@@223))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (let (($generated@@226 (type $generated@@224)))
 (not ($generated@@0 ($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224))))
 :pattern ( (let (($generated@@226 (type $generated@@224)))
($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224)))
)))
(assert  (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@232 $generated@@233)) 16)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@229 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@229 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@227 $generated@@238)) ($generated@@71 $generated@@239 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@238))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= (type ($generated@@228 $generated@@240 $generated@@241)) ($generated@@229 $generated@@240 $generated@@241))
 :pattern ( ($generated@@228 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (let (($generated@@244 (type $generated@@242)))
 (not ($generated@@0 ($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242))))
 :pattern ( (let (($generated@@244 (type $generated@@242)))
($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@213 (type $generated@@245))))
(let (($generated@@247 ($generated@@212 (type $generated@@245))))
 (=> (= (type $generated@@245) ($generated@@211 $generated@@247 $generated@@246)) (or (= $generated@@245 ($generated@@210 $generated@@247 $generated@@246)) (exists (($generated@@248 T@U) ) (!  (and (= (type $generated@@248) $generated@@247) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@245) $generated@@248)))
 :no-pattern (type $generated@@248)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
))))))
 :pattern ( ($generated@@209 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@231 (type $generated@@249))))
(let (($generated@@251 ($generated@@230 (type $generated@@249))))
 (=> (= (type $generated@@249) ($generated@@229 $generated@@251 $generated@@250)) (or (= $generated@@249 ($generated@@228 $generated@@251 $generated@@250)) (exists (($generated@@252 T@U) ) (!  (and (= (type $generated@@252) $generated@@251) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@249) $generated@@252)))
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
))))))
 :pattern ( ($generated@@227 $generated@@249))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@253 Int) ) (!  (=> (or ($generated@@186 $generated@@253) (and (not (= 0 $generated@@183)) (not (= $generated@@253 3)))) true)
 :pattern ( ($generated@@184 $generated@@253))
))))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@254 Int) ) (!  (=> (or ($generated@@186 $generated@@254) (and (not (= 0 $generated@@183)) (not (= $generated@@254 3)))) (= ($generated@@184 $generated@@254) (ite (= $generated@@254 ($generated@@185 3)) ($generated@@188 1 ($generated@@185 0)) 100)))
 :pattern ( ($generated@@184 $generated@@254))
))))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@61)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@71 $generated@@204 $generated@@4)) (= (type $generated@@258) $generated@@61)) (= (type $generated@@259) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@257 ($generated@@255 $generated@@258) $generated@@259) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@204) ($generated@@0 ($generated@@76 $generated@@257 $generated@@260))) ($generated@@202 $generated@@260 $generated@@258 $generated@@259))
 :pattern ( ($generated@@76 $generated@@257 $generated@@260))
))))
 :pattern ( ($generated@@69 $generated@@257 ($generated@@255 $generated@@258) $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@61)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@71 $generated@@204 $generated@@4)) (= (type $generated@@264) $generated@@61)) (= (type $generated@@265) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@263 ($generated@@261 $generated@@264) $generated@@265) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@204) ($generated@@0 ($generated@@76 $generated@@263 $generated@@266))) ($generated@@202 $generated@@266 $generated@@264 $generated@@265))
 :pattern ( ($generated@@76 $generated@@263 $generated@@266))
))))
 :pattern ( ($generated@@69 $generated@@263 ($generated@@261 $generated@@264) $generated@@265))
)))
(assert  (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@61)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@213 (type $generated@@271))))
(let (($generated@@273 ($generated@@212 (type $generated@@271))))
(= (type ($generated@@268 $generated@@271)) ($generated@@71 $generated@@273 $generated@@272))))
 :pattern ( ($generated@@268 $generated@@271))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) ($generated@@211 $generated@@204 $generated@@204)) (= (type $generated@@275) $generated@@61)) (= (type $generated@@276) $generated@@61)) (= (type $generated@@277) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@274 ($generated@@267 $generated@@275 $generated@@276) $generated@@277) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@204) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@274) $generated@@278))) (and ($generated@@202 ($generated@@76 ($generated@@268 $generated@@274) $generated@@278) $generated@@276 $generated@@277) ($generated@@202 $generated@@278 $generated@@275 $generated@@277)))
 :pattern ( ($generated@@76 ($generated@@268 $generated@@274) $generated@@278))
 :pattern ( ($generated@@76 ($generated@@209 $generated@@274) $generated@@278))
))))
 :pattern ( ($generated@@69 $generated@@274 ($generated@@267 $generated@@275 $generated@@276) $generated@@277))
)))
(assert  (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@279 $generated@@281 $generated@@282))
)) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@231 (type $generated@@283))))
(let (($generated@@285 ($generated@@230 (type $generated@@283))))
(= (type ($generated@@280 $generated@@283)) ($generated@@71 $generated@@285 $generated@@284))))
 :pattern ( ($generated@@280 $generated@@283))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) ($generated@@229 $generated@@204 $generated@@204)) (= (type $generated@@287) $generated@@61)) (= (type $generated@@288) $generated@@61)) (= (type $generated@@289) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@286 ($generated@@279 $generated@@287 $generated@@288) $generated@@289) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@204) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@286) $generated@@290))) (and ($generated@@202 ($generated@@76 ($generated@@280 $generated@@286) $generated@@290) $generated@@288 $generated@@289) ($generated@@202 $generated@@290 $generated@@287 $generated@@289)))
 :pattern ( ($generated@@76 ($generated@@280 $generated@@286) $generated@@290))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@286) $generated@@290))
))))
 :pattern ( ($generated@@69 $generated@@286 ($generated@@279 $generated@@287 $generated@@288) $generated@@289))
)))
(assert (forall (($generated@@291 Int) ($generated@@292 Int) ) (! (= ($generated@@188 $generated@@291 $generated@@292) (div $generated@@291 $generated@@292))
 :pattern ( ($generated@@188 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@71 $generated@@294 $generated@@4))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@231 (type $generated@@295))))
(let (($generated@@297 ($generated@@230 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@229 $generated@@297 $generated@@296)) (= (= $generated@@295 ($generated@@228 $generated@@297 $generated@@296)) (= ($generated@@227 $generated@@295) ($generated@@293 $generated@@297))))))
 :pattern ( ($generated@@227 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@197 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@196 $generated@@299)) (<= 0 ($generated@@195 $generated@@298))))
 :pattern ( ($generated@@195 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@267 $generated@@302 $generated@@303)) $generated@@302))
 :pattern ( ($generated@@267 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@61) (= (type $generated@@307) $generated@@61)) (= ($generated@@304 ($generated@@267 $generated@@306 $generated@@307)) $generated@@307))
 :pattern ( ($generated@@267 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@67 ($generated@@267 $generated@@308 $generated@@309)) $generated@@58))
 :pattern ( ($generated@@267 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@279 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@279 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@279 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@279 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@279 $generated@@318 $generated@@319)) $generated@@59))
 :pattern ( ($generated@@279 $generated@@318 $generated@@319))
)))
(assert  (and (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@322))
)) (forall (($generated@@323 T@U) ($generated@@324 Int) ) (! (let (($generated@@325 ($generated@@197 (type $generated@@323))))
(= (type ($generated@@321 $generated@@323 $generated@@324)) $generated@@325))
 :pattern ( ($generated@@321 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@196 $generated@@204)) (= (type $generated@@327) $generated@@61)) (= (type $generated@@328) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@326 ($generated@@320 $generated@@327) $generated@@328) (forall (($generated@@329 Int) ) (!  (=> (and (<= 0 $generated@@329) (< $generated@@329 ($generated@@195 $generated@@326))) ($generated@@202 ($generated@@321 $generated@@326 $generated@@329) $generated@@327 $generated@@328))
 :pattern ( ($generated@@321 $generated@@326 $generated@@329))
))))
 :pattern ( ($generated@@69 $generated@@326 ($generated@@320 $generated@@327) $generated@@328))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 ($generated@@70 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@70 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@255 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@255 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@67 ($generated@@255 $generated@@335)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@61) (= ($generated@@336 ($generated@@261 $generated@@338)) $generated@@338))
 :pattern ( ($generated@@261 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@67 ($generated@@261 $generated@@339)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@339))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@341 ($generated@@340 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@340 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@340 $generated@@345)) $generated@@56))
 :pattern ( ($generated@@340 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@346 ($generated@@320 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@320 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@67 ($generated@@320 $generated@@349)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@349))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated@@350 $generated@@354 ($generated@@203 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@203 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (not ($generated@@0 ($generated@@76 ($generated@@293 $generated@@356) $generated@@355))))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@76 ($generated@@293 $generated@@356) $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@71 $generated@@204 $generated@@2)) (= (type $generated@@358) $generated@@61)) (= (type $generated@@359) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@357 ($generated@@340 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@204) (< 0 ($generated ($generated@@76 $generated@@357 $generated@@360)))) ($generated@@202 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@76 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@69 $generated@@357 ($generated@@340 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 Int) ) (! (= ($generated@@203 ($generated@@8 ($generated@@185 $generated@@361))) ($generated@@187 ($generated@@203 ($generated@@8 $generated@@361))))
 :pattern ( ($generated@@203 ($generated@@8 ($generated@@185 $generated@@361))))
)))
(assert (forall (($generated@@362 T@U) ) (! (= ($generated@@203 ($generated@@187 $generated@@362)) ($generated@@187 ($generated@@203 $generated@@362)))
 :pattern ( ($generated@@203 ($generated@@187 $generated@@362)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@197 (type $generated@@363))))
 (=> (and (= (type $generated@@363) ($generated@@196 $generated@@364)) (= ($generated@@195 $generated@@363) 0)) (= $generated@@363 ($generated@@194 $generated@@364))))
 :pattern ( ($generated@@195 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@204)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Bool)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () T@U)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@382 (T@U) Bool)
(assert  (and (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@380) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@383  (=> (forall (($generated@@384 Int) ) (!  (=> (and (and (<= ($generated@@185 0) $generated@@384) (< $generated@@384 100)) (not (= $generated@@384 3))) ($generated@@186 $generated@@384))
 :pattern ( ($generated@@184 $generated@@384))
)) (=> (and (= $generated@@376 (forall (($generated@@385 Int) ) (!  (=> (and (and (<= ($generated@@185 0) $generated@@385) (< $generated@@385 100)) (not (= $generated@@385 3))) (= ($generated@@184 $generated@@385) ($generated@@185 100)))
 :pattern ( ($generated@@184 $generated@@385))
))) (= (ControlFlow 0 2) (- 0 1))) $generated@@376))))
(let (($generated@@386  (=> (and (not (and (and (<= ($generated@@185 0) $generated@@377) (< $generated@@377 100)) (not (= $generated@@377 3)))) (= (ControlFlow 0 5) 2)) $generated@@383)))
(let (($generated@@387  (=> (and (and (and (<= ($generated@@185 0) $generated@@377) (< $generated@@377 100)) (not (= $generated@@377 3))) ($generated@@69 ($generated@@8 $generated@@377) $generated@@46 $generated@@378)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@377 3))) (=> (not (= $generated@@377 3)) (=> (and ($generated@@186 $generated@@377) (= (ControlFlow 0 3) 2)) $generated@@383))))))
(let (($generated@@388  (=> (= $generated@@379 ($generated@@128 $generated@@380 $generated@@378 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@387) (=> (= (ControlFlow 0 6) 5) $generated@@386)))))
(let (($generated@@389  (=> (and (and ($generated@@381 $generated@@378) ($generated@@382 $generated@@378)) (and (= 1 $generated@@183) (= (ControlFlow 0 7) 6))) $generated@@388)))
$generated@@389))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
