(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (Int) T@U)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (Int) Int)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@139 $generated@@147)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@147))
))) (= (type $generated@@143) $generated@@70)) (forall (($generated@@148 Int) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@140)
 :pattern ( ($generated@@145 $generated@@148))
))))
(assert  (=> (<= 2 $generated@@138) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@140) (or ($generated@@141 $generated@@149) (and (not (= 2 $generated@@138)) (and ($generated@@142 $generated@@149 $generated@@143) ($generated@@144 $generated@@149))))) (= ($generated@@139 $generated@@149) ($generated@@145 ($generated@@146 $generated@@149))))
 :pattern ( ($generated@@139 $generated@@149))
))))
(assert (= (type $generated@@150) $generated@@70))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@80 $generated@@151 $generated@@150 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@140) (= (type $generated@@156) $generated@@140)) (and ($generated@@154 $generated@@155) ($generated@@154 $generated@@156))) (= ($generated@@153 $generated@@155 $generated@@156) (= ($generated@@146 $generated@@155) ($generated@@146 $generated@@156))))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@154 $generated@@155))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156) ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@142 $generated@@157 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@157 ($generated@@81 0)))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@140) (or ($generated@@158 $generated@@159) (and (not (= 0 $generated@@138)) ($generated@@142 $generated@@159 $generated@@143)))) true)
 :pattern ( ($generated@@144 $generated@@159))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@140)) ($generated@@142 $generated@@166 ($generated@@161 $generated@@164 $generated@@165))) ($generated@@160 $generated@@166))
 :pattern ( ($generated@@160 $generated@@166) ($generated@@142 $generated@@166 ($generated@@161 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 15) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@140) (= (type $generated@@174) $generated@@140)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@74)
 :pattern ( ($generated@@175 $generated@@177))
)) (= (type $generated@@176) $generated@@140)))
(assert (= ($generated@@175 $generated@@176) $generated@@64))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@182) $generated@@70)) ($generated@@142 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@142 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@73 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@234) ($generated@@72 $generated@@4))) (= (type $generated@@236) $generated@@83)) (= (type $generated@@237) ($generated@@72 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@73 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@83) (= (type $generated@@245) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@246) ($generated@@72 $generated@@4))) (= (type $generated@@248) $generated@@83)) (= (type $generated@@249) ($generated@@72 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@140) (or ($generated@@158 ($generated@@251 $generated@@254)) (and (not (= 0 $generated@@138)) ($generated@@142 $generated@@254 $generated@@143)))) (= ($generated@@144 ($generated@@251 $generated@@254)) ($generated@@0 ($generated@@251 ($generated@@11 ($generated@@154 ($generated@@251 $generated@@254)))))))
 :weight 3
 :pattern ( ($generated@@144 ($generated@@251 $generated@@254)))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@140)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@70) (= (type $generated@@260) $generated@@70)) (= (type $generated@@261) $generated@@170)) (= (type $generated@@262) $generated@@170)) (= ($generated@@142 ($generated@@255 $generated@@261 $generated@@262) ($generated@@161 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@142 ($generated@@255 $generated@@261 $generated@@262) ($generated@@161 $generated@@259 $generated@@260)))
)))
(assert ($generated@@142 $generated@@176 $generated@@143))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@263 $generated@@264)) ($generated@@80 $generated@@176 $generated@@143 $generated@@264))
 :pattern ( ($generated@@80 $generated@@176 $generated@@143 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@140) (= (type $generated@@266) $generated@@140)) (= ($generated@@167 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@167 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@140) (= (type $generated@@268) $generated@@140)) (= ($generated@@153 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@153 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@272) $generated@@70)) (= ($generated@@142 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@170) ($generated@@0 ($generated@@87 $generated@@271 $generated@@273))) ($generated@@256 $generated@@273 $generated@@272))
 :pattern ( ($generated@@87 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@142 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@70)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@277) $generated@@70)) (= ($generated@@142 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@170) ($generated@@0 ($generated@@87 $generated@@276 $generated@@278))) ($generated@@256 $generated@@278 $generated@@277))
 :pattern ( ($generated@@87 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@142 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@279 $generated@@280) $generated@@280)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@251 $generated@@281) $generated@@281)
 :pattern ( ($generated@@251 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@140) (= (type $generated@@284) $generated@@140)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@153 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@153 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@153 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) $generated@@70) (= (type $generated@@287) $generated@@70)) (= (type $generated@@288) $generated@@170)) (= (type $generated@@289) $generated@@170)) (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@290)) (= ($generated@@80 ($generated@@255 $generated@@288 $generated@@289) ($generated@@161 $generated@@286 $generated@@287) $generated@@290)  (and ($generated@@285 $generated@@288 $generated@@286 $generated@@290) ($generated@@285 $generated@@289 $generated@@287 $generated@@290))))
 :pattern ( ($generated@@80 ($generated@@255 $generated@@288 $generated@@289) ($generated@@161 $generated@@286 $generated@@287) $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@140) (= ($generated@@160 $generated@@291) (= ($generated@@175 $generated@@291) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@140) (= ($generated@@282 $generated@@292) (= ($generated@@175 $generated@@292) $generated@@64)))
 :pattern ( ($generated@@282 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@140) (= ($generated@@154 $generated@@293) (= ($generated@@175 $generated@@293) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@140) ($generated@@160 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@170) (= (type $generated@@296) $generated@@170)) (= $generated@@294 ($generated@@255 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@140) ($generated@@282 $generated@@305)) (= $generated@@305 $generated@@176))
 :pattern ( ($generated@@282 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@140) ($generated@@154 $generated@@306)) (exists (($generated@@307 Int) ) (= $generated@@306 ($generated@@145 $generated@@307))))
 :pattern ( ($generated@@154 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@2) (= ($generated@@142 $generated@@308 $generated@@150) (<= ($generated@@279 0) ($generated $generated@@308))))
 :pattern ( ($generated@@142 $generated@@308 $generated@@150))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@170)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@70) (= (type $generated@@313) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@285 ($generated@@309 $generated@@311) $generated@@312 $generated@@313) ($generated@@80 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@285 ($generated@@309 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@82 $generated@@316 $generated@@2))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@85 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@82 $generated@@318 $generated@@2)) (and (= (= ($generated@@314 $generated@@317) 0) (= $generated@@317 ($generated@@315 $generated@@318))) (=> (not (= ($generated@@314 $generated@@317) 0)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) (< 0 ($generated ($generated@@87 $generated@@317 $generated@@319))))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 18)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@82 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@82 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@85 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@82 $generated@@357 $generated@@2)) (= ($generated@@179 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@87 $generated@@356 $generated@@358))) (<= ($generated ($generated@@87 $generated@@356 $generated@@358)) ($generated@@314 $generated@@356))))
 :pattern ( ($generated@@87 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@179 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@170) ($generated@@256 $generated@@362 $generated@@150)) (and (= ($generated@@309 ($generated@@359 $generated@@2 $generated@@362)) $generated@@362) ($generated@@142 ($generated@@359 $generated@@2 $generated@@362) $generated@@150)))
 :pattern ( ($generated@@256 $generated@@362 $generated@@150))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@170) ($generated@@256 $generated@@363 $generated@@143)) (and (= ($generated@@309 ($generated@@359 $generated@@140 $generated@@363)) $generated@@363) ($generated@@142 ($generated@@359 $generated@@140 $generated@@363) $generated@@143)))
 :pattern ( ($generated@@256 $generated@@363 $generated@@143))
)))
(assert (forall (($generated@@364 Int) ) (! (= ($generated@@142 ($generated@@145 $generated@@364) $generated@@143) ($generated@@142 ($generated@@8 $generated@@364) $generated@@150))
 :pattern ( ($generated@@142 ($generated@@145 $generated@@364) $generated@@143))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@324 (type $generated@@365))))
(let (($generated@@367 ($generated@@323 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@322 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@321 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@320 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@324 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@324 (type $generated@@372))))
(let (($generated@@374 ($generated@@323 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@322 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@321 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@342 (type $generated@@376))))
(let (($generated@@378 ($generated@@341 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@340 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@339 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@338 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@342 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@82 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@342 (type $generated@@383))))
(let (($generated@@385 ($generated@@341 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@340 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@339 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@388) $generated@@70)) (= ($generated@@142 $generated@@387 ($generated@@178 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) (< 0 ($generated ($generated@@87 $generated@@387 $generated@@389)))) ($generated@@256 $generated@@389 $generated@@388))
 :pattern ( ($generated@@87 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@142 $generated@@387 ($generated@@178 $generated@@388)))
)))
(assert  (=> (<= 2 $generated@@138) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@140) (or ($generated@@141 ($generated@@251 $generated@@390)) (and (not (= 2 $generated@@138)) (and ($generated@@142 $generated@@390 $generated@@143) ($generated@@0 ($generated@@251 ($generated@@11 ($generated@@144 ($generated@@251 $generated@@390))))))))) (= ($generated@@139 ($generated@@251 $generated@@390)) ($generated@@251 ($generated@@145 ($generated@@279 ($generated@@146 ($generated@@251 $generated@@390)))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@251 $generated@@390)))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@269 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@170) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@285 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@269 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@82 $generated@@170 $generated@@4)) (= (type $generated@@396) $generated@@70)) (= (type $generated@@397) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@395 ($generated@@274 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@170) ($generated@@0 ($generated@@87 $generated@@395 $generated@@398))) ($generated@@285 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@87 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@80 $generated@@395 ($generated@@274 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@87 ($generated@@315 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@87 ($generated@@315 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@170 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@324 (type $generated@@404))))
(let (($generated@@406 ($generated@@323 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@322 $generated@@170 $generated@@170)) (= (type $generated@@408) $generated@@170)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@407) ($generated@@168 ($generated@@359 $generated@@140 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@168 ($generated@@359 $generated@@140 $generated@@408))) ($generated@@169 ($generated@@359 $generated@@140 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@82 $generated@@170 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@342 (type $generated@@412))))
(let (($generated@@414 ($generated@@341 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@82 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@340 $generated@@170 $generated@@170)) (= (type $generated@@416) $generated@@170)) (= ($generated@@0 ($generated@@87 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@415) ($generated@@168 ($generated@@359 $generated@@140 $generated@@416)))) (= ($generated@@87 ($generated@@410 $generated@@415) ($generated@@168 ($generated@@359 $generated@@140 $generated@@416))) ($generated@@169 ($generated@@359 $generated@@140 $generated@@416))))))
 :pattern ( ($generated@@87 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@323 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@322 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@87 ($generated@@369 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@87 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@87 ($generated@@369 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@341 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@340 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@87 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@322 $generated@@170 $generated@@170)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@430) $generated@@434))) (and ($generated@@285 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@285 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@340 $generated@@170 $generated@@170)) (= (type $generated@@439) $generated@@70)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@438) $generated@@442))) (and ($generated@@285 ($generated@@87 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@285 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@80 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@263 $generated@@444)) (= ($generated@@80 ($generated@@145 $generated@@443) $generated@@143 $generated@@444) ($generated@@80 ($generated@@8 $generated@@443) $generated@@150 $generated@@444)))
 :pattern ( ($generated@@80 ($generated@@145 $generated@@443) $generated@@143 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@140) ($generated@@142 $generated@@445 $generated@@143)) (or ($generated@@282 $generated@@445) ($generated@@154 $generated@@445)))
 :pattern ( ($generated@@154 $generated@@445) ($generated@@142 $generated@@445 $generated@@143))
 :pattern ( ($generated@@282 $generated@@445) ($generated@@142 $generated@@445 $generated@@143))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@82 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@342 (type $generated@@448))))
(let (($generated@@450 ($generated@@341 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@340 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@339 $generated@@450 $generated@@449)) (= ($generated@@338 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@338 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@342 (type $generated@@451))))
(let (($generated@@453 ($generated@@341 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@340 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@339 $generated@@453 $generated@@452)) (= ($generated@@380 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@380 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@342 (type $generated@@454))))
(let (($generated@@456 ($generated@@341 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@340 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@339 $generated@@456 $generated@@455)) (= ($generated@@409 $generated@@454) ($generated@@446 $generated@@170))))))
 :pattern ( ($generated@@409 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@324 (type $generated@@457))))
(let (($generated@@459 ($generated@@323 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@322 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@321 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@170) (= (type $generated@@461) $generated@@170)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@457) ($generated@@309 ($generated@@255 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@401 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@342 (type $generated@@462))))
(let (($generated@@464 ($generated@@341 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@340 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@339 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@170) (= (type $generated@@466) $generated@@170)) ($generated@@0 ($generated@@87 ($generated@@409 $generated@@462) ($generated@@309 ($generated@@255 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@170) ($generated@@256 $generated@@467 $generated@@46)) (and (= ($generated@@309 ($generated@@359 $generated@@2 $generated@@467)) $generated@@467) ($generated@@142 ($generated@@359 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@170) ($generated@@256 $generated@@468 $generated@@47)) (and (= ($generated@@309 ($generated@@359 $generated@@3 $generated@@468)) $generated@@468) ($generated@@142 ($generated@@359 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@256 $generated@@469 $generated@@44)) (and (= ($generated@@309 ($generated@@359 $generated@@4 $generated@@469)) $generated@@469) ($generated@@142 ($generated@@359 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@256 $generated@@471 $generated@@45)) (and (= ($generated@@309 ($generated@@359 $generated@@470 $generated@@471)) $generated@@471) ($generated@@142 ($generated@@359 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@256 ($generated@@309 $generated@@472) $generated@@473) ($generated@@142 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@256 ($generated@@309 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@85 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@82 $generated@@475 $generated@@2)) (<= 0 ($generated@@314 $generated@@474))))
 :pattern ( ($generated@@314 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@300 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@299 $generated@@477)) (<= 0 ($generated@@298 $generated@@476))))
 :pattern ( ($generated@@298 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@427 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@427 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@427 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@427 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@435 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@435 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@435 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@435 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@78 ($generated@@435 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (= ($generated@@175 ($generated@@255 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@170) (= (type $generated@@509) $generated@@170)) (= ($generated@@168 ($generated@@255 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@255 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@169 ($generated@@255 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@255 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@300 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@170)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@298 $generated@@518))) ($generated@@285 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@80 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@81 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@81 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@269 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@269 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@269 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@274 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@274 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@274 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@78 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@175 ($generated@@145 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@540))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@146 ($generated@@145 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@145 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@359 $generated@@543 ($generated@@309 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@309 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@322 $generated@@170 $generated@@170)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@142 $generated@@544 ($generated@@427 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@544) $generated@@547))) (and ($generated@@256 ($generated@@87 ($generated@@402 $generated@@544) $generated@@547) $generated@@546) ($generated@@256 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@544) $generated@@547))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@142 $generated@@544 ($generated@@427 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@340 $generated@@170 $generated@@170)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@142 $generated@@548 ($generated@@435 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@170) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@548) $generated@@551))) (and ($generated@@256 ($generated@@87 ($generated@@410 $generated@@548) $generated@@551) $generated@@550) ($generated@@256 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@548) $generated@@551))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@142 $generated@@548 ($generated@@435 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@255 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@255 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@170)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@255 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@255 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@170) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) ($generated@@256 $generated@@558 ($generated@@427 $generated@@559 $generated@@560))) (and (= ($generated@@309 ($generated@@359 ($generated@@322 $generated@@170 $generated@@170) $generated@@558)) $generated@@558) ($generated@@142 ($generated@@359 ($generated@@322 $generated@@170 $generated@@170) $generated@@558) ($generated@@427 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@256 $generated@@558 ($generated@@427 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@170) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) ($generated@@256 $generated@@561 ($generated@@435 $generated@@562 $generated@@563))) (and (= ($generated@@309 ($generated@@359 ($generated@@340 $generated@@170 $generated@@170) $generated@@561)) $generated@@561) ($generated@@142 ($generated@@359 ($generated@@340 $generated@@170 $generated@@170) $generated@@561) ($generated@@435 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@256 $generated@@561 ($generated@@435 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) $generated@@170)) ($generated@@256 $generated@@566 ($generated@@161 $generated@@564 $generated@@565))) (and (= ($generated@@309 ($generated@@359 $generated@@140 $generated@@566)) $generated@@566) ($generated@@142 ($generated@@359 $generated@@140 $generated@@566) ($generated@@161 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@256 $generated@@566 ($generated@@161 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@87 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@87 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@75)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (and (= ($generated@@78 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@68)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@140) (= ($generated@@552 ($generated@@309 $generated@@573)) ($generated@@553 $generated@@573)))
 :pattern ( ($generated@@552 ($generated@@309 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@170) ($generated@@256 $generated@@574 ($generated@@81 0))) (and (= ($generated@@309 ($generated@@359 $generated@@2 $generated@@574)) $generated@@574) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@170 $generated@@4) $generated@@574) ($generated@@81 0))))
 :pattern ( ($generated@@256 $generated@@574 ($generated@@81 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@256 $generated@@575 ($generated@@269 $generated@@576))) (and (= ($generated@@309 ($generated@@359 ($generated@@82 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@170 $generated@@4) $generated@@575) ($generated@@269 $generated@@576))))
 :pattern ( ($generated@@256 $generated@@575 ($generated@@269 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@256 $generated@@577 ($generated@@274 $generated@@578))) (and (= ($generated@@309 ($generated@@359 ($generated@@82 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@170 $generated@@4) $generated@@577) ($generated@@274 $generated@@578))))
 :pattern ( ($generated@@256 $generated@@577 ($generated@@274 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@256 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@309 ($generated@@359 ($generated@@82 $generated@@170 $generated@@2) $generated@@579)) $generated@@579) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@170 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@256 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@256 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@309 ($generated@@359 ($generated@@299 $generated@@170) $generated@@581)) $generated@@581) ($generated@@142 ($generated@@359 ($generated@@299 $generated@@170) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@256 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@140) (or ($generated@@158 $generated@@583) (and (not (= 0 $generated@@138)) ($generated@@142 $generated@@583 $generated@@143)))) (= ($generated@@144 $generated@@583) ($generated@@154 $generated@@583)))
 :pattern ( ($generated@@144 $generated@@583))
))))
(assert (= ($generated@@78 $generated@@150) $generated@@61))
(assert (= ($generated@@569 $generated@@150) $generated@@67))
(assert (= ($generated@@78 $generated@@143) $generated@@65))
(assert (= ($generated@@569 $generated@@143) $generated@@69))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@82 $generated@@170 $generated@@2)) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@584 ($generated@@178 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@170) (< 0 ($generated ($generated@@87 $generated@@584 $generated@@587)))) ($generated@@285 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@87 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@178 $generated@@585) $generated@@586))
)))
(assert (= $generated@@176 ($generated@@251 $generated@@176)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@140) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@590) (and ($generated@@160 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@70) ($generated@@80 $generated@@588 ($generated@@161 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@80 $generated@@588 ($generated@@161 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@285 ($generated@@168 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@285 ($generated@@168 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@594) (and ($generated@@160 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@80 $generated@@592 ($generated@@161 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@80 $generated@@592 ($generated@@161 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@285 ($generated@@169 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@285 ($generated@@169 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@140) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@597) (and ($generated@@154 $generated@@596) ($generated@@80 $generated@@596 $generated@@143 $generated@@597)))) ($generated@@80 ($generated@@8 ($generated@@146 $generated@@596)) $generated@@150 $generated@@597))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@146 $generated@@596)) $generated@@150 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (= (type $generated@@599) $generated@@170)) (= ($generated@@255 ($generated@@251 $generated@@598) ($generated@@251 $generated@@599)) ($generated@@251 ($generated@@255 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@255 ($generated@@251 $generated@@598) ($generated@@251 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@309 ($generated@@8 ($generated@@279 $generated@@600))) ($generated@@251 ($generated@@309 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@309 ($generated@@8 ($generated@@279 $generated@@600))))
)))
(assert (forall (($generated@@601 Int) ) (! (= ($generated@@145 ($generated@@279 $generated@@601)) ($generated@@251 ($generated@@145 $generated@@601)))
 :pattern ( ($generated@@145 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@309 ($generated@@251 $generated@@602)) ($generated@@251 ($generated@@309 $generated@@602)))
 :pattern ( ($generated@@309 ($generated@@251 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@300 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@299 $generated@@604)) (= ($generated@@298 $generated@@603) 0)) (= $generated@@603 ($generated@@297 $generated@@604))))
 :pattern ( ($generated@@298 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@82 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@314 ($generated@@88 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@314 $generated@@605) ($generated ($generated@@87 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@314 ($generated@@88 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert  (=> (<= 2 $generated@@138) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@140) (or ($generated@@141 $generated@@609) (and (not (= 2 $generated@@138)) (and ($generated@@142 $generated@@609 $generated@@143) ($generated@@144 $generated@@609))))) ($generated@@142 ($generated@@139 $generated@@609) $generated@@143))
 :pattern ( ($generated@@139 $generated@@609))
))))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@611) $generated@@2)) ($generated@@80 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@80 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@613) $generated@@3)) ($generated@@80 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@80 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@615) $generated@@4)) ($generated@@80 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@80 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@470)) ($generated@@80 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@80 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@170)) ($generated@@80 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@80 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@299 $generated@@170)) (= (type $generated@@621) $generated@@70)) (= ($generated@@142 $generated@@620 ($generated@@512 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@298 $generated@@620))) ($generated@@256 ($generated@@513 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@513 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@142 $generated@@620 ($generated@@512 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@299 $generated@@170)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@298 $generated@@624))) (< ($generated@@553 ($generated@@359 $generated@@140 ($generated@@513 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@553 ($generated@@359 $generated@@140 ($generated@@513 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@322 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@142 $generated@@626 ($generated@@427 $generated@@627 $generated@@628))) (and (and ($generated@@142 ($generated@@320 $generated@@626) ($generated@@269 $generated@@627)) ($generated@@142 ($generated@@369 $generated@@626) ($generated@@269 $generated@@628))) ($generated@@142 ($generated@@401 $generated@@626) ($generated@@269 ($generated@@161 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@142 $generated@@626 ($generated@@427 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@340 $generated@@170 $generated@@170)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@142 $generated@@629 ($generated@@435 $generated@@630 $generated@@631))) (and (and ($generated@@142 ($generated@@338 $generated@@629) ($generated@@274 $generated@@630)) ($generated@@142 ($generated@@380 $generated@@629) ($generated@@274 $generated@@631))) ($generated@@142 ($generated@@409 $generated@@629) ($generated@@274 ($generated@@161 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@142 $generated@@629 ($generated@@435 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@142 $generated@@632 $generated@@46))
 :pattern ( ($generated@@142 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@142 $generated@@633 $generated@@47))
 :pattern ( ($generated@@142 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@142 $generated@@634 $generated@@44))
 :pattern ( ($generated@@142 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@470) ($generated@@142 $generated@@635 $generated@@45))
 :pattern ( ($generated@@142 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@170) ($generated@@142 $generated@@636 $generated@@48))
 :pattern ( ($generated@@142 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@637) ($generated@@185 $generated@@83 $generated@@4)) (= (type $generated@@638) $generated@@83)) (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@640) $generated@@140)) (= (type $generated@@641) ($generated@@185 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@643  (=> (and (= $generated@@637 ($generated@@239 $generated@@638 $generated@@639 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@154 $generated@@640))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (and (and (= $generated@@641 ($generated@@184 $generated@@638 $generated@@639 $generated@@60 false)) ($generated@@80 $generated@@640 $generated@@143 $generated@@639)) (and ($generated@@158 $generated@@640) ($generated@@144 $generated@@640))) (and (=> (= (ControlFlow 0 4) 1) $generated@@644) (=> (= (ControlFlow 0 4) 3) $generated@@643)))))
(let (($generated@@646  (=> (and ($generated@@263 $generated@@639) ($generated@@642 $generated@@639)) (=> (and (and ($generated@@142 $generated@@640 $generated@@143) ($generated@@80 $generated@@640 $generated@@143 $generated@@639)) (and (= 2 $generated@@138) (= (ControlFlow 0 5) 4))) $generated@@645))))
$generated@@646)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (Int) T@U)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) Int)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@473 () T@T)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@516 (T@U Int) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@139 $generated@@147)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@147))
))) (= (type $generated@@143) $generated@@70)) (forall (($generated@@148 Int) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@140)
 :pattern ( ($generated@@145 $generated@@148))
))))
(assert  (=> (<= 2 $generated@@138) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@140) (or ($generated@@141 $generated@@149) (and (not (= 2 $generated@@138)) (and ($generated@@142 $generated@@149 $generated@@143) ($generated@@144 $generated@@149))))) (= ($generated@@139 $generated@@149) ($generated@@145 ($generated@@146 $generated@@149))))
 :pattern ( ($generated@@139 $generated@@149))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@152) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= (type $generated@@154) $generated@@70))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
 :pattern ( ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@140) (= (type $generated@@160) $generated@@140)) (and ($generated@@158 $generated@@159) ($generated@@158 $generated@@160))) (= ($generated@@157 $generated@@159 $generated@@160) (= ($generated@@146 $generated@@159) ($generated@@146 $generated@@160))))
 :pattern ( ($generated@@157 $generated@@159 $generated@@160) ($generated@@158 $generated@@159))
 :pattern ( ($generated@@157 $generated@@159 $generated@@160) ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@142 $generated@@161 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@161 ($generated@@81 0)))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@140) (or ($generated@@162 $generated@@163) (and (not (= 0 $generated@@138)) ($generated@@142 $generated@@163 $generated@@143)))) true)
 :pattern ( ($generated@@144 $generated@@163))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@166 $generated@@167)) $generated@@70)
 :pattern ( ($generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@70) (= (type $generated@@169) $generated@@70)) (= (type $generated@@170) $generated@@140)) ($generated@@142 $generated@@170 ($generated@@165 $generated@@168 $generated@@169))) ($generated@@164 $generated@@170))
 :pattern ( ($generated@@164 $generated@@170) ($generated@@142 $generated@@170 ($generated@@165 $generated@@168 $generated@@169)))
)))
(assert  (and (and (= ($generated@@1 $generated@@174) 15) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@172 $generated@@175))
))) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@174)
 :pattern ( ($generated@@173 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@140) (= (type $generated@@178) $generated@@140)) true) (= ($generated@@171 $generated@@177 $generated@@178)  (and (= ($generated@@172 $generated@@177) ($generated@@172 $generated@@178)) (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)))))
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
)))
(assert  (and (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@74)
 :pattern ( ($generated@@179 $generated@@181))
)) (= (type $generated@@180) $generated@@140)))
(assert (= ($generated@@179 $generated@@180) $generated@@64))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@82 $generated@@174 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@142 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@142 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@83 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@73 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@83) (= (type $generated@@237) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@238) ($generated@@72 $generated@@4))) (= (type $generated@@240) $generated@@83)) (= (type $generated@@241) ($generated@@72 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@140) (or ($generated@@162 ($generated@@243 $generated@@246)) (and (not (= 0 $generated@@138)) ($generated@@142 $generated@@246 $generated@@143)))) (= ($generated@@144 ($generated@@243 $generated@@246)) ($generated@@0 ($generated@@243 ($generated@@11 ($generated@@158 ($generated@@243 $generated@@246)))))))
 :weight 3
 :pattern ( ($generated@@144 ($generated@@243 $generated@@246)))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@140)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@70) (= (type $generated@@252) $generated@@70)) (= (type $generated@@253) $generated@@174)) (= (type $generated@@254) $generated@@174)) (= ($generated@@142 ($generated@@247 $generated@@253 $generated@@254) ($generated@@165 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@142 ($generated@@247 $generated@@253 $generated@@254) ($generated@@165 $generated@@251 $generated@@252)))
)))
(assert ($generated@@142 $generated@@180 $generated@@143))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@255 $generated@@256)) ($generated@@80 $generated@@180 $generated@@143 $generated@@256))
 :pattern ( ($generated@@80 $generated@@180 $generated@@143 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@140) (= (type $generated@@258) $generated@@140)) (= ($generated@@171 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@171 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@140) (= (type $generated@@260) $generated@@140)) (= ($generated@@157 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@157 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@174 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@142 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@174) ($generated@@0 ($generated@@87 $generated@@263 $generated@@265))) ($generated@@248 $generated@@265 $generated@@264))
 :pattern ( ($generated@@87 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@142 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@82 $generated@@174 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@142 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@174) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@248 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@142 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@243 $generated@@273) $generated@@273)
 :pattern ( ($generated@@243 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@275) $generated@@140) (= (type $generated@@276) $generated@@140)) (and ($generated@@274 $generated@@275) ($generated@@274 $generated@@276))) (= ($generated@@157 $generated@@275 $generated@@276) true))
 :pattern ( ($generated@@157 $generated@@275 $generated@@276) ($generated@@274 $generated@@275))
 :pattern ( ($generated@@157 $generated@@275 $generated@@276) ($generated@@274 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@70) (= (type $generated@@279) $generated@@70)) (= (type $generated@@280) $generated@@174)) (= (type $generated@@281) $generated@@174)) (= (type $generated@@282) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@255 $generated@@282)) (= ($generated@@80 ($generated@@247 $generated@@280 $generated@@281) ($generated@@165 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@80 ($generated@@247 $generated@@280 $generated@@281) ($generated@@165 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@140) (= ($generated@@164 $generated@@283) (= ($generated@@179 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@164 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@140) (= ($generated@@274 $generated@@284) (= ($generated@@179 $generated@@284) $generated@@64)))
 :pattern ( ($generated@@274 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@140) (= ($generated@@158 $generated@@285) (= ($generated@@179 $generated@@285) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@140) ($generated@@164 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@174) (= (type $generated@@288) $generated@@174)) (= $generated@@286 ($generated@@247 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@164 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@140) ($generated@@274 $generated@@297)) (= $generated@@297 $generated@@180))
 :pattern ( ($generated@@274 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@140) ($generated@@158 $generated@@298)) (exists (($generated@@299 Int) ) (= $generated@@298 ($generated@@145 $generated@@299))))
 :pattern ( ($generated@@158 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@2) (= ($generated@@142 $generated@@300 $generated@@154) (<= ($generated@@271 0) ($generated $generated@@300))))
 :pattern ( ($generated@@142 $generated@@300 $generated@@154))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@174)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@70) (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@277 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@80 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@277 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@306) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@307) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@308) $generated@@174)) (= (type $generated@@309) $generated@@70)) ($generated@@150 $generated@@306 $generated@@307)) ($generated@@277 $generated@@308 $generated@@309 $generated@@306)) ($generated@@277 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@150 $generated@@306 $generated@@307) ($generated@@277 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@311) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@313) $generated@@70)) ($generated@@150 $generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@313 $generated@@310)) ($generated@@80 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@150 $generated@@310 $generated@@311) ($generated@@80 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@82 $generated@@316 $generated@@2))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@85 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@82 $generated@@318 $generated@@2)) (and (= (= ($generated@@314 $generated@@317) 0) (= $generated@@317 ($generated@@315 $generated@@318))) (=> (not (= ($generated@@314 $generated@@317) 0)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) (< 0 ($generated ($generated@@87 $generated@@317 $generated@@319))))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 18)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@82 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@82 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@85 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@82 $generated@@357 $generated@@2)) (= ($generated@@183 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@87 $generated@@356 $generated@@358))) (<= ($generated ($generated@@87 $generated@@356 $generated@@358)) ($generated@@314 $generated@@356))))
 :pattern ( ($generated@@87 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@183 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@174) ($generated@@248 $generated@@362 $generated@@154)) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@362)) $generated@@362) ($generated@@142 ($generated@@359 $generated@@2 $generated@@362) $generated@@154)))
 :pattern ( ($generated@@248 $generated@@362 $generated@@154))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@174) ($generated@@248 $generated@@363 $generated@@143)) (and (= ($generated@@301 ($generated@@359 $generated@@140 $generated@@363)) $generated@@363) ($generated@@142 ($generated@@359 $generated@@140 $generated@@363) $generated@@143)))
 :pattern ( ($generated@@248 $generated@@363 $generated@@143))
)))
(assert (forall (($generated@@364 Int) ) (! (= ($generated@@142 ($generated@@145 $generated@@364) $generated@@143) ($generated@@142 ($generated@@8 $generated@@364) $generated@@154))
 :pattern ( ($generated@@142 ($generated@@145 $generated@@364) $generated@@143))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@324 (type $generated@@365))))
(let (($generated@@367 ($generated@@323 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@322 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@321 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@320 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@324 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@324 (type $generated@@372))))
(let (($generated@@374 ($generated@@323 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@322 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@321 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@342 (type $generated@@376))))
(let (($generated@@378 ($generated@@341 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@340 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@339 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@338 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@342 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@82 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@342 (type $generated@@383))))
(let (($generated@@385 ($generated@@341 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@340 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@339 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@82 $generated@@174 $generated@@2)) (= (type $generated@@388) $generated@@70)) (= ($generated@@142 $generated@@387 ($generated@@182 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@174) (< 0 ($generated ($generated@@87 $generated@@387 $generated@@389)))) ($generated@@248 $generated@@389 $generated@@388))
 :pattern ( ($generated@@87 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@142 $generated@@387 ($generated@@182 $generated@@388)))
)))
(assert  (=> (<= 2 $generated@@138) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@140) (or ($generated@@141 ($generated@@243 $generated@@390)) (and (not (= 2 $generated@@138)) (and ($generated@@142 $generated@@390 $generated@@143) ($generated@@0 ($generated@@243 ($generated@@11 ($generated@@144 ($generated@@243 $generated@@390))))))))) (= ($generated@@139 ($generated@@243 $generated@@390)) ($generated@@243 ($generated@@145 ($generated@@271 ($generated@@146 ($generated@@243 $generated@@390)))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@243 $generated@@390)))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@174 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@261 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@174) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@277 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@261 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@82 $generated@@174 $generated@@4)) (= (type $generated@@396) $generated@@70)) (= (type $generated@@397) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@395 ($generated@@266 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@174) ($generated@@0 ($generated@@87 $generated@@395 $generated@@398))) ($generated@@277 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@87 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@80 $generated@@395 ($generated@@266 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@87 ($generated@@315 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@87 ($generated@@315 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@174 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@324 (type $generated@@404))))
(let (($generated@@406 ($generated@@323 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@322 $generated@@174 $generated@@174)) (= (type $generated@@408) $generated@@174)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@407) ($generated@@172 ($generated@@359 $generated@@140 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@172 ($generated@@359 $generated@@140 $generated@@408))) ($generated@@173 ($generated@@359 $generated@@140 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@82 $generated@@174 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@342 (type $generated@@412))))
(let (($generated@@414 ($generated@@341 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@82 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@340 $generated@@174 $generated@@174)) (= (type $generated@@416) $generated@@174)) (= ($generated@@0 ($generated@@87 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@415) ($generated@@172 ($generated@@359 $generated@@140 $generated@@416)))) (= ($generated@@87 ($generated@@410 $generated@@415) ($generated@@172 ($generated@@359 $generated@@140 $generated@@416))) ($generated@@173 ($generated@@359 $generated@@140 $generated@@416))))))
 :pattern ( ($generated@@87 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@323 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@322 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@87 ($generated@@369 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@87 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@417) $generated@@421))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@87 ($generated@@369 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@341 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@340 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@87 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@322 $generated@@174 $generated@@174)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@174) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@430) $generated@@434))) (and ($generated@@277 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@277 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@340 $generated@@174 $generated@@174)) (= (type $generated@@439) $generated@@70)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@174) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@438) $generated@@442))) (and ($generated@@277 ($generated@@87 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@277 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@80 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@255 $generated@@444)) (= ($generated@@80 ($generated@@145 $generated@@443) $generated@@143 $generated@@444) ($generated@@80 ($generated@@8 $generated@@443) $generated@@154 $generated@@444)))
 :pattern ( ($generated@@80 ($generated@@145 $generated@@443) $generated@@143 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@140) ($generated@@142 $generated@@445 $generated@@143)) (or ($generated@@274 $generated@@445) ($generated@@158 $generated@@445)))
 :pattern ( ($generated@@158 $generated@@445) ($generated@@142 $generated@@445 $generated@@143))
 :pattern ( ($generated@@274 $generated@@445) ($generated@@142 $generated@@445 $generated@@143))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@446) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@447) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@448) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@446 $generated@@448))) (and ($generated@@150 $generated@@446 $generated@@447) ($generated@@150 $generated@@447 $generated@@448))) ($generated@@150 $generated@@446 $generated@@448))
 :pattern ( ($generated@@150 $generated@@446 $generated@@447) ($generated@@150 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@82 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@342 (type $generated@@451))))
(let (($generated@@453 ($generated@@341 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@340 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@339 $generated@@453 $generated@@452)) (= ($generated@@338 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@338 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@342 (type $generated@@454))))
(let (($generated@@456 ($generated@@341 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@340 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@339 $generated@@456 $generated@@455)) (= ($generated@@380 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@380 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@342 (type $generated@@457))))
(let (($generated@@459 ($generated@@341 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@340 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@339 $generated@@459 $generated@@458)) (= ($generated@@409 $generated@@457) ($generated@@449 $generated@@174))))))
 :pattern ( ($generated@@409 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@324 (type $generated@@460))))
(let (($generated@@462 ($generated@@323 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@322 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@321 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@174) (= (type $generated@@464) $generated@@174)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@460) ($generated@@301 ($generated@@247 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@401 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@342 (type $generated@@465))))
(let (($generated@@467 ($generated@@341 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@340 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@339 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@174) (= (type $generated@@469) $generated@@174)) ($generated@@0 ($generated@@87 ($generated@@409 $generated@@465) ($generated@@301 ($generated@@247 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@409 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@174) ($generated@@248 $generated@@470 $generated@@46)) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@470)) $generated@@470) ($generated@@142 ($generated@@359 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@174) ($generated@@248 $generated@@471 $generated@@47)) (and (= ($generated@@301 ($generated@@359 $generated@@3 $generated@@471)) $generated@@471) ($generated@@142 ($generated@@359 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@174) ($generated@@248 $generated@@472 $generated@@44)) (and (= ($generated@@301 ($generated@@359 $generated@@4 $generated@@472)) $generated@@472) ($generated@@142 ($generated@@359 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@472 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@473) 20))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@174) ($generated@@248 $generated@@474 $generated@@45)) (and (= ($generated@@301 ($generated@@359 $generated@@473 $generated@@474)) $generated@@474) ($generated@@142 ($generated@@359 $generated@@473 $generated@@474) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@474 $generated@@45))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@248 ($generated@@301 $generated@@475) $generated@@476) ($generated@@142 $generated@@475 $generated@@476)))
 :pattern ( ($generated@@248 ($generated@@301 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@85 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@82 $generated@@478 $generated@@2)) (<= 0 ($generated@@314 $generated@@477))))
 :pattern ( ($generated@@314 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@292 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@291 $generated@@480)) (<= 0 ($generated@@290 $generated@@479))))
 :pattern ( ($generated@@290 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@427 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@427 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@427 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@489 $generated@@490)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@435 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@435 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@435 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@78 ($generated@@435 $generated@@499 $generated@@500)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@174) (= (type $generated@@502) $generated@@174)) (= ($generated@@179 ($generated@@247 $generated@@501 $generated@@502)) $generated@@62))
 :pattern ( ($generated@@247 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@165 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@165 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@70) (= (type $generated@@510) $generated@@70)) (= ($generated@@507 ($generated@@165 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@165 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@174) (= (type $generated@@512) $generated@@174)) (= ($generated@@172 ($generated@@247 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@247 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@174) (= (type $generated@@514) $generated@@174)) (= ($generated@@173 ($generated@@247 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@247 $generated@@513 $generated@@514))
)))
(assert  (and (forall (($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@517))
)) (forall (($generated@@518 T@U) ($generated@@519 Int) ) (! (let (($generated@@520 ($generated@@292 (type $generated@@518))))
(= (type ($generated@@516 $generated@@518 $generated@@519)) $generated@@520))
 :pattern ( ($generated@@516 $generated@@518 $generated@@519))
))))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@291 $generated@@174)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@521 ($generated@@515 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@290 $generated@@521))) ($generated@@277 ($generated@@516 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@516 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@80 $generated@@521 ($generated@@515 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@81 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@81 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@261 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@261 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@261 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@266 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@266 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@266 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@182 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@182 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@78 ($generated@@182 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@515 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@515 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@78 ($generated@@515 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@515 $generated@@542))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@179 ($generated@@145 $generated@@543)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@543))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@146 ($generated@@145 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@145 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
(= ($generated@@359 $generated@@546 ($generated@@301 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@301 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@322 $generated@@174 $generated@@174)) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@70)) (= ($generated@@142 $generated@@547 ($generated@@427 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@174) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@547) $generated@@550))) (and ($generated@@248 ($generated@@87 ($generated@@402 $generated@@547) $generated@@550) $generated@@549) ($generated@@248 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@547) $generated@@550))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@142 $generated@@547 ($generated@@427 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@340 $generated@@174 $generated@@174)) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) (= ($generated@@142 $generated@@551 ($generated@@435 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@174) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@551) $generated@@554))) (and ($generated@@248 ($generated@@87 ($generated@@410 $generated@@551) $generated@@554) $generated@@553) ($generated@@248 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@551) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@142 $generated@@551 ($generated@@435 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@174) (= (type $generated@@558) $generated@@174)) (< ($generated@@555 $generated@@557) ($generated@@556 ($generated@@247 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@247 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@174) (= (type $generated@@560) $generated@@174)) (< ($generated@@555 $generated@@560) ($generated@@556 ($generated@@247 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@247 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@174) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) ($generated@@248 $generated@@561 ($generated@@427 $generated@@562 $generated@@563))) (and (= ($generated@@301 ($generated@@359 ($generated@@322 $generated@@174 $generated@@174) $generated@@561)) $generated@@561) ($generated@@142 ($generated@@359 ($generated@@322 $generated@@174 $generated@@174) $generated@@561) ($generated@@427 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@248 $generated@@561 ($generated@@427 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@174) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) $generated@@70)) ($generated@@248 $generated@@564 ($generated@@435 $generated@@565 $generated@@566))) (and (= ($generated@@301 ($generated@@359 ($generated@@340 $generated@@174 $generated@@174) $generated@@564)) $generated@@564) ($generated@@142 ($generated@@359 ($generated@@340 $generated@@174 $generated@@174) $generated@@564) ($generated@@435 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@248 $generated@@564 ($generated@@435 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= (type $generated@@569) $generated@@174)) ($generated@@248 $generated@@569 ($generated@@165 $generated@@567 $generated@@568))) (and (= ($generated@@301 ($generated@@359 $generated@@140 $generated@@569)) $generated@@569) ($generated@@142 ($generated@@359 $generated@@140 $generated@@569) ($generated@@165 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@248 $generated@@569 ($generated@@165 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@87 ($generated@@449 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@87 ($generated@@449 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@75)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@165 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@572 ($generated@@165 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@165 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@140) (= ($generated@@555 ($generated@@301 $generated@@576)) ($generated@@556 $generated@@576)))
 :pattern ( ($generated@@555 ($generated@@301 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@174) ($generated@@248 $generated@@577 ($generated@@81 0))) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@577)) $generated@@577) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@174 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@248 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@174) (= (type $generated@@579) $generated@@70)) ($generated@@248 $generated@@578 ($generated@@261 $generated@@579))) (and (= ($generated@@301 ($generated@@359 ($generated@@82 $generated@@174 $generated@@4) $generated@@578)) $generated@@578) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@174 $generated@@4) $generated@@578) ($generated@@261 $generated@@579))))
 :pattern ( ($generated@@248 $generated@@578 ($generated@@261 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@174) (= (type $generated@@581) $generated@@70)) ($generated@@248 $generated@@580 ($generated@@266 $generated@@581))) (and (= ($generated@@301 ($generated@@359 ($generated@@82 $generated@@174 $generated@@4) $generated@@580)) $generated@@580) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@174 $generated@@4) $generated@@580) ($generated@@266 $generated@@581))))
 :pattern ( ($generated@@248 $generated@@580 ($generated@@266 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@174) (= (type $generated@@583) $generated@@70)) ($generated@@248 $generated@@582 ($generated@@182 $generated@@583))) (and (= ($generated@@301 ($generated@@359 ($generated@@82 $generated@@174 $generated@@2) $generated@@582)) $generated@@582) ($generated@@142 ($generated@@359 ($generated@@82 $generated@@174 $generated@@2) $generated@@582) ($generated@@182 $generated@@583))))
 :pattern ( ($generated@@248 $generated@@582 ($generated@@182 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@174) (= (type $generated@@585) $generated@@70)) ($generated@@248 $generated@@584 ($generated@@515 $generated@@585))) (and (= ($generated@@301 ($generated@@359 ($generated@@291 $generated@@174) $generated@@584)) $generated@@584) ($generated@@142 ($generated@@359 ($generated@@291 $generated@@174) $generated@@584) ($generated@@515 $generated@@585))))
 :pattern ( ($generated@@248 $generated@@584 ($generated@@515 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@138) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@140) (or ($generated@@162 $generated@@586) (and (not (= 0 $generated@@138)) ($generated@@142 $generated@@586 $generated@@143)))) (= ($generated@@144 $generated@@586) ($generated@@158 $generated@@586)))
 :pattern ( ($generated@@144 $generated@@586))
))))
(assert (= ($generated@@78 $generated@@154) $generated@@61))
(assert (= ($generated@@572 $generated@@154) $generated@@67))
(assert (= ($generated@@78 $generated@@143) $generated@@65))
(assert (= ($generated@@572 $generated@@143) $generated@@69))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@82 $generated@@174 $generated@@2)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@587 ($generated@@182 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@174) (< 0 ($generated ($generated@@87 $generated@@587 $generated@@590)))) ($generated@@277 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@87 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@182 $generated@@588) $generated@@589))
)))
(assert (= $generated@@180 ($generated@@243 $generated@@180)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@140) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@255 $generated@@593) (and ($generated@@164 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@70) ($generated@@80 $generated@@591 ($generated@@165 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@165 $generated@@592 $generated@@594) $generated@@593))
))))) ($generated@@277 ($generated@@172 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@277 ($generated@@172 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@140) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@255 $generated@@597) (and ($generated@@164 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@165 $generated@@598 $generated@@596) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@165 $generated@@598 $generated@@596) $generated@@597))
))))) ($generated@@277 ($generated@@173 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@277 ($generated@@173 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@140) (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@255 $generated@@600) (and ($generated@@158 $generated@@599) ($generated@@80 $generated@@599 $generated@@143 $generated@@600)))) ($generated@@80 ($generated@@8 ($generated@@146 $generated@@599)) $generated@@154 $generated@@600))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@146 $generated@@599)) $generated@@154 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@174) (= (type $generated@@602) $generated@@174)) (= ($generated@@247 ($generated@@243 $generated@@601) ($generated@@243 $generated@@602)) ($generated@@243 ($generated@@247 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@247 ($generated@@243 $generated@@601) ($generated@@243 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@271 $generated@@603))) ($generated@@243 ($generated@@301 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@271 $generated@@603))))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@145 ($generated@@271 $generated@@604)) ($generated@@243 ($generated@@145 $generated@@604)))
 :pattern ( ($generated@@145 ($generated@@271 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@301 ($generated@@243 $generated@@605)) ($generated@@243 ($generated@@301 $generated@@605)))
 :pattern ( ($generated@@301 ($generated@@243 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@292 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@291 $generated@@607)) (= ($generated@@290 $generated@@606) 0)) (= $generated@@606 ($generated@@289 $generated@@607))))
 :pattern ( ($generated@@290 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@609)))
 (=> (and (and (= (type $generated@@608) ($generated@@82 $generated@@611 $generated@@2)) (= (type $generated@@610) $generated@@2)) (<= 0 ($generated $generated@@610))) (= ($generated@@314 ($generated@@88 $generated@@608 $generated@@609 $generated@@610)) (+ (- ($generated@@314 $generated@@608) ($generated ($generated@@87 $generated@@608 $generated@@609))) ($generated $generated@@610)))))
 :pattern ( ($generated@@314 ($generated@@88 $generated@@608 $generated@@609 $generated@@610)))
)))
(assert  (=> (<= 2 $generated@@138) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@140) (or ($generated@@141 $generated@@612) (and (not (= 2 $generated@@138)) (and ($generated@@142 $generated@@612 $generated@@143) ($generated@@144 $generated@@612))))) ($generated@@142 ($generated@@139 $generated@@612) $generated@@143))
 :pattern ( ($generated@@139 $generated@@612))
))))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@2)) ($generated@@80 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@3)) ($generated@@80 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@4)) ($generated@@80 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@473)) ($generated@@80 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@174)) ($generated@@80 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@291 $generated@@174)) (= (type $generated@@624) $generated@@70)) (= ($generated@@142 $generated@@623 ($generated@@515 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@290 $generated@@623))) ($generated@@248 ($generated@@516 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@516 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@142 $generated@@623 ($generated@@515 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@291 $generated@@174)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@290 $generated@@627))) (< ($generated@@556 ($generated@@359 $generated@@140 ($generated@@516 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@556 ($generated@@359 $generated@@140 ($generated@@516 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@322 $generated@@174 $generated@@174)) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) $generated@@70)) ($generated@@142 $generated@@629 ($generated@@427 $generated@@630 $generated@@631))) (and (and ($generated@@142 ($generated@@320 $generated@@629) ($generated@@261 $generated@@630)) ($generated@@142 ($generated@@369 $generated@@629) ($generated@@261 $generated@@631))) ($generated@@142 ($generated@@401 $generated@@629) ($generated@@261 ($generated@@165 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@142 $generated@@629 ($generated@@427 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@340 $generated@@174 $generated@@174)) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) $generated@@70)) ($generated@@142 $generated@@632 ($generated@@435 $generated@@633 $generated@@634))) (and (and ($generated@@142 ($generated@@338 $generated@@632) ($generated@@266 $generated@@633)) ($generated@@142 ($generated@@380 $generated@@632) ($generated@@266 $generated@@634))) ($generated@@142 ($generated@@409 $generated@@632) ($generated@@266 ($generated@@165 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@142 $generated@@632 ($generated@@435 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@142 $generated@@635 $generated@@46))
 :pattern ( ($generated@@142 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@142 $generated@@636 $generated@@47))
 :pattern ( ($generated@@142 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@142 $generated@@637 $generated@@44))
 :pattern ( ($generated@@142 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@473) ($generated@@142 $generated@@638 $generated@@45))
 :pattern ( ($generated@@142 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@174) ($generated@@142 $generated@@639 $generated@@48))
 :pattern ( ($generated@@142 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@649) $generated@@140) (= (type $generated@@644) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@640) $generated@@140)) (= (type $generated@@641) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@643) $generated@@140)) (= (type $generated@@645) $generated@@140)) (= (type $generated@@646) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@648) $generated@@83)) (= (type $generated@@651) $generated@@140)) (= (type $generated@@652) $generated@@140)) (= (type $generated@@653) ($generated@@189 $generated@@83 $generated@@4))) (= (type $generated@@654) $generated@@140)) (= (type $generated@@655) $generated@@140)) (= (type $generated@@656) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@657 true))
(let (($generated@@658  (=> ($generated@@144 $generated@@640) (=> (and (and ($generated@@80 $generated@@640 $generated@@143 $generated@@641) (= (ControlFlow 0 6) (- 0 5))) ($generated@@162 $generated@@640)) (or ($generated@@144 $generated@@640) ($generated@@158 $generated@@640))))))
(let (($generated@@659  (=> (= $generated@@642 ($generated@@271 1)) (=> (and ($generated@@142 $generated@@643 $generated@@143) ($generated@@80 $generated@@643 $generated@@143 $generated@@644)) (=> (and (and ($generated@@142 $generated@@645 $generated@@143) ($generated@@80 $generated@@645 $generated@@143 $generated@@646)) (and ($generated@@255 $generated@@641) ($generated@@647 $generated@@641))) (=> (and (and (and ($generated@@142 $generated@@640 $generated@@143) ($generated@@80 $generated@@640 $generated@@143 $generated@@641)) (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@83) (=> (and (not (= $generated@@660 $generated@@648)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@644 $generated@@660) $generated@@60))) (= ($generated@@87 $generated@@641 $generated@@660) ($generated@@87 $generated@@644 $generated@@660))))
 :pattern ( ($generated@@87 $generated@@641 $generated@@660))
))) (and (and ($generated@@150 $generated@@644 $generated@@641) ($generated@@80 $generated@@640 $generated@@143 $generated@@641)) (and ($generated@@162 $generated@@640) ($generated@@162 $generated@@640)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@658) (=> (= (ControlFlow 0 8) 7) $generated@@657))))))))
(let (($generated@@661 true))
(let (($generated@@662  (=> (not ($generated@@144 $generated@@649)) (and (=> (= (ControlFlow 0 9) 8) $generated@@659) (=> (= (ControlFlow 0 9) 4) $generated@@661)))))
(let (($generated@@663  (=> ($generated@@144 $generated@@649) (=> (and (and ($generated@@80 $generated@@649 $generated@@143 $generated@@644) (= (ControlFlow 0 3) (- 0 2))) ($generated@@162 $generated@@649)) (or ($generated@@144 $generated@@649) ($generated@@158 $generated@@649))))))
(let (($generated@@664  (=> (= $generated@@650 ($generated@@271 0)) (=> (and ($generated@@142 $generated@@651 $generated@@143) ($generated@@80 $generated@@651 $generated@@143 $generated@@646)) (=> (and (and ($generated@@142 $generated@@652 $generated@@143) ($generated@@80 $generated@@652 $generated@@143 $generated@@646)) (and ($generated@@255 $generated@@644) ($generated@@647 $generated@@644))) (=> (and (and (and ($generated@@142 $generated@@649 $generated@@143) ($generated@@80 $generated@@649 $generated@@143 $generated@@644)) (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@83) (=> (and (not (= $generated@@665 $generated@@648)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@646 $generated@@665) $generated@@60))) (= ($generated@@87 $generated@@644 $generated@@665) ($generated@@87 $generated@@646 $generated@@665))))
 :pattern ( ($generated@@87 $generated@@644 $generated@@665))
))) (and (and ($generated@@150 $generated@@646 $generated@@644) ($generated@@80 $generated@@649 $generated@@143 $generated@@644)) (and ($generated@@162 $generated@@649) ($generated@@162 $generated@@649)))) (and (=> (= (ControlFlow 0 10) 3) $generated@@663) (=> (= (ControlFlow 0 10) 9) $generated@@662))))))))
(let (($generated@@666 true))
(let (($generated@@667  (=> (= $generated@@653 ($generated@@188 $generated@@648 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 10) $generated@@664) (=> (= (ControlFlow 0 11) 1) $generated@@666)))))
(let (($generated@@668  (=> (and ($generated@@255 $generated@@646) ($generated@@647 $generated@@646)) (=> (and (and (and (and (<= ($generated@@271 0) $generated@@650) (<= ($generated@@271 0) $generated@@642)) (and ($generated@@142 $generated@@654 $generated@@143) ($generated@@80 $generated@@654 $generated@@143 $generated@@646))) (and (and ($generated@@142 $generated@@655 $generated@@143) ($generated@@80 $generated@@655 $generated@@143 $generated@@646)) true)) (and (and (and ($generated@@142 $generated@@656 $generated@@143) ($generated@@80 $generated@@656 $generated@@143 $generated@@646)) true) (and (= 3 $generated@@138) (= (ControlFlow 0 12) 11)))) $generated@@667))))
$generated@@668)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
