(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 (T@T T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@139 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@66)) (= (type $generated@@143) $generated@@138)) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142))) ($generated@@136 $generated@@143))
 :pattern ( ($generated@@136 $generated@@143) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@138) (= (type $generated@@151) $generated@@138)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@66)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@66)) ($generated@@134 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@134 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@79 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@69 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@79) (= (type $generated@@207) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@208) ($generated@@68 $generated@@4))) (= (type $generated@@210) $generated@@79)) (= (type $generated@@211) ($generated@@68 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@138)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@66) (= (type $generated@@218) $generated@@66)) (= (type $generated@@219) $generated@@147)) (= (type $generated@@220) $generated@@147)) (= ($generated@@134 ($generated@@213 $generated@@219 $generated@@220) ($generated@@137 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@134 ($generated@@213 $generated@@219 $generated@@220) ($generated@@137 $generated@@217 $generated@@218)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@138) (= (type $generated@@222) $generated@@138)) (= ($generated@@144 $generated@@221 $generated@@222) (= $generated@@221 $generated@@222)))
 :pattern ( ($generated@@144 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@223 $generated@@224)) $generated@@66)
 :pattern ( ($generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@226) $generated@@66)) (= ($generated@@134 $generated@@225 ($generated@@223 $generated@@226)) (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@147) ($generated@@0 ($generated@@83 $generated@@225 $generated@@227))) ($generated@@214 $generated@@227 $generated@@226))
 :pattern ( ($generated@@83 $generated@@225 $generated@@227))
))))
 :pattern ( ($generated@@134 $generated@@225 ($generated@@223 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@66)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@231) $generated@@66)) (= ($generated@@134 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@147) ($generated@@0 ($generated@@83 $generated@@230 $generated@@232))) ($generated@@214 $generated@@232 $generated@@231))
 :pattern ( ($generated@@83 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@134 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@66) (= (type $generated@@240) $generated@@66)) (= (type $generated@@241) $generated@@147)) (= (type $generated@@242) $generated@@147)) (= (type $generated@@243) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@237 $generated@@243)) (= ($generated@@76 ($generated@@213 $generated@@241 $generated@@242) ($generated@@137 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@76 ($generated@@213 $generated@@241 $generated@@242) ($generated@@137 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@70)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@138) (= ($generated@@136 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@136 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@138) ($generated@@136 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@147) (= (type $generated@@249) $generated@@147)) (= $generated@@247 ($generated@@213 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@136 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@147)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@76 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@78 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@81 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@78 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@83 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@78 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@83 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@83 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@81 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@78 $generated@@306 $generated@@2)) (= ($generated@@153 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@83 $generated@@305 $generated@@307))) (<= ($generated ($generated@@83 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@83 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@153 $generated@@305))
)))
(assert  (and (= (type $generated@@308) $generated@@66) (forall (($generated@@310 T@T) ($generated@@311 T@U) ) (! (= (type ($generated@@309 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@309 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@147) ($generated@@214 $generated@@312 $generated@@308)) (and (= ($generated@@258 ($generated@@309 $generated@@138 $generated@@312)) $generated@@312) ($generated@@134 ($generated@@309 $generated@@138 $generated@@312) $generated@@308)))
 :pattern ( ($generated@@214 $generated@@312 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(let (($generated@@315 ($generated@@272 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@271 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@270 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@83 ($generated@@269 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@269 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@273 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@273 (type $generated@@320))))
(let (($generated@@322 ($generated@@272 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@271 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@270 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@83 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(let (($generated@@326 ($generated@@290 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@289 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@288 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@287 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@291 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@78 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(let (($generated@@333 ($generated@@290 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@289 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@288 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@336) $generated@@66)) (= ($generated@@134 $generated@@335 ($generated@@152 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@335 $generated@@337)))) ($generated@@214 $generated@@337 $generated@@336))
 :pattern ( ($generated@@83 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@134 $generated@@335 ($generated@@152 $generated@@336)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@339) $generated@@66)) (= (type $generated@@340) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@338 ($generated@@223 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@147) ($generated@@0 ($generated@@83 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@83 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@76 $generated@@338 ($generated@@223 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@343) $generated@@66)) (= (type $generated@@344) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@342 ($generated@@228 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@147) ($generated@@0 ($generated@@83 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@83 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@76 $generated@@342 ($generated@@228 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@83 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@83 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@273 (type $generated@@351))))
(let (($generated@@353 ($generated@@272 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@78 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@355) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@83 ($generated@@269 $generated@@354) ($generated@@145 ($generated@@309 $generated@@138 $generated@@355)))) (= ($generated@@83 ($generated@@349 $generated@@354) ($generated@@145 ($generated@@309 $generated@@138 $generated@@355))) ($generated@@146 ($generated@@309 $generated@@138 $generated@@355))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@291 (type $generated@@359))))
(let (($generated@@361 ($generated@@290 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@78 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@363) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@362) ($generated@@145 ($generated@@309 $generated@@138 $generated@@363)))) (= ($generated@@83 ($generated@@357 $generated@@362) ($generated@@145 ($generated@@309 $generated@@138 $generated@@363))) ($generated@@146 ($generated@@309 $generated@@138 $generated@@363))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@272 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@271 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@83 ($generated@@317 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@83 ($generated@@269 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@83 ($generated@@349 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@364) $generated@@368))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@83 ($generated@@317 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@290 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@289 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@83 ($generated@@328 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@83 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@369) $generated@@373))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@66)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) $generated@@66)) (= (type $generated@@380) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@269 $generated@@377) $generated@@381))) (and ($generated@@238 ($generated@@83 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@238 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@76 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@66)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@386) $generated@@66)) (= (type $generated@@387) $generated@@66)) (= (type $generated@@388) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@385) $generated@@389))) (and ($generated@@238 ($generated@@83 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@238 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@76 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@78 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@291 (type $generated@@392))))
(let (($generated@@394 ($generated@@290 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@289 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@288 $generated@@394 $generated@@393)) (= ($generated@@287 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@287 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@291 (type $generated@@395))))
(let (($generated@@397 ($generated@@290 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@289 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@288 $generated@@397 $generated@@396)) (= ($generated@@328 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@328 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@147))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@273 (type $generated@@401))))
(let (($generated@@403 ($generated@@272 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@271 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@270 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@147) (= (type $generated@@405) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@401) ($generated@@258 ($generated@@213 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@291 (type $generated@@406))))
(let (($generated@@408 ($generated@@290 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@289 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@288 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@147) (= (type $generated@@410) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@406) ($generated@@258 ($generated@@213 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@147) ($generated@@214 $generated@@411 $generated@@46)) (and (= ($generated@@258 ($generated@@309 $generated@@2 $generated@@411)) $generated@@411) ($generated@@134 ($generated@@309 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@147) ($generated@@214 $generated@@412 $generated@@47)) (and (= ($generated@@258 ($generated@@309 $generated@@3 $generated@@412)) $generated@@412) ($generated@@134 ($generated@@309 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@147) ($generated@@214 $generated@@413 $generated@@44)) (and (= ($generated@@258 ($generated@@309 $generated@@4 $generated@@413)) $generated@@413) ($generated@@134 ($generated@@309 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@147) ($generated@@214 $generated@@415 $generated@@45)) (and (= ($generated@@258 ($generated@@309 $generated@@414 $generated@@415)) $generated@@415) ($generated@@134 ($generated@@309 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@66) (= ($generated@@214 ($generated@@258 $generated@@416) $generated@@417) ($generated@@134 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@214 ($generated@@258 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@81 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@78 $generated@@419 $generated@@2)) (<= 0 ($generated@@263 $generated@@418))))
 :pattern ( ($generated@@263 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@253 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@252 $generated@@421)) (<= 0 ($generated@@251 $generated@@420))))
 :pattern ( ($generated@@251 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@66) (= (type $generated@@425) $generated@@66)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@66) (= (type $generated@@429) $generated@@66)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@66) (= (type $generated@@431) $generated@@66)) (= ($generated@@74 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@66) (= (type $generated@@435) $generated@@66)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@66) (= (type $generated@@441) $generated@@66)) (= ($generated@@74 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@147) (= (type $generated@@443) $generated@@147)) (= ($generated@@244 ($generated@@213 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@213 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@66)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@66) (= (type $generated@@447) $generated@@66)) (= ($generated@@444 ($generated@@137 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@137 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@448 ($generated@@137 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@137 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@147) (= (type $generated@@453) $generated@@147)) (= ($generated@@145 ($generated@@213 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@213 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@147) (= (type $generated@@455) $generated@@147)) (= ($generated@@146 ($generated@@213 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@213 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@253 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@252 $generated@@147)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@251 $generated@@462))) ($generated@@238 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@76 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@77 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@77 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@66) (= ($generated@@468 ($generated@@223 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@223 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@66) (= ($generated@@74 ($generated@@223 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@223 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@66) (= ($generated@@472 ($generated@@228 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@228 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@66) (= ($generated@@74 ($generated@@228 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@228 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@66) (= ($generated@@476 ($generated@@152 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@152 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@74 ($generated@@152 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@74 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@309 $generated@@485 ($generated@@258 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@258 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@487) $generated@@66)) (= (type $generated@@488) $generated@@66)) (= ($generated@@134 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@269 $generated@@486) $generated@@489))) (and ($generated@@214 ($generated@@83 ($generated@@349 $generated@@486) $generated@@489) $generated@@488) ($generated@@214 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@486) $generated@@489))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@134 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) $generated@@66)) (= ($generated@@134 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@490) $generated@@493))) (and ($generated@@214 ($generated@@83 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@214 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@134 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@147) (= (type $generated@@497) $generated@@147)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@213 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@213 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@147) (= (type $generated@@499) $generated@@147)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@213 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@213 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@147) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) $generated@@66)) ($generated@@214 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@258 ($generated@@309 ($generated@@271 $generated@@147 $generated@@147) $generated@@500)) $generated@@500) ($generated@@134 ($generated@@309 ($generated@@271 $generated@@147 $generated@@147) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@214 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@147) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) $generated@@66)) ($generated@@214 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@309 ($generated@@289 $generated@@147 $generated@@147) $generated@@503)) $generated@@503) ($generated@@134 ($generated@@309 ($generated@@289 $generated@@147 $generated@@147) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@214 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@147)) ($generated@@214 $generated@@508 ($generated@@137 $generated@@506 $generated@@507))) (and (= ($generated@@258 ($generated@@309 $generated@@138 $generated@@508)) $generated@@508) ($generated@@134 ($generated@@309 $generated@@138 $generated@@508) ($generated@@137 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@214 $generated@@508 ($generated@@137 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@83 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@83 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@66) (= (type $generated@@514) $generated@@66)) (and (= ($generated@@74 ($generated@@137 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@137 $generated@@513 $generated@@514)) $generated@@64)))
 :pattern ( ($generated@@137 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@138) (= ($generated@@494 ($generated@@258 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@258 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@147) ($generated@@214 $generated@@516 ($generated@@77 0))) (and (= ($generated@@258 ($generated@@309 $generated@@2 $generated@@516)) $generated@@516) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@516) ($generated@@77 0))))
 :pattern ( ($generated@@214 $generated@@516 ($generated@@77 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@147) (= (type $generated@@518) $generated@@66)) ($generated@@214 $generated@@517 ($generated@@223 $generated@@518))) (and (= ($generated@@258 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@517)) $generated@@517) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@517) ($generated@@223 $generated@@518))))
 :pattern ( ($generated@@214 $generated@@517 ($generated@@223 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@147) (= (type $generated@@520) $generated@@66)) ($generated@@214 $generated@@519 ($generated@@228 $generated@@520))) (and (= ($generated@@258 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@519)) $generated@@519) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@519) ($generated@@228 $generated@@520))))
 :pattern ( ($generated@@214 $generated@@519 ($generated@@228 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@147) (= (type $generated@@522) $generated@@66)) ($generated@@214 $generated@@521 ($generated@@152 $generated@@522))) (and (= ($generated@@258 ($generated@@309 ($generated@@78 $generated@@147 $generated@@2) $generated@@521)) $generated@@521) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@2) $generated@@521) ($generated@@152 $generated@@522))))
 :pattern ( ($generated@@214 $generated@@521 ($generated@@152 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@147) (= (type $generated@@524) $generated@@66)) ($generated@@214 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@258 ($generated@@309 ($generated@@252 $generated@@147) $generated@@523)) $generated@@523) ($generated@@134 ($generated@@309 ($generated@@252 $generated@@147) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@214 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (= ($generated@@74 $generated@@308) $generated@@63))
(assert (= ($generated@@511 $generated@@308) $generated@@65))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@525 ($generated@@152 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@525 $generated@@528)))) ($generated@@238 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@83 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@76 $generated@@525 ($generated@@152 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@138) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@237 $generated@@531) (and ($generated@@136 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@66) ($generated@@76 $generated@@529 ($generated@@137 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@76 $generated@@529 ($generated@@137 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@238 ($generated@@145 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@238 ($generated@@145 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@138) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@237 $generated@@535) (and ($generated@@136 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@66) ($generated@@76 $generated@@533 ($generated@@137 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@76 $generated@@533 ($generated@@137 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@238 ($generated@@146 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@238 ($generated@@146 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@147) (= (type $generated@@538) $generated@@147)) (= ($generated@@213 ($generated@@233 $generated@@537) ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@213 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@537) ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@258 $generated@@539)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@253 (type $generated@@540))))
 (=> (and (= (type $generated@@540) ($generated@@252 $generated@@541)) (= ($generated@@251 $generated@@540) 0)) (= $generated@@540 ($generated@@250 $generated@@541))))
 :pattern ( ($generated@@251 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@543)))
 (=> (and (and (= (type $generated@@542) ($generated@@78 $generated@@545 $generated@@2)) (= (type $generated@@544) $generated@@2)) (<= 0 ($generated $generated@@544))) (= ($generated@@263 ($generated@@84 $generated@@542 $generated@@543 $generated@@544)) (+ (- ($generated@@263 $generated@@542) ($generated ($generated@@83 $generated@@542 $generated@@543))) ($generated $generated@@544)))))
 :pattern ( ($generated@@263 ($generated@@84 $generated@@542 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@547) $generated@@2)) ($generated@@76 $generated@@547 $generated@@46 $generated@@546))
 :pattern ( ($generated@@76 $generated@@547 $generated@@46 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@549) $generated@@3)) ($generated@@76 $generated@@549 $generated@@47 $generated@@548))
 :pattern ( ($generated@@76 $generated@@549 $generated@@47 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@551) $generated@@4)) ($generated@@76 $generated@@551 $generated@@44 $generated@@550))
 :pattern ( ($generated@@76 $generated@@551 $generated@@44 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@553) $generated@@414)) ($generated@@76 $generated@@553 $generated@@45 $generated@@552))
 :pattern ( ($generated@@76 $generated@@553 $generated@@45 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@555) $generated@@147)) ($generated@@76 $generated@@555 $generated@@48 $generated@@554))
 :pattern ( ($generated@@76 $generated@@555 $generated@@48 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@252 $generated@@147)) (= (type $generated@@557) $generated@@66)) (= ($generated@@134 $generated@@556 ($generated@@456 $generated@@557)) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 ($generated@@251 $generated@@556))) ($generated@@214 ($generated@@457 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@457 $generated@@556 $generated@@558))
))))
 :pattern ( ($generated@@134 $generated@@556 ($generated@@456 $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 Int) ) (!  (=> (= (type $generated@@560) ($generated@@252 $generated@@147)) (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@251 $generated@@560))) (< ($generated@@495 ($generated@@309 $generated@@138 ($generated@@457 $generated@@560 $generated@@561))) ($generated@@559 $generated@@560))))
 :pattern ( ($generated@@495 ($generated@@309 $generated@@138 ($generated@@457 $generated@@560 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) ($generated@@134 $generated@@562 ($generated@@374 $generated@@563 $generated@@564))) (and (and ($generated@@134 ($generated@@269 $generated@@562) ($generated@@223 $generated@@563)) ($generated@@134 ($generated@@317 $generated@@562) ($generated@@223 $generated@@564))) ($generated@@134 ($generated@@348 $generated@@562) ($generated@@223 ($generated@@137 $generated@@563 $generated@@564)))))
 :pattern ( ($generated@@134 $generated@@562 ($generated@@374 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@134 $generated@@565 ($generated@@382 $generated@@566 $generated@@567))) (and (and ($generated@@134 ($generated@@287 $generated@@565) ($generated@@228 $generated@@566)) ($generated@@134 ($generated@@328 $generated@@565) ($generated@@228 $generated@@567))) ($generated@@134 ($generated@@356 $generated@@565) ($generated@@228 ($generated@@137 $generated@@566 $generated@@567)))))
 :pattern ( ($generated@@134 $generated@@565 ($generated@@382 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@2) ($generated@@134 $generated@@568 $generated@@46))
 :pattern ( ($generated@@134 $generated@@568 $generated@@46))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@3) ($generated@@134 $generated@@569 $generated@@47))
 :pattern ( ($generated@@134 $generated@@569 $generated@@47))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@4) ($generated@@134 $generated@@570 $generated@@44))
 :pattern ( ($generated@@134 $generated@@570 $generated@@44))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@414) ($generated@@134 $generated@@571 $generated@@45))
 :pattern ( ($generated@@134 $generated@@571 $generated@@45))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@147) ($generated@@134 $generated@@572 $generated@@48))
 :pattern ( ($generated@@134 $generated@@572 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () Int)
(assert  (and (and (and (= (type $generated@@573) ($generated@@159 $generated@@79 $generated@@4)) (= (type $generated@@574) $generated@@79)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@577) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@579  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@233 ($generated@@11 true))))))
(let (($generated@@580 true))
(let (($generated@@581  (=> (= $generated@@573 ($generated@@158 $generated@@574 $generated@@575 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@580) (=> (= (ControlFlow 0 4) 3) $generated@@579)))))
(let (($generated@@582  (=> (and (and (and ($generated@@237 $generated@@575) ($generated@@576 $generated@@575)) ($generated@@134 $generated@@577 $generated@@308)) (and (= 1 $generated@@578) (= (ControlFlow 0 5) 4))) $generated@@581)))
$generated@@582)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 3))) ($generated@@157 0)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 3) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 5))) ($generated@@157 0)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 5) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (Int) T@U)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@262 (Int) T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 (T@T T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (Int) Int)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U T@U T@U) Bool)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@355 (T@U) Int)
(declare-fun $generated@@356 (T@T) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@381 (T@T T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@397 (T@U T@U) Bool)
(declare-fun $generated@@403 (T@U) Bool)
(declare-fun $generated@@404 (T@U) Int)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@490 (T@U T@U) T@U)
(declare-fun $generated@@498 (T@U T@U) T@U)
(declare-fun $generated@@509 (T@T) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@538 () T@T)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@586 (T@U Int) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(declare-fun $generated@@628 (T@U) Int)
(declare-fun $generated@@647 (Int Int) Int)
(declare-fun $generated@@650 (T@U) T@U)
(declare-fun $generated@@708 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@78) 6) (= (type $generated@@44) $generated@@78)) (= (type $generated@@45) $generated@@78)) (= (type $generated@@46) $generated@@78)) (= (type $generated@@47) $generated@@78)) (= (type $generated@@48) $generated@@78)) (= ($generated@@1 $generated@@79) 7)) (= (type $generated@@49) $generated@@79)) (= (type $generated@@50) $generated@@79)) (= (type $generated@@51) $generated@@79)) (= (type $generated@@52) $generated@@79)) (= (type $generated@@53) $generated@@79)) (= (type $generated@@54) $generated@@79)) (= (type $generated@@55) $generated@@79)) (= (type $generated@@56) $generated@@79)) (= (type $generated@@57) $generated@@79)) (= (type $generated@@58) $generated@@79)) (= (type $generated@@59) $generated@@79)) (forall (($generated@@86 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@86)) 8))) (forall (($generated@@87 T@T) ) (! (= ($generated@@81 ($generated@@80 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@80 $generated@@87))
))) (= (type $generated@@60) ($generated@@80 $generated@@4))) (= ($generated@@1 $generated@@82) 9)) (= (type $generated@@61) $generated@@82)) (= ($generated@@1 $generated@@83) 10)) (= (type $generated@@62) $generated@@83)) (= (type $generated@@63) $generated@@79)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@79)) (= ($generated@@1 $generated@@84) 11)) (= (type $generated@@67) $generated@@84)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@79)) (= ($generated@@1 $generated@@85) 12)) (= (type $generated@@72) $generated@@85)) (= (type $generated@@73) $generated@@85)) (= (type $generated@@74) $generated@@85)) (= (type $generated@@75) $generated@@85)) (= (type $generated@@76) $generated@@85)) (= (type $generated@@77) $generated@@82)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77)
)
(assert (= ($generated@@88 $generated@@60) 0))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@79)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@44) $generated@@49))
(assert (= ($generated@@89 $generated@@45) $generated@@50))
(assert (= ($generated@@89 $generated@@46) $generated@@51))
(assert (= ($generated@@89 $generated@@47) $generated@@52))
(assert (= ($generated@@89 $generated@@48) $generated@@53))
(assert (forall (($generated@@92 T@U) ) (! (= (type ($generated@@91 $generated@@92)) $generated@@82)
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (= ($generated@@91 $generated@@60) $generated@@61))
(assert  (and (and (= ($generated@@1 $generated@@95) 13) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@94 $generated@@97)) $generated@@95)
 :pattern ( ($generated@@94 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and (= (type $generated@@98) $generated@@95) (= (type $generated@@99) $generated@@96)) (= (type $generated@@100) $generated@@96)) (= ($generated@@93 ($generated@@94 $generated@@98) $generated@@99 $generated@@100) (= $generated@@99 $generated@@100)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@98) $generated@@99 $generated@@100))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@103 $generated@@112 $generated@@113)) 15)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@103 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@107 (type $generated@@118))))
(= (type ($generated@@108 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@108 $generated@@118 $generated@@119))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 (type $generated@@123)))
(let (($generated@@125 (type $generated@@122)))
(= (type ($generated@@109 $generated@@121 $generated@@122 $generated@@123)) ($generated@@103 $generated@@125 $generated@@124))))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@107 (type $generated@@126))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@108 ($generated@@109 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@108 ($generated@@109 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@108 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@108 ($generated@@109 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@108 $generated@@135 $generated@@137)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@81 (type $generated@@139))))
(= (type ($generated@@110 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@110 $generated@@138 $generated@@139))
))) (= ($generated@@1 $generated@@105) 17)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@111 $generated@@141 $generated@@142 $generated@@143)) $generated@@105)
 :pattern ( ($generated@@111 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@81 (type $generated@@145))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@110 ($generated@@111 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 ($generated@@111 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@110 $generated@@153 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 Int) ) (! (= (type ($generated@@102 $generated@@156)) $generated@@78)
 :pattern ( ($generated@@102 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
 :pattern ( ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@161) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@159 $generated@@160 $generated@@161)) (forall (($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@104) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@160 $generated@@162) $generated@@60))) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@161 $generated@@162) $generated@@60)))
 :pattern ( ($generated@@110 ($generated@@108 $generated@@161 $generated@@162) $generated@@60))
)))
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (= ($generated@@1 $generated@@164) 18))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@164) (= (type $generated@@166) $generated@@164)) (= (type $generated@@167) $generated@@164)) (and ($generated@@163 $generated@@165 $generated@@166) ($generated@@163 $generated@@166 $generated@@167))) ($generated@@163 $generated@@165 $generated@@167))
 :pattern ( ($generated@@163 $generated@@165 $generated@@166) ($generated@@163 $generated@@166 $generated@@167))
 :pattern ( ($generated@@163 $generated@@165 $generated@@166) ($generated@@163 $generated@@165 $generated@@167))
)))
(assert  (and (= (type $generated@@168) $generated@@78) (= (type $generated@@169) $generated@@104)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@104) (= (type $generated@@171) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@170 $generated@@168 $generated@@171)  (or (= $generated@@170 $generated@@169) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@171 $generated@@170) $generated@@60)))))
 :pattern ( ($generated@@101 $generated@@170 $generated@@168 $generated@@171))
)))
(assert (= (type $generated@@172) $generated@@78))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@104) (= (type $generated@@174) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@173 $generated@@172 $generated@@174)  (or (= $generated@@173 $generated@@169) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@174 $generated@@173) $generated@@60)))))
 :pattern ( ($generated@@101 $generated@@173 $generated@@172 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@175 $generated@@176 ($generated@@102 0)))
 :pattern ( ($generated@@175 $generated@@176 ($generated@@102 0)))
)))
(assert ($generated@@177 $generated@@172))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@180 $generated@@181)) $generated@@78)
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@78) (= (type $generated@@183) $generated@@78)) (= (type $generated@@184) $generated@@96)) ($generated@@175 $generated@@184 ($generated@@179 $generated@@182 $generated@@183))) ($generated@@178 $generated@@184))
 :pattern ( ($generated@@178 $generated@@184) ($generated@@175 $generated@@184 ($generated@@179 $generated@@182 $generated@@183)))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@164)
 :pattern ( ($generated@@186 $generated@@188))
)) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@164)
 :pattern ( ($generated@@187 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@96) (= (type $generated@@191) $generated@@96)) true) (= ($generated@@185 $generated@@190 $generated@@191)  (and (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)) (= ($generated@@187 $generated@@190) ($generated@@187 $generated@@191)))))
 :pattern ( ($generated@@185 $generated@@190 $generated@@191))
)))
(assert (= (type $generated@@192) $generated@@78))
(assert (forall (($generated@@193 T@U) ) (!  (=> (= (type $generated@@193) $generated@@104) (=> (and (not (= $generated@@193 $generated@@169)) ($generated@@175 $generated@@193 $generated@@172)) ($generated@@175 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@175 $generated@@193 $generated@@172))
)))
(assert  (and (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@83)
 :pattern ( ($generated@@194 $generated@@196))
)) (= (type $generated@@195) $generated@@96)))
(assert (= ($generated@@194 $generated@@195) $generated@@65))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@78)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@103 $generated@@164 $generated@@2)) (= (type $generated@@201) $generated@@78)) ($generated@@175 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@175 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@78)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@104) (= ($generated@@175 $generated@@204 $generated@@172)  (or (= $generated@@204 $generated@@169) (= ($generated@@202 $generated@@204) $generated@@172))))
 :pattern ( ($generated@@175 $generated@@204 $generated@@172))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 19)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@104 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@81 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@104) (= (type $generated@@255) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@256) ($generated@@80 $generated@@4))) (= (type $generated@@258) $generated@@104)) (= (type $generated@@259) ($generated@@80 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@263 Int) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@164)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@95) (= (type $generated@@265) $generated@@96)) (= (type $generated@@266) $generated@@96)) (forall (($generated@@267 Int) ) (!  (=> (<= 0 $generated@@267) ($generated@@261 ($generated@@262 $generated@@267) ($generated@@94 $generated@@264) $generated@@265 $generated@@266))
 :pattern ( ($generated@@261 ($generated@@262 $generated@@267) ($generated@@94 $generated@@264) $generated@@265 $generated@@266))
))) ($generated@@93 ($generated@@94 $generated@@264) $generated@@265 $generated@@266))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@104) (= (type $generated@@269) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@268 $generated@@192 $generated@@269) ($generated@@101 $generated@@268 $generated@@168 $generated@@269)))
 :pattern ( ($generated@@101 $generated@@268 $generated@@192 $generated@@269))
)))
(assert (= (type $generated@@270) $generated@@78))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@104) (= (type $generated@@272) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@271 $generated@@270 $generated@@272) ($generated@@101 $generated@@271 $generated@@172 $generated@@272)))
 :pattern ( ($generated@@101 $generated@@271 $generated@@270 $generated@@272))
)))
(assert (= (type $generated@@274) $generated@@78))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@96) ($generated@@175 $generated@@275 $generated@@274)) ($generated@@273 $generated@@275))
 :pattern ( ($generated@@273 $generated@@275) ($generated@@175 $generated@@275 $generated@@274))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@96)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@280) $generated@@78) (= (type $generated@@281) $generated@@78)) (= (type $generated@@282) $generated@@164)) (= (type $generated@@283) $generated@@164)) (= ($generated@@175 ($generated@@276 $generated@@282 $generated@@283) ($generated@@179 $generated@@280 $generated@@281))  (and ($generated@@277 $generated@@282 $generated@@280) ($generated@@277 $generated@@283 $generated@@281))))
 :pattern ( ($generated@@175 ($generated@@276 $generated@@282 $generated@@283) ($generated@@179 $generated@@280 $generated@@281)))
)))
(assert ($generated@@175 $generated@@195 $generated@@274))
(assert (= (type $generated@@284) ($generated@@80 $generated@@2)))
(assert (= ($generated@@88 $generated@@284) 0))
(assert (forall (($generated@@286 T@T) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287 $generated@@288)) ($generated@@80 $generated@@286))
 :pattern ( ($generated@@285 $generated@@286 $generated@@287 $generated@@288))
)))
(assert (= ($generated@@285 $generated@@2 $generated@@67 $generated@@77) $generated@@284))
(assert  (not ($generated@@289 $generated@@284)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@290 $generated@@291)) ($generated@@101 $generated@@195 $generated@@274 $generated@@291))
 :pattern ( ($generated@@101 $generated@@195 $generated@@274 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@96) (= (type $generated@@293) $generated@@96)) (= ($generated@@185 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@185 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@164) (= (type $generated@@295) $generated@@95)) (= (type $generated@@296) $generated@@96)) (= (type $generated@@297) $generated@@96)) (= (type $generated@@298) $generated@@164)) (and ($generated@@163 $generated@@294 $generated@@298) ($generated@@261 $generated@@298 ($generated@@94 $generated@@295) $generated@@296 $generated@@297))) ($generated@@261 $generated@@294 ($generated@@94 $generated@@295) $generated@@296 $generated@@297))
 :pattern ( ($generated@@261 $generated@@294 ($generated@@94 $generated@@295) $generated@@296 $generated@@297) ($generated@@261 $generated@@298 ($generated@@94 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@78)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) ($generated@@103 $generated@@164 $generated@@4)) (= (type $generated@@302) $generated@@78)) (= ($generated@@175 $generated@@301 ($generated@@299 $generated@@302)) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@164) ($generated@@0 ($generated@@108 $generated@@301 $generated@@303))) ($generated@@277 $generated@@303 $generated@@302))
 :pattern ( ($generated@@108 $generated@@301 $generated@@303))
))))
 :pattern ( ($generated@@175 $generated@@301 ($generated@@299 $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@78)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) ($generated@@103 $generated@@164 $generated@@4)) (= (type $generated@@307) $generated@@78)) (= ($generated@@175 $generated@@306 ($generated@@304 $generated@@307)) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@164) ($generated@@0 ($generated@@108 $generated@@306 $generated@@308))) ($generated@@277 $generated@@308 $generated@@307))
 :pattern ( ($generated@@108 $generated@@306 $generated@@308))
))))
 :pattern ( ($generated@@175 $generated@@306 ($generated@@304 $generated@@307)))
)))
(assert (forall (($generated@@310 Int) ) (! (= ($generated@@309 $generated@@310) $generated@@310)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 (type $generated@@312)))
(= (type ($generated@@311 $generated@@312)) $generated@@313))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= ($generated@@311 $generated@@314) $generated@@314)
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@316) $generated@@78) (= (type $generated@@317) $generated@@78)) (= (type $generated@@318) $generated@@164)) (= (type $generated@@319) $generated@@164)) (= (type $generated@@320) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@290 $generated@@320)) (= ($generated@@101 ($generated@@276 $generated@@318 $generated@@319) ($generated@@179 $generated@@316 $generated@@317) $generated@@320)  (and ($generated@@315 $generated@@318 $generated@@316 $generated@@320) ($generated@@315 $generated@@319 $generated@@317 $generated@@320))))
 :pattern ( ($generated@@101 ($generated@@276 $generated@@318 $generated@@319) ($generated@@179 $generated@@316 $generated@@317) $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@96) (= ($generated@@178 $generated@@321) (= ($generated@@194 $generated@@321) $generated@@62)))
 :pattern ( ($generated@@178 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@96) (= ($generated@@273 $generated@@322) (= ($generated@@194 $generated@@322) $generated@@65)))
 :pattern ( ($generated@@273 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@96) ($generated@@178 $generated@@323)) (exists (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (and (and (= (type $generated@@324) $generated@@164) (= (type $generated@@325) $generated@@164)) (= $generated@@323 ($generated@@276 $generated@@324 $generated@@325)))
 :no-pattern (type $generated@@324)
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@178 $generated@@323))
)))
(assert  (and (and (forall (($generated@@330 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@330)) 20)) (forall (($generated@@331 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331))
))) (forall (($generated@@332 T@T) ) (! (= (type ($generated@@326 $generated@@332)) ($generated@@328 $generated@@332))
 :pattern ( ($generated@@326 $generated@@332))
))))
(assert (forall (($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@333)) 0)
 :pattern ( ($generated@@326 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@96) ($generated@@273 $generated@@334)) (= $generated@@334 $generated@@195))
 :pattern ( ($generated@@273 $generated@@334))
)))
(assert ($generated@@289 $generated@@60))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@335) $generated@@164) (= (type $generated@@336) $generated@@95)) (= (type $generated@@337) $generated@@96)) (= (type $generated@@338) $generated@@96)) (not (= $generated@@335 ($generated@@262 0)))) (= ($generated@@261 $generated@@335 ($generated@@94 $generated@@336) $generated@@337 $generated@@338) ($generated@@261 $generated@@335 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@261 $generated@@335 ($generated@@94 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) $generated@@95) (= (type $generated@@340) $generated@@96)) (= (type $generated@@341) $generated@@96)) (= ($generated@@93 ($generated@@94 $generated@@339) $generated@@340 $generated@@341) ($generated@@93 $generated@@339 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@339) $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@164)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@78) (= (type $generated@@346) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@315 ($generated@@342 $generated@@344) $generated@@345 $generated@@346) ($generated@@101 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@315 ($generated@@342 $generated@@344) $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@347) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@348) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@349) $generated@@164)) (= (type $generated@@350) $generated@@78)) ($generated@@159 $generated@@347 $generated@@348)) ($generated@@315 $generated@@349 $generated@@350 $generated@@347)) ($generated@@315 $generated@@349 $generated@@350 $generated@@348))
 :pattern ( ($generated@@159 $generated@@347 $generated@@348) ($generated@@315 $generated@@349 $generated@@350 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@351) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@352) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@354) $generated@@78)) ($generated@@159 $generated@@351 $generated@@352)) ($generated@@101 $generated@@353 $generated@@354 $generated@@351)) ($generated@@101 $generated@@353 $generated@@354 $generated@@352))
 :pattern ( ($generated@@159 $generated@@351 $generated@@352) ($generated@@101 $generated@@353 $generated@@354 $generated@@351))
)))
(assert (forall (($generated@@357 T@T) ) (! (= (type ($generated@@356 $generated@@357)) ($generated@@103 $generated@@357 $generated@@2))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@106 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@103 $generated@@359 $generated@@2)) (and (= (= ($generated@@355 $generated@@358) 0) (= $generated@@358 ($generated@@356 $generated@@359))) (=> (not (= ($generated@@355 $generated@@358) 0)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (< 0 ($generated ($generated@@108 $generated@@358 $generated@@360))))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 21)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@103 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@108 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@108 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert  (and (and (and (and (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@384 $generated@@385)) 22)) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@383 ($generated@@381 $generated@@388 $generated@@389)) $generated@@389)
 :pattern ( ($generated@@381 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@382 (type $generated@@390))))
(= (type ($generated@@379 $generated@@390)) ($generated@@103 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@390))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= (type ($generated@@380 $generated@@392 $generated@@393)) ($generated@@381 $generated@@392 $generated@@393))
 :pattern ( ($generated@@380 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@T) ) (! (let (($generated@@396 (type $generated@@394)))
 (not ($generated@@0 ($generated@@108 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394))))
 :pattern ( (let (($generated@@396 (type $generated@@394)))
($generated@@108 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394)))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@399) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@397 $generated@@398 $generated@@399)) (and ($generated@@159 $generated@@398 $generated@@399) (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@81 (type $generated@@401))))
 (=> (and (and (= (type $generated@@400) $generated@@104) (= (type $generated@@401) ($generated@@80 $generated@@402))) (not ($generated@@289 $generated@@401))) (= ($generated@@110 ($generated@@108 $generated@@398 $generated@@400) $generated@@401) ($generated@@110 ($generated@@108 $generated@@399 $generated@@400) $generated@@401))))
 :pattern ( ($generated@@110 ($generated@@108 $generated@@399 $generated@@400) $generated@@401))
))))
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@405 Int) ) (!  (=> (<= 0 $generated@@405) (and ($generated@@403 ($generated@@262 $generated@@405)) (= ($generated@@404 ($generated@@262 $generated@@405)) $generated@@405)))
 :pattern ( ($generated@@262 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@106 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@103 $generated@@407 $generated@@2)) (= ($generated@@198 $generated@@406) (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@407) (and (<= 0 ($generated ($generated@@108 $generated@@406 $generated@@408))) (<= ($generated ($generated@@108 $generated@@406 $generated@@408)) ($generated@@355 $generated@@406))))
 :pattern ( ($generated@@108 $generated@@406 $generated@@408))
)))))
 :pattern ( ($generated@@198 $generated@@406))
)))
(assert  (and (= (type $generated@@409) $generated@@78) (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@164) ($generated@@277 $generated@@413 $generated@@409)) (and (= ($generated@@342 ($generated@@410 $generated@@96 $generated@@413)) $generated@@413) ($generated@@175 ($generated@@410 $generated@@96 $generated@@413) $generated@@409)))
 :pattern ( ($generated@@277 $generated@@413 $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@164) ($generated@@277 $generated@@414 $generated@@274)) (and (= ($generated@@342 ($generated@@410 $generated@@96 $generated@@414)) $generated@@414) ($generated@@175 ($generated@@410 $generated@@96 $generated@@414) $generated@@274)))
 :pattern ( ($generated@@277 $generated@@414 $generated@@274))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@164) ($generated@@277 $generated@@415 $generated@@168)) (and (= ($generated@@342 ($generated@@410 $generated@@104 $generated@@415)) $generated@@415) ($generated@@175 ($generated@@410 $generated@@104 $generated@@415) $generated@@168)))
 :pattern ( ($generated@@277 $generated@@415 $generated@@168))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@164) ($generated@@277 $generated@@416 $generated@@192)) (and (= ($generated@@342 ($generated@@410 $generated@@104 $generated@@416)) $generated@@416) ($generated@@175 ($generated@@410 $generated@@104 $generated@@416) $generated@@192)))
 :pattern ( ($generated@@277 $generated@@416 $generated@@192))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@164) ($generated@@277 $generated@@417 $generated@@172)) (and (= ($generated@@342 ($generated@@410 $generated@@104 $generated@@417)) $generated@@417) ($generated@@175 ($generated@@410 $generated@@104 $generated@@417) $generated@@172)))
 :pattern ( ($generated@@277 $generated@@417 $generated@@172))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@164) ($generated@@277 $generated@@418 $generated@@270)) (and (= ($generated@@342 ($generated@@410 $generated@@104 $generated@@418)) $generated@@418) ($generated@@175 ($generated@@410 $generated@@104 $generated@@418) $generated@@270)))
 :pattern ( ($generated@@277 $generated@@418 $generated@@270))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@104) (= ($generated@@175 $generated@@419 $generated@@192)  (and ($generated@@175 $generated@@419 $generated@@168) (not (= $generated@@419 $generated@@169)))))
 :pattern ( ($generated@@175 $generated@@419 $generated@@192))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (= (type $generated@@420) $generated@@104) (= ($generated@@175 $generated@@420 $generated@@270)  (and ($generated@@175 $generated@@420 $generated@@172) (not (= $generated@@420 $generated@@169)))))
 :pattern ( ($generated@@175 $generated@@420 $generated@@270))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@422) $generated@@104)) (and ($generated@@290 $generated@@421) (and (not (= $generated@@422 $generated@@169)) ($generated@@175 $generated@@422 $generated@@168)))) ($generated@@175 ($generated@@110 ($generated@@108 $generated@@421 $generated@@422) $generated@@284) $generated@@46))
 :pattern ( ($generated@@110 ($generated@@108 $generated@@421 $generated@@422) $generated@@284))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) $generated@@95) (= (type $generated@@424) $generated@@96)) (= (type $generated@@425) $generated@@96)) (= ($generated@@93 ($generated@@94 $generated@@423) $generated@@424 $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@164) ($generated@@261 $generated@@426 ($generated@@94 $generated@@423) $generated@@424 $generated@@425))
 :pattern ( ($generated@@261 $generated@@426 ($generated@@94 $generated@@423) $generated@@424 $generated@@425))
))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@423) $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@365 (type $generated@@427))))
(let (($generated@@429 ($generated@@364 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@363 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@362 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) ($generated@@0 ($generated@@108 ($generated@@361 $generated@@427) $generated@@430)))
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@361 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@365 (type $generated@@432))))
(= (type ($generated@@431 $generated@@432)) ($generated@@103 $generated@@433 $generated@@4)))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@365 (type $generated@@434))))
(let (($generated@@436 ($generated@@364 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@363 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@362 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@435) ($generated@@0 ($generated@@108 ($generated@@431 $generated@@434) $generated@@437)))
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@431 $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@383 (type $generated@@438))))
(let (($generated@@440 ($generated@@382 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@381 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@380 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@108 ($generated@@379 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@379 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@383 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@103 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@383 (type $generated@@445))))
(let (($generated@@447 ($generated@@382 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@381 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@380 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@108 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@103 $generated@@164 $generated@@2)) (= (type $generated@@450) $generated@@78)) (= ($generated@@175 $generated@@449 ($generated@@197 $generated@@450)) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@164) (< 0 ($generated ($generated@@108 $generated@@449 $generated@@451)))) ($generated@@277 $generated@@451 $generated@@450))
 :pattern ( ($generated@@108 $generated@@449 $generated@@451))
))))
 :pattern ( ($generated@@175 $generated@@449 ($generated@@197 $generated@@450)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@164) (= (type $generated@@453) $generated@@164)) (or (or ($generated@@163 $generated@@452 $generated@@453) (= $generated@@452 $generated@@453)) ($generated@@163 $generated@@453 $generated@@452)))
 :pattern ( ($generated@@163 $generated@@452 $generated@@453) ($generated@@163 $generated@@453 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@454) ($generated@@103 $generated@@164 $generated@@4)) (= (type $generated@@455) $generated@@78)) (= (type $generated@@456) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@454 ($generated@@299 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@164) ($generated@@0 ($generated@@108 $generated@@454 $generated@@457))) ($generated@@315 $generated@@457 $generated@@455 $generated@@456))
 :pattern ( ($generated@@108 $generated@@454 $generated@@457))
))))
 :pattern ( ($generated@@101 $generated@@454 ($generated@@299 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@103 $generated@@164 $generated@@4)) (= (type $generated@@459) $generated@@78)) (= (type $generated@@460) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@458 ($generated@@304 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@164) ($generated@@0 ($generated@@108 $generated@@458 $generated@@461))) ($generated@@315 $generated@@461 $generated@@459 $generated@@460))
 :pattern ( ($generated@@108 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@101 $generated@@458 ($generated@@304 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(= ($generated ($generated@@108 ($generated@@356 $generated@@463) $generated@@462)) 0))
 :pattern ( (let (($generated@@463 (type $generated@@462)))
($generated@@108 ($generated@@356 $generated@@463) $generated@@462)))
)))
(assert  (and (forall (($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@466)) ($generated@@103 $generated@@164 $generated@@4))
 :pattern ( ($generated@@464 $generated@@466))
)) (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@365 (type $generated@@467))))
(let (($generated@@469 ($generated@@364 (type $generated@@467))))
(= (type ($generated@@465 $generated@@467)) ($generated@@103 $generated@@469 $generated@@468))))
 :pattern ( ($generated@@465 $generated@@467))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) ($generated@@363 $generated@@164 $generated@@164)) (= (type $generated@@471) $generated@@164)) (= ($generated@@0 ($generated@@108 ($generated@@464 $generated@@470) $generated@@471))  (and ($generated@@0 ($generated@@108 ($generated@@361 $generated@@470) ($generated@@186 ($generated@@410 $generated@@96 $generated@@471)))) (= ($generated@@108 ($generated@@465 $generated@@470) ($generated@@186 ($generated@@410 $generated@@96 $generated@@471))) ($generated@@187 ($generated@@410 $generated@@96 $generated@@471))))))
 :pattern ( ($generated@@108 ($generated@@464 $generated@@470) $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) ($generated@@103 $generated@@164 $generated@@4))
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@383 (type $generated@@475))))
(let (($generated@@477 ($generated@@382 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475)) ($generated@@103 $generated@@477 $generated@@476))))
 :pattern ( ($generated@@473 $generated@@475))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) ($generated@@381 $generated@@164 $generated@@164)) (= (type $generated@@479) $generated@@164)) (= ($generated@@0 ($generated@@108 ($generated@@472 $generated@@478) $generated@@479))  (and ($generated@@0 ($generated@@108 ($generated@@379 $generated@@478) ($generated@@186 ($generated@@410 $generated@@96 $generated@@479)))) (= ($generated@@108 ($generated@@473 $generated@@478) ($generated@@186 ($generated@@410 $generated@@96 $generated@@479))) ($generated@@187 ($generated@@410 $generated@@96 $generated@@479))))))
 :pattern ( ($generated@@108 ($generated@@472 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
(let (($generated@@483 ($generated@@364 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@363 $generated@@483 $generated@@482)) (= ($generated@@0 ($generated@@108 ($generated@@431 $generated@@480) $generated@@481)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@483) (and ($generated@@0 ($generated@@108 ($generated@@361 $generated@@480) $generated@@484)) (= $generated@@481 ($generated@@108 ($generated@@465 $generated@@480) $generated@@484))))
 :pattern ( ($generated@@108 ($generated@@361 $generated@@480) $generated@@484))
 :pattern ( ($generated@@108 ($generated@@465 $generated@@480) $generated@@484))
))))))
 :pattern ( ($generated@@108 ($generated@@431 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(let (($generated@@488 ($generated@@382 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@381 $generated@@488 $generated@@487)) (= ($generated@@0 ($generated@@108 ($generated@@442 $generated@@485) $generated@@486)) (exists (($generated@@489 T@U) ) (!  (and (= (type $generated@@489) $generated@@488) (and ($generated@@0 ($generated@@108 ($generated@@379 $generated@@485) $generated@@489)) (= $generated@@486 ($generated@@108 ($generated@@473 $generated@@485) $generated@@489))))
 :pattern ( ($generated@@108 ($generated@@379 $generated@@485) $generated@@489))
 :pattern ( ($generated@@108 ($generated@@473 $generated@@485) $generated@@489))
))))))
 :pattern ( ($generated@@108 ($generated@@442 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@491 $generated@@492)) $generated@@78)
 :pattern ( ($generated@@490 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (= (type $generated@@493) ($generated@@363 $generated@@164 $generated@@164)) (= (type $generated@@494) $generated@@78)) (= (type $generated@@495) $generated@@78)) (= (type $generated@@496) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@493 ($generated@@490 $generated@@494 $generated@@495) $generated@@496) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@164) ($generated@@0 ($generated@@108 ($generated@@361 $generated@@493) $generated@@497))) (and ($generated@@315 ($generated@@108 ($generated@@465 $generated@@493) $generated@@497) $generated@@495 $generated@@496) ($generated@@315 $generated@@497 $generated@@494 $generated@@496)))
 :pattern ( ($generated@@108 ($generated@@465 $generated@@493) $generated@@497))
 :pattern ( ($generated@@108 ($generated@@361 $generated@@493) $generated@@497))
))))
 :pattern ( ($generated@@101 $generated@@493 ($generated@@490 $generated@@494 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@499 $generated@@500)) $generated@@78)
 :pattern ( ($generated@@498 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) ($generated@@381 $generated@@164 $generated@@164)) (= (type $generated@@502) $generated@@78)) (= (type $generated@@503) $generated@@78)) (= (type $generated@@504) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@164) ($generated@@0 ($generated@@108 ($generated@@379 $generated@@501) $generated@@505))) (and ($generated@@315 ($generated@@108 ($generated@@473 $generated@@501) $generated@@505) $generated@@503 $generated@@504) ($generated@@315 $generated@@505 $generated@@502 $generated@@504)))
 :pattern ( ($generated@@108 ($generated@@473 $generated@@501) $generated@@505))
 :pattern ( ($generated@@108 ($generated@@379 $generated@@501) $generated@@505))
))))
 :pattern ( ($generated@@101 $generated@@501 ($generated@@498 $generated@@502 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@506) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@507) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@508) ($generated@@103 $generated@@104 $generated@@105))) (not (= $generated@@506 $generated@@508))) (and ($generated@@159 $generated@@506 $generated@@507) ($generated@@159 $generated@@507 $generated@@508))) ($generated@@159 $generated@@506 $generated@@508))
 :pattern ( ($generated@@159 $generated@@506 $generated@@507) ($generated@@159 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@T) ) (! (= (type ($generated@@509 $generated@@510)) ($generated@@103 $generated@@510 $generated@@4))
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@383 (type $generated@@511))))
(let (($generated@@513 ($generated@@382 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@381 $generated@@513 $generated@@512)) (= (= $generated@@511 ($generated@@380 $generated@@513 $generated@@512)) (= ($generated@@379 $generated@@511) ($generated@@509 $generated@@513))))))
 :pattern ( ($generated@@379 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@383 (type $generated@@514))))
(let (($generated@@516 ($generated@@382 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@381 $generated@@516 $generated@@515)) (= (= $generated@@514 ($generated@@380 $generated@@516 $generated@@515)) (= ($generated@@442 $generated@@514) ($generated@@509 $generated@@515))))))
 :pattern ( ($generated@@442 $generated@@514))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@383 (type $generated@@517))))
(let (($generated@@519 ($generated@@382 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@381 $generated@@519 $generated@@518)) (= (= $generated@@517 ($generated@@380 $generated@@519 $generated@@518)) (= ($generated@@472 $generated@@517) ($generated@@509 $generated@@164))))))
 :pattern ( ($generated@@472 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@365 (type $generated@@520))))
(let (($generated@@522 ($generated@@364 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@363 $generated@@522 $generated@@521)) (or (= $generated@@520 ($generated@@362 $generated@@522 $generated@@521)) (exists (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (and (and (= (type $generated@@523) $generated@@164) (= (type $generated@@524) $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@464 $generated@@520) ($generated@@342 ($generated@@276 $generated@@523 $generated@@524)))))
 :no-pattern (type $generated@@523)
 :no-pattern (type $generated@@524)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
))))))
 :pattern ( ($generated@@464 $generated@@520))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@383 (type $generated@@525))))
(let (($generated@@527 ($generated@@382 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@381 $generated@@527 $generated@@526)) (or (= $generated@@525 ($generated@@380 $generated@@527 $generated@@526)) (exists (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (and (and (= (type $generated@@528) $generated@@164) (= (type $generated@@529) $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@472 $generated@@525) ($generated@@342 ($generated@@276 $generated@@528 $generated@@529)))))
 :no-pattern (type $generated@@528)
 :no-pattern (type $generated@@529)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
))))))
 :pattern ( ($generated@@472 $generated@@525))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@84)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@T) ) (!  (=> (and (= (type $generated@@532) $generated@@84) (= (type $generated@@533) $generated@@82)) (and (= ($generated@@530 ($generated@@285 $generated@@534 $generated@@532 $generated@@533)) $generated@@532) (= ($generated@@91 ($generated@@285 $generated@@534 $generated@@532 $generated@@533)) $generated@@533)))
 :pattern ( ($generated@@285 $generated@@534 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@164) ($generated@@277 $generated@@535 $generated@@46)) (and (= ($generated@@342 ($generated@@410 $generated@@2 $generated@@535)) $generated@@535) ($generated@@175 ($generated@@410 $generated@@2 $generated@@535) $generated@@46)))
 :pattern ( ($generated@@277 $generated@@535 $generated@@46))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@164) ($generated@@277 $generated@@536 $generated@@47)) (and (= ($generated@@342 ($generated@@410 $generated@@3 $generated@@536)) $generated@@536) ($generated@@175 ($generated@@410 $generated@@3 $generated@@536) $generated@@47)))
 :pattern ( ($generated@@277 $generated@@536 $generated@@47))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@164) ($generated@@277 $generated@@537 $generated@@44)) (and (= ($generated@@342 ($generated@@410 $generated@@4 $generated@@537)) $generated@@537) ($generated@@175 ($generated@@410 $generated@@4 $generated@@537) $generated@@44)))
 :pattern ( ($generated@@277 $generated@@537 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@538) 23))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@164) ($generated@@277 $generated@@539 $generated@@45)) (and (= ($generated@@342 ($generated@@410 $generated@@538 $generated@@539)) $generated@@539) ($generated@@175 ($generated@@410 $generated@@538 $generated@@539) $generated@@45)))
 :pattern ( ($generated@@277 $generated@@539 $generated@@45))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@78) (= ($generated@@277 ($generated@@342 $generated@@540) $generated@@541) ($generated@@175 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@277 ($generated@@342 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@542) $generated@@164) (= (type $generated@@543) $generated@@95)) (= (type $generated@@544) $generated@@96)) (= (type $generated@@545) $generated@@96)) (and ($generated@@175 $generated@@544 $generated@@274) ($generated@@175 $generated@@545 $generated@@274))) (= ($generated@@261 $generated@@542 ($generated@@94 $generated@@543) $generated@@544 $generated@@545)  (and (=> (< 0 ($generated@@404 $generated@@542)) (and ($generated@@273 $generated@@544) ($generated@@273 $generated@@545))) (=> (and (not (= $generated@@542 ($generated@@262 0))) (= ($generated@@404 $generated@@542) 0)) ($generated@@93 $generated@@543 $generated@@544 $generated@@545)))))
 :pattern ( ($generated@@261 $generated@@542 ($generated@@94 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@164) (<= 0 ($generated@@404 $generated@@546)))
 :pattern ( ($generated@@404 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@106 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@103 $generated@@548 $generated@@2)) (<= 0 ($generated@@355 $generated@@547))))
 :pattern ( ($generated@@355 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@329 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@328 $generated@@550)) (<= 0 ($generated@@327 $generated@@549))))
 :pattern ( ($generated@@327 $generated@@549))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@78)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@78) (= (type $generated@@554) $generated@@78)) (= ($generated@@551 ($generated@@490 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@490 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@78)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@78) (= (type $generated@@558) $generated@@78)) (= ($generated@@555 ($generated@@490 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@490 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@78) (= (type $generated@@560) $generated@@78)) (= ($generated@@89 ($generated@@490 $generated@@559 $generated@@560)) $generated@@58))
 :pattern ( ($generated@@490 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@78)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@78) (= (type $generated@@564) $generated@@78)) (= ($generated@@561 ($generated@@498 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@498 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@78)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@78) (= (type $generated@@568) $generated@@78)) (= ($generated@@565 ($generated@@498 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@498 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@78) (= (type $generated@@570) $generated@@78)) (= ($generated@@89 ($generated@@498 $generated@@569 $generated@@570)) $generated@@59))
 :pattern ( ($generated@@498 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@164) (= (type $generated@@572) $generated@@164)) (= ($generated@@194 ($generated@@276 $generated@@571 $generated@@572)) $generated@@62))
 :pattern ( ($generated@@276 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@78)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@78) (= (type $generated@@576) $generated@@78)) (= ($generated@@573 ($generated@@179 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@179 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@78)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@78) (= (type $generated@@580) $generated@@78)) (= ($generated@@577 ($generated@@179 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@179 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@164) (= (type $generated@@582) $generated@@164)) (= ($generated@@186 ($generated@@276 $generated@@581 $generated@@582)) $generated@@581))
 :pattern ( ($generated@@276 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@164) (= (type $generated@@584) $generated@@164)) (= ($generated@@187 ($generated@@276 $generated@@583 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@276 $generated@@583 $generated@@584))
)))
(assert  (and (forall (($generated@@587 T@U) ) (! (= (type ($generated@@585 $generated@@587)) $generated@@78)
 :pattern ( ($generated@@585 $generated@@587))
)) (forall (($generated@@588 T@U) ($generated@@589 Int) ) (! (let (($generated@@590 ($generated@@329 (type $generated@@588))))
(= (type ($generated@@586 $generated@@588 $generated@@589)) $generated@@590))
 :pattern ( ($generated@@586 $generated@@588 $generated@@589))
))))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@328 $generated@@164)) (= (type $generated@@592) $generated@@78)) (= (type $generated@@593) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@591 ($generated@@585 $generated@@592) $generated@@593) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@327 $generated@@591))) ($generated@@315 ($generated@@586 $generated@@591 $generated@@594) $generated@@592 $generated@@593))
 :pattern ( ($generated@@586 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@101 $generated@@591 ($generated@@585 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@595 ($generated@@102 $generated@@596)) $generated@@596)
 :pattern ( ($generated@@102 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@78)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@78) (= ($generated@@597 ($generated@@299 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@299 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@78) (= ($generated@@89 ($generated@@299 $generated@@600)) $generated@@54))
 :pattern ( ($generated@@299 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@78)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@78) (= ($generated@@601 ($generated@@304 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@304 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@78) (= ($generated@@89 ($generated@@304 $generated@@604)) $generated@@55))
 :pattern ( ($generated@@304 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@78)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@78) (= ($generated@@605 ($generated@@197 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@197 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@78) (= ($generated@@89 ($generated@@197 $generated@@608)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@78)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@78) (= ($generated@@609 ($generated@@585 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@585 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@78) (= ($generated@@89 ($generated@@585 $generated@@612)) $generated@@57))
 :pattern ( ($generated@@585 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
(= ($generated@@410 $generated@@614 ($generated@@342 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@342 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@363 $generated@@164 $generated@@164)) (= (type $generated@@616) $generated@@78)) (= (type $generated@@617) $generated@@78)) (= ($generated@@175 $generated@@615 ($generated@@490 $generated@@616 $generated@@617)) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@164) ($generated@@0 ($generated@@108 ($generated@@361 $generated@@615) $generated@@618))) (and ($generated@@277 ($generated@@108 ($generated@@465 $generated@@615) $generated@@618) $generated@@617) ($generated@@277 $generated@@618 $generated@@616)))
 :pattern ( ($generated@@108 ($generated@@465 $generated@@615) $generated@@618))
 :pattern ( ($generated@@108 ($generated@@361 $generated@@615) $generated@@618))
))))
 :pattern ( ($generated@@175 $generated@@615 ($generated@@490 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@619) ($generated@@381 $generated@@164 $generated@@164)) (= (type $generated@@620) $generated@@78)) (= (type $generated@@621) $generated@@78)) (= ($generated@@175 $generated@@619 ($generated@@498 $generated@@620 $generated@@621)) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@164) ($generated@@0 ($generated@@108 ($generated@@379 $generated@@619) $generated@@622))) (and ($generated@@277 ($generated@@108 ($generated@@473 $generated@@619) $generated@@622) $generated@@621) ($generated@@277 $generated@@622 $generated@@620)))
 :pattern ( ($generated@@108 ($generated@@473 $generated@@619) $generated@@622))
 :pattern ( ($generated@@108 ($generated@@379 $generated@@619) $generated@@622))
))))
 :pattern ( ($generated@@175 $generated@@619 ($generated@@498 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@164) (= (type $generated@@624) $generated@@164)) (and (and (and (=> ($generated@@163 $generated@@623 $generated@@624) (not (= $generated@@623 $generated@@624))) (=> (and ($generated@@403 $generated@@623) (not ($generated@@403 $generated@@624))) ($generated@@163 $generated@@623 $generated@@624))) (=> (and ($generated@@403 $generated@@623) ($generated@@403 $generated@@624)) (= ($generated@@163 $generated@@623 $generated@@624) (< ($generated@@404 $generated@@623) ($generated@@404 $generated@@624))))) (=> (and ($generated@@163 $generated@@623 $generated@@624) ($generated@@403 $generated@@624)) ($generated@@403 $generated@@623))))
 :pattern ( ($generated@@163 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@626) $generated@@104)) (=> (and (and ($generated@@290 $generated@@625) (and (not (= $generated@@626 $generated@@169)) ($generated@@175 $generated@@626 $generated@@168))) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@625 $generated@@626) $generated@@60))) ($generated@@101 ($generated@@110 ($generated@@108 $generated@@625 $generated@@626) $generated@@284) $generated@@46 $generated@@625)))
 :pattern ( ($generated@@110 ($generated@@108 $generated@@625 $generated@@626) $generated@@284))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@164) (= (type $generated@@630) $generated@@164)) (< ($generated@@627 $generated@@629) ($generated@@628 ($generated@@276 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@276 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@164) (= (type $generated@@632) $generated@@164)) (< ($generated@@627 $generated@@632) ($generated@@628 ($generated@@276 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@276 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@164) (= (type $generated@@634) $generated@@78)) (= (type $generated@@635) $generated@@78)) ($generated@@277 $generated@@633 ($generated@@490 $generated@@634 $generated@@635))) (and (= ($generated@@342 ($generated@@410 ($generated@@363 $generated@@164 $generated@@164) $generated@@633)) $generated@@633) ($generated@@175 ($generated@@410 ($generated@@363 $generated@@164 $generated@@164) $generated@@633) ($generated@@490 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@277 $generated@@633 ($generated@@490 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@164) (= (type $generated@@637) $generated@@78)) (= (type $generated@@638) $generated@@78)) ($generated@@277 $generated@@636 ($generated@@498 $generated@@637 $generated@@638))) (and (= ($generated@@342 ($generated@@410 ($generated@@381 $generated@@164 $generated@@164) $generated@@636)) $generated@@636) ($generated@@175 ($generated@@410 ($generated@@381 $generated@@164 $generated@@164) $generated@@636) ($generated@@498 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@277 $generated@@636 ($generated@@498 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@78) (= (type $generated@@640) $generated@@78)) (= (type $generated@@641) $generated@@164)) ($generated@@277 $generated@@641 ($generated@@179 $generated@@639 $generated@@640))) (and (= ($generated@@342 ($generated@@410 $generated@@96 $generated@@641)) $generated@@641) ($generated@@175 ($generated@@410 $generated@@96 $generated@@641) ($generated@@179 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@277 $generated@@641 ($generated@@179 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@642)))
 (not ($generated@@0 ($generated@@108 ($generated@@509 $generated@@643) $generated@@642))))
 :pattern ( (let (($generated@@643 (type $generated@@642)))
($generated@@108 ($generated@@509 $generated@@643) $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@95) (= (type $generated@@645) $generated@@96)) (= (type $generated@@646) $generated@@96)) (and ($generated@@175 $generated@@645 $generated@@274) ($generated@@175 $generated@@646 $generated@@274))) (= ($generated@@93 ($generated@@94 $generated@@644) $generated@@645 $generated@@646)  (and ($generated@@273 $generated@@645) ($generated@@273 $generated@@646))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 Int) ($generated@@649 Int) ) (! (= ($generated@@647 $generated@@648 $generated@@649) (mod $generated@@648 $generated@@649))
 :pattern ( ($generated@@647 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ) (! (= (type ($generated@@650 $generated@@651)) $generated@@85)
 :pattern ( ($generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@78) (= (type $generated@@653) $generated@@78)) (and (= ($generated@@89 ($generated@@179 $generated@@652 $generated@@653)) $generated@@63) (= ($generated@@650 ($generated@@179 $generated@@652 $generated@@653)) $generated@@72)))
 :pattern ( ($generated@@179 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@96) (= ($generated@@627 ($generated@@342 $generated@@654)) ($generated@@628 $generated@@654)))
 :pattern ( ($generated@@627 ($generated@@342 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@164) ($generated@@277 $generated@@655 ($generated@@102 0))) (and (= ($generated@@342 ($generated@@410 $generated@@2 $generated@@655)) $generated@@655) ($generated@@175 ($generated@@410 ($generated@@103 $generated@@164 $generated@@4) $generated@@655) ($generated@@102 0))))
 :pattern ( ($generated@@277 $generated@@655 ($generated@@102 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@164) (= (type $generated@@657) $generated@@78)) ($generated@@277 $generated@@656 ($generated@@299 $generated@@657))) (and (= ($generated@@342 ($generated@@410 ($generated@@103 $generated@@164 $generated@@4) $generated@@656)) $generated@@656) ($generated@@175 ($generated@@410 ($generated@@103 $generated@@164 $generated@@4) $generated@@656) ($generated@@299 $generated@@657))))
 :pattern ( ($generated@@277 $generated@@656 ($generated@@299 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@164) (= (type $generated@@659) $generated@@78)) ($generated@@277 $generated@@658 ($generated@@304 $generated@@659))) (and (= ($generated@@342 ($generated@@410 ($generated@@103 $generated@@164 $generated@@4) $generated@@658)) $generated@@658) ($generated@@175 ($generated@@410 ($generated@@103 $generated@@164 $generated@@4) $generated@@658) ($generated@@304 $generated@@659))))
 :pattern ( ($generated@@277 $generated@@658 ($generated@@304 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@164) (= (type $generated@@661) $generated@@78)) ($generated@@277 $generated@@660 ($generated@@197 $generated@@661))) (and (= ($generated@@342 ($generated@@410 ($generated@@103 $generated@@164 $generated@@2) $generated@@660)) $generated@@660) ($generated@@175 ($generated@@410 ($generated@@103 $generated@@164 $generated@@2) $generated@@660) ($generated@@197 $generated@@661))))
 :pattern ( ($generated@@277 $generated@@660 ($generated@@197 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@164) (= (type $generated@@663) $generated@@78)) ($generated@@277 $generated@@662 ($generated@@585 $generated@@663))) (and (= ($generated@@342 ($generated@@410 ($generated@@328 $generated@@164) $generated@@662)) $generated@@662) ($generated@@175 ($generated@@410 ($generated@@328 $generated@@164) $generated@@662) ($generated@@585 $generated@@663))))
 :pattern ( ($generated@@277 $generated@@662 ($generated@@585 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@104) (= (type $generated@@665) ($generated@@103 $generated@@104 $generated@@105))) (and (not (= $generated@@664 $generated@@169)) ($generated@@101 $generated@@664 $generated@@172 $generated@@665))) ($generated@@101 $generated@@664 $generated@@192 $generated@@665))
 :pattern ( ($generated@@101 $generated@@664 $generated@@172 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@164) ($generated@@403 $generated@@666)) (= $generated@@666 ($generated@@262 ($generated@@404 $generated@@666))))
 :pattern ( ($generated@@404 $generated@@666))
 :pattern ( ($generated@@403 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (! (let (($generated@@671 (type $generated@@670)))
 (=> (and (and (and (= (type $generated@@667) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@668) $generated@@104)) (= (type $generated@@669) ($generated@@80 $generated@@671))) ($generated@@290 ($generated@@109 $generated@@667 $generated@@668 ($generated@@111 ($generated@@108 $generated@@667 $generated@@668) $generated@@669 $generated@@670)))) ($generated@@159 $generated@@667 ($generated@@109 $generated@@667 $generated@@668 ($generated@@111 ($generated@@108 $generated@@667 $generated@@668) $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@109 $generated@@667 $generated@@668 ($generated@@111 ($generated@@108 $generated@@667 $generated@@668) $generated@@669 $generated@@670)))
)))
(assert (= ($generated@@89 $generated@@409) $generated@@64))
(assert (= ($generated@@650 $generated@@409) $generated@@73))
(assert (= ($generated@@89 $generated@@274) $generated@@66))
(assert (= ($generated@@650 $generated@@274) $generated@@74))
(assert (= ($generated@@89 $generated@@168) $generated@@68))
(assert (= ($generated@@650 $generated@@168) $generated@@75))
(assert (= ($generated@@89 $generated@@192) $generated@@69))
(assert (= ($generated@@650 $generated@@192) $generated@@75))
(assert (= ($generated@@89 $generated@@172) $generated@@70))
(assert (= ($generated@@650 $generated@@172) $generated@@76))
(assert (= ($generated@@89 $generated@@270) $generated@@71))
(assert (= ($generated@@650 $generated@@270) $generated@@76))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@672) ($generated@@103 $generated@@164 $generated@@2)) (= (type $generated@@673) $generated@@78)) (= (type $generated@@674) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@672 ($generated@@197 $generated@@673) $generated@@674) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@164) (< 0 ($generated ($generated@@108 $generated@@672 $generated@@675)))) ($generated@@315 $generated@@675 $generated@@673 $generated@@674))
 :pattern ( ($generated@@108 $generated@@672 $generated@@675))
))))
 :pattern ( ($generated@@101 $generated@@672 ($generated@@197 $generated@@673) $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@104) (= ($generated@@175 $generated@@676 $generated@@168)  (or (= $generated@@676 $generated@@169) ($generated@@177 ($generated@@202 $generated@@676)))))
 :pattern ( ($generated@@175 $generated@@676 $generated@@168))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@96) (= (type $generated@@678) $generated@@78)) (= (type $generated@@679) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@290 $generated@@679) (and ($generated@@178 $generated@@677) (exists (($generated@@680 T@U) ) (!  (and (= (type $generated@@680) $generated@@78) ($generated@@101 $generated@@677 ($generated@@179 $generated@@678 $generated@@680) $generated@@679))
 :pattern ( ($generated@@101 $generated@@677 ($generated@@179 $generated@@678 $generated@@680) $generated@@679))
))))) ($generated@@315 ($generated@@186 $generated@@677) $generated@@678 $generated@@679))
 :pattern ( ($generated@@315 ($generated@@186 $generated@@677) $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) $generated@@96) (= (type $generated@@682) $generated@@78)) (= (type $generated@@683) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@290 $generated@@683) (and ($generated@@178 $generated@@681) (exists (($generated@@684 T@U) ) (!  (and (= (type $generated@@684) $generated@@78) ($generated@@101 $generated@@681 ($generated@@179 $generated@@684 $generated@@682) $generated@@683))
 :pattern ( ($generated@@101 $generated@@681 ($generated@@179 $generated@@684 $generated@@682) $generated@@683))
))))) ($generated@@315 ($generated@@187 $generated@@681) $generated@@682 $generated@@683))
 :pattern ( ($generated@@315 ($generated@@187 $generated@@681) $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@164) (= (type $generated@@686) $generated@@164)) (= ($generated@@276 ($generated@@311 $generated@@685) ($generated@@311 $generated@@686)) ($generated@@311 ($generated@@276 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@276 ($generated@@311 $generated@@685) ($generated@@311 $generated@@686)))
)))
(assert (forall (($generated@@687 Int) ) (! (= ($generated@@342 ($generated@@8 ($generated@@309 $generated@@687))) ($generated@@311 ($generated@@342 ($generated@@8 $generated@@687))))
 :pattern ( ($generated@@342 ($generated@@8 ($generated@@309 $generated@@687))))
)))
(assert (forall (($generated@@688 T@U) ) (! (= ($generated@@342 ($generated@@311 $generated@@688)) ($generated@@311 ($generated@@342 $generated@@688)))
 :pattern ( ($generated@@342 ($generated@@311 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@329 (type $generated@@689))))
 (=> (and (= (type $generated@@689) ($generated@@328 $generated@@690)) (= ($generated@@327 $generated@@689) 0)) (= $generated@@689 ($generated@@326 $generated@@690))))
 :pattern ( ($generated@@327 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@692)))
 (=> (and (and (= (type $generated@@691) ($generated@@103 $generated@@694 $generated@@2)) (= (type $generated@@693) $generated@@2)) (<= 0 ($generated $generated@@693))) (= ($generated@@355 ($generated@@109 $generated@@691 $generated@@692 $generated@@693)) (+ (- ($generated@@355 $generated@@691) ($generated ($generated@@108 $generated@@691 $generated@@692))) ($generated $generated@@693)))))
 :pattern ( ($generated@@355 ($generated@@109 $generated@@691 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@696) $generated@@2)) ($generated@@101 $generated@@696 $generated@@46 $generated@@695))
 :pattern ( ($generated@@101 $generated@@696 $generated@@46 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@698) $generated@@3)) ($generated@@101 $generated@@698 $generated@@47 $generated@@697))
 :pattern ( ($generated@@101 $generated@@698 $generated@@47 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@700) $generated@@4)) ($generated@@101 $generated@@700 $generated@@44 $generated@@699))
 :pattern ( ($generated@@101 $generated@@700 $generated@@44 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@702) $generated@@538)) ($generated@@101 $generated@@702 $generated@@45 $generated@@701))
 :pattern ( ($generated@@101 $generated@@702 $generated@@45 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@704) $generated@@164)) ($generated@@101 $generated@@704 $generated@@48 $generated@@703))
 :pattern ( ($generated@@101 $generated@@704 $generated@@48 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@328 $generated@@164)) (= (type $generated@@706) $generated@@78)) (= ($generated@@175 $generated@@705 ($generated@@585 $generated@@706)) (forall (($generated@@707 Int) ) (!  (=> (and (<= 0 $generated@@707) (< $generated@@707 ($generated@@327 $generated@@705))) ($generated@@277 ($generated@@586 $generated@@705 $generated@@707) $generated@@706))
 :pattern ( ($generated@@586 $generated@@705 $generated@@707))
))))
 :pattern ( ($generated@@175 $generated@@705 ($generated@@585 $generated@@706)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 Int) ) (!  (=> (= (type $generated@@709) ($generated@@328 $generated@@164)) (=> (and (<= 0 $generated@@710) (< $generated@@710 ($generated@@327 $generated@@709))) (< ($generated@@628 ($generated@@410 $generated@@96 ($generated@@586 $generated@@709 $generated@@710))) ($generated@@708 $generated@@709))))
 :pattern ( ($generated@@628 ($generated@@410 $generated@@96 ($generated@@586 $generated@@709 $generated@@710))))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@711) $generated@@164) (= (type $generated@@712) $generated@@95)) (= (type $generated@@713) $generated@@96)) (= (type $generated@@714) $generated@@96)) (= $generated@@713 $generated@@714)) ($generated@@261 $generated@@711 ($generated@@94 $generated@@712) $generated@@713 $generated@@714))
 :pattern ( ($generated@@261 $generated@@711 ($generated@@94 $generated@@712) $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (and (= (type $generated@@715) ($generated@@363 $generated@@164 $generated@@164)) (= (type $generated@@716) $generated@@78)) (= (type $generated@@717) $generated@@78)) ($generated@@175 $generated@@715 ($generated@@490 $generated@@716 $generated@@717))) (and (and ($generated@@175 ($generated@@361 $generated@@715) ($generated@@299 $generated@@716)) ($generated@@175 ($generated@@431 $generated@@715) ($generated@@299 $generated@@717))) ($generated@@175 ($generated@@464 $generated@@715) ($generated@@299 ($generated@@179 $generated@@716 $generated@@717)))))
 :pattern ( ($generated@@175 $generated@@715 ($generated@@490 $generated@@716 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) ($generated@@381 $generated@@164 $generated@@164)) (= (type $generated@@719) $generated@@78)) (= (type $generated@@720) $generated@@78)) ($generated@@175 $generated@@718 ($generated@@498 $generated@@719 $generated@@720))) (and (and ($generated@@175 ($generated@@379 $generated@@718) ($generated@@304 $generated@@719)) ($generated@@175 ($generated@@442 $generated@@718) ($generated@@304 $generated@@720))) ($generated@@175 ($generated@@472 $generated@@718) ($generated@@304 ($generated@@179 $generated@@719 $generated@@720)))))
 :pattern ( ($generated@@175 $generated@@718 ($generated@@498 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@2) ($generated@@175 $generated@@721 $generated@@46))
 :pattern ( ($generated@@175 $generated@@721 $generated@@46))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@3) ($generated@@175 $generated@@722 $generated@@47))
 :pattern ( ($generated@@175 $generated@@722 $generated@@47))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@4) ($generated@@175 $generated@@723 $generated@@44))
 :pattern ( ($generated@@175 $generated@@723 $generated@@44))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@538) ($generated@@175 $generated@@724 $generated@@45))
 :pattern ( ($generated@@175 $generated@@724 $generated@@45))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@164) ($generated@@175 $generated@@725 $generated@@48))
 :pattern ( ($generated@@175 $generated@@725 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 (T@U) Bool)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () Int)
(declare-fun $generated@@736 () Int)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () Bool)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () Bool)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () Int)
(declare-fun $generated@@744 () Int)
(declare-fun $generated@@745 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@726) ($generated@@207 $generated@@104 $generated@@4)) (= (type $generated@@727) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@728) $generated@@96)) (= (type $generated@@729) $generated@@96)) (= (type $generated@@730) $generated@@104)) (= (type $generated@@731) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@734) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@737) $generated@@96)) (= (type $generated@@738) $generated@@96)) (= (type $generated@@740) $generated@@104)) (= (type $generated@@742) $generated@@104)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@746  (=> (= $generated@@726 ($generated@@206 $generated@@169 $generated@@727 $generated@@60 false)) (=> (and (and (and (and ($generated@@175 $generated@@728 $generated@@409) ($generated@@101 $generated@@728 $generated@@409 $generated@@727)) (= $generated@@729 ($generated@@311 $generated@@195))) (and (not (= $generated@@730 $generated@@169)) (= ($generated@@202 $generated@@730) $generated@@172))) (and (and (not ($generated@@0 ($generated@@110 ($generated@@108 $generated@@727 $generated@@730) $generated@@60))) (= $generated@@731 ($generated@@109 $generated@@727 $generated@@730 ($generated@@111 ($generated@@108 $generated@@727 $generated@@730) $generated@@60 ($generated@@11 true))))) (and ($generated@@290 $generated@@731) ($generated@@732 $generated@@731)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@730 $generated@@169))) (=> (not (= $generated@@730 $generated@@169)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@0 ($generated@@205 $generated@@726 $generated@@730 $generated@@284))) (=> ($generated@@0 ($generated@@205 $generated@@726 $generated@@730 $generated@@284)) (=> (= $generated@@733 ($generated@@309 17)) (=> (and (and (= $generated@@734 ($generated@@109 $generated@@731 $generated@@730 ($generated@@111 ($generated@@108 $generated@@731 $generated@@730) $generated@@284 ($generated@@8 $generated@@733)))) ($generated@@290 $generated@@734)) (and (= ($generated@@647 $generated@@735 ($generated@@309 3)) ($generated@@309 0)) (= ($generated@@647 $generated@@736 ($generated@@309 5)) ($generated@@309 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@730 $generated@@169))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@730 $generated@@169))))))))))))))))))
(let (($generated@@747  (=> (and ($generated@@290 $generated@@727) ($generated@@732 $generated@@727)) (=> (and (and ($generated@@175 $generated@@737 $generated@@409) ($generated@@101 $generated@@737 $generated@@409 $generated@@727)) true) (=> (and (and (and (and ($generated@@175 $generated@@738 $generated@@274) ($generated@@101 $generated@@738 $generated@@274 $generated@@727)) true) (and (=> $generated@@739 (and ($generated@@175 $generated@@740 $generated@@270) ($generated@@101 $generated@@740 $generated@@270 $generated@@727))) true)) (and (and (and (=> $generated@@741 (and ($generated@@175 $generated@@742 $generated@@192) ($generated@@101 $generated@@742 $generated@@192 $generated@@727))) true) (and (= ($generated@@647 $generated@@743 ($generated@@309 3)) ($generated@@309 0)) true)) (and (and (= ($generated@@647 $generated@@744 ($generated@@309 5)) ($generated@@309 0)) true) (and (= 1 $generated@@745) (= (ControlFlow 0 10) 2))))) $generated@@746)))))
$generated@@747)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@61) $generated@@79)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@147 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@147 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@75)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@75) (= (type $generated@@155) $generated@@75)) (= (type $generated@@156) $generated@@151)) ($generated@@147 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@147 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@79)
 :pattern ( ($generated@@165 $generated@@167))
)) (= (type $generated@@166) $generated@@151)))
(assert (= ($generated@@165 $generated@@166) $generated@@66))
(assert (= (type $generated@@168) $generated@@151))
(assert (= ($generated@@165 $generated@@168) $generated@@69))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@75)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@173) $generated@@75)) ($generated@@147 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@147 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@88 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@78 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@88) (= (type $generated@@224) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@225) ($generated@@77 $generated@@4))) (= (type $generated@@227) $generated@@88)) (= (type $generated@@228) ($generated@@77 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (and (= (type $generated@@230) $generated@@75) (= (type $generated@@231) $generated@@75)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@151) (= (type $generated@@233) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@232 $generated@@230 $generated@@233) ($generated@@85 $generated@@232 $generated@@231 $generated@@233)))
 :pattern ( ($generated@@85 $generated@@232 $generated@@230 $generated@@233))
)))
(assert  (and (= (type $generated@@234) $generated@@75) (= (type $generated@@235) $generated@@75)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@236 $generated@@234 $generated@@237) ($generated@@85 $generated@@236 $generated@@235 $generated@@237)))
 :pattern ( ($generated@@85 $generated@@236 $generated@@234 $generated@@237))
)))
(assert (= (type $generated@@239) $generated@@75))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@151) ($generated@@147 $generated@@240 $generated@@239)) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@238 $generated@@240) ($generated@@147 $generated@@240 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@151)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@75) (= (type $generated@@246) $generated@@75)) (= (type $generated@@247) $generated@@160)) (= (type $generated@@248) $generated@@160)) (= ($generated@@147 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@147 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246)))
)))
(assert ($generated@@147 $generated@@166 $generated@@231))
(assert ($generated@@147 $generated@@168 $generated@@235))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89)) ($generated@@249 $generated@@250)) ($generated@@85 $generated@@166 $generated@@231 $generated@@250))
 :pattern ( ($generated@@85 $generated@@166 $generated@@231 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@87 $generated@@88 $generated@@89)) ($generated@@249 $generated@@251)) ($generated@@85 $generated@@168 $generated@@235 $generated@@251))
 :pattern ( ($generated@@85 $generated@@168 $generated@@235 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@151) (= (type $generated@@253) $generated@@151)) (= ($generated@@157 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@157 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@151) (= (type $generated@@256) $generated@@151)) (= ($generated@@254 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@151) (= (type $generated@@259) $generated@@151)) (= ($generated@@257 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@151) (= (type $generated@@262) $generated@@151)) (= ($generated@@260 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@75)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@266) $generated@@75)) (= ($generated@@147 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@160) ($generated@@0 ($generated@@92 $generated@@265 $generated@@267))) ($generated@@242 $generated@@267 $generated@@266))
 :pattern ( ($generated@@92 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@147 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@75)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@271) $generated@@75)) (= ($generated@@147 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@160) ($generated@@0 ($generated@@92 $generated@@270 $generated@@272))) ($generated@@242 $generated@@272 $generated@@271))
 :pattern ( ($generated@@92 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@147 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@75) (= (type $generated@@279) $generated@@75)) (= (type $generated@@280) $generated@@160)) (= (type $generated@@281) $generated@@160)) (= (type $generated@@282) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@249 $generated@@282)) (= ($generated@@85 ($generated@@241 $generated@@280 $generated@@281) ($generated@@150 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@85 ($generated@@241 $generated@@280 $generated@@281) ($generated@@150 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@151) (= ($generated@@149 $generated@@283) (= ($generated@@165 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@151) (= ($generated@@238 $generated@@284) (= ($generated@@165 $generated@@284) $generated@@68)))
 :pattern ( ($generated@@238 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@151) ($generated@@149 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@160) (= (type $generated@@287) $generated@@160)) (= $generated@@285 ($generated@@241 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@149 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 17)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@151)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@151) ($generated@@238 $generated@@298)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@151) (= $generated@@298 ($generated@@296 $generated@@299)))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@238 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@160)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@75) (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@277 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@85 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@277 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@307) $generated@@160)) (= (type $generated@@308) $generated@@75)) ($generated@@143 $generated@@305 $generated@@306)) ($generated@@277 $generated@@307 $generated@@308 $generated@@305)) ($generated@@277 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@143 $generated@@305 $generated@@306) ($generated@@277 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@310) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@312) $generated@@75)) ($generated@@143 $generated@@309 $generated@@310)) ($generated@@85 $generated@@311 $generated@@312 $generated@@309)) ($generated@@85 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@143 $generated@@309 $generated@@310) ($generated@@85 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@87 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@90 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@87 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@92 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 18)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@87 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@92 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@92 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@87 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@92 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@92 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@90 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@87 $generated@@356 $generated@@2)) (= ($generated@@170 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@92 $generated@@355 $generated@@357))) (<= ($generated ($generated@@92 $generated@@355 $generated@@357)) ($generated@@313 $generated@@355))))
 :pattern ( ($generated@@92 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@170 $generated@@355))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@160) ($generated@@242 $generated@@361 $generated@@234)) (and (= ($generated@@300 ($generated@@358 $generated@@151 $generated@@361)) $generated@@361) ($generated@@147 ($generated@@358 $generated@@151 $generated@@361) $generated@@234)))
 :pattern ( ($generated@@242 $generated@@361 $generated@@234))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@160) ($generated@@242 $generated@@362 $generated@@239)) (and (= ($generated@@300 ($generated@@358 $generated@@151 $generated@@362)) $generated@@362) ($generated@@147 ($generated@@358 $generated@@151 $generated@@362) $generated@@239)))
 :pattern ( ($generated@@242 $generated@@362 $generated@@239))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@160) ($generated@@242 $generated@@363 $generated@@230)) (and (= ($generated@@300 ($generated@@358 $generated@@151 $generated@@363)) $generated@@363) ($generated@@147 ($generated@@358 $generated@@151 $generated@@363) $generated@@230)))
 :pattern ( ($generated@@242 $generated@@363 $generated@@230))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@160) ($generated@@242 $generated@@364 $generated@@231)) (and (= ($generated@@300 ($generated@@358 $generated@@151 $generated@@364)) $generated@@364) ($generated@@147 ($generated@@358 $generated@@151 $generated@@364) $generated@@231)))
 :pattern ( ($generated@@242 $generated@@364 $generated@@231))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@160) ($generated@@242 $generated@@365 $generated@@235)) (and (= ($generated@@300 ($generated@@358 $generated@@151 $generated@@365)) $generated@@365) ($generated@@147 ($generated@@358 $generated@@151 $generated@@365) $generated@@235)))
 :pattern ( ($generated@@242 $generated@@365 $generated@@235))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@151) (= ($generated@@147 ($generated@@296 $generated@@366) $generated@@239) ($generated@@147 $generated@@366 $generated@@234)))
 :pattern ( ($generated@@147 ($generated@@296 $generated@@366) $generated@@239))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@323 (type $generated@@367))))
(let (($generated@@369 ($generated@@322 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@321 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@320 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@319 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@319 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@323 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@87 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@323 (type $generated@@374))))
(let (($generated@@376 ($generated@@322 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@321 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@320 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@92 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@341 (type $generated@@378))))
(let (($generated@@380 ($generated@@340 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@339 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@338 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@337 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@337 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@341 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@87 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@341 (type $generated@@385))))
(let (($generated@@387 ($generated@@340 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@339 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@338 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@92 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@390) $generated@@75)) (= ($generated@@147 $generated@@389 ($generated@@169 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@160) (< 0 ($generated ($generated@@92 $generated@@389 $generated@@391)))) ($generated@@242 $generated@@391 $generated@@390))
 :pattern ( ($generated@@92 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@147 $generated@@389 ($generated@@169 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@392) $generated@@151) (= (type $generated@@393) $generated@@151)) true) (= ($generated@@254 $generated@@392 $generated@@393) true))
 :pattern ( ($generated@@254 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@151) (= (type $generated@@395) $generated@@151)) true) (= ($generated@@260 $generated@@394 $generated@@395) true))
 :pattern ( ($generated@@260 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@397) $generated@@75)) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@396 ($generated@@263 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@160) ($generated@@0 ($generated@@92 $generated@@396 $generated@@399))) ($generated@@277 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@92 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@85 $generated@@396 ($generated@@263 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@401) $generated@@75)) (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@400 ($generated@@268 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@160) ($generated@@0 ($generated@@92 $generated@@400 $generated@@403))) ($generated@@277 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@92 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@85 $generated@@400 ($generated@@268 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@92 ($generated@@314 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@92 ($generated@@314 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@323 (type $generated@@409))))
(let (($generated@@411 ($generated@@322 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@321 $generated@@160 $generated@@160)) (= (type $generated@@413) $generated@@160)) (= ($generated@@0 ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@319 $generated@@412) ($generated@@158 ($generated@@358 $generated@@151 $generated@@413)))) (= ($generated@@92 ($generated@@407 $generated@@412) ($generated@@158 ($generated@@358 $generated@@151 $generated@@413))) ($generated@@159 ($generated@@358 $generated@@151 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@341 (type $generated@@417))))
(let (($generated@@419 ($generated@@340 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@87 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@339 $generated@@160 $generated@@160)) (= (type $generated@@421) $generated@@160)) (= ($generated@@0 ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@92 ($generated@@337 $generated@@420) ($generated@@158 ($generated@@358 $generated@@151 $generated@@421)))) (= ($generated@@92 ($generated@@415 $generated@@420) ($generated@@158 ($generated@@358 $generated@@151 $generated@@421))) ($generated@@159 ($generated@@358 $generated@@151 $generated@@421))))))
 :pattern ( ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@322 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@321 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@92 ($generated@@371 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@92 ($generated@@319 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@92 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@92 ($generated@@319 $generated@@422) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@92 ($generated@@371 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@340 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@339 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@92 ($generated@@382 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@92 ($generated@@337 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@92 ($generated@@337 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@92 ($generated@@382 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@75)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@321 $generated@@160 $generated@@160)) (= (type $generated@@436) $generated@@75)) (= (type $generated@@437) $generated@@75)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@160) ($generated@@0 ($generated@@92 ($generated@@319 $generated@@435) $generated@@439))) (and ($generated@@277 ($generated@@92 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@277 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@319 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@75)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@339 $generated@@160 $generated@@160)) (= (type $generated@@444) $generated@@75)) (= (type $generated@@445) $generated@@75)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@160) ($generated@@0 ($generated@@92 ($generated@@337 $generated@@443) $generated@@447))) (and ($generated@@277 ($generated@@92 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@277 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@92 ($generated@@337 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@448) $generated@@151) (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@249 $generated@@449)) (= ($generated@@85 ($generated@@296 $generated@@448) $generated@@239 $generated@@449) ($generated@@85 $generated@@448 $generated@@234 $generated@@449)))
 :pattern ( ($generated@@85 ($generated@@296 $generated@@448) $generated@@239 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@451) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@452) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@450 $generated@@452))) (and ($generated@@143 $generated@@450 $generated@@451) ($generated@@143 $generated@@451 $generated@@452))) ($generated@@143 $generated@@450 $generated@@452))
 :pattern ( ($generated@@143 $generated@@450 $generated@@451) ($generated@@143 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@87 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@341 (type $generated@@455))))
(let (($generated@@457 ($generated@@340 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@339 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@338 $generated@@457 $generated@@456)) (= ($generated@@337 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@337 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@341 (type $generated@@458))))
(let (($generated@@460 ($generated@@340 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@339 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@338 $generated@@460 $generated@@459)) (= ($generated@@382 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@382 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@341 (type $generated@@461))))
(let (($generated@@463 ($generated@@340 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@339 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@338 $generated@@463 $generated@@462)) (= ($generated@@414 $generated@@461) ($generated@@453 $generated@@160))))))
 :pattern ( ($generated@@414 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@323 (type $generated@@464))))
(let (($generated@@466 ($generated@@322 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@321 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@320 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@160) (= (type $generated@@468) $generated@@160)) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@464) ($generated@@300 ($generated@@241 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@406 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@341 (type $generated@@469))))
(let (($generated@@471 ($generated@@340 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@339 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@338 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@160) (= (type $generated@@473) $generated@@160)) ($generated@@0 ($generated@@92 ($generated@@414 $generated@@469) ($generated@@300 ($generated@@241 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@414 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@160) ($generated@@242 $generated@@474 $generated@@46)) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@474)) $generated@@474) ($generated@@147 ($generated@@358 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@160) ($generated@@242 $generated@@475 $generated@@47)) (and (= ($generated@@300 ($generated@@358 $generated@@3 $generated@@475)) $generated@@475) ($generated@@147 ($generated@@358 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@160) ($generated@@242 $generated@@476 $generated@@44)) (and (= ($generated@@300 ($generated@@358 $generated@@4 $generated@@476)) $generated@@476) ($generated@@147 ($generated@@358 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 20))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@160) ($generated@@242 $generated@@478 $generated@@45)) (and (= ($generated@@300 ($generated@@358 $generated@@477 $generated@@478)) $generated@@478) ($generated@@147 ($generated@@358 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@75) (= ($generated@@242 ($generated@@300 $generated@@479) $generated@@480) ($generated@@147 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@242 ($generated@@300 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@90 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@87 $generated@@482 $generated@@2)) (<= 0 ($generated@@313 $generated@@481))))
 :pattern ( ($generated@@313 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@291 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@290 $generated@@484)) (<= 0 ($generated@@289 $generated@@483))))
 :pattern ( ($generated@@289 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@75)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@75) (= (type $generated@@488) $generated@@75)) (= ($generated@@485 ($generated@@432 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@432 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@75)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) (= ($generated@@489 ($generated@@432 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@432 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) (= (type $generated@@494) $generated@@75)) (= ($generated@@83 ($generated@@432 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@75)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) (= (type $generated@@498) $generated@@75)) (= ($generated@@495 ($generated@@440 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@440 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@75)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@75) (= (type $generated@@502) $generated@@75)) (= ($generated@@499 ($generated@@440 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@440 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@75) (= (type $generated@@504) $generated@@75)) (= ($generated@@83 ($generated@@440 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@160) (= (type $generated@@506) $generated@@160)) (= ($generated@@165 ($generated@@241 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@75)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@75) (= (type $generated@@510) $generated@@75)) (= ($generated@@507 ($generated@@150 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@150 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@75)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@75) (= (type $generated@@514) $generated@@75)) (= ($generated@@511 ($generated@@150 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@150 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@160) (= (type $generated@@516) $generated@@160)) (= ($generated@@158 ($generated@@241 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@241 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@160) (= (type $generated@@518) $generated@@160)) (= ($generated@@159 ($generated@@241 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@241 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@75)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@291 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@290 $generated@@160)) (= (type $generated@@526) $generated@@75)) (= (type $generated@@527) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@289 $generated@@525))) ($generated@@277 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@85 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@86 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@86 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@75)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@75) (= ($generated@@531 ($generated@@263 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@263 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@75) (= ($generated@@83 ($generated@@263 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@75)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@75) (= ($generated@@535 ($generated@@268 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@268 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@75) (= ($generated@@83 ($generated@@268 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@75) (= ($generated@@539 ($generated@@169 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@169 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@75) (= ($generated@@83 ($generated@@169 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@75)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@75) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@75) (= ($generated@@83 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@151) (= ($generated@@165 ($generated@@296 $generated@@547)) $generated@@68))
 :pattern ( ($generated@@296 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@151)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@151) (= ($generated@@548 ($generated@@296 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@296 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(= ($generated@@358 $generated@@552 ($generated@@300 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@300 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@321 $generated@@160 $generated@@160)) (= (type $generated@@554) $generated@@75)) (= (type $generated@@555) $generated@@75)) (= ($generated@@147 $generated@@553 ($generated@@432 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@160) ($generated@@0 ($generated@@92 ($generated@@319 $generated@@553) $generated@@556))) (and ($generated@@242 ($generated@@92 ($generated@@407 $generated@@553) $generated@@556) $generated@@555) ($generated@@242 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@553) $generated@@556))
 :pattern ( ($generated@@92 ($generated@@319 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@147 $generated@@553 ($generated@@432 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@339 $generated@@160 $generated@@160)) (= (type $generated@@558) $generated@@75)) (= (type $generated@@559) $generated@@75)) (= ($generated@@147 $generated@@557 ($generated@@440 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@160) ($generated@@0 ($generated@@92 ($generated@@337 $generated@@557) $generated@@560))) (and ($generated@@242 ($generated@@92 ($generated@@415 $generated@@557) $generated@@560) $generated@@559) ($generated@@242 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@557) $generated@@560))
 :pattern ( ($generated@@92 ($generated@@337 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@147 $generated@@557 ($generated@@440 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@160) (= (type $generated@@564) $generated@@160)) (< ($generated@@561 $generated@@563) ($generated@@562 ($generated@@241 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@241 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@160) (= (type $generated@@566) $generated@@160)) (< ($generated@@561 $generated@@566) ($generated@@562 ($generated@@241 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@241 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@151) (= (type $generated@@568) $generated@@151)) true) (= ($generated@@257 $generated@@567 $generated@@568) ($generated@@260 ($generated@@548 $generated@@567) ($generated@@548 $generated@@568))))
 :pattern ( ($generated@@257 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@160) (= (type $generated@@570) $generated@@75)) (= (type $generated@@571) $generated@@75)) ($generated@@242 $generated@@569 ($generated@@432 $generated@@570 $generated@@571))) (and (= ($generated@@300 ($generated@@358 ($generated@@321 $generated@@160 $generated@@160) $generated@@569)) $generated@@569) ($generated@@147 ($generated@@358 ($generated@@321 $generated@@160 $generated@@160) $generated@@569) ($generated@@432 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@242 $generated@@569 ($generated@@432 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@160) (= (type $generated@@573) $generated@@75)) (= (type $generated@@574) $generated@@75)) ($generated@@242 $generated@@572 ($generated@@440 $generated@@573 $generated@@574))) (and (= ($generated@@300 ($generated@@358 ($generated@@339 $generated@@160 $generated@@160) $generated@@572)) $generated@@572) ($generated@@147 ($generated@@358 ($generated@@339 $generated@@160 $generated@@160) $generated@@572) ($generated@@440 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@242 $generated@@572 ($generated@@440 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@75) (= (type $generated@@576) $generated@@75)) (= (type $generated@@577) $generated@@160)) ($generated@@242 $generated@@577 ($generated@@150 $generated@@575 $generated@@576))) (and (= ($generated@@300 ($generated@@358 $generated@@151 $generated@@577)) $generated@@577) ($generated@@147 ($generated@@358 $generated@@151 $generated@@577) ($generated@@150 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@242 $generated@@577 ($generated@@150 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@151) (< ($generated@@562 $generated@@578) ($generated@@562 ($generated@@296 $generated@@578))))
 :pattern ( ($generated@@296 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@92 ($generated@@453 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@92 ($generated@@453 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@80)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@75) (= (type $generated@@584) $generated@@75)) (and (= ($generated@@83 ($generated@@150 $generated@@583 $generated@@584)) $generated@@62) (= ($generated@@581 ($generated@@150 $generated@@583 $generated@@584)) $generated@@71)))
 :pattern ( ($generated@@150 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@151) (= ($generated@@561 ($generated@@300 $generated@@585)) ($generated@@562 $generated@@585)))
 :pattern ( ($generated@@561 ($generated@@300 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@160) ($generated@@242 $generated@@586 ($generated@@86 0))) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@586)) $generated@@586) ($generated@@147 ($generated@@358 ($generated@@87 $generated@@160 $generated@@4) $generated@@586) ($generated@@86 0))))
 :pattern ( ($generated@@242 $generated@@586 ($generated@@86 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@160) (= (type $generated@@588) $generated@@75)) ($generated@@242 $generated@@587 ($generated@@263 $generated@@588))) (and (= ($generated@@300 ($generated@@358 ($generated@@87 $generated@@160 $generated@@4) $generated@@587)) $generated@@587) ($generated@@147 ($generated@@358 ($generated@@87 $generated@@160 $generated@@4) $generated@@587) ($generated@@263 $generated@@588))))
 :pattern ( ($generated@@242 $generated@@587 ($generated@@263 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@160) (= (type $generated@@590) $generated@@75)) ($generated@@242 $generated@@589 ($generated@@268 $generated@@590))) (and (= ($generated@@300 ($generated@@358 ($generated@@87 $generated@@160 $generated@@4) $generated@@589)) $generated@@589) ($generated@@147 ($generated@@358 ($generated@@87 $generated@@160 $generated@@4) $generated@@589) ($generated@@268 $generated@@590))))
 :pattern ( ($generated@@242 $generated@@589 ($generated@@268 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@160) (= (type $generated@@592) $generated@@75)) ($generated@@242 $generated@@591 ($generated@@169 $generated@@592))) (and (= ($generated@@300 ($generated@@358 ($generated@@87 $generated@@160 $generated@@2) $generated@@591)) $generated@@591) ($generated@@147 ($generated@@358 ($generated@@87 $generated@@160 $generated@@2) $generated@@591) ($generated@@169 $generated@@592))))
 :pattern ( ($generated@@242 $generated@@591 ($generated@@169 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@160) (= (type $generated@@594) $generated@@75)) ($generated@@242 $generated@@593 ($generated@@519 $generated@@594))) (and (= ($generated@@300 ($generated@@358 ($generated@@290 $generated@@160) $generated@@593)) $generated@@593) ($generated@@147 ($generated@@358 ($generated@@290 $generated@@160) $generated@@593) ($generated@@519 $generated@@594))))
 :pattern ( ($generated@@242 $generated@@593 ($generated@@519 $generated@@594)))
)))
(assert (= ($generated@@83 $generated@@234) $generated@@63))
(assert (= ($generated@@581 $generated@@234) $generated@@72))
(assert (= ($generated@@83 $generated@@239) $generated@@64))
(assert (= ($generated@@581 $generated@@239) $generated@@73))
(assert (= ($generated@@83 $generated@@230) $generated@@65))
(assert (= ($generated@@581 $generated@@230) $generated@@72))
(assert (= ($generated@@83 $generated@@231) $generated@@67))
(assert (= ($generated@@581 $generated@@231) $generated@@74))
(assert (= ($generated@@83 $generated@@235) $generated@@70))
(assert (= ($generated@@581 $generated@@235) $generated@@74))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@596) $generated@@75)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@595 ($generated@@169 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@160) (< 0 ($generated ($generated@@92 $generated@@595 $generated@@598)))) ($generated@@277 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@92 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@85 $generated@@595 ($generated@@169 $generated@@596) $generated@@597))
)))
(assert (= $generated@@166 ($generated@@273 $generated@@166)))
(assert (= $generated@@168 ($generated@@273 $generated@@168)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@151) (= (type $generated@@600) $generated@@75)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@249 $generated@@601) (and ($generated@@149 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@75) ($generated@@85 $generated@@599 ($generated@@150 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 ($generated@@150 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@277 ($generated@@158 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@277 ($generated@@158 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@151) (= (type $generated@@604) $generated@@75)) (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@249 $generated@@605) (and ($generated@@149 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@75) ($generated@@85 $generated@@603 ($generated@@150 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@85 $generated@@603 ($generated@@150 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@277 ($generated@@159 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@277 ($generated@@159 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@151) (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@249 $generated@@608) (and ($generated@@238 $generated@@607) ($generated@@85 $generated@@607 $generated@@239 $generated@@608)))) ($generated@@85 ($generated@@548 $generated@@607) $generated@@234 $generated@@608))
 :pattern ( ($generated@@85 ($generated@@548 $generated@@607) $generated@@234 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@160) (= (type $generated@@610) $generated@@160)) (= ($generated@@241 ($generated@@273 $generated@@609) ($generated@@273 $generated@@610)) ($generated@@273 ($generated@@241 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@241 ($generated@@273 $generated@@609) ($generated@@273 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@151) (= ($generated@@147 $generated@@611 $generated@@230)  (and ($generated@@147 $generated@@611 $generated@@231) ($generated@@0 ($generated@@273 ($generated@@11 true))))))
 :pattern ( ($generated@@147 $generated@@611 $generated@@230))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@151) (= ($generated@@147 $generated@@612 $generated@@234)  (and ($generated@@147 $generated@@612 $generated@@235) ($generated@@0 ($generated@@273 ($generated@@11 true))))))
 :pattern ( ($generated@@147 $generated@@612 $generated@@234))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@151) (= ($generated@@296 ($generated@@273 $generated@@613)) ($generated@@273 ($generated@@296 $generated@@613))))
 :pattern ( ($generated@@296 ($generated@@273 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@300 ($generated@@273 $generated@@614)) ($generated@@273 ($generated@@300 $generated@@614)))
 :pattern ( ($generated@@300 ($generated@@273 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@291 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@290 $generated@@616)) (= ($generated@@289 $generated@@615) 0)) (= $generated@@615 ($generated@@288 $generated@@616))))
 :pattern ( ($generated@@289 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@87 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@313 ($generated@@93 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@313 $generated@@617) ($generated ($generated@@92 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@313 ($generated@@93 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@622) $generated@@2)) ($generated@@85 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@85 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@624) $generated@@3)) ($generated@@85 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@85 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@4)) ($generated@@85 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@628) $generated@@477)) ($generated@@85 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@85 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@160)) ($generated@@85 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@85 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@290 $generated@@160)) (= (type $generated@@632) $generated@@75)) (= ($generated@@147 $generated@@631 ($generated@@519 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@289 $generated@@631))) ($generated@@242 ($generated@@520 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@520 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@147 $generated@@631 ($generated@@519 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@290 $generated@@160)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@289 $generated@@635))) (< ($generated@@562 ($generated@@358 $generated@@151 ($generated@@520 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@562 ($generated@@358 $generated@@151 ($generated@@520 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@321 $generated@@160 $generated@@160)) (= (type $generated@@638) $generated@@75)) (= (type $generated@@639) $generated@@75)) ($generated@@147 $generated@@637 ($generated@@432 $generated@@638 $generated@@639))) (and (and ($generated@@147 ($generated@@319 $generated@@637) ($generated@@263 $generated@@638)) ($generated@@147 ($generated@@371 $generated@@637) ($generated@@263 $generated@@639))) ($generated@@147 ($generated@@406 $generated@@637) ($generated@@263 ($generated@@150 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@147 $generated@@637 ($generated@@432 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@339 $generated@@160 $generated@@160)) (= (type $generated@@641) $generated@@75)) (= (type $generated@@642) $generated@@75)) ($generated@@147 $generated@@640 ($generated@@440 $generated@@641 $generated@@642))) (and (and ($generated@@147 ($generated@@337 $generated@@640) ($generated@@268 $generated@@641)) ($generated@@147 ($generated@@382 $generated@@640) ($generated@@268 $generated@@642))) ($generated@@147 ($generated@@414 $generated@@640) ($generated@@268 ($generated@@150 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@147 $generated@@640 ($generated@@440 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@147 $generated@@643 $generated@@46))
 :pattern ( ($generated@@147 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@147 $generated@@644 $generated@@47))
 :pattern ( ($generated@@147 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@147 $generated@@645 $generated@@44))
 :pattern ( ($generated@@147 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@477) ($generated@@147 $generated@@646 $generated@@45))
 :pattern ( ($generated@@147 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@160) ($generated@@147 $generated@@647 $generated@@48))
 :pattern ( ($generated@@147 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@648) ($generated@@176 $generated@@88 $generated@@4)) (= (type $generated@@649) $generated@@88)) (= (type $generated@@650) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@651) $generated@@151)) (= (type $generated@@652) $generated@@151)) (= (type $generated@@654) $generated@@151)) (= (type $generated@@655) $generated@@151)) (= (type $generated@@656) $generated@@151)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@658  (=> (= $generated@@648 ($generated@@175 $generated@@649 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@147 ($generated@@273 $generated@@168) $generated@@234)) (=> ($generated@@147 ($generated@@273 $generated@@168) $generated@@234) (=> (= $generated@@651 ($generated@@273 $generated@@168)) (=> (and (= $generated@@652 ($generated@@296 $generated@@651)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@147 ($generated@@273 $generated@@166) $generated@@230))))))))
(let (($generated@@659  (=> (and ($generated@@249 $generated@@650) ($generated@@653 $generated@@650)) (=> (and (and (and (and ($generated@@147 $generated@@654 $generated@@234) ($generated@@85 $generated@@654 $generated@@234 $generated@@650)) true) (and (and ($generated@@147 $generated@@655 $generated@@239) ($generated@@85 $generated@@655 $generated@@239 $generated@@650)) true)) (and (and (and ($generated@@147 $generated@@656 $generated@@230) ($generated@@85 $generated@@656 $generated@@230 $generated@@650)) true) (and (= 1 $generated@@657) (= (ControlFlow 0 4) 2)))) $generated@@658))))
$generated@@659)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
